import{d as z,g as $,t as e,v as t,x as r,y,J as a,K as h,L as k,M as g,z as v,A as C,B as F,N as A,O as D,P as L,u as W,r as T,E as B}from"./BzkLH-Ck.js";import{u as _}from"./B07Yr03K.js";import{_ as H}from"./DlAUqK2U.js";const N={id:"summary"},O=["innerHTML"],Y={key:0,class:"category-shorthands"},G={class:"shorthands"},V={class:"shorthand"},U={class:"shorthands"},X={class:"shorthand"},J=z({__name:"category",props:{value:{required:!0}},setup(n){const s=n.value;return(m,l)=>{const u=$("router-link");return e(),t(h,null,[r("h1",N,y(a(s).title),1),r("div",{class:"category-details",innerHTML:a(s).details},null,8,O),l[5]||(l[5]=r("h2",{id:"definitions"},"Definitions",-1)),r("ul",null,[(e(!0),t(h,null,k(a(s).items,d=>(e(),t("li",null,[v(u,{to:d.route},{default:C(()=>[F(y(d.name),1)]),_:2},1032,["to"]),F(" — "+y(d.oneliner),1)]))),256))]),a(s).shorthands?(e(),t("div",Y,[l[0]||(l[0]=r("h2",{id:"shorthands"},"Shorthands",-1)),l[1]||(l[1]=r("p",null,"Shorthands are concise sequences of characters that evoke specific glyphs. Shorthands and other ways to produce symbols can be used interchangeably. You can use different sets of shorthands in math and markup mode. Some shorthands, like ~ for a non-breaking space produce non-printing symbols, which are indicated with gray placeholder text.",-1)),l[2]||(l[2]=r("p",null," You can deactivate a shorthand's interpretation by escaping any of its characters. If you escape a single character in a shorthand, the remaining unescaped characters may form a different shorthand.",-1)),l[3]||(l[3]=r("h3",null,"Within Markup Mode",-1)),r("div",G,[(e(!0),t(h,null,k(a(s).shorthands.markup,d=>(e(),t("div",V,y(d.name),1))),256))]),l[4]||(l[4]=r("h3",null,"Within Math Mode",-1)),r("div",U,[(e(!0),t(h,null,k(a(s).shorthands.math,d=>(e(),t("div",X,y(d.name),1))),256))])])):g("",!0)],64)}}}),K={class:"func"},Q=["innerHTML"],Z=["innerHTML"],aa={key:2},ea=["innerHTML"],na={class:"func-params"},sa={class:"param"},ta={class:"param-title"},ra=["innerHTML"],pa={class:"param-props"},la={key:0,class:"prop"},oa=["innerHTML"],ca=["innerHTML"],ia={key:3,class:"func-scope scope"},I=z({__name:"func",props:{value:{required:!0},omitName:{default:!1},singlePage:{default:!0},paramIdPrefix:{default:""}},setup(n){const p=n;function s(o){return`${o[0].toUpperCase()}${o.slice(1,o.length)}`}function m(o){return o.map(i=>`<span class="typ typ-${i}">${i}</span>`)}function l(o){return p.singlePage?"summary":p.paramIdPrefix.length>0?`${p.paramIdPrefix}-${o}`:`definitions-${o}`}function u(o,i=""){return p.singlePage?`parameters-${o}`:p.paramIdPrefix.length>0?p.paramIdPrefix==="constructor"?`${p.paramIdPrefix}-${o}`:`${p.paramIdPrefix}-${i}-${o}`:`definitions-${i}-${o}`}function d(o){let i="";const q=o.params.length>=3;return o.self?i+="self.":o.path.length>0&&(i+=o.path.join(".")+"."),i+=o.name,i+="(",o.params.length>0&&(i+=q?`
  `:" ",i+=o.params.map(c=>{let w="";return c.name&&c.named&&(w+=`${c.name}: `),w+=m(c.types).join(" | "),w}).join(`,${q?`
  `:" "}`),i+=q?`
`:" "),i+=")",o.returns.length>0&&(i+=` -> ${m(o.returns).join(" | ")}`),i}const f=p.value;return(o,i)=>{const q=I;return e(),t("div",K,[n.omitName?g("",!0):(e(),A(D(n.singlePage?"h1":"h3"),{key:0,id:l(a(f).name)},{default:C(()=>[r("code",null,y(a(f).name),1)]),_:1},8,["id"])),r("div",{class:"func-details",innerHTML:a(f).details},null,8,Q),a(f).example?(e(),t("div",{key:1,class:"func-example",innerHTML:a(f).example},null,8,Z)):g("",!0),n.singlePage?(e(),t("h2",aa,"Parameters")):g("",!0),r("pre",{class:"func-definition",innerHTML:`<code>${d(a(f))}</code>`},null,8,ea),r("div",na,[(e(!0),t(h,null,k(a(f).params,c=>(e(),t("div",sa,[r("div",ta,[(e(),A(D(n.singlePage?"h3":"h4"),{id:u(c.name,a(f).name)},{default:C(()=>[r("code",null,y(c.name),1)]),_:2},1032,["id"])),r("div",{class:"param-type",innerHTML:`<code>${m(c.types).join(" | ")}</code>`},null,8,ra),r("div",pa,[(e(),t(h,null,k(["positional","settable","variadic","required"],w=>(e(),t(h,null,[c[w]?(e(),t("span",la,y(s(w)),1)):g("",!0)],64))),64))])]),r("div",{class:"param-details",innerHTML:c.details},null,8,oa),c.example?(e(),t("div",{key:0,class:"param-example",innerHTML:c.example},null,8,ca)):g("",!0)]))),256))]),a(f).scope.length>0?(e(),t("div",ia,[i[0]||(i[0]=r("h2",{id:"definitions"},"Definitions",-1)),(e(!0),t(h,null,k(a(f).scope,c=>(e(),A(q,{"single-page":!1,value:c},null,8,["value"]))),256))])):g("",!0)])}}}),da={id:"summary"},ua=["innerHTML"],ha={key:0,class:"type-constructor"},fa={key:1,class:"type-scope scope"},ya=z({__name:"type",props:{value:{required:!0}},setup(n){const s=n.value;return(m,l)=>{const u=I;return e(),t(h,null,[r("h1",da,[r("code",null,y(a(s).name),1)]),r("div",{class:"type-details",innerHTML:a(s).details},null,8,ua),a(s).constructor?(e(),t("div",ha,[l[0]||(l[0]=r("h2",null,"Constructor",-1)),v(u,{"param-id-prefix":"constructor","omit-name":!0,"single-page":!1,value:a(s).constructor},null,8,["value"])])):g("",!0),a(s).scope.length>0?(e(),t("div",fa,[l[1]||(l[1]=r("h2",null,"Definitions",-1)),(e(!0),t(h,null,k(a(s).scope,d=>(e(),A(u,{"single-page":!1,value:d},null,8,["value"]))),256))])):g("",!0)],64)}}}),ma={id:"summary"},wa=["innerHTML"],ba={class:"group-functions"},ga=z({__name:"group",props:{value:{required:!0}},setup(n){const s=n.value;return(m,l)=>{const u=I;return e(),t(h,null,[r("h1",ma,y(a(s).title),1),r("div",{class:"group-details",innerHTML:a(s).details},null,8,wa),r("div",ba,[l[0]||(l[0]=r("h2",null,"Functions",-1)),(e(!0),t(h,null,k(a(s).functions,d=>(e(),A(u,{"param-id-prefix":"functions","single-page":!1,value:d},null,8,["value"]))),256))])],64)}}}),ka={id:"summary"},va=["innerHTML"],qa={class:"symbol-display"},xa={class:"symbol"},Sa=z({__name:"symbols",props:{value:{required:!0}},setup(n){const s=n.value;return(m,l)=>(e(),t(h,null,[r("h1",ka,y(a(s).name),1),r("div",{class:"symbol-details",innerHTML:a(s).details},null,8,va),r("div",qa,[(e(!0),t(h,null,k(a(s).list,u=>(e(),t("div",xa,y(u.name),1))),256))])],64))}});var b=(n=>(n.Category="category",n.Func="func",n.Type="type",n.Symbols="symbols",n.Group="group",n.HTML="html",n.Unknown="-",n.NotFound="not-found",n))(b||{});function j(n){return n.endsWith("/")?n.substring(0,n.length-1):n}const Ta={},za={class:"typ-str"};function Aa(n,p){return e(),t(h,null,[p[3]||(p[3]=r("h1",null,"404 - Not Found",-1)),r("p",null,[p[1]||(p[1]=F("你所请求的页面 ")),r("code",za,'"'+y(("useRoute"in n?n.useRoute:a(L))().fullPath)+'"',1),p[2]||(p[2]=F(" 不存在，请检查 URL 是否正确。")),r("button",{class:"nav-btn primary",onClick:p[0]||(p[0]=s=>("useRouter"in n?n.useRouter:a(W))().go(-1))},"« 返回上一页")])],64)}const Pa=H(Ta,[["render",Aa],["__scopeId","data-v-c694cd71"]]);function E(n,p){const s=n.filter(l=>j(l.route)===p);if(s.length>0)return s[0];const m=n.filter(l=>p.startsWith(j(l.route)));for(let l of m){let u=E(l.children,p);if(u)return u}return null}const Fa=[{route:"/docs/",title:"概览",description:`Learn how to use Typst to compose documents faster. Get started with the
tutorial, or dive into the reference.
`,part:null,outline:[],body:{kind:"html",content:`<h1>概览</h1>
<p>欢迎来到 Typst 的文档！Typst 是为科研工作而开发的一样以标记为基础的排版系统。Typst 计划成为现有的工具（例如高阶的 LaTeX 和相对基础的 Word 和 Google Docs）中的又一个选择。我们的目标是构建一个在功能完备的同时也能愉悦使用的排版工具。</p>
<original>
Welcome to Typst's documentation! Typst is a new markup-based typesetting system
for the sciences. It is designed to be an alternative both to advanced tools
like LaTeX and simpler tools like Word and Google Docs. Our goal with Typst is
to build a typesetting tool that is highly capable _and_ a pleasure to use.
</original>
<p>文档分为两个部分，一部分是对新手友好的入门教程，通过一些实例来介绍 Typst；另一部分是阐述 Typst 中各种概念和特性的全面参考信息。</p>
<original>
This documentation is split into two parts: A beginner-friendly tutorial that
introduces Typst through a practical use case and a comprehensive reference that
explains all of Typst's concepts and features.
</original>
<p>诚邀你加入我们正为 Typst 构筑的周边社群！Typst 目前仍然是一个很年轻的项目，你的反馈对我们来说十分宝贵。</p>
<original>
We also invite you to join the community we're building around Typst. Typst is
still a very young project, so your feedback is more than valuable.
</original>`},children:[]},{route:"/docs/tutorial/",title:"入门",description:"Typst's tutorial.",part:null,outline:[{id:"何时使用",name:"何时使用",children:[]},{id:"你将会学到",name:"你将会学到",children:[]}],body:{kind:"html",content:`<h1>入门</h1>
<p>欢迎来到 Typst 的入门教程！在这里，你将会了解到用 Typst 编写和排版文档的方法。我们会从一些日常的工作开始，逐步介绍更高阶的特性。本教程不要求任何先前对 Typst、其它标记语言乃至编程的了解。不过，我们会假定你会用电脑编辑文本文件。</p>
<original>
Welcome to Typst's tutorial! In this tutorial, you will learn how to write and
format documents in Typst. We will start with everyday tasks and gradually
introduce more advanced features. This tutorial does not assume prior knowledge
of Typst, other markup languages, or programming. We do assume that you know how
to edit a text file.
</original>
<p>开始的最佳方法是去 Typst 的应用程序里注册一个免费的账号，然后跟随接下来的步骤。应用里包含了即时预览、语法高亮以及很有用的自动补全功能。或者，你也可以搭配我们<a href="https://github.com/typst/typst">开源的命令行程序</a>在你的本地文本编辑器里继续。</p>
<original>
The best way to start is to sign up to the Typst app for free and follow along
with the steps below. The app gives you instant preview, syntax highlighting and
helpful autocompletions. Alternatively, you can follow along in your local text
editor with the [open-source CLI](https://github.com/typst/typst).
</original>
<h2 id="何时使用">何时使用 Typst？</h2>
<p>在开始之前，我们先看看 Typst 是什么，以及在什么场景下可以使用。Typst 是一种用来排版文档的标记语言。简单易学、速度快、用途广都是它的设计目标。将编写好的包含各种标记的文本文件输入 Typst，便能输出 PDF 文件。</p>
<original>
Before we get started, let's check what Typst is and when to use it. Typst is a
markup language for typesetting documents. It is designed to be easy to learn,
fast, and versatile. Typst takes text files with markup in them and outputs
PDFs.
</original>
<p>对于长篇文本的编纂工作，例如作文、文章、论文、书、报告以及作业，Typst 都是个好选择。此外，Typst 十分适合编写包含数学记号的文档，比如数、理和工程方面的论文。得益于其在样式以及自动化方面的鲜明特点，对于需要统一样式的文档编写工作，Typst 也是极佳的选择。</p>
<original>
Typst is a good choice for writing any long form text such as essays, articles,
scientific papers, books, reports, and homework assignments. Moreover, Typst is
a great fit for any documents containing mathematical notation, such as papers
in the math, physics, and engineering fields. Finally, due to its strong styling
and automation features, it is an excellent choice for any set of documents that
share a common style, such as a book series.
</original>
<h2 id="你将会学到">你将会学到...</h2>
<p>入门教程分为四个章节。每个章节都以之前的内容为基础。下面分别列出了你会在每个章节里了解到的东西。</p>
<original>
This tutorial has four chapters. Each chapter builds on the previous one. Here
is what you will learn in each of them:
</original>
<ol>
<li><a href="/docs/tutorial/writing-in-typst/">使用 Typst 编写文档</a>：了解如何编写文本，如何插入图片、公式和其它元素。</li>
<li><a href="/docs/tutorial/formatting/">格式化</a>：了解如何修改文档中的各种格式，包括字体大小、标题样式等。</li>
<li><a href="/docs/tutorial/advanced-styling/">高级样式</a>：了解如何为科学论文创建复杂的页面布局，包括一些字体特点（typographic features）上的自定义，例如作者列表、行内标题（run-in headings）等。</li>
<li><a href="/docs/tutorial/making-a-template/">制作模板</a>：了解如何基于第三章中的论文布局创建可复用的模板。</li>
</ol>
<original>
1. [Writing in Typst:]($tutorial/writing-in-typst) Learn how to write text and
   insert images, equations, and other elements.
2. [Formatting:]($tutorial/formatting) Learn how to adjust the formatting
   of your document, including font size, heading styles, and more.
3. [Advanced Styling:]($tutorial/advanced-styling) Create a complex page
   layout for a scientific paper with typographic features such as an author
   list and run-in headings.
4. [Making a Template:]($tutorial/making-a-template) Build a reusable template
   from the paper you created in the previous chapter.
</original>
<p>希望你能享受这段 Typst 之旅！</p>
<original>
We hope you'll enjoy Typst!
</original>`},children:[{route:"/docs/tutorial/writing-in-typst/",title:"使用 Typst 编写文档",description:"Typst's tutorial.",part:null,outline:[{id:"添加图片",name:"添加图片",children:[]},{id:"添加参考书目",name:"添加参考书目",children:[]},{id:"数学公式",name:"数学公式",children:[]},{id:"回顾",name:"回顾",children:[]}],body:{kind:"html",content:`<h1>使用 Typst 编写文档</h1>
<p>让我们开始吧！</p>
<p>假设你的大学布置你编写一篇技术报告，这里面会包含文段、数学公式、大小标题以及各种图形。开始时，你在 Typst app 里创建了一个新的项目，接下来页面跳转到编辑器里，在这里你可以看到两个栏目：一个是用来编写你的文档的源代码栏（source panel），另一个是用来查看渲染后文档的预览栏（preview panel）。</p>
<original>
Let's get started! Suppose you got assigned to write a technical report for
university. It will contain prose, maths, headings, and figures. To get started,
you create a new project on the Typst app. You'll be taken to the editor where
you see two panels: A source panel where you compose your document and a
preview panel where you see the rendered document.
</original>
<p><img src="/docs/assets/1-writing-app.png" alt="Typst app screenshot" /></p>
<p>现在你的头脑中对这一报告已经有了不错的构思，让我们从编写介绍（Introduction）部分开始。在编辑器栏里输入一些文本，你会发现它们立即出现在了预览页中。</p>
<original>
You already have a good angle for your report in mind. So let's start by writing
the introduction. Enter some text in the editor panel. You'll notice that the
text immediately appears on the previewed page.
</original>
<div class="previewed-code"><pre><code>In this report, we will explore the
various factors that influence fluid
dynamics in glaciers and how they
contribute to the formation and
behaviour of these natural structures.
</code></pre><div class="preview"><img src="/docs/assets/99650c44bd37a5c2aa56bcafe0e69ef2.png" alt="Preview" /></div></div>
<p><em>在整篇教程中，我们都会按照上面的方式展示代码示例。这里如同 app 中的那样，左栏里写内容，右栏展示渲染效果的预览。</em></p>
<original>
_Throughout this tutorial, we'll show code examples like this one. Just like in the app, the first panel contains markup and the second panel shows a preview. [Not translated ->] We shrunk the page to fit the examples so you can see what's going on._
</original>
<p>下一步是添加一些标题以及为一部分文本添加强调的效果。Typst 对于最为常见的格式采用了简单的标记，添加标题可使用 <code>=</code> 符号，用斜体来强调时，将文本用 <code><span class="typ-emph">_下划线_</span></code> 包围即可。</p>
<original>
The next step is to add a heading and emphasize some text. Typst uses simple
markup for the most common formatting tasks. To add a heading, enter the \`=\`
character and to emphasize some text with italics, enclose it in
\`[_underscores_]\`.
</original>
<div class="previewed-code"><pre><code><span class="typ-heading">= Introduction</span>
In this report, we will explore the
various factors that influence <span class="typ-emph">_fluid
dynamics_</span> in glaciers and how they
contribute to the formation and
behaviour of these natural structures.
</code></pre><div class="preview"><img src="/docs/assets/6ff7c794c16eb7c4c844dd54faabdee7.png" alt="Preview" /></div></div>
<p>很简单吧！</p>
<p>要新增段落，只需在两行文本之间加入一个空行。如果段落需要子标题，可用 <code>==</code>（而非 <code>=</code>）来生成。<code>=</code> 的数量决定了这些标题的嵌套层级。</p>
<original>
That was easy! To add a new paragraph, just add a blank line in between two
lines of text. If that paragraph needs a subheading, produce it by typing \`==\`
instead of \`=\`. The number of \`=\` characters determines the nesting level of the
heading.
</original>
<p>现在，我们想要列出一些影响冰川的动力学的例子。为了达成这一效果，我们会用到有序列表（numbered list，标号列表）。有序列表的每个项目前加的是 <code>+</code>，Typst 会自动地将它们按顺序编号。</p>
<original>
Now we want to list a few of the circumstances that influence glacier dynamics.
To do that, we use a numbered list. For each item of the list, we type a \`+\`
character at the beginning of the line. Typst will automatically number the
items.
</original>
<div class="previewed-code"><pre><code><span class="typ-marker">+</span> The climate
<span class="typ-marker">+</span> The topography
<span class="typ-marker">+</span> The geology
</code></pre><div class="preview"><img src="/docs/assets/5020f9d38c19d2f006585e262cd6c9b6.png" alt="Preview" /></div></div>
<p>如果我们想要添加无序列表（bulleted list，带点的列表），可使用 <code>-</code> 替代 <code>+</code>。 列表是可以嵌套的，通过缩进（indenting）为上面列表的第一项添加子列表的示例如下：</p>
<original>
If we wanted to add a bulleted list, we would use the \`-\` character instead of
the \`+\` character. We can also nest lists: For example, we can add a sub-list to
the first item of the list above by indenting it.
</original>
<div class="previewed-code"><pre><code><span class="typ-marker">+</span> The climate
  <span class="typ-marker">-</span> Temperature
  <span class="typ-marker">-</span> Precipitation
<span class="typ-marker">+</span> The topography
<span class="typ-marker">+</span> The geology
</code></pre><div class="preview"><img src="/docs/assets/3316ad3fe42079e15c057be9aa769b81.png" alt="Preview" /></div></div>
<h2 id="添加图片">添加图片</h2>
<p>你觉得在你的报告里加上一些图表会更好。现在我们来试着加一个。Typst 支持 PNG、JPEG、GIF 和 SVG 格式的图片。要在项目中新增一个图片文件，首先点击 app 页面左侧的箱形图表打开 <em>文件栏</em>。在这里你可以看到项目中的所有文件。目前，这里只有一个文件，也就是你正编写的这个 Typst 文件。要上传文件，点击右上角的箭头图标，这会打开一个上传对话框，你可以在这里挑选要从你电脑上传的一个或多个文件。</p>
<original>
You think that your report would benefit from a figure. Let's add one. Typst
supports images in the formats PNG, JPEG, GIF, and SVG. To add an image file to
your project, first open the _file panel_ by clicking the box icon in the left
sidebar. Here, you can see a list of all files in your project. Currently, there
is only one: The main Typst file you are writing in. To upload another file,
click the button with the arrow in the top-right corner. This opens the upload
dialog, in which you can pick files to upload from your computer. Select an
image file for your report.
</original>
<p><img src="/docs/assets/1-writing-upload.png" alt="Upload dialog" /></p>
<p>前面我们已经知晓，Typst 中的某些符号（称为 <em>标记</em>）具有特殊的含义。我们分别用 <code>=</code>、<code>-</code>、<code>+</code> 和 <code>_</code> 创建标题、列表（无序、有序）和强调的文本。然而，要是真的为所有我们将来想要插入到文档中的元素都单独设置一个特殊符号，使用起来就会变得既晦涩又臃肿。因此，Typst 只为那些最常见的格式保留了标记符号，其余的则使用 <em>函数</em> 来插入。对于我们要展示的图片，我们会用到 Typst 的 <a href="/docs/reference/visualize/image/" title="\`image\`"><code>image</code></a> 函数。</p>
<original>
We have seen before that specific symbols (called _markup_) have specific
meaning in Typst. We can use \`=\`, \`-\`, \`+\`, and \`_\` to create headings, lists
and emphasized text, respectively. However, having a special symbol for
everything we want to insert into our document would soon become cryptic and
unwieldy. For this reason, Typst reserves markup symbols only for the most
common things. Everything else is inserted with _functions._ For our image to
show up on the page, we use Typst's [\`image\`] function.
</original>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/19202d9203d0dafe22cb8d67b517b3d1.png" alt="Preview" /></div></div>
<p>一言蔽之，函数用于根据一组参数产生输出。当你在标记中 <em>调用</em> 一个函数并传入参数后，Typst 就将结果（即函数的 <em>返回值</em>）插入到文档中。在我们的这个例子中，<code>image</code> 函数接受一个参数：图片文件的路径。要在标记中调用函数，我们使用 <code>#函数名</code> 的格式，后跟圆括号（parentheses）括起来的参数列表，参数可以有不同的数据类型。这里的文件路径是一个短的<a href="/docs/reference/foundations/str/">字符串</a>，所以我们应该将它的值用双引号包围。</p>
<original>
In general, a function produces some output for a set of _arguments_. When you
_call_ a function within markup, you provide the arguments and Typst inserts the
result (the function's _return value_) into the document. In our case, the
\`image\` function takes one argument: The path to the image file. To call a
function in markup, we first need to type the \`#\` character, immediately
followed by the name of the function. Then, we enclose the arguments in
parentheses. Typst recognizes many different data types within argument lists.
Our file path is a short [string of text]($str), so we need to enclose it in
double quotes.
</original>
<p>插入的图片（默认）会占据页面的全部宽度。要改变这一点，将 <code>width</code>（宽度）参数传递到 <code>image</code> 函数中。这是一个 <em>具名的</em> 参数（named argument），以后会用 <code>name: value</code> 这样的格式来指代。多个参数用逗号（英文逗号 <code>,</code>）来分隔，所以在这里首先我们要在路径值后面输入一个逗号，然后跟上 <code>width: {70%}</code>。</p>
<original>
The inserted image uses the whole width of the page. To change that, pass the
\`width\` argument to the \`image\` function. This is a _named_ argument and
therefore specified as a \`name: value\` pair. If there are multiple arguments,
they are separated by commas, so we first need to put a comma behind the path.
</original>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">70%</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d70999d3519b6cc2c14e0afd9c48bcb2.png" alt="Preview" /></div></div>
<p><code>width</code> 参数是一个 <a href="/docs/reference/layout/relative/">相对长度</a>，在上面的例子里，我们指定的是一个百分比，它决定了这个图片应当占据页面 <code><span class="typ-num">70%</span></code> 的宽度。相对长度也可以指定为一个绝对值，例如 <code><span class="typ-num">1cm</span></code> 或者 <code><span class="typ-num">0.7in</span></code>。</p>
<original>
The \`width\` argument is a [relative length]($relative). In our case, we
specified a percentage, determining that the image shall take up \`{70%}\` of the
page's width. We also could have specified an absolute value like \`{1cm}\` or
\`{0.7in}\`.
</original>
<p>和文本一样，默认情况下我们的图片是左对齐于页面的。严格来说，它现在还缺少说明文字（caption），让我们用 <a href="/docs/reference/model/figure/" title="figure">figure</a> 函数来修复这一点。这个函数接受一个有序参数（positional argument），它指定了该 figure 的内容；和一个可选的具名参数，它指定了该 figure 的说明文本（caption）。</p>
<original>
Just like text, the image is now aligned at the left side of the page by
default. It's also lacking a caption. Let's fix that by using the [figure]
function. This function takes the figure's contents as a positional argument and
an optional caption as a named argument.
</original>
<p>在 <code>figure</code> 函数的参数列表中编辑时，Typst 已经处于代码模式中，这代表你在调用图片函数时应该去掉前面的井号。井号只需要在直接标记中加入，这是为了区分一般的文本与函数。</p>
<original>
Within the argument list of the \`figure\` function, Typst is already in code
mode. This means, you now have to remove the hash before the image function call.
The hash is only needed directly in markup (to disambiguate text from function
calls).
</original>
<p>图片的说明文本可由任意的标记组成。为了向函数传递标记，我们将它用方括号包围，这种结构称为 <em>内容块</em>。</p>
<original>
The caption consists of arbitrary markup. To give markup to a function, we
enclose it in square brackets. This construct is called a _content block._
</original>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">70%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>
    <span class="typ-emph">_Glaciers_</span> form an important part
    of the earth&#39;s climate system.
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e9a30fd9c661371a4cc3b197d249d94d.png" alt="Preview" /></div></div>
<p>你继续编写着报告，发现需要在某处引用这张图表。要达到这一效果，首先要为图表加一个标签（label），用于赋予文档中的元素一个唯一的标识。要添加标签，用尖括号包围标签的内容，然后加在元素（例如这里的图表）后边。接下来你可以在文本中用 <code>[@]标签名</code> 来引用这张图表。标题和公式也可以像这样打上标签来引用。</p>
<original>
You continue to write your report and now want to reference the figure. To do
that, first attach a label to figure. A label uniquely identifies an element in
your document. Add one after the figure by enclosing some name in angle
brackets. You can then reference the figure in your text by writing an \`[@]\`
symbol followed by that name. Headings and equations can also be labelled to
make them referenceable.
</original>
<div class="previewed-code"><pre><code>Glaciers as the one shown in
<span class="typ-ref">@glaciers</span> will cease to exist if
we don&#39;t take action soon!

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">70%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>
    <span class="typ-emph">_Glaciers_</span> form an important part
    of the earth&#39;s climate system.
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-label">&lt;glaciers&gt;</span>
</code></pre><div class="preview"><img src="/docs/assets/fd01b79e9815b557b728b88213486a68.png" alt="Preview" /></div></div><div class="info-box">
<p>截至目前，我们向函数传递了内容块（用方括号包围的标记）和字符串（用双引号包围的文本）。两者似乎都包含着文本。有什么区别呢？</p>
<p>内容块既可以包含文本，也可以包含任意的标记、函数调用等，而字符串仅仅是一串字符，别无他意。</p>
<p>例如，图片函数需要图片文件的路径，这时传入一段文字或者其它图片（译者注：即 <code>image</code> 函数的返回值）进去是没有意义的。这就是为什么路径参数里只能填字符串。相反，字符串可以传入任何内容类的参数里，因为单纯的文本就是一种有效的内容（块）。</p>
</div>
<original>
<div class="info-box">
<p>So far, we've passed content blocks (markup in square brackets) and strings
(text in double quotes) to our functions. Both seem to contain text. What's the
difference?</p>
<p>A content block can contain text, but also any other kind of markup, function
calls, and more, whereas a string is really just a <em>sequence of characters</em> and
nothing else.</p>
<p>For example, the image function expects a path to an image file.
It would not make sense to pass, e.g., a paragraph of text or another image as
the image's path parameter. That's why only strings are allowed here.
On the contrary, strings work wherever content is expected because text is a
valid kind of content.</p>
</div>
</original>
<h2 id="添加参考书目">添加参考书目</h2>
<p>随着报告的不断完善，你需要为你的一些阐述做支撑。你可以用 <a href="/docs/reference/model/bibliography/" title="\`bibliography\`"><code>bibliography</code></a> 函数为你的文档添加参考书目，这一函数接受一个指向书目文件（bibliography file）的路径。</p>
<original>
As you write up your report, you need to back up some of your claims. You can
add a bibliography to your document with the [\`bibliography\`] function. This
function expects a path to a bibliography file.
</original>
<p>Typst 中原生的引用格式是 <a href="https://github.com/typst/hayagriva/blob/main/docs/file-format.md">Hayagriva</a> 但是为了兼容性你也可以使用 BibLaTeX 文件。现在你的同学已经完成了文献综述（literature survey）流程并发给你了一个 <code>.bib</code> 格式的文件，你将采用这个文件，于是你将它上传到了 Typst 中。</p>
<original>
Typst's native bibliography format is
[Hayagriva](https://github.com/typst/hayagriva/blob/main/docs/file-format.md),
but for compatibility you can also use BibLaTeX files. As your classmate has
already done a literature survey and sent you a \`.bib\` file, you'll use that
one. Upload the file through the file panel to access it in Typst.
</original>
<p>当文档中包含这样的书目时，你便可以开始从中进行引用。引用与标签采用同样的语法（译者注：<code><span class="typ-ref">@</span></code> 后跟引用内容）。在你引用了来源后，它就会自动出现在文档的引用书目部分。</p>
<p>Typst 支持不同的引用与书目风格。更多细节请<a href="/docs/reference/model/bibliography/#parameters-style">参考这里</a>。</p>
<original>
Once the document contains a bibliography, you can start citing from it.
Citations use the same syntax as references to a label. As soon as you cite a
source for the first time, it will appear in the bibliography section of your
document. Typst supports different citation and bibliography styles. Consult the
[reference]($bibliography.style) for more details.
</original>
<div class="previewed-code"><pre><code><span class="typ-heading">= Methods</span>
We follow the glacier melting models
established in <span class="typ-ref">@glacier-melt</span>.

<span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c649466d6a948a6bbca55d3014392431.png" alt="Preview" /></div></div>
<h2 id="数学公式">数学公式</h2>
<p>完善了 Methods 部分以后，你开始解决文档的又一核心——公式。Typst 有着内置的数学排版，并采用自有的数学记号，让我们从一个简单的公式开始。</p>
<p>我们用 <code>$</code> 包围公式。</p>
<original>
After fleshing out the methods section, you move on to the meat of the document:
Your equations. Typst has built-in mathematical typesetting and uses its own
math notation. Let's start with a simple equation. We wrap it in \`[$]\` signs
to let Typst know it should expect a mathematical expression:
</original>
<div class="previewed-code"><pre><code>The equation <span class="typ-math-delim">$</span>Q = <span class="typ-pol">rho</span> A v + C<span class="typ-math-delim">$</span>
defines the glacial flow rate.
</code></pre><div class="preview"><img src="/docs/assets/c4bab526f055d187940504a6009b1a6a.png" alt="Preview" /></div></div>
<p>这一公式是在行内排版的。如果想要它另起一行，就在公式的开头和末尾加入一个空格。</p>
<original>
The equation is typeset inline, on the same line as the surrounding text. If you
want to have it on its own line instead, you should insert a single space at its
start and end:
</original>
<div class="previewed-code"><pre><code>The flow rate of a glacier is
defined by the following equation:

<span class="typ-math-delim">$</span> Q = <span class="typ-pol">rho</span> A v + C <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/3de65aa15a4aa8808b1980b8f0992e6c.png" alt="Preview" /></div></div>
<p>我们可以发现 Typst 原样显示了 <code>Q</code>、<code>A</code>、<code>v</code> 和 <code>c</code> 这些字母，而将 <code>rho</code> 翻译成了希腊字母。数学模式总会原样地展示单个字母，多个字母默认会被解析为符号、变量或者函数名称。（因此，）要表示字母的乘法，请在字母之间插入空格。</p>
<original>
We can see that Typst displayed the single letters \`Q\`, \`A\`, \`v\`, and \`C\` as-is,
while it translated \`rho\` into a Greek letter. Math mode will always show single
letters verbatim. Multiple letters, however, are interpreted as symbols,
variables, or function names. To imply a multiplication between single letters,
put spaces between them.
</original>
<p>如果你想要展示一个名称含多个字母的数学变量，你可以用引号将其包围：</p>
<original>
If you want to have a variable that consists of multiple letters, you can
enclose it in quotes:
</original>
<div class="previewed-code"><pre><code>The flow rate of a glacier is given
by the following equation:

<span class="typ-math-delim">$</span> Q = <span class="typ-pol">rho</span> A v + <span class="typ-str">&quot;time offset&quot;</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/a4aceae2ca334fa236794148ae9343cd.png" alt="Preview" /></div></div>
<p>你发现在论文里还需要一个求和公式。我们可以用 <code>sum</code> 记号，然后用上下标来指定求和的范围：</p>
<original>
You'll also need a sum formula in your paper. We can use the \`sum\` symbol and
then specify the range of the summation in sub- and superscripts:
</original>
<div class="previewed-code"><pre><code>Total displaced soil by glacial flow:

<span class="typ-math-delim">$</span> 7.32 <span class="typ-pol">beta</span> +
  <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>i=0<span class="typ-punct">)</span><span class="typ-math-op">^</span><span class="typ-pol">nabla</span> Q<span class="typ-math-op">_</span>i <span class="typ-math-op">/</span> 2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/a04f430e4fe89db2843a11fd0d69052d.png" alt="Preview" /></div></div>
<p>要向数学变量或符号添加下标，输入 <code>_</code> 紧跟下标的内容。类似地，上标用 <code>^</code> 来表示。如果你要输入的下标和上标包含多个元素，则必须用圆括号将它们包围。</p>
<original>
To add a subscript to a symbol or variable, type a \`_\` character and then the
subscript. Similarly, use the \`^\` character for a superscript. If your
sub- or superscript consists of multiple things, you must enclose them
in round parentheses.
</original>
<p>上面的例子还向我们展示了如何插入分式：只需在分子和分母之间放入一个 <code>/</code>，Typst 就会自动地将它变成分式。</p>
<p>Typst 中的括号是自动解析的，因此你可以按照你想要的方式将表达式输入到计算器里进行计算，再复制粘贴到 Typst 中。无需修改，Typst 会自动将带括号的子表达式解析替换为恰当的结果。</p>
<original>
The above example also showed us how to insert fractions: Simply put a \`/\`
character between the numerator and the denominator and Typst will automatically
turn it into a fraction. Parentheses are smartly resolved, so you can enter your
expression as you would into a calculator and Typst will replace parenthesized
sub-expressions with the appropriate notation.
</original>
<div class="previewed-code"><pre><code>Total displaced soil by glacial flow:

<span class="typ-math-delim">$</span> 7.32 <span class="typ-pol">beta</span> +
  <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>i=0<span class="typ-punct">)</span><span class="typ-math-op">^</span><span class="typ-pol">nabla</span>
    <span class="typ-punct">(</span>Q<span class="typ-math-op">_</span>i (a<span class="typ-math-op">_</span>i <span class="typ-escape">-</span> <span class="typ-pol">epsilon</span>)<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/a4c4b3e3d0466d219d8ac1dfbc079c86.png" alt="Preview" /></div></div>
<p>并不是所有的数学结构都有特殊的语法（译者注：这里特殊的语法是指像上标 <code>^</code> 下标 <code>_</code> 这样的特殊简易记号）。对于其它结果，我们会利用函数来表达，就像我们前面所见的 <code>image</code> 函数一样。例如，要插入一个列向量，我们可以使用 <a href="/docs/reference/math/vec/"><code>vec</code></a> 函数。</p>
<p>在数学模式下，函数调用也不需要以 <code>#</code> 开头。</p>
<original>
Not all math constructs have special syntax. Instead, we use functions, just
like the \`image\` function we have seen before. For example, to insert a column
vector, we can use the [\`vec\`]($math.vec) function. Within math mode, function
calls don't need to start with the \`#\` character.
</original>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> v <span class="typ-escape">:=</span> <span class="typ-func">vec</span><span class="typ-punct">(</span>x<span class="typ-math-op">_</span>1<span class="typ-punct">,</span> x<span class="typ-math-op">_</span>2<span class="typ-punct">,</span> x<span class="typ-math-op">_</span>3<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/bc15651d8d0da387437fa1c369f7affc.png" alt="Preview" /></div></div>
<p>有些函数只在数学模式下存在。例如 <a href="/docs/reference/math/variants/#functions-cal"><code>cal</code></a> 函数用于显示出常用于表示集合的书法字体。</p>
<p><a href="/docs/reference/math/">References 中的 math 部分</a>列出了所有数学模式下可用的函数，可供参考。</p>
<original>
Some functions are only available within math mode. For example, the
[\`cal\`]($math.cal) function is used to typeset calligraphic letters commonly
used for sets. The [math section of the reference]($category/math) provides a
complete list of all functions that math mode makes available.
</original>
<p>还有一件事：许多符号有不同的变种，比如箭头。你可以通过在这一符号的名称后面加上点（<code>.</code>）和修饰名来选择一个变种：</p>
<original>
One more thing: Many symbols, such as the arrow, have a lot of variants. You can
select among these variants by appending a dot and a modifier name to a symbol's
name:
</original>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> a <span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">squiggly</span> b <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/7d8a601ae385608864c4626b7e31c121.png" alt="Preview" /></div></div>
<p>这个记号在标记模式下也同样可用，但此时的调用必须以 <code>#sym.</code> 开头。转到 <a href="/docs/reference/symbols/sym/">symbols 部分</a>来查看完整的可用符号列表。</p>
<original>
This notation is also available in markup mode, but the symbol name must be
preceded with \`#sym.\` there. See the [symbols section]($category/symbols/sym)
for a list of all available symbols.
</original>
<h2 id="回顾">回顾</h2>
<p>现在你已经知道如何用 Typst 编写一个基本的文档了。在本章中，我们了解了如何去用斜体强调文本、编写列表、插入图片、对齐内容以及排版数学表达式，还了解了 Typst 中函数的内容。除了图片，Typst 中有很多其它类型的内容可供你插入到文档中，例如<a href="/docs/reference/model/table/">表格</a>、<a href="/docs/reference/visualize/">图形</a>和<a href="/docs/reference/text/raw/">代码块</a>。你可以研读 <a href="/docs/reference/" title="reference">reference</a> 来了解更多特性。</p>
<original>
You have now seen how to write a basic document in Typst. You learned how to
emphasize text, write lists, insert images, align content, and typeset
mathematical expressions. You also learned about Typst's functions. There are
many more kinds of content that Typst lets you insert into your document, such
as [tables]($table), [shapes]($category/visualize), and [code blocks]($raw). You
can peruse the [reference] to learn more about these and other features.
</original>
<p>到目前为止，你已经完成了你的报告。通过点击页面右上角的下载按钮，你保存了一份 PDF 文件。然而，你认为这个报告可能看上去有些过于平淡。在下一章，我们将了解如何自定义文档的外观。</p>
<original>
For the moment, you have completed writing your report. You have already saved a
PDF by clicking on the download button in the top right corner. However, you
think the report could look a bit less plain. In the next section, we'll learn
how to customize the look of our document.
</original>`},children:[]},{route:"/docs/tutorial/formatting/",title:"格式化",description:"Typst's tutorial.",part:null,outline:[{id:"set-rules",name:"Set Rules",children:[]},{id:"自动补全面板",name:"自动补全面板",children:[]},{id:"配置页面",name:"配置页面",children:[]},{id:"一些经验的提示",name:"一些经验的提示",children:[]},{id:"show-rules",name:"Show Rules",children:[]},{id:"回顾",name:"回顾",children:[]}],body:{kind:"html",content:`<h1>格式化</h1>
<p>目前，你已经编写出了一篇包含着文本、公式和图片的报告，但是它仍然看起来很平淡。你的助教现在还不知道你正用着一套新的排版系统，而你希望你的报告能够较完美地融入其他同学提交的报告里。在这一章里，我们将了解如何使用 Typst 的样式系统来安排你报告中的各种格式。</p>
<original>
So far, you have written a report with some text, a few equations and images.
However, it still looks very plain. Your teaching assistant does not yet know
that you are using a new typesetting system, and you want your report to fit in
with the other student's submissions. In this chapter, we will see how to format
your report using Typst's styling system.
</original>
<h2 id="set-rules">Set rules</h2>
<p>前面的章节中提到，Typst 既有会向文章 <em>插入</em> 内容的函数（例如 <a href="/docs/reference/visualize/image/" title="\`image\`"><code>image</code></a>），也有会 <em>修改</em> 参数中传入的内容的函数（例如 <a href="/docs/reference/layout/align/" title="\`align\`"><code>align</code></a>）。假定你现在想要对齐报告中的所有行，你的第一个念头或许就是找到一个干这事的函数，并将整个文档包围在该函数的参数里面。</p>
<original>
As we have seen in the previous chapter, Typst has functions that _insert_
content (e.g. the [ function) and others that _manipulate_ content that
they received as arguments (e.g. the [\`align\`] function). The first impulse you
might have when you want, for example, to justify the report, could be to look
for a function that does that and wrap the complete document in it.
</original>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-heading">= Background</span>
  In the case of glaciers, fluid
  dynamics principles can be used
  to understand how the movement
  and behaviour of the ice is
  influenced by factors such as
  temperature, pressure, and the
  presence of other fluids (such as
  water).
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/d8e4e5428659c435312d5f7738d4d968.png" alt="Preview" /></div></div>
<p>等等，这函数的参数不应该用圆括号括起来吗？为什么在圆括号的 <em>后面</em> 又跟了一个方括号呢？这是由于向函数传递内容在 Typst 中是再常见不过的事情，因此它存在着一种特殊的语法：将内容写在方括号里，然后接在参数列表之后，而不用将内容放到参数列表里，这样做节省了一些标点。</p>
<original>
Wait, shouldn't all arguments of a function be specified within parentheses? Why
is there a second set of square brackets with content _after_ the parentheses?
The answer is that, as passing content to a function is such a common thing to
do in Typst, there is special syntax for it: Instead of putting the content
inside of the argument list, you can write it in square brackets directly after
the normal arguments, saving on punctuation.
</original>
<p>如上面的例子所示，这样做是可行的。<a href="/docs/reference/model/par/" title="\`par\`"><code>par</code></a> 函数将输入的所有行都对齐了。然而如果一味地将文档包围在数不清的函数里，并且还要选择性地原地添加样式，文档很快就会变得臃肿。</p>
<original>
As seen above, that works. The [\`par\`] function justifies all paragraphs within
it. However, wrapping the document in countless functions and applying styles
selectively and in-situ can quickly become cumbersome.
</original>
<p>幸运的是，Typst 中有一个更优雅的解法。利用 <em>set rules</em>，你可以将样式属性一次性应用到指定的所有内容上。Set rules 通过 <code><span class="typ-key">set</span></code> 关键字来编写，其后跟上你想要设置的属性的相关函数，和一个用圆括号括起来的参数列表。</p>
<original>
Fortunately, Typst has a more elegant solution. With _set rules,_ you can apply
style properties to all occurrences of some kind of content. You write a set
rule by entering the \`{set}\` keyword, followed by the name of the function whose
properties you want to set, and a list of arguments in parentheses.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

<span class="typ-heading">= Background</span>
In the case of glaciers, fluid
dynamics principles can be used
to understand how the movement
and behaviour of the ice is
influenced by factors such as
temperature, pressure, and the
presence of other fluids (such as
water).
</code></pre><div class="preview"><img src="/docs/assets/372ca1e7edcc89bcc6520c57f3b800db.png" alt="Preview" /></div></div><div class="info-box">
<p>想从更技术的角度来了解这里发生了什么吗？</p>
<p>—— Set rules 可理解为一种为将来对该函数的所有调用设置一部分参数默认值的语法。</p>
</div>
<original>
<div class="info-box">
<p>Want to know in more technical terms what is happening here?</p>
<p>Set rules can be conceptualized as setting default values
for some of the parameters of a function for all future
uses of that function.</p>
</div>
</original>
<h2 id="自动补全面板">自动补全面板</h2>
<p>如果你跟随着步骤并在 app 中尝试了各种功能，你可能会发现每次在你输入 <code>#</code> 时，总会弹出一个向你展示可用函数的面板，而在参数列表中输入时，它又会向你展示目前可用的参数。这就是自动补全面板。在你编写文档的过程中，自动补全面板的用处很大：你可以按下回车键来应用它的建议，也可以使用箭头键选定你想要的那个补全。这个面板可以用 Esc 键来关闭，再次输入 <code>#</code> 或者按下 <kbd>Ctrl</kbd>+<kbd>空格</kbd> 时会重新打开。自动补全面板可以帮助你发现函数的正确参数，上面的大多数的建议下都用小字写有用途的介绍。</p>
<original>
If you followed along and tried a few things in the app, you might have noticed
that always after you enter a \`#\` character, a panel pops up to show you the
available functions, and, within an argument list, the available parameters.
That's the autocomplete panel. It can be very useful while you are writing your
document: You can apply its suggestions by hitting the Return key or navigate to
the desired completion with the arrow keys. The panel can be dismissed by
hitting the Escape key and opened again by typing \`#\` or hitting
<kbd>Ctrl</kbd> + <kbd>Space</kbd>. Use the autocomplete panel to discover the
right arguments for functions. Most suggestions come with a small description of
what they do.
</original>
<p><img src="/docs/assets/2-formatting-autocomplete.png" alt="Autocomplete panel" /></p>
<h2 id="配置页面">配置页面</h2>
<p>回到 set rules 上面。在编写 rule 的时候，你应该按照你想要自定义样式的目标元素的类型来选择对应的函数。下面列出了一些在 set rules 中常用的函数：</p>
<original>
Back to set rules: When writing a rule, you choose the function depending on
what type of element you want to style. Here is a list of some functions that
are commonly used in set rules:
</original>
<ul>
<li><a href="/docs/reference/text/text/" title="\`text\`"><code>text</code></a>（文本）用于设置字体族（font family）、大小、颜色以及其他文本的属性</li>
<li><a href="/docs/reference/layout/page/" title="\`page\`"><code>page</code></a>（页面）用于设置页面大小、边距、标题，以及启用列（columns）和页脚（footers）</li>
<li><a href="/docs/reference/model/par/" title="\`par\`"><code>par</code></a>（paragraph，段落）用于对齐段落，设置行距等</li>
<li><a href="/docs/reference/model/heading/" title="\`heading\`"><code>heading</code></a>（标题）用于设置标题的外观和启用标号（numbering）</li>
<li><a href="/docs/reference/model/document/" title="\`document\`"><code>document</code></a>（文档）用于设置输出的 PDF 文件的元数据，例如标题属性和作者属性</li>
</ul>
<original>
- [\`text\`] to set font family, size, color, and other properties of text
- [\`page\`] to set the page size, margins, headers, enable columns, and footers
- [\`par\`] to justify paragraphs, set line spacing, and more
- [\`heading\`] to set the appearance of headings and enable numbering
- [\`document\`] to set the metadata contained in the PDF output, such as title
  and author
</original>
<p>并不是函数所有的参数都能被设置。总地来说，只有那些能够指导函数 <em>如何</em> 去完成一件事的参数可以被设置，而不包括函数完一件事所需的那些 <em>数据</em> 参数。每个函数的参考页里都有指出哪些参数可以设置。</p>
<original>
Not all function parameters can be set. In general, only parameters that tell
a function _how_ to do something can be set, not those that tell it _what_ to
do it with. The function reference pages indicate which parameters are settable.
</original>
<p>现在让我们为文档添加更多的样式，让文档的边距更大，并采用衬线（serif）的字体。为了演示方便，我们还会对页面的大小进行一次设置。</p>
<original>
Let's add a few more styles to our document. We want larger margins and a serif
font. For the purposes of the example, we'll also set another page size.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  paper<span class="typ-punct">:</span> <span class="typ-str">&quot;a6&quot;</span><span class="typ-punct">,</span>
  margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">1.8cm</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">1.5cm</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  font<span class="typ-punct">:</span> <span class="typ-str">&quot;New Computer Modern&quot;</span><span class="typ-punct">,</span>
  size<span class="typ-punct">:</span> <span class="typ-num">10pt</span>
<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>
  justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  leading<span class="typ-punct">:</span> <span class="typ-num">0.52em</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
In this report, we will explore the
various factors that influence fluid
dynamics in glaciers and how they
contribute to the formation and
behaviour of these natural structures.

<span class="typ-escape">...</span>

<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center <span class="typ-op">+</span> bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">70%</span><span class="typ-punct">)</span>

  <span class="typ-strong">*Glaciers form an important
  part of the earth&#39;s climate
  system.*</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/95f26b096a52e58929aff145f7afd01f.png" alt="Preview" /></div></div>
<p>这里有几点需要注意。</p>
<p>首先是 <a href="/docs/reference/layout/page/" title="\`page\`"><code>page</code></a> 这个 set rule。它接受两个参数：页面大小（page size）和边距（margin）。</p>
<p>页面大小是一个字符串，Typst 接受许多<a href="/docs/reference/layout/page/#parameters-paper">标准的页面大小</a>，不过你也可以自定义。</p>
<p>边距以<a href="/docs/reference/foundations/dictionary/">字典</a>（一组键值对，key-value pairs）的形式指定。在这个例子中，键是 <code>x</code> 和 <code>y</code>，值分别是水平和垂直的边距。在这里可以通过在字典中带上 <code>left</code>、<code>right</code>、<code>top</code> 和 <code>bottom</code> 来分别指定每个方向的边距。</p>
<original>
There are a few things of note here.
<p>First is the <a href="/docs/reference/layout/page/" title="\`page\`"><code>page</code></a> set rule. It receives two arguments: the page size and
margins for the page. The page size is a string. Typst accepts <a href="/docs/reference/layout/page/#parameters-paper">many standard
page sizes,</a> but you can also specify a custom page size. The
margins are specified as a <a href="/docs/reference/foundations/dictionary/">dictionary.</a> Dictionaries are a
collection of key-value pairs. In this case, the keys are <code>x</code> and <code>y</code>, and the
values are the horizontal and vertical margins, respectively. We could also have
specified separate margins for each side by passing a dictionary with the keys
<code>left</code>, <code>right</code>, <code>top</code>, and <code>bottom</code>.</p>
</original>
<p>然后是 <a href="/docs/reference/text/text/" title="\`text\`"><code>text</code></a> set rule。这里我们将字体大小设为了 <code><span class="typ-num">10pt</span></code>，字体族设为了 <code><span class="typ-str">&quot;New Computer Modern&quot;</span></code>。Typst app 中自带许多字体供你在文档中尝试。当你在 text 函数的参数列表中输入时，可通过自动补全查看所有可用的字体。</p>
<original>
Next is the set [\`text\`] set rule. Here, we set the font size to \`{10pt}\` and
font family to \`{"New Computer Modern"}\`. The Typst app comes with many fonts
that you can try for your document. When you are in the text function's argument
list, you can discover the available fonts in the autocomplete panel.
</original>
<p>我们还设置了行距，它是一个 <a href="/docs/reference/layout/length/" title="length">length</a> 类型的值。在这里我们用到了 <code>em</code> 这个单位来相对于字体大小指定行距：<code><span class="typ-num">1em</span></code> 相当于当前的字体大小（默认为 <code><span class="typ-num">11pt</span></code>）。</p>
<original>
We have also set the spacing between lines (a.k.a. leading): It is specified as
a [length] value, and we used the \`em\` unit to specify the leading relative to
the size of the font: \`{1em}\` is equivalent to the current font size (which
defaults to \`{11pt}\`).
</original>
<p>最后，我们通过在居中（center）对齐之后添加了垂直方向的对齐来将图片居底。这里可用 <code><span class="typ-op">+</span></code> 操作符来将垂直和水平的对齐结合在一起，二者构成一个二维对齐（2D alignment）。</p>
<original>
Finally, we have bottom aligned our image by adding a vertical alignment to our
center alignment. Vertical and horizontal alignments can be combined with the
\`{+}\` operator to yield a 2D alignment.
</original>
<h2 id="一些经验的提示">一些经验的提示</h2>
<p>为了让文档结构更为清晰，我们现在将标题标号。这可以通过设置 <a href="/docs/reference/model/heading/" title="\`heading\`"><code>heading</code></a> 函数的 <code>numbering</code> 参数来实现。</p>
<original>
To structure our document more clearly, we now want to number our headings. We
can do this by setting the \`numbering\` parameter of the [\`heading\`] function.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>

<span class="typ-heading">== Background</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">12</span><span class="typ-punct">)</span>

<span class="typ-heading">== Methods</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/381866e5464ef5f4ffaffe98d5572c5c.png" alt="Preview" /></div></div>
<p>我们指定了 <code><span class="typ-str">&quot;1.&quot;</span></code> 这一字符串作为 numbering 参数的值，这告诉 Typst 用阿拉伯数字去标号，并在标题和数字之间加上一个点。除了阿拉伯数字，还可以用<a href="/docs/reference/model/numbering/">字母、罗马数字以及特殊符号</a>。</p>
<original>
We specified the string \`{"1."}\` as the numbering parameter. This tells Typst to
number the headings with arabic numerals and to put a dot between the number of
each level. We can also use [letters, roman numerals, and symbols]($numbering)
for our headings:
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>

<span class="typ-heading">== Background</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">12</span><span class="typ-punct">)</span>

<span class="typ-heading">== Methods</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7520da8dfe7f0529feca97c518325987.png" alt="Preview" /></div></div>
<p>上面的例子中用到了 <a href="/docs/reference/text/lorem/" title="\`lorem\`"><code>lorem</code></a> 函数来生成占位文本，该函数接受一个数字参数，用来生成含有与该数字同等单词数的 <em>乱数假文</em>。</p>
<original>
This example also uses the [\`lorem\`] function to generate some placeholder text.
This function takes a number as an argument and generates that many words of
_Lorem Ipsum_ text.
</original>
<div class="info-box">
<p>你是否好奇为什么 headings 和 text 的 set rules 可以应用到所有的文本和标题，即使这些文本和标题并不是由函数生成的呢？</p>
<p><em>译者注：这个问题的基础在于上一个 INFO 中对 set rules 本质的解释：对某些函数参数的默认值的整体设置。但是标题和文本看似并非由函数生成。所以可提出为什么 set rules 也会作用于它们二者的疑问。</em></p>
<p>每次当你写下 <code><span class="typ-heading">= Conclusion</span></code> 的时候，Typst 内部都会调用 <code>heading</code> 函数。实际上，<code><span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>Conclusion<span class="typ-punct">]</span></code> 这一调用和前面的标题 markup（译者注：即 <code>=</code> 后跟标题的格式）是等价的。其它的 markup 也类似，它们都只是对应函数调用的 <em>语法糖</em>。</p>
</div>
<original>
<div class="info-box">
<p>Did you wonder why the headings and text set rules apply to all text and headings,
even if they are not produced with the respective functions?</p>
<p>Typst internally calls the <code>heading</code> function every time you write
<code><span class="typ-heading">= Conclusion</span></code>. In fact, the function call <code><span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>Conclusion<span class="typ-punct">]</span></code> is
equivalent to the heading markup above. Other markup elements work similarly,
they are only <em>syntax sugar</em> for the corresponding function calls.</p>
</div>
</original>
<h2 id="show-rules">Show rules</h2>
<p>你对目前的结果已经很满意了，但还有一件事需要解决：你的报告是为一个更大的项目而编写的，于是就有了这样一个需求：项目的名称应当随时与 Logo 一同出现，即便在简单陈述中也是如此。</p>
<original>
You are already pretty happy with how this turned out. But one last thing needs
to be fixed: The report you are writing is intended for a larger project and
that project's name should always be accompanied by a logo, even in prose.
</original>
<p>你思考着一些解法。或许，你可以通过查找与替换功能，在每个 Logo 文本出现的地方都添加一个 <code><span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;logo.svg&quot;</span><span class="typ-punct">)</span></code> 调用。但这看起来十分冗余。除了这种办法，你还可以<a href="/docs/reference/foundations/function/#defining-functions">自己定义一个函数</a>，并使它返回 Logo 文本和图案——不过，我们有一个更简单的方法：利用 show rules 来重新定义元素的展示方式。你可以指定哪些元素应该被特殊展示，以及相应的展示效果。Show rules 可以应用到文本实例，各种函数乃至整个文档。</p>
<original>
You consider your options. You could add an \`[#image("logo.svg")]\` call before
every instance of the logo using search and replace. That sounds very tedious.
Instead, you could maybe
[define a custom function]($function/#defining-functions) that always yields the
logo with its image. However, there is an even easier way:
With show rules, you can redefine how Typst displays certain elements. You
specify which elements Typst should show differently and how they should look.
Show rules can be applied to instances of text, many functions, and even the
whole document.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-str">&quot;ArtosFlow&quot;</span><span class="typ-punct">:</span> name <span class="typ-op">=&gt;</span> <span class="typ-func">box</span><span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">image</span><span class="typ-punct">(</span>
    <span class="typ-str">&quot;logo.svg&quot;</span><span class="typ-punct">,</span>
    height<span class="typ-punct">:</span> <span class="typ-num">0.7em</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-pol">#</span><span class="typ-pol">name</span>
<span class="typ-punct">]</span>

This report is embedded in the
ArtosFlow project. ArtosFlow is a
project of the Artos Institute.
</code></pre><div class="preview"><img src="/docs/assets/105c4fb78197843d1055cbadb8cb6e5a.png" alt="Preview" /></div></div>
<p>这个例子里引出了许多新语法。在这里我们写下 <code><span class="typ-key">show</span></code> 关键字，在其后跟上了要特殊展示的目标文本和一个冒号。<br/>冒号后跟的是一个函数，它以要展示的内容（即 show rules 的目标文本）作为参数，记作 <code>name</code>。下面的函数体中可以用 <code>name</code> 这个参数来输出 ArtosFlow 这一名称。<br/>之后的 show rule 中，名称的前面加上了 Logo，最终整体被放进了一个 box 里，这避免了图标与名称之间出现换行。同时，为了避免图标本身独占一行，它也被放在了一个 box 里。</p>
<original>
There is a lot of new syntax in this example: We write the \`{show}\` keyword,
followed by a string of text we want to show differently and a colon. Then, we
write a function that takes the content that shall be shown as an argument.
Here, we called that argument \`name\`. We can now use the \`name\` variable in the
function's body to print the ArtosFlow name. Our show rule adds the logo image
in front of the name and puts the result into a box to prevent linebreaks from
occurring between logo and name. The image is also put inside of a box, so that
it does not appear in its own paragraph.
</original>
<p>之所以不需要在第一个 box 函数和下面的 image 函数的调用前面带 <code>#</code>，是因为它们没有直接嵌在 markup （译者注：也就是前文所说的内容块）中。当 Typst 在识别代码而非 markup 的时候，函数、关键字以及变量前的 <code>#</code> 就不需要带了。这一点可以在你编辑参数列表、函数定义和<a href="/docs/reference/scripting/">代码块</a>时观察到。</p>
<original>
The calls to the first box function and the image function did not require a
leading \`#\` because they were not embedded directly in markup. When Typst
expects code instead of markup, the leading \`#\` is not needed to access
functions, keywords, and variables. This can be observed in parameter lists,
function definitions, and [code blocks]($scripting).
</original>
<h2 id="回顾">回顾</h2>
<p>现在你应该知道如何向你的 Typst 文档添加一些基础的格式了。你还了解了如何设置字体、对齐段落、设置页面大小、利用 set rules 为标题添加标号以及用它来整体改变文本的展示形式。</p>
<original>
You now know how to apply basic formatting to your Typst documents. You learned
how to set the font, justify your paragraphs, change the page dimensions, and
add numbering to your headings with set rules. You also learned how to use a
basic show rule to change how text appears throughout your document.
</original>
<p>现在，你上交了你的报告。你的导师看了非常高兴，因此他们一行人想要将你的报告改编成一篇会议论文（conference paper）！在下一章里，我们会了解如何利用更高阶的 show rules 和函数将你的文档排版成一篇论文。</p>
<original>
You have handed in your report. Your supervisor was so happy with it that they
want to adapt it into a conference paper! In the next section, we will learn how
to format your document as a paper using more advanced show rules and functions.
</original>`},children:[]},{route:"/docs/tutorial/advanced-styling/",title:"高级样式",description:"Typst's tutorial.",part:null,outline:[{id:"来自会议的指导规则",name:"来自会议的指导规则",children:[]},{id:"使用恰当的-set-rules-编写",name:"使用恰当的 Set Rules 编写",children:[]},{id:"创建标题和摘要",name:"创建标题和摘要",children:[]},{id:"添加分栏和标题",name:"添加分栏和标题",children:[]},{id:"回顾",name:"回顾",children:[]}],body:{kind:"html",content:`<h1>高级样式</h1>
<p>在本教程的前两章里，你了解了如何用 Typst 编写文档以及修改其格式。不仅这篇你用前两章的知识编写的报告直接获得了一个 A，而且你的导师还想要基于它编写一篇会议论文！这样的话，这篇报告就需要遵循该会议的样式标准。让我们看看该如何达成这一点。</p>
<original>
In the previous two chapters of this tutorial, you have learned how to write a
document in Typst and how to change its formatting. The report you wrote
throughout the last two chapters got a straight A and your supervisor wants to
base a conference paper on it! The report will of course have to comply with the
conference's style guide. Let's see how we can achieve that.
</original>
<p>在我们开始之前，首先我们在 app 里创建一个团队，然后邀请你的导师加入这个团队。你可以通过编辑器左上角的左箭头按钮回到 app 控制台，然后，点击左侧工具栏里的加号创建一个团队，再点击这个新的团队，最后点击团队名称旁边的 manage team（管理团队）进入设置，在这里你可以通过电子邮件邀请你的导师。</p>
<original>
Before we start, let's create a team, invite your supervisor and add them to the
team. You can do this by going back to the app dashboard with the back icon in
the top left corner of the editor. Then, choose the plus icon in the left
toolbar and create a team. Finally, click on the new team and go to its settings
by clicking 'manage team' next to the team name. Now you can invite your
supervisor by email.
</original>
<p><img src="/docs/assets/3-advanced-team-settings.png" alt="The team settings" /></p>
<p>接下来，将你的项目移动到团队里。先打开你的项目，点击左侧工具栏里的齿轮进入设置，然后在 owners（所有者）下拉框里选择你创建的新团队。不要忘了保存你的更改！</p>
<original>
Next, move your project into the team: Open it, going to its settings by
choosing the gear icon in the left toolbar and selecting your new team from the
owners dropdown. Don't forget to save your changes!
</original>
<p>现在，你的导师也可以编辑这个项目了，并且你们也可以实时查看更改。你可以加入我们的 <a href="https://discord.gg/2uDybryKPe">Discord</a>，在里面寻找其他用户，与他们一起尝试团队功能。</p>
<original>
Now, your supervisor can also edit the project and you can both see the changes
in real time. You can join our [Discord server](https://discord.gg/2uDybryKPe)
to find other users and try teams with them!
</original>
<h2 id="来自会议的指导规则">来自会议的指导规则</h2>
<p>会议的官网上有着布局的指导规则，我们来具体看看：</p>
<original>
The layout guidelines are available on the conference website. Let's take a look
at them:
</original>
<ul>
<li>文本应当是 11pt 的衬线字体</li>
<li>标题应当是 17pt 的粗体</li>
<li>论文包含单栏的摘要和两栏的正文</li>
<li>摘要应该居中</li>
<li>正文应该对齐</li>
<li>一级标题大小应为 13pt，居中，且用小型大写字母展示</li>
<li>二级标题应当在行内，斜体，且与正文字号相同</li>
<li>页面大小遵从 US letter 标准，页脚的中心位置标页数，每一页的右上角应包含论文标题</li>
</ul>
<original>
- The font should be an 11pt serif font
- The title should be in 17pt and bold
- The paper contains a single-column abstract and two-column main text
- The abstract should be centered
- The main text should be justified
- First level section headings should be 13pt, centered, and rendered in small
  capitals
- Second level headings are run-ins, italicized and have the same size as the
  body text
- Finally, the pages should be US letter sized, numbered in the center of the
  footer and the top right corner of each page should contain the title of the
  paper
</original>
<p>对于其中的一部分要求，我们已经知道如何实现了，但是对于其它的部分，我们还需要了解更多的技巧才行。</p>
<original>
We already know how to do many of these things, but for some of them, we'll need
to learn some new tricks.
</original>
<h2 id="使用恰当的-set-rules-编写">使用恰当的 set rules 编写</h2>
<p>我们先为文档编写一些 set rules。</p>
<original>
Let's start by writing some set rules for the document.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  paper<span class="typ-punct">:</span> <span class="typ-str">&quot;us-letter&quot;</span><span class="typ-punct">,</span>
  header<span class="typ-punct">:</span> <span class="typ-func">align</span><span class="typ-punct">(</span>right<span class="typ-punct">)</span><span class="typ-punct">[</span>
    A fluid dynamic model for
    glacier flow
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  font<span class="typ-punct">:</span> <span class="typ-str">&quot;Libertinus Serif&quot;</span><span class="typ-punct">,</span>
  size<span class="typ-punct">:</span> <span class="typ-num">11pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">600</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e57a07cb4d312950e3a6701d4b60c02f.png" alt="Preview" /></div></div>
<p>你应该已经很熟悉这里的大部分内容在做什么了。我们将文本的大小设置为 <code><span class="typ-num">11pt</span></code>，字体设置为 Libertinus Serif，同时启用了段落的对齐，将页面大小也设置为了 US letter。</p>
<original>
You are already familiar with most of what is going on here. We set the text
size to \`{11pt}\` and the font to Libertinus Serif. We also enable paragraph
justification and set the page size to US letter.
</original>
<p>这里的 <code>header</code> 参数是之前没有遇到过的。我们可以通过它来设置每一页页眉的内容。于是我们按照会议的标准在页眉中设定了论文的标题，并用 <code>align</code> 函数将文本右对齐。</p>
<original>
The \`header\` argument is new: With it, we can provide content to fill the top
margin of every page. In the header, we specify our paper's title as requested
by the conference style guide. We use the \`align\` function to align the text to
the right.
</original>
<p>然后是 <code>numbering</code> 参数。我们可以传入一个<a href="/docs/reference/model/numbering/">标号模板</a>来定义页面的标号形式。将它设为 <code><span class="typ-str">&quot;1&quot;</span></code> 时，Typst 只会直接显示页数，而设为 <code><span class="typ-str">&quot;(1/1)&quot;</span></code> 时，最终会显示出用括号包围的当前页数和总页数。我们甚至还可以传入一个完全自定义的函数来将页数展示为我们想要的样式。</p>
<original>
Last but not least is the \`numbering\` argument. Here, we can provide a
[numbering pattern]($numbering) that defines how to number the pages. By
setting into to \`{"1"}\`, Typst only displays the bare page number. Setting it to
\`{"(1/1)"}\` would have displayed the current page and total number of pages
surrounded by parentheses. And we could even have provided a completely custom
function here to format things to our liking.
</original>
<h2 id="创建标题和摘要">创建标题和摘要</h2>
<p>先从标题开始。我们将其居中展示，并用 <code><span class="typ-strong">*星号*</span></code> 包围转为粗体：</p>
<original>
Now, let's add a title and an abstract. We'll start with the title. We center
align it and increase its font weight by enclosing it in \`[*stars*]\`.
</original>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">,</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">17pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-strong">*A fluid dynamic model
  for glacier flow*</span>
<span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f8ac0d06ed8b0298625abebed28845d9.png" alt="Preview" /></div></div>
<p>看起来没问题。我们就地用到了 <code>text</code> 函数来覆盖先前的 text set rule。<br/>接下来添加作者列表。这篇论文是我们和导师们一起写的，所以我们加上自己和导师的名字。</p>
<original>
This looks right. We used the \`text\` function to override the previous text
set rule locally, increasing the size to 17pt for the function's argument. Let's
also add the author list: Since we are writing this paper together with our
supervisor, we'll add our own and their name.
</original>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>
    Therese Tungsten <span class="typ-escape">\\</span>
    Artos Institute <span class="typ-escape">\\</span>
    <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;mailto:tung@artos.edu&quot;</span><span class="typ-punct">)</span>
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>
    Dr. John Doe <span class="typ-escape">\\</span>
    Artos Institute <span class="typ-escape">\\</span>
    <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;mailto:doe@artos.edu&quot;</span><span class="typ-punct">)</span>
  <span class="typ-punct">]</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4a04b2384325b7dcafbe5acd853b633c.png" alt="Preview" /></div></div>
<p>这两个包含作者的块是并排排列的，这一布局方式用 <a href="/docs/reference/layout/grid/" title="\`grid\`"><code>grid</code></a> 来实现。借助 grid，我们可以设置每一列的大小，并控制哪些列该放哪些内容。<code>columns</code> 参数接受一个 <a href="/docs/reference/layout/relative/">相对长度</a> 或者 <a href="/docs/reference/layout/fraction/">分数</a>（fraction）类型的参数。在这个例子中，我们传入了两个相等的分数值，使它将空闲区域分割为两个同等大小的列。<br/>随后我们向 grid 函数传入了两个内容参数，第一个是我们自己的具体信息，第二个是导师的。我们再次用到了 <code>align</code> 函数来居中列的内容。grid 函数接受任意多的内容参数，它会根据需要自动新增行，你也可以用 <code>rows</code> 参数手动设置行的大小。</p>
<original>
The two author blocks are laid out next to each other. We use the [\`grid\`]
function to create this layout. With a grid, we can control exactly how large
each column is and which content goes into which cell. The \`columns\` argument
takes an array of [relative lengths]($relative) or [fractions]($fraction). In
this case, we passed it two equal fractional sizes, telling it to split the
available space into two equal columns. We then passed two content arguments to
the grid function. The first with our own details, and the second with our
supervisors'. We again use the \`align\` function to center the content within the
column. The grid takes an arbitrary number of content arguments specifying the
cells. Rows are added automatically, but they can also be manually sized with
the \`rows\` argument.
</original>
<p>现在我们来添加一个摘要。记住，该会议希望摘要是居中展示的，不对齐。</p>
<original>
Now, let's add the abstract. Remember that the conference wants the abstract to
be set ragged and centered.
</original>
<div class="previewed-code"><pre><code><span class="typ-escape">...</span>

<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
  <span class="typ-strong">*Abstract*</span> <span class="typ-escape">\\</span>
  <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/5d688b12e7612d93d68d3932da105fda.png" alt="Preview" /></div></div>
<p>很好！注意到一点，我们在 <code>align</code> 函数的内容参数中用到了一个 set rule 来取消对摘要的对齐。即时是在第一个 set rule 之后指定的，它并不会影响到文档的剩余内容，这是因为内容块会为样式划清范围，内容块里的任何设置都只会影响其本身的内容。</p>
<original>
Well done! One notable thing is that we used a set rule within the content
argument of \`align\` to turn off justification for the abstract. This does not
affect the remainder of the document even though it was specified after the
first set rule because content blocks _scope_ styling. Anything set within a
content block will only affect the content within that block.
</original>
<p>另外有一个微调是将论文标题存储在一个变量里，这样我们就不需要在页眉和文档标题中反复输入了。我们可以通过 <code><span class="typ-key">let</span></code> 关键字实现这一点。</p>
<original>
Another tweak could be to save the paper title in a variable, so that we do not
have to type it twice, for header and title. We can do that with the \`{let}\`
keyword:
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> title <span class="typ-op">=</span> <span class="typ-punct">[</span>
  A fluid dynamic model
  for glacier flow
<span class="typ-punct">]</span>

<span class="typ-escape">...</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  header<span class="typ-punct">:</span> <span class="typ-func">align</span><span class="typ-punct">(</span>
    right <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
    title
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-op">..</span><span class="typ-punct">.</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">,</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">17pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-strong">*<span class="typ-pol">#</span><span class="typ-pol">title</span>*</span>
<span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-escape">...</span>

</code></pre><div class="preview"><img src="/docs/assets/5f56a62817698dc44d4423054390c5c6.png" alt="Preview" /></div></div>
<p>将内容赋值给 <code>title</code> 变量后，我们就可以在函数和 markup 中（以 <code>#</code> 开头，类似于函数调用）使用了。这样，如果我们想换一个标题，就只需要在一处进行修改。</p>
<original>
After we bound the content to the \`title\` variable, we can use it in functions
and also within markup (prefixed by \`#\`, like functions). This way, if we decide
on another title, we can easily change it in one place.
</original>
<h2 id="添加分栏和标题">添加分栏和标题</h2>
<p>很不幸，上面的论文看起来很像是一道铅墙。要解决这一点，我们需要向文档添加一些标题，然后将论文切换为两栏布局。<a href="/docs/reference/layout/columns/" title="\`columns\`"><code>columns</code></a> 函数接受一个数字参数和一个内容参数，它将内容排布到指定数量的栏目里。由于我们想要让摘要之后的所有内容都排在两个栏目里，我们需要将这个 column 函数应用到整个文档。</p>
<original>
The paper above unfortunately looks like a wall of lead. To fix that, let's add
some headings and switch our paper to a two-column layout. The [\`columns\`]
function takes a number and content, and layouts the content into the specified
number of columns. Since we want everything after the abstract to be in two
columns, we need to apply the column function to our whole document.
</original>
<p>与其将整篇文档包围在一个巨大的函数调用里，不如用一个控制“一切”的 show rule 来实现。要编写出这样一个 show rule，只需在 show 关键字后边直接加上冒号和函数。在这里我们把该函数的参数叫做 <code>rule</code>，当然你可以选择其他名字。这个函数可以对内容进行任何修改，在我们的例子中，它将内容传入到了一个 <code>columns</code> 函数中。</p>
<original>
Instead of wrapping the whole document in a giant function call, we can use an
"everything" show rule. To write such a show rule, put a colon directly behind
the show keyword and then provide a function. This function is given the rest of
the document as a parameter. We have called the parameter \`rest\` here, but you
are free to choose any name. The function can then do anything with this
content. In our case, it passes it on to the \`columns\` function.
</original>
<div class="previewed-code"><pre><code><span class="typ-escape">...</span>

<span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> rest <span class="typ-op">=&gt;</span> <span class="typ-func">columns</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> rest<span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">300</span><span class="typ-punct">)</span>

<span class="typ-heading">= Related Work</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">200</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a06a39abf64093565e4691ef1384a476.png" alt="Preview" /></div></div>
<p>现在只有一件事情要做：为标题设置样式。我们需要将它们居中，并采用小型大写字母（small capitals）展示。由于 <code>heading</code> 函数并没有提供任何相关的功能，我们需要自行编写标题的 show rule。</p>
<original>
Now there is only one thing left to do: Style our headings. We need to make them
centered and use small capitals. Because the \`heading\` function does not offer
a way to set any of that, we need to write our own heading show rule.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">13pt</span><span class="typ-punct">,</span> weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span><span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span><span class="typ-func">smallcaps</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/c0f1d977a6541e17bdcdb635ada3aad2.png" alt="Preview" /></div></div>
<p>看起来真不错！<br/>我们用到了一个控制所有标题的 show rule，给它了一个将标题作为参数传递的函数。该参数可以被直接当作文本内容使用，但它还附带了一些数据，包括 <code>title</code>、<code>numbers</code> 和 <code>level</code>，我们可以利用这些数据来创建我们的自定义外观。这里，我们将标题居中显示，由于标题默认是粗体，随后我们将字重设定为 <code><span class="typ-str">&quot;regular&quot;</span></code>，再用 <a href="/docs/reference/text/smallcaps/" title="\`smallcaps\`"><code>smallcaps</code></a> 函数来以小型大写字母渲染标题内容。</p>
<original>
This looks great! We used a show rule that applies to all headings. We give it a
function that gets passed the heading as a parameter. That parameter can be used
as content but it also has some fields like \`title\`, \`numbers\`, and \`level\` from
which we can compose a custom look. Here, we are center-aligning, setting the
font weight to \`{"regular"}\` because headings are bold by default, and use the
[\`smallcaps\`] function to render the heading's title in small capitals.
</original>
<p>现在唯一的问题是，所有的标题都变得一样了。Motivation 和 Problem Statement 小节应该是行内的斜体标题，但现在它们和当前大节的标题一样了。我们可以在我们定义的 set rule 上面加上一个 <code>where</code> 选择器来解决：这是一个 headings上的<a href="/docs/reference/scripting/#methods">方法</a>（其他元素上也有），在此可用来根据层级选择标题。我们可以用它来区分大节和小节的标题。</p>
<original>
The only remaining problem is that all headings look the same now. The
"Motivation" and "Problem Statement" subsections ought to be italic run in
headers, but right now, they look indistinguishable from the section headings. We
can fix that by using a \`where\` selector on our set rule: This is a
[method]($scripting/#methods) we can call on headings (and other
elements) that allows us to filter them by their level. We can use it to
differentiate between section and subsection headings:
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
  level<span class="typ-punct">:</span> <span class="typ-num">1</span>
<span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-func">block</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">13pt</span><span class="typ-punct">,</span> weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span><span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">smallcaps</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">show</span> heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
  level<span class="typ-punct">:</span> <span class="typ-num">2</span>
<span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  size<span class="typ-punct">:</span> <span class="typ-num">11pt</span><span class="typ-punct">,</span>
  weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span><span class="typ-punct">,</span>
  style<span class="typ-punct">:</span> <span class="typ-str">&quot;italic&quot;</span><span class="typ-punct">,</span>
  it<span class="typ-punct">.</span>body <span class="typ-op">+</span> <span class="typ-punct">[</span>.<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b9b8c32d0aa9ddfd2e5177bc4e6a52c.png" alt="Preview" /></div></div>
<p>不错！我们编写了两个 show rules，它们选择性地作用于第一级和第二级的标题。我们用到了 <code>where</code> 选择器来根据层级筛选目标标题，然后将小节的标题设为行内渲染，还在它的最后加上了一个点（period）。</p>
<original>
This looks great! We wrote two show rules that each selectively apply to the
first and second level headings. We used a \`where\` selector to filter the
headings by their level. We then rendered the subsection headings as run-ins. We
also automatically add a period to the end of the subsection headings.
</original>
<p>我们来回顾一下会议的样式标准：</p>
<ul>
<li>文本应当是 11pt 的衬线字体 ✓</li>
<li>标题应当是 17pt 的粗体 ✓</li>
<li>论文包含单栏的摘要和两栏的正文 ✓</li>
<li>摘要应该居中 ✓</li>
<li>正文应该对齐 ✓</li>
<li>一级标题大小应为 13pt，居中，且用小型大写字母展示 ✓</li>
<li>二级标题应当在行内，斜体，且与正文字号相同 ✓</li>
<li>页面大小遵从 US letter 标准，页脚的中心位置标页数，每一页的右上角应包含论文标题 ✓</li>
</ul>
<original>
Let's review the conference's style guide:
- The font should be an 11pt serif font ✓
- The title should be in 17pt and bold ✓
- The paper contains a single-column abstract and two-column main text ✓
- The abstract should be centered ✓
- The main text should be justified ✓
- First level section headings should be centered, rendered in small caps and in
  13pt ✓
- Second level headings are run-ins, italicized and have the same size as the
  body text ✓
- Finally, the pages should be US letter sized, numbered in the center and the
  top right corner of each page should contain the title of the paper ✓
</original>
<p>我们现在已经遵从了所有样式规则，可以向会议提交我们的论文了！论文的最终效果是这样的：</p>
<original>
We are now in compliance with all of these styles and can submit the paper to
the conference! The finished paper looks like this:
</original>
<p><img
  src="/docs/assets/3-advanced-paper.png"
  alt="The finished paper"
  style="box-shadow: 0 4px 12px rgb(89 85 101 / 20%); width: 500px; max-width: 100%; display: block; margin: 24px auto;"
></p>
<h2 id="回顾">回顾</h2>
<p>在本章中，你学到了如何创建页眉和页脚、如何通过作用域来就地覆盖样式、如何使用 <a href="/docs/reference/layout/grid/" title="\`grid\`"><code>grid</code></a> 函数创建更复杂的布局以及如何为单个函数或整个文档编写 show rule。同时，你还了解到如何使用 <a href="/docs/reference/styling/#show-rules"><code>where</code> 选择器</a> 来根据层级筛选标题。</p>
<original>
You have now learned how to create headers and footers, how to use functions and
scopes to locally override styles, how to create more complex layouts with the
[\`grid\`] function and how to write show rules for individual functions, and the
whole document. You also learned how to use the
[\`where\` selector]($styling/#show-rules) to filter the headings by their level.
</original>
<p>论文大获成功！你在会议中遇到了许多志同道合的研究人员，并计划了一个新的项目，准备下一年在同一地点发表。你仍需要根据这个风格规则来编写论文。你会不会想要为你自己和团队编写一个可以节省时间的模板呢？</p>
<original>
The paper was a great success! You've met a lot of like-minded researchers at
the conference and are planning a project which you hope to publish at the same
venue next year. You'll need to write a new paper using the same style guide
though, so maybe now you want to create a time-saving template for you and your
team?
</original>
<p>在下一章里，我们会了解如何创建可以在不同文档中复用的模板。这是一个更高阶的议题，所以如果现在你没有精力看的话，可以以后有时间再来看看。</p>
<original>
In the next section, we will learn how to create templates that can be reused in
multiple documents. This is a more advanced topic, so feel free to come back
to it later if you don't feel up to it right now.
</original>`},children:[]},{route:"/docs/tutorial/making-a-template/",title:"制作模板",description:"Typst's tutorial.",part:null,outline:[{id:"玩具模板",name:"玩具模板",children:[]},{id:"嵌入-set-rules-和-show-rules",name:"嵌入 Set Rules 和 Show Rules",children:[]},{id:"带有具名参数的模板",name:"带有具名参数的模板",children:[]},{id:"单文件",name:"单文件",children:[]},{id:"回顾",name:"回顾",children:[]}],body:{kind:"html",content:`<h1>制作模板</h1>
<p>在本教程的前三章，你了解了如何用 Typst 写出一篇文档、添加基础的样式以及根据出版样式要求去深度定制文档的外观。在上一章里你所编写的论文非常成功，有人让你为同一个会议再接着写一篇文章。这次，你还想用上一章里你定义样式，希望将它变为可复用的模板。在本章中，你会了解如何为你和你的团队写出仅需一个 show rule 即可调用的模板。让我们开始吧！</p>
<original>
In the previous three chapters of this tutorial, you have learned how to write a
document in Typst, apply basic styles, and customize its appearance in-depth to
comply with a publisher's style guide. Because the paper you wrote in the
previous chapter was a tremendous success, you have been asked to write a
follow-up article for the same conference. This time, you want to take the style
you created in the previous chapter and turn it into a reusable template. In
this chapter you will learn how to create a template that you and your team can
use with just one show rule. Let's get started!
</original>
<h2 id="玩具模板">玩具模板</h2>
<p>在 Typst 中，模板是一种可包含整个文档的函数。要想了解如何写出这样一个函数，我们需要先回顾一下函数该怎么写。既然函数可以做几乎任何事情，为什么不来点奇思妙想呢？请看：</p>
<original>
In Typst, templates are functions in which you can wrap your whole document. To
learn how to do that, let's first review how to write your very own functions.
They can do anything you want them to, so why not go a bit crazy?
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">amazed</span><span class="typ-punct">(</span>term<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">box</span><span class="typ-punct">[</span>✨ <span class="typ-pol">#</span><span class="typ-pol">term</span> ✨<span class="typ-punct">]</span>

You are <span class="typ-func">#</span><span class="typ-func">amazed</span><span class="typ-punct">[</span>beautiful<span class="typ-punct">]</span>!
</code></pre><div class="preview"><img src="/docs/assets/d2946632b3ea51ce07f64a512cd65779.png" alt="Preview" /></div></div>
<p>这个函数接受单一的参数 <code>term</code>，返回一个用星星包围 <code>term</code> 的内容块。我们把结果整体放在一个 box 里，这样，这个在这里令我们啧啧称奇的东西（<code>term</code> 参数的内容）就不会因为换行而与星星分开了。</p>
<original>
This function takes a single argument, \`term\`, and returns a content block with
the \`term\` surrounded by sparkles. We also put the whole thing in a box so that
the term we are amazed by cannot be separated from its sparkles by a line break.
</original>
<p>许多 Typst 中的函数具有可选的具名参数，我们写的函数也可以带这样的参数。让我们给函数加一个可用来选文字颜色的参数，并给予一个默认的颜色用于它缺省的情况。</p>
<original>
Many functions that come with Typst have optional named parameters. Our
functions can also have them. Let's add a parameter to our function that lets us
choose the color of the text. We need to provide a default color in case the
parameter isn't given.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">amazed</span><span class="typ-punct">(</span>term<span class="typ-punct">,</span> color<span class="typ-punct">:</span> blue<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span>color<span class="typ-punct">,</span> <span class="typ-func">box</span><span class="typ-punct">[</span>✨ <span class="typ-pol">#</span><span class="typ-pol">term</span> ✨<span class="typ-punct">]</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>

You are <span class="typ-func">#</span><span class="typ-func">amazed</span><span class="typ-punct">[</span>beautiful<span class="typ-punct">]</span>!
I am <span class="typ-func">#</span><span class="typ-func">amazed</span><span class="typ-punct">(</span>color<span class="typ-punct">:</span> purple<span class="typ-punct">)</span><span class="typ-punct">[</span>amazed<span class="typ-punct">]</span>!
</code></pre><div class="preview"><img src="/docs/assets/7ca8ccbf8f2da64cbfdfc22dce5b2810.png" alt="Preview" /></div></div>
<p>现在，向一个全局 show rule 中传入我们编写的函数，就可以使模板正常工作了。现在用我们写的 <code>amazed</code> 函数来试试。</p>
<original>
Templates now work by using an "everything" show rule that applies the custom
function to our whole document. Let's do that with our \`amazed\` function.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> <span class="typ-func">amazed</span>
I choose to focus on the good
in my life and let go of any
negative thoughts or beliefs.
In fact, I am amazing!
</code></pre><div class="preview"><img src="/docs/assets/ff68975a48667efcf1d5fee0a23f94d5.png" alt="Preview" /></div></div>
<p>这样，整个文档都会被传入到 <code>amazed</code> 函数中，这与将所有内容用函数包含是一样的效果。这个函数看起来并不是很有用，但如果我们与 set rules 和具名参数相结合，它也可以变得非常强力。</p>
<original>
Our whole document will now be passed to the \`amazed\` function, as if we
wrapped it around it. This is not especially useful with this particular
function, but when combined with set rules and named arguments, it can be very
powerful.
</original>
<h2 id="嵌入-set-rules-和-show-rules">嵌入 set rules 和 show rules</h2>
<p>要向模板添加 set 和 show rules，我们可以在函数中的内容块里调用 <code>set</code> 和 <code>show</code>，然后将文档放在里面。</p>
<original>
To apply some set and show rules to our template, we can use \`set\` and \`show\`
within a content block in our function and then insert the document into
that content block.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">template</span><span class="typ-punct">(</span>doc<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-str">&quot;something cool&quot;</span><span class="typ-punct">:</span> <span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
  <span class="typ-pol">#</span><span class="typ-pol">doc</span>
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> <span class="typ-func">template</span>
I am learning something cool today.
It&#39;s going great so far!
</code></pre><div class="preview"><img src="/docs/assets/674dee91610a81756b61576d4268b954.png" alt="Preview" /></div></div>
<p>就像我们在前面的章节里看到的那样，set rules 会作用于当前内容块里的所有内容。由于这个全局 show rule 将我们的整个文档传给了 <code>template</code> 函数，这里针对文本的 set rule 和针对字符串的 show rule 会作用于整个文章。据此，我们可以创建一个模板来复现我们上一章里论文所用的正文样式。</p>
<original>
Just like we already discovered in the previous chapter, set rules will apply to
everything within their content block. Since the everything show rule passes our
whole document to the \`template\` function, the text set rule and string show
rule in our template will apply to the whole document. Let's use this knowledge
to create a template that reproduces the body style of the paper we wrote in the
previous chapter.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">conf</span><span class="typ-punct">(</span>title<span class="typ-punct">,</span> doc<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
    paper<span class="typ-punct">:</span> <span class="typ-str">&quot;us-letter&quot;</span><span class="typ-punct">,</span>
    header<span class="typ-punct">:</span> <span class="typ-func">align</span><span class="typ-punct">(</span>
      right <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
      title
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-op">..</span><span class="typ-punct">.</span>
  <span class="typ-punct">)</span>
  <span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
  <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
    font<span class="typ-punct">:</span> <span class="typ-str">&quot;Libertinus Serif&quot;</span><span class="typ-punct">,</span>
    size<span class="typ-punct">:</span> <span class="typ-num">11pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>

  <span class="typ-comment">// Heading show rules.</span>
  ...

  <span class="typ-func">columns</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> doc<span class="typ-punct">)</span>
<span class="typ-punct">}</span>

<span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> doc <span class="typ-op">=&gt;</span> <span class="typ-func">conf</span><span class="typ-punct">(</span>
  <span class="typ-punct">[</span>Paper title<span class="typ-punct">]</span><span class="typ-punct">,</span>
  doc<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">90</span><span class="typ-punct">)</span>

<span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/f1fe466968fef117f971b31380a87d9d.png" alt="Preview" /></div></div>
<p>我们从上一章里复制粘贴了大部分的代码。唯一的两个区别是，这次我们把所有内容都包围在了 <code>conf</code> 函数中，并直接在 <code>doc</code> 参数上调用了分栏函数，因为它已经包含了文档的内容。此外，我们还用到了一个花括号包围的代码块而非内容块。通过这种方式，我们不再需要在每一个 rule 和函数调用前加 <code>#</code> 了，不过我们也不能再直接在里边写 markup 了。</p>
<original>
We copy-pasted most of that code from the previous chapter. The only two
differences are that we wrapped everything in the function \`conf\` and are
calling the columns function directly on the \`doc\` argument as it already
contains the content of the document. Moreover, we used a curly-braced code
block instead of a content block. This way, we don't need to prefix all set
rules and function calls with a \`#\`. In exchange, we cannot write markup
directly into it anymore.
</original>
<p>另外注意这个标题是从哪里来的：我们先前将它放在了一个变量里。现在我们将所需标题放在了模板函数参数的第一个的位置，因此我们应该在调用模板函数的 show rule 里面填入它。</p>
<original>
Also note where the title comes from: We previously had it inside of a variable.
Now, we are receiving it as the first parameter of the template function.
Thus, we must specify it in the show rule where we call the template.
</original>
<h2 id="带有具名参数的模板">带有具名参数的模板</h2>
<p>上一章的论文中还包含了一个大标题和一个作者列表，我们现在将它们加到模板里。除了标题外，我们还想要让模板接受一组作者名称和隶属关系以及一个论文摘要。为了使调用时更清晰，我们将它们定义为具名参数：</p>
<original>
Our paper in the previous chapter had a title and an author list. Let's add these
things to our template. In addition to the title, we want our template to accept
a list of authors with their affiliations and the paper's abstract. To keep
things readable, we'll add those as named arguments. In the end, we want it to
work like this:
</original>
<pre><code><span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> doc <span class="typ-op">=&gt;</span> <span class="typ-func">conf</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Towards Improved Modelling<span class="typ-punct">]</span><span class="typ-punct">,</span>
  authors<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    <span class="typ-punct">(</span>
      name<span class="typ-punct">:</span> <span class="typ-str">&quot;Theresa Tungsten&quot;</span><span class="typ-punct">,</span>
      affiliation<span class="typ-punct">:</span> <span class="typ-str">&quot;Artos Institute&quot;</span><span class="typ-punct">,</span>
      email<span class="typ-punct">:</span> <span class="typ-str">&quot;tung@artos.edu&quot;</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">(</span>
      name<span class="typ-punct">:</span> <span class="typ-str">&quot;Eugene Deklan&quot;</span><span class="typ-punct">,</span>
      affiliation<span class="typ-punct">:</span> <span class="typ-str">&quot;Honduras State&quot;</span><span class="typ-punct">,</span>
      email<span class="typ-punct">:</span> <span class="typ-str">&quot;e.deklan@hstate.hn&quot;</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  abstract<span class="typ-punct">:</span> <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  doc<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-escape">...</span>
</code></pre>
<p>我们现在开始写这个函数。首先，我们为 <code>title</code> 参数添加一个默认值，这样我们在调用模板的时候也可以不带标题。我们还为具名的 <code>authors</code> 和 <code>abstract</code> 参数添加了空的默认值。然后，我们从上一章将生成标题、摘要和作者表的相关代码复制到模板里，替换掉那些固定的内容。</p>
<original>
Let's build this new template function. First, we add a default value to the
\`title\` argument. This way, we can call the template without specifying a title.
We also add the named \`authors\` and \`abstract\` parameters with empty defaults.
Next, we copy the code that generates title, abstract and authors from the
previous chapter into the template, replacing the fixed details with the
parameters.
</original>
<p>新的 <code>authors</code> 参数接受一个 <a href="/docs/reference/foundations/dictionary/">字典</a> 数组，其中的字典具有 <code>name</code>、<code>affiliation</code> 和 <code>email</code> 键。由于作者的数量是任意的，我们需要动态地推断作者列表是需要一栏两栏还是三栏。我们先用 <code>authors</code> 数组的 <a href="/docs/reference/foundations/array/#definitions-len"><code>.len()</code></a> 方法来获取作者的数量，然后将其与 3 之间的最小值（即做计算 min(count, 3)）设为最终的列数，这样栏数就不会超过三。如果作者数量超过三个，会自动另起一行。我们还向 <code>grid</code> 函数传入了一个 <code>row-gutter</code> 参数，这样行与行之间就不至于过于紧凑。要从字典中取出作者的各项数据，我们用到了 <a href="/docs/reference/scripting/#fields">字段访问语法</a>。</p>
<original>
The new \`authors\` parameter expects an [array] of [dictionaries]($dictionary)
with the keys \`name\`, \`affiliation\` and \`email\`. Because we can have an
arbitrary number of authors, we dynamically determine if we need one, two or
three columns for the author list. First, we determine the number of authors
using the [\`.len()\`]($array.len) method on the \`authors\` array. Then, we set the
number of columns as the minimum of this count and three, so that we never
create more than three columns. If there are more than three authors, a new row
will be inserted instead. For this purpose, we have also added a \`row-gutter\`
parameter to the \`grid\` function. Otherwise, the rows would be too close
together. To extract the details about the authors from the dictionary, we use
the [field access syntax]($scripting/#fields).
</original>
<p>我们仍需要为每位作者向 grid 传递参数，这时数组（array）的 <a href="/docs/reference/foundations/array/#definitions-map"><code>map</code> 方法</a>正好能派上用场。它接受一个函数，然后会用数组的每一项作为参数调用一遍该函数。我们向 map 传递一个格式化每位作者的详细信息并返回一组内容值的函数。现在得到了一组我们想传入 grid 参数（用到 <a href="/docs/reference/foundations/arguments/"><code>spread</code> 操作符</a>）的值。<code>spread</code> 操作符接受一个数组，它将该数组中的每一项分别传入函数参数的对应位置。</p>
<original>
We still have to provide an argument to the grid for each author: Here is where
the array's [\`map\` method]($array.map) comes in handy. It takes a function as an
argument that gets called with each item of the array. We pass it a function
that formats the details for each author and returns a new array containing
content values. We've now got one array of values that we'd like to use as
multiple arguments for the grid. We can do that by using the
[\`spread\` operator]($arguments). It takes an array and applies each of its items
as a separate argument to the function.
</original>
<p>我们编写的结果是这样的：</p>
<original>
The resulting template function looks like this:
</original>
<pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">conf</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
  authors<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  abstract<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  doc<span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-comment">// Set and show rules from before.</span>
  ...

  <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">17pt</span><span class="typ-punct">,</span> title<span class="typ-punct">)</span>

  <span class="typ-key">let</span> count <span class="typ-op">=</span> authors<span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  <span class="typ-key">let</span> ncols <span class="typ-op">=</span> calc<span class="typ-punct">.</span><span class="typ-func">min</span><span class="typ-punct">(</span>count<span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
  <span class="typ-func">grid</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">*</span> ncols<span class="typ-punct">,</span>
    row-gutter<span class="typ-punct">:</span> <span class="typ-num">24pt</span><span class="typ-punct">,</span>
    <span class="typ-op">..</span>authors<span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>author <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
      <span class="typ-pol">#</span><span class="typ-pol">author</span><span class="typ-punct">.</span><span class="typ-pol">name</span> <span class="typ-escape">\\</span>
      <span class="typ-pol">#</span><span class="typ-pol">author</span><span class="typ-punct">.</span><span class="typ-pol">affiliation</span> <span class="typ-escape">\\</span>
      <span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;mailto:&quot;</span> <span class="typ-op">+</span> author<span class="typ-punct">.</span>email<span class="typ-punct">)</span>
    <span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>

  <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    <span class="typ-strong">*Abstract*</span> <span class="typ-escape">\\</span>
    <span class="typ-pol">#</span><span class="typ-pol">abstract</span>
  <span class="typ-punct">]</span>

  <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>left<span class="typ-punct">)</span>
  <span class="typ-func">columns</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> doc<span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre>
<h2 id="单文件">单文件</h2>
<p>大多数情况下，模板是在一个单独的文件里编写的，使用时在文档中导入。这样，你所编写的主文件就不会变乱，同时也方便了模板的调用。我们在文件面板中点击加号，创建一个新的文本文档，命名为 <code>conf.typ</code>。然后将 <code>conf</code> 函数的定义移动到这个新建的文件里。现在你可以通过在 show rule 前面加上一句导入语句（<code>{import} 路径: 你想要导入函数的名称</code>）来使用它。</p>
<original>
Most of the time, a template is specified in a different file and then imported
into the document. This way, the main file you write in is kept clutter free and
your template is easily reused. Create a new text file in the file panel by
clicking the plus button and name it \`conf.typ\`. Move the \`conf\` function
definition inside of that new file. Now you can access it from your main file by
adding an import before the show rule. Specify the path of the file between the
\`{import}\` keyword and a colon, then name the function that you
want to import.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;conf.typ&quot;</span><span class="typ-punct">:</span> conf
<span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> doc <span class="typ-op">=&gt;</span> <span class="typ-func">conf</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>
    Towards Improved Modelling
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
  authors<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    <span class="typ-punct">(</span>
      name<span class="typ-punct">:</span> <span class="typ-str">&quot;Theresa Tungsten&quot;</span><span class="typ-punct">,</span>
      affiliation<span class="typ-punct">:</span> <span class="typ-str">&quot;Artos Institute&quot;</span><span class="typ-punct">,</span>
      email<span class="typ-punct">:</span> <span class="typ-str">&quot;tung@artos.edu&quot;</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">(</span>
      name<span class="typ-punct">:</span> <span class="typ-str">&quot;Eugene Deklan&quot;</span><span class="typ-punct">,</span>
      affiliation<span class="typ-punct">:</span> <span class="typ-str">&quot;Honduras State&quot;</span><span class="typ-punct">,</span>
      email<span class="typ-punct">:</span> <span class="typ-str">&quot;e.deklan@hstate.hn&quot;</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  abstract<span class="typ-punct">:</span> <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  doc<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">90</span><span class="typ-punct">)</span>

<span class="typ-heading">== Motivation</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">140</span><span class="typ-punct">)</span>

<span class="typ-heading">== Problem Statement</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">50</span><span class="typ-punct">)</span>

<span class="typ-heading">= Related Work</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">200</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9ce983640bf2e876c512d12c033fdfc7.png" alt="Preview" /></div></div>
<p>现在我们已经成功把一篇会议论文转成了可复用的模板！为什么不在 Typst 的<a href="https://forum.typst.app/">官方论坛</a> 或者 <a href="https://discord.gg/2uDybryKPe">Discord</a> 上分享一番呢？这样其他人也可以用到它了。</p>
<original>
We have now converted the conference paper into a reusable template for that
conference! Why not share it in the [Forum](https://forum.typst.app/) or on
[Typst's Discord server](https://discord.gg/2uDybryKPe) so that others can use
it too?
</original>
<h2 id="回顾">回顾</h2>
<p>恭喜，你已经读完了 Typst 的入门教程！在这一部分，你了解了如何自己定义函数，如何创建和应用（定义了可复用文档样式的）模板。你现在的所学已经十分深入了。现在你可以用 Typst 编写你自己的文档，然后分享给他人了。</p>
<original>
Congratulations, you have completed Typst's Tutorial! In this section, you have
learned how to define your own functions and how to create and apply templates
that define reusable document styles. You've made it far and learned a lot. You
can now use Typst to write your own documents and share them with others.
</original>
<p>我们目前仍然是一个非常年轻的项目，期待着任何反馈。如果你有任何问题或建议，或者你发现了 bug，请在 Typst 的 <a href="https://forum.typst.app/">论坛</a>)、<a href="https://discord.gg/2uDybryKPe">Discord</a> 或者 <a href="https://github.com/typst/typst/">GitHub</a>上告诉我们，或者你也可以通过 web app 中的反馈表进行反馈（可以在帮助菜单中找到）。</p>
<original>
We are still a super young project and are looking for feedback. If you have any
questions, suggestions or you found a bug, please let us know
in the [Forum](https://forum.typst.app/),
on our [Discord server](https://discord.gg/2uDybryKPe),
on [GitHub](https://github.com/typst/typst/),
or via the web app's feedback form (always available in the Help menu).
</original>
<p>所以你还在等什么呢？现在<a href="https://typst.app">注册</a>然后写点什么吧！</p>
<original>
So what are you waiting for? [Sign up](https://typst.app) and write something!
</original>`},children:[]}]},{route:"/docs/reference/",title:"参考",description:`The Typst reference is a systematic and comprehensive guide to the Typst
typesetting language.
`,part:null,outline:[{id:"语言",name:"语言",children:[]},{id:"函数",name:"函数",children:[]}],body:{kind:"html",content:`<h1>参考</h1>
<p>这里的参考文档，包含了对 Typst 所有的语法、概念、数据类型和函数的全面指导。如果你刚刚接触 Typst，我们建议你从<a href="/docs/tutorial/">入门教程</a>开始，稍后根据需要再回来看参考。</p>
<original>
This reference documentation is a comprehensive guide to all of Typst's syntax,
concepts, types, and functions. If you are completely new to Typst, we recommend
starting with the [tutorial] and then coming back to the reference to learn more
about Typst's features as you need them.
</original>
<h2 id="语言">语言</h2>
<p>该参考文档以 <a href="/docs/reference/syntax/">Typst 的语法概览</a>开头，包含利用 <a href="/docs/reference/scripting/">Typst 的脚本能力</a>来<a href="/docs/reference/styling/">风格化文档</a>的各种概念。</p>
<original>
The reference starts with a language part that gives an overview over
[Typst's syntax]($syntax) and contains information about concepts involved in
[styling documents,]($styling) using
[Typst's scripting capabilities.]($scripting)
</original>
<h2 id="函数">函数</h2>
<p>文档的第二部分包含了在文档中用来插入内容、设置样式、变换样式和定义布局的各种函数。每一个函数的条目中都带有对其用途的描述，参数列表以及具体使用例。</p>
<original>
The second part includes chapters on all functions used to insert, style, transform,
and layout content in Typst documents. Each function is documented with a
description of its purpose, a list of its parameters, and examples of how to use
it.
</original>
<p>最后一部分解释了用于操作和转换数据的 Typst 函数。和前面的章节一样，函数也都伴随有用途描述、参数列表和例子。</p>
<original>
The final part of the reference explains all functions that are used within
Typst's code mode to manipulate and transform data. Just as in the previous
part, each function is documented with a description of its purpose, a list of
its parameters, and examples of how to use it.
</original>`},children:[{route:"/docs/reference/syntax/",title:"语法",description:`A compact reference for Typst's syntax. Learn more about the language within
markup, math, and code mode.
`,part:"Language",outline:[{id:"句法模式",name:"句法模式",children:[]},{id:"markup-模式",name:"Markup 模式",children:[]},{id:"math-模式",name:"Math 模式",children:[]},{id:"code-模式",name:"Code 模式",children:[]},{id:"注释",name:"注释",children:[]},{id:"转义序列",name:"转义序列",children:[]},{id:"路径",name:"路径",children:[{id:"项目根目录",name:"项目根目录",children:[]},{id:"路径与包",name:"路径与包",children:[]}]}],body:{kind:"html",content:`<h1>语法</h1>
<p>Typst 是一门标记语言，这意味着你可以用一些简单语法来完成基础的布局操作。这种轻量的标记语法是用 set rules 与 show rules
来实现的，你可以用它们来轻松、灵活地定义文档的样式。而这一切都基于内部紧密集成的一种脚本语言，它提供了许多有用的内置函数，用户亦可以自行编写函数。</p>
<original>
Typst is a markup language. This means that you can use simple syntax to
accomplish common layout tasks. The lightweight markup syntax is complemented by
set and show rules, which let you style your document easily and automatically.
All this is backed by a tightly integrated scripting language with built-in and
user-defined functions.
</original>
<h2 id="句法模式">句法模式</h2>
<p>Typst 中存在三种句法模式：markup（标记）、math（数学）和 code（代码）。markup 模式是文档的默认句法模式，在 math 模式中可写数学公式，code
模式中可调用 Typst 的各种脚本特性。</p>
<original>
Typst has three syntactical modes: Markup, math, and code. Markup mode is the
default in a Typst document, math mode lets you write mathematical formulas, and
code mode lets you use Typst's scripting features.
</original>
<p>参考下表中的内容，你可以随时随地切换到特定的模式中：</p>
<original>
You can switch to a specific mode at any point by referring to the following
table:
</original>
<table><thead><tr><th>句法模式</th><th>语法</th><th>例子</th></tr></thead><tbody>
<tr><td>Code</td><td>在具体代码前加 <code>#</code></td><td><code>Number: <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">+</span> <span class="typ-num">2</span><span class="typ-punct">)</span></code></td></tr>
<tr><td>Math</td><td>用 <code><span class="typ-math-delim">$</span>..<span class="typ-math-delim">$</span></code> 包围式子</td><td><code><span class="typ-math-delim">$</span><span class="typ-escape">-</span>x<span class="typ-math-delim">$</span> is the opposite of <span class="typ-math-delim">$</span>x<span class="typ-math-delim">$</span></code></td></tr>
<tr><td>Markup</td><td>用 <code>[..]</code> 包围内容</td><td><code><span class="typ-key">let</span> name <span class="typ-op">=</span> <span class="typ-punct">[</span><span class="typ-strong">*Typst!*</span><span class="typ-punct">]</span></code></td></tr>
</tbody></table>
<p>用 <code>#</code> 进入 code 模式以后，只要没有切换回 markup 或者 math 模式，就不需要再使用任何井号。</p>
<original>
Once you have entered code mode with \`#\`, you don't need to use further hashes
unless you switched back to markup or math mode in between.
</original>
<h2 id="markup-模式">markup 模式</h2>
<p>Typst 为最常见的文档元素提供了内置的标记支持。这些语法大多数是对应函数的简写。下表中列出了所有可用的标记，并配有相关链接。这些链接指向的是了解相关语法用法的最佳参考。</p>
<original>
Typst provides built-in markup for the most common document elements. Most of
the syntax elements are just shortcuts for a corresponding function. The table
below lists all markup that is available and links to the best place to learn
more about their syntax and usage.
</original>
<table><thead><tr><th>名称</th><th>示例</th><th>参见</th></tr></thead><tbody>
<tr><td>分段</td><td>空行</td><td><a href="/docs/reference/model/parbreak/" title="\`parbreak\`"><code>parbreak</code></a></td></tr>
<tr><td>加粗强调</td><td><code><span class="typ-strong">*strong*</span></code></td><td><a href="/docs/reference/model/strong/" title="\`strong\`"><code>strong</code></a></td></tr>
<tr><td>斜体强调</td><td><code><span class="typ-emph">_emphasis_</span></code></td><td><a href="/docs/reference/model/emph/" title="\`emph\`"><code>emph</code></a></td></tr>
<tr><td>原始文本</td><td><code><span class="typ-raw">\`print(1)\`</span></code></td><td><a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a></td></tr>
<tr><td>链接</td><td><code><span class="typ-link">https://typst.app/</span></code></td><td><a href="/docs/reference/model/link/" title="\`link\`"><code>link</code></a></td></tr>
<tr><td>标签</td><td><code><span class="typ-label">&lt;intro&gt;</span></code></td><td><a href="/docs/reference/foundations/label/" title="\`label\`"><code>label</code></a></td></tr>
<tr><td>参考</td><td><code><span class="typ-ref">@intro</span></code></td><td><a href="/docs/reference/model/ref/" title="\`ref\`"><code>ref</code></a></td></tr>
<tr><td>标题</td><td><code><span class="typ-heading">= Heading</span></code></td><td><a href="/docs/reference/model/heading/" title="\`heading\`"><code>heading</code></a></td></tr>
<tr><td>无序列表</td><td><code><span class="typ-marker">-</span> item</code></td><td><a href="/docs/reference/model/list/" title="\`list\`"><code>list</code></a></td></tr>
<tr><td>有序列表</td><td><code><span class="typ-marker">+</span> item</code></td><td><a href="/docs/reference/model/enum/" title="\`enum\`"><code>enum</code></a></td></tr>
<tr><td>术语表</td><td><code><span class="typ-marker">/</span> <span class="typ-term">Term</span><span class="typ-punct">:</span> description</code></td><td><a href="/docs/reference/model/terms/" title="\`terms\`"><code>terms</code></a></td></tr>
<tr><td>数学公式</td><td><code><span class="typ-math-delim">$</span>x<span class="typ-math-op">^</span>2<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>换行</td><td><code><span class="typ-escape">\\</span></code></td><td><a href="/docs/reference/text/linebreak/" title="\`linebreak\`"><code>linebreak</code></a></td></tr>
<tr><td>智能引用</td><td><code>&#39;single&#39; or &quot;double&quot;</code></td><td><a href="/docs/reference/text/smartquote/" title="\`smartquote\`"><code>smartquote</code></a></td></tr>
<tr><td>符号简写</td><td><code><span class="typ-escape">~</span></code>, <code><span class="typ-escape">---</span></code></td><td><a href="/docs/reference/symbols/sym/">符号</a></td></tr>
<tr><td>代码表达式</td><td><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/scripting/#expressions">脚本编写</a></td></tr>
<tr><td>转义字符</td><td><code>Tweet at us <span class="typ-escape">\\#</span>ad</code></td><td><a href="#%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97">见下文</a></td></tr>
<tr><td>注释</td><td><code><span class="typ-comment">/* block */</span></code>, <code><span class="typ-comment">// line</span></code></td><td><a href="#%E6%B3%A8%E9%87%8A">见下文</a></td></tr>
</tbody></table>
<h2 id="math-模式">math 模式</h2>
<p>math 模式是一种用来排版数学公式的特殊标记模式，可通过将等式用 <code>$</code> 包围来进入，markup 和 code
模式中都可以这样用。如果 <code>$</code> 包围内容的开头和结尾都有至少一个空格，该公式会被排版到单独的块中，如果没有则为行内公式。math
模式下的特殊语法可参考下表：</p>
<original>
Math mode is a special markup mode that is used to typeset mathematical
formulas. It is entered by wrapping an equation in \`[$]\` characters. This works
both in markup and code. The equation will be typeset into its own block if it
starts and ends with at least one space (e.g. \`[$ x^2 $]\`). Inline math can be
produced by omitting the whitespace (e.g. \`[$x^2$]\`). An overview over the
syntax specific to math mode follows:
</original>
<table><thead><tr><th>名称</th><th>示例</th><th>参见</th></tr></thead><tbody>
<tr><td>行内公式</td><td><code><span class="typ-math-delim">$</span>x<span class="typ-math-op">^</span>2<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>块级公式</td><td><code><span class="typ-math-delim">$</span> x<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>下标</td><td><code><span class="typ-math-delim">$</span>x<span class="typ-math-op">_</span>1<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/attach/"><code>attach</code></a></td></tr>
<tr><td>上标</td><td><code><span class="typ-math-delim">$</span>x<span class="typ-math-op">^</span>2<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/attach/"><code>attach</code></a></td></tr>
<tr><td>分式</td><td><code><span class="typ-math-delim">$</span>1 + <span class="typ-punct">(</span>a+b<span class="typ-punct">)</span><span class="typ-math-op">/</span>5<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/frac/"><code>frac</code></a></td></tr>
<tr><td>换行</td><td><code><span class="typ-math-delim">$</span>x <span class="typ-escape">\\</span> y<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/text/linebreak/" title="\`linebreak\`"><code>linebreak</code></a></td></tr>
<tr><td>对齐点</td><td><code><span class="typ-math-delim">$</span>x <span class="typ-math-op">&amp;</span>= 2 <span class="typ-escape">\\</span> <span class="typ-math-op">&amp;</span>= 3<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>访问变量</td><td><code><span class="typ-math-delim">$</span><span class="typ-pol">#</span><span class="typ-pol">x</span><span class="typ-math-delim">$</span>, <span class="typ-math-delim">$</span><span class="typ-pol">pi</span><span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>访问字段</td><td><code><span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">r</span><span class="typ-punct">.</span><span class="typ-pol">long</span><span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/scripting/#fields">脚本编写</a></td></tr>
<tr><td>乘法</td><td><code><span class="typ-math-delim">$</span>x y<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>符号简写</td><td><code><span class="typ-math-delim">$</span><span class="typ-escape">-&gt;</span><span class="typ-math-delim">$</span></code>, <code><span class="typ-math-delim">$</span><span class="typ-escape">!=</span><span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/symbols/sym/">符号</a></td></tr>
<tr><td>文本</td><td><code><span class="typ-math-delim">$</span>a <span class="typ-str">&quot;is natural&quot;</span><span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>调用数学函数</td><td><code><span class="typ-math-delim">$</span><span class="typ-func">floor</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>代码表达式</td><td><code><span class="typ-math-delim">$</span><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/scripting/#expressions">脚本编写</a></td></tr>
<tr><td>转义</td><td><code><span class="typ-math-delim">$</span>x<span class="typ-escape">\\^</span>2<span class="typ-math-delim">$</span></code></td><td><a href="#%E8%BD%AC%E4%B9%89%E5%BA%8F%E5%88%97">见下文</a></td></tr>
<tr><td>注释</td><td><code><span class="typ-math-delim">$</span><span class="typ-comment">/* comment */</span><span class="typ-math-delim">$</span></code></td><td><a href="#%E6%B3%A8%E9%87%8A">见下文</a></td></tr>
</tbody></table>
<h2 id="code-模式">code 模式</h2>
<p>在具体的代码块和表达式中，新写的表达式可以不用带 <code>#</code>。有许多句法元素是表达式专有的。下标列出了 code 模式中可用的所有语法：</p>
<original>
Within code blocks and expressions, new expressions can start without a leading
\`#\` character. Many syntactic elements are specific to expressions. Below is
a table listing all syntax that is available in code mode:
</original>
<table><thead><tr><th>名称</th><th>示例</th><th>参见</th></tr></thead><tbody>
<tr><td>空值（None）</td><td><code><span class="typ-key">none</span></code></td><td><a href="/docs/reference/foundations/none/" title="\`none\`"><code>none</code></a></td></tr>
<tr><td>自动值（Auto）</td><td><code><span class="typ-key">auto</span></code></td><td><a href="/docs/reference/foundations/auto/" title="\`auto\`"><code>auto</code></a></td></tr>
<tr><td>布尔值</td><td><code><span class="typ-key">false</span></code>, <code><span class="typ-key">true</span></code></td><td><a href="/docs/reference/foundations/bool/" title="\`bool\`"><code>bool</code></a></td></tr>
<tr><td>整型</td><td><code><span class="typ-num">10</span></code>, <code><span class="typ-num">0xff</span></code></td><td><a href="/docs/reference/foundations/int/" title="\`int\`"><code>int</code></a></td></tr>
<tr><td>浮点数</td><td><code><span class="typ-num">3.14</span></code>, <code><span class="typ-num">1e5</span></code></td><td><a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a></td></tr>
<tr><td>长度</td><td><code><span class="typ-num">2pt</span></code>, <code><span class="typ-num">3mm</span></code>, <code><span class="typ-num">1em</span></code>, ..</td><td><a href="/docs/reference/layout/length/" title="\`length\`"><code>length</code></a></td></tr>
<tr><td>角度</td><td><code><span class="typ-num">90deg</span></code>, <code><span class="typ-num">1rad</span></code></td><td><a href="/docs/reference/layout/angle/" title="\`angle\`"><code>angle</code></a></td></tr>
<tr><td>分度</td><td><code><span class="typ-num">2fr</span></code></td><td><a href="/docs/reference/layout/fraction/" title="\`fraction\`"><code>fraction</code></a></td></tr>
<tr><td>比例</td><td><code><span class="typ-num">50%</span></code></td><td><a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a></td></tr>
<tr><td>字符串</td><td><code><span class="typ-str">&quot;hello&quot;</span></code></td><td><a href="/docs/reference/foundations/str/" title="\`str\`"><code>str</code></a></td></tr>
<tr><td>标签</td><td><code><span class="typ-label">&lt;intro&gt;</span></code></td><td><a href="/docs/reference/foundations/label/" title="\`label\`"><code>label</code></a></td></tr>
<tr><td>数学公式</td><td><code><span class="typ-math-delim">$</span>x<span class="typ-math-op">^</span>2<span class="typ-math-delim">$</span></code></td><td><a href="/docs/reference/math/">数学公式</a></td></tr>
<tr><td>原始文本</td><td><code><span class="typ-raw">\`print(1)\`</span></code></td><td><a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a></td></tr>
<tr><td>访问变量</td><td><code>x</code></td><td><a href="/docs/reference/scripting/#blocks">脚本编写</a></td></tr>
<tr><td>代码块</td><td><code><span class="typ-punct">{</span> <span class="typ-key">let</span> x <span class="typ-op">=</span> <span class="typ-num">1</span><span class="typ-punct">;</span> x <span class="typ-op">+</span> <span class="typ-num">2</span> <span class="typ-punct">}</span></code></td><td><a href="/docs/reference/scripting/#blocks">脚本编写</a></td></tr>
<tr><td>内容块</td><td><code><span class="typ-punct">[</span><span class="typ-strong">*Hello*</span><span class="typ-punct">]</span></code></td><td><a href="/docs/reference/scripting/#blocks">脚本编写</a></td></tr>
<tr><td>括号表达式</td><td><code><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">+</span> <span class="typ-num">2</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/scripting/#blocks">脚本编写</a></td></tr>
<tr><td>数组</td><td><code><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/foundations/array/">数组</a></td></tr>
<tr><td>字典</td><td><code><span class="typ-punct">(</span>a<span class="typ-punct">:</span> <span class="typ-str">&quot;hi&quot;</span><span class="typ-punct">,</span> b<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/foundations/dictionary/">字典</a></td></tr>
<tr><td>一元运算符</td><td><code><span class="typ-op">-</span>x</code></td><td><a href="/docs/reference/scripting/#operators">脚本编写</a></td></tr>
<tr><td>二元运算符</td><td><code>x <span class="typ-op">+</span> y</code></td><td><a href="/docs/reference/scripting/#operators">脚本编写</a></td></tr>
<tr><td>赋值</td><td><code>x <span class="typ-op">=</span> <span class="typ-num">1</span></code></td><td><a href="/docs/reference/scripting/#operators">脚本编写</a></td></tr>
<tr><td>字段访问</td><td><code>x<span class="typ-punct">.</span>y</code></td><td><a href="/docs/reference/scripting/#fields">脚本编写</a></td></tr>
<tr><td>方法调用</td><td><code>x<span class="typ-punct">.</span><span class="typ-func">flatten</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/scripting/#methods">脚本编写</a></td></tr>
<tr><td>函数调用</td><td><code><span class="typ-func">min</span><span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span></code></td><td><a href="/docs/reference/foundations/function/">函数</a></td></tr>
<tr><td>参数展开</td><td><code><span class="typ-func">min</span><span class="typ-punct">(</span><span class="typ-op">..</span>nums<span class="typ-punct">)</span></code></td><td><a href="/docs/reference/foundations/arguments/">参数</a></td></tr>
<tr><td>无名（unnamed）函数</td><td><code><span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> x <span class="typ-op">+</span> y</code></td><td><a href="/docs/reference/foundations/function/">函数</a></td></tr>
<tr><td>let 绑定</td><td><code><span class="typ-key">let</span> x <span class="typ-op">=</span> <span class="typ-num">1</span></code></td><td><a href="/docs/reference/scripting/#bindings">脚本编写</a></td></tr>
<tr><td>具名函数</td><td><code><span class="typ-key">let</span> <span class="typ-func">f</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-num">2</span> <span class="typ-op">*</span> x</code></td><td><a href="/docs/reference/foundations/function/">函数</a></td></tr>
<tr><td>set rule</td><td><code><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">14pt</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/styling/#set-rules">样式定义</a></td></tr>
<tr><td>set-if rule</td><td><code><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span> <span class="typ-key">if</span> .. </code></td><td><a href="/docs/reference/styling/#set-rules">样式定义</a></td></tr>
<tr><td>show-set rule</td><td><code><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span></code></td><td><a href="/docs/reference/styling/#show-rules">样式定义</a></td></tr>
<tr><td>带函数的 show rule</td><td><code><span class="typ-key">show</span> <span class="typ-func">raw</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></td><td><a href="/docs/reference/styling/#show-rules">样式定义</a></td></tr>
<tr><td>show-everything rule</td><td><code><span class="typ-key">show</span><span class="typ-punct">:</span> <span class="typ-func">template</span></code></td><td><a href="/docs/reference/styling/#show-rules">样式定义</a></td></tr>
<tr><td>上下文表达式</td><td><code><span class="typ-key">context</span> text<span class="typ-punct">.</span>lang</code></td><td><a href="/docs/reference/context/">上下文</a></td></tr>
<tr><td>条件</td><td><code><span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">1</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></td><td><a href="/docs/reference/scripting/#conditionals">脚本编写</a></td></tr>
<tr><td>for 循环</td><td><code><span class="typ-key">for</span> x <span class="typ-key">in</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></td><td><a href="/docs/reference/scripting/#loops">脚本编写</a></td></tr>
<tr><td>while 循环</td><td><code><span class="typ-key">while</span> x <span class="typ-op">&lt;</span> <span class="typ-num">10</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></td><td><a href="/docs/reference/scripting/#loops">脚本编写</a></td></tr>
<tr><td>循环控制语句</td><td><code><span class="typ-key">break</span>, <span class="typ-key">continue</span></code></td><td><a href="/docs/reference/scripting/#loops">脚本编写</a></td></tr>
<tr><td>函数返回</td><td><code><span class="typ-key">return</span> x</code></td><td><a href="/docs/reference/foundations/function/">函数</a></td></tr>
<tr><td>引入（include）模块</td><td><code><span class="typ-key">include</span> <span class="typ-str">&quot;bar.typ&quot;</span></code></td><td><a href="/docs/reference/scripting/#modules">脚本编写</a></td></tr>
<tr><td>导入（import）模块</td><td><code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span></code></td><td><a href="/docs/reference/scripting/#modules">脚本编写</a></td></tr>
<tr><td>从模块中导入项目</td><td><code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span><span class="typ-punct">:</span> a<span class="typ-punct">,</span> b<span class="typ-punct">,</span> c</code></td><td><a href="/docs/reference/scripting/#modules">脚本编写</a></td></tr>
<tr><td>注释</td><td><code><span class="typ-comment">/* block */</span></code>, <code><span class="typ-comment">// line</span></code></td><td><a href="#%E6%B3%A8%E9%87%8A">见下文</a></td></tr>
</tbody></table>
<h2 id="注释">注释</h2>
<p>Typst 会忽略掉注释，它不会在最终输出中显示。这在需要去掉旧版本或者添加注解的时候很有用。要注释单行，在行前面加上 <code>//</code>。</p>
<original>
Comments are ignored by Typst and will not be included in the output. This is
useful to exclude old versions or to add annotations. To comment out a single
line, start it with \`//\`:
</original>
<div class="previewed-code"><pre><code><span class="typ-comment">// our data barely supports</span>
<span class="typ-comment">// this claim</span>

We show with <span class="typ-math-delim">$</span>p &lt; 0.05<span class="typ-math-delim">$</span>
that the difference is
significant.
</code></pre><div class="preview"><img src="/docs/assets/e17e6ab7a0a6ea9540b862bc2bf395b6.png" alt="Preview" /></div></div>
<p>注释也可以用 <code>/*</code> 和 <code>*/</code> 包围。下面例子中的注释可以延伸数行：</p>
<original>
Comments can also be wrapped between \`/*\` and \`*/\`. In this case, the comment
can span over multiple lines:
</original>
<div class="previewed-code"><pre><code>Our study design is as follows:
<span class="typ-comment">/* Somebody write this up:
   - 1000 participants.
   - 2x2 data design. */</span>
</code></pre><div class="preview"><img src="/docs/assets/3de982097f9225b6c343fb26ba91407.png" alt="Preview" /></div></div>
<h2 id="转义序列">转义序列</h2>
<p>转义序列用于在 Typst 插入那些难以输入或者具有特殊含义的字符。要转义一个字符，在它前面加上一个反斜杠 <code>\\</code>。如需插入 Unicode codepoint，可用十六进制转义序列实现：<code><span class="typ-escape">\\u{1f600}</span></code>。这种转义序列写法在<a href="/docs/reference/foundations/str/">字符串</a>里同样适用。</p>
<original>
Escape sequences are used to insert special characters that are hard to type or
otherwise have special meaning in Typst. To escape a character, precede it with
a backslash. To insert any Unicode codepoint, you can write a hexadecimal escape
sequence: \`[\\u{1f600}]\`. The same kind of escape sequences also work in
[strings]($str).
</original>
<div class="previewed-code"><pre><code>I got an ice cream for
<span class="typ-escape">\\$</span>1.50! <span class="typ-escape">\\u{1f600}</span>
</code></pre><div class="preview"><img src="/docs/assets/3fd1477f1af860f40ea69f52d151c704.png" alt="Preview" /></div></div>
<h2 id="路径">路径</h2>
<p>Typst 中有许多特性需要借由文件路径来引用外部的资源，例如图片、typ 文件或者其他数据。路径以<a href="/docs/reference/foundations/str/">字符串</a>表示，分为两种：相对路径和绝对路径。</p>
<original>
Typst has various features that require a file path to reference external
resources such as images, Typst files, or data files. Paths are represented as
[strings]($str). There are two kinds of paths: Relative and absolute.
</original>
<ul>
<li><strong>相对路径</strong>从其所在文件的位置开始搜索<pre><code><span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;images/logo.png&quot;</span><span class="typ-punct">)</span>
</code></pre></li>
<li><strong>绝对路径</strong>从项目的 <em>根目录</em> 进行搜索，以 <code>/</code> 开头。<pre><code><span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;/assets/logo.png&quot;</span><span class="typ-punct">)</span>
</code></pre></li>
</ul>
<original>
- A **relative path** searches from the location of the Typst file where the
  feature is invoked. It is the default:
  \`\`\`typ
  #image("images/logo.png")
  \`\`\`
- An **absolute path** searches from the _root_ of the project. It starts with a
  leading \`/\`:
  \`\`\`typ
  #image("/assets/logo.png")
  \`\`\`
</original>
<h3 id="项目根目录">项目根目录</h3>
<p>默认情况下，项目根目录是主 Typst 文件的父级目录。出于安全考虑，不允许读取根目录以外的任何文件。</p>
<original>
By default, the project root is the parent directory of the main Typst file.
For security reasons, you cannot read any files outside of the root directory.
</original>
<p>如果你想自定义项目根目录，可以在命令行中用 <code>--root</code> 这个 flag 来指定。请务必确保主文件是包含在你定义的根目录中的。</p>
<original>
If you want to set a specific folder as the root of your project, you can use
the CLI's \`--root\` flag. Make sure that the main file is contained in the
folder's subtree!
</original>
<pre style="background-color:#ffffff;">
<span style="color:#4b69c6;">typst</span><span style="color:#000000;"> compile --root .. file.typ
</span></pre>
<p>在 web app 中，项目本身就是根目录，你可以随时读取其中的文件，无论它们是否在编辑器里打开（即点击 Typst 文件旁的眼睛按钮的操作）。</p>
<original>
In the web app, the project itself is the root directory. You can always read
all files within it, no matter which one is previewed (via the eye toggle next
to each Typst file in the file panel).
</original>
<h3 id="路径与包">路径与包</h3>
<p>包只能加载存在于它自身目录中的文件。在包中，绝对路径指向的是包的根目录，而不是项目的根目录。因此，它们不能直接加载项目目录里的文件。如果包需要项目中的资源（例如 logo 图片），则必须传入已经加载的图片，例如作为具名参数 <code>logo: <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;mylogo.svg&quot;</span><span class="typ-punct">)</span></code>。你仍然可以在包中用 set rule 自定义图片的外观。</p>
<original>
A package can only load files from its own directory. Within it, absolute paths
point to the package root, rather than the project root. For this reason, it
cannot directly load files from the project directory. If a package needs
resources from the project (such as a logo image), you must pass the already
loaded image, e.g. as a named parameter \`{logo: image("mylogo.svg")}\`. Note that
you can then still customize the image's appearance with a set rule within the
package.
</original>
<p>将来，路径可能会成为<a href="https://github.com/typst/typst/issues/971">一个独立于字符串的数据类型</a>，这样它们就可以保留构造之时的各种信息，资源就可以在不同的根目录中被加载。</p>
<original>
In the future, paths might become a
[distinct type from strings](https://github.com/typst/typst/issues/971), so that
they can retain knowledge of where they were constructed. This way, resources
could be loaded from a different root.
</original>`},children:[]},{route:"/docs/reference/styling/",title:"样式定义",description:"All concepts needed to style your document with Typst.",part:null,outline:[{id:"set-rules",name:"Set Rules",children:[]},{id:"show-rules",name:"Show Rules",children:[]}],body:{kind:"html",content:`<h1>样式定义</h1>
<p>Typst 中有一套灵活的样式系统，它会根据你的选择自动将样式应用到文档中。利用 <em>set rules</em>，你可以配置元素的基础属性，从而创建出一些常见的样式。然而元素不一定有每一个你想要自定义的属性，因此 Typst 又支持了 show rules，它可以完全重新定义元素的外观。</p>
<original>
Typst includes a flexible styling system that automatically applies styling of
your choice to your document. With _set rules,_ you can configure basic
properties of elements. This way, you create most common styles. However, there
might not be a built-in property for everything you wish to do. For this reason,
Typst further supports _show rules_ that can completely redefine the appearance
of elements.
</original>
<h2 id="set-rules">Set rules</h2>
<p>借助 set rules，你可以自定义元素的外观。一个 set rule 的具体写法是在 <code><span class="typ-key">set</span></code> 关键字（在 markup 模式中为 <code><span class="typ-key">#</span><span class="typ-key">set</span></code>）后跟上一个对<a href="/docs/reference/foundations/function/#element-functions">元素函数</a>的<a href="/docs/reference/foundations/function/">调用</a>。只有元素函数的可选参数能被传入 set rule 中。至于哪些参数是可选的，请参阅相应函数的文档。在下面的例子中，我们用到了两个 set rules 来修改<a href="/docs/reference/text/text/#parameters-font">字体族</a>和<a href="/docs/reference/model/heading/#parameters-numbering">标题的标号</a>。</p>
<original>
With set rules, you can customize the appearance of elements. They are written
as a [function call]($function) to an [element
function]($function/#element-functions) preceded by the \`{set}\` keyword (or
\`[#set]\` in markup). Only optional parameters of that function can be provided
to the set rule. Refer to each function's documentation to see which parameters
are optional. In the example below, we use two set rules to change the
[font family]($text.font) and [heading numbering]($heading.numbering).
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;I.&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  font<span class="typ-punct">:</span> <span class="typ-str">&quot;New Computer Modern&quot;</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
With set rules, you can style
your document.
</code></pre><div class="preview"><img src="/docs/assets/ae1ba8eb85a98962e71db546d4ba767b.png" alt="Preview" /></div></div>
<p>一个顶层的 set rule 会持续作用至文件结束，而如果它是嵌套在一个块中，则只会作用到块的结束。因此，借助块（block），你可以将某个 rule 的作用限制在文档的一小段中。在下面我们用一个内容块将列表样式限制在了这一特定的列表中。</p>
<original>
A top level set rule stays in effect until the end of the file. When nested
inside of a block, it is only in effect until the end of that block. With a
block, you can thus restrict the effect of a rule to a particular segment of
your document. Below, we use a content block to scope the list styling to one
particular list.
</original>
<div class="previewed-code"><pre><code>This list is affected: <span class="typ-punct">#</span><span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">list</span><span class="typ-punct">(</span>marker<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-escape">--</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
  <span class="typ-marker">-</span> Dash
<span class="typ-punct">]</span>

This one is not:
<span class="typ-marker">-</span> Bullet
</code></pre><div class="preview"><img src="/docs/assets/4567b14314a6e220bf697aeeb093bd73.png" alt="Preview" /></div></div>
<p>有时，你可能希望只在特定的条件下应用 set rule，为此可以使用 <em>set-if</em> rule。</p>
<original>
Sometimes, you'll want to apply a set rule conditionally. For this, you can use
a _set-if_ rule.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">task</span><span class="typ-punct">(</span>body<span class="typ-punct">,</span> critical<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span> <span class="typ-key">if</span> critical
  <span class="typ-punct">[</span><span class="typ-marker">-</span> <span class="typ-pol">#</span><span class="typ-pol">body</span><span class="typ-punct">]</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">task</span><span class="typ-punct">(</span>critical<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Food today?<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">task</span><span class="typ-punct">(</span>critical<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Work deadline<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/a2506c1aa1706d3147fbb7d74af9b521.png" alt="Preview" /></div></div>
<h2 id="show-rules">Show rules</h2>
<p>借助 show rule，你可以深度地定制元素的外观。一个 show rule 最基本的形式是一个 <em>show-set rule</em>，它的写法是在 <code><span class="typ-key">show</span></code> 关键字后面跟上一个<a href="/docs/reference/foundations/selector/">选择器</a>，接着跟上冒号和一个 set rule。选择器最基本的形式就是一个<a href="/docs/reference/foundations/function/#element-functions">元素函数</a>，这使得 set rule 只会影响到被选择到的元素。在下面的例子中，标题变为了深蓝色，其它文本则没有改变。</p>
<original>
With show rules, you can deeply customize the look of a type of element. The
most basic form of show rule is a _show-set rule._ Such a rule is written as the
\`{show}\` keyword followed by a [selector], a colon and then a set rule. The most
basic form of selector is an [element function]($function/#element-functions).
This lets the set rule only apply to the selected element. In the example below,
headings become dark blue while all other text stays black.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>navy<span class="typ-punct">)</span>

<span class="typ-heading">= This is navy-blue</span>
But this stays black.
</code></pre><div class="preview"><img src="/docs/assets/c84dd81fde6cfbad9c61d6f228b9d50d.png" alt="Preview" /></div></div>
<p>在 show-set rules 中你可以混用不同函数的属性来达到各种效果，但这仍然受制于 Typst 中预定义内容的多少。如果需要更大的自定义空间，你还可以从零开始在 show rule 中编写格式化元素的方式。要写出这样一个 show rule，可将冒号后面的 set rule 换成一个<a href="/docs/reference/foundations/function/">函数</a>，该函数应接受一个内容参数，可返回任意内容。传入函数的元素上所存在的字段与其对应的元素函数一致。在下面我们定义了一个 show rule，它将标题定义为幻想作品百科应有的风格。</p>
<original>
With show-set rules you can mix and match properties from different functions to
achieve many different effects. But they still limit you to what is predefined
in Typst. For maximum flexibility, you can instead write a show rule that
defines how to format an element from scratch. To write such a show rule,
replace the set rule after the colon with an arbitrary [function]. This function
receives the element in question and can return arbitrary content. The available
[fields]($scripting/#fields) on the element passed to the function again match
the parameters of the respective element function. Below, we define a show rule
that formats headings for a fantasy encyclopedia.
---
译注：省略了部分arbitrary含义，无需过于强调“任意”
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(I)&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">)</span>
  <span class="typ-escape">\\~</span> <span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span>
     <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>
       it<span class="typ-punct">.</span>numbering
     <span class="typ-punct">)</span> <span class="typ-escape">\\~</span>
<span class="typ-punct">]</span>

<span class="typ-heading">= Dragon</span>
With a base health of 15, the
dragon is the most powerful
creature.

<span class="typ-heading">= Manticore</span>
While less powerful than the
dragon, the manticore gets
extra style points.
</code></pre><div class="preview"><img src="/docs/assets/ce818f563939693b11b8f623df4fb3fe.png" alt="Preview" /></div></div>
<p>和 set rules 一样，show rules 同样作用于它在的块或文件。</p>
<original>
Like set rules, show rules are in effect until the end of the current block or
file.
</original>
<p>除了函数外，show rule 的右侧也可以是字符串字面量或者内容块，它们会替换掉目标元素。另外，show rule 的左侧可以有若干个其它类型的选择器，它们定义了这些变换的适用对象。这些选择器包括：</p>
<original>
Instead of a function, the right-hand side of a show rule can also take a
literal string or content block that should be directly substituted for the
element. And apart from a function, the left-hand side of a show rule can also
take a number of other _selectors_ that define what to apply the transformation
to:
---
译注：此处 right-hand side 不宜强调右值，因此直接翻译成右侧 right side。left-hand side 同理，理解为 left side
</original>
<ul>
<li>
<p><strong>任意元素</strong>： <code><span class="typ-key">show</span><span class="typ-punct">:</span> rest <span class="typ-op">=&gt;</span> ..</code> <br />
选择所有内容。这在你需要将一个复杂的布局应用到整个文档时很有用，
因为这样你就不需要将一切都包围在一个巨大的函数调用中了。</p>
</li>
<li>
<p><strong>文本</strong>： <code><span class="typ-key">show</span> <span class="typ-str">&quot;Text&quot;</span><span class="typ-punct">:</span> ..</code> <br />
选择对应的文本。可用于定义特定文本的样式，或者执行替换。</p>
</li>
<li>
<p><strong>正则表达式</strong>： <code><span class="typ-key">show</span> <span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;\\w+&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> ..</code> <br />
根据正则表达式去更灵活地选择文本对象。可参考 <a href="/docs/reference/foundations/regex/"><code>regex</code> 类型</a>了解更多。</p>
</li>
<li>
<p><strong>函数字段访问</strong>： <code><span class="typ-key">show</span> heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">:</span> ..</code> <br />
选择具有相应字段的元素。例如选择所有一级的标题（level 为 1）。</p>
</li>
<li>
<p><strong>标签</strong>: <code><span class="typ-key">show</span> <span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">:</span> ..</code> <br />
选择具有对应标签的元素。可参考 <a href="/docs/reference/foundations/label/"><code>label</code> 类型</a>了解更多。</p>
</li>
</ul>
<original>
- **Everything:** \`{show: rest => ..}\` \\
  Transform everything after the show rule. This is useful to apply a more
  complex layout to your whole document without wrapping everything in a giant
  function call.
- **Text:** \`{show "Text": ..}\` \\
  Style, transform or replace text.
- **Regex:** \`{show regex("\\w+"): ..}\` \\
  Select and transform text with a regular expression for even more flexibility.
  See the documentation of the [\`regex\` type]($regex) for details.
- **Function with fields:** \`{show heading.where(level: 1): ..}\` \\
  Transform only elements that have the specified fields. For example, you might
  want to only change the style of level-1 headings.
- **Label:** \`{show <..> ..}\` \\
  Select and transform elements that have the specified label. See the
  documentation of the [\`label\` type]($label) for more details.
</original>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-str">&quot;Project&quot;</span><span class="typ-punct">:</span> <span class="typ-func">smallcaps</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-str">&quot;badly&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;great&quot;</span>

We started Project in 2019
and are still working on it.
Project is progressing badly.
</code></pre><div class="preview"><img src="/docs/assets/9d1ab4328900af1bb72044bdbfb05199.png" alt="Preview" /></div></div>`},children:[]},{route:"/docs/reference/scripting/",title:"Scripting",description:"Automate your document with Typst's scripting capabilities.",part:null,outline:[{id:"expressions",name:"Expressions",children:[]},{id:"blocks",name:"Blocks",children:[]},{id:"bindings",name:"Bindings",children:[]},{id:"conditionals",name:"Conditionals",children:[]},{id:"loops",name:"Loops",children:[]},{id:"fields",name:"Fields",children:[]},{id:"methods",name:"Methods",children:[]},{id:"modules",name:"Modules",children:[]},{id:"packages",name:"Packages",children:[]},{id:"operators",name:"Operators",children:[]}],body:{kind:"html",content:`<h1>Scripting</h1>
<p>Typst embeds a powerful scripting language. You can automate your documents and
create more sophisticated styles with code. Below is an overview over the
scripting concepts.</p>
<h2 id="expressions">Expressions</h2>
<p>In Typst, markup and code are fused into one. All but the most common elements
are created with <em>functions.</em> To make this as convenient as possible, Typst
provides compact syntax to embed a code expression into markup: An expression is
introduced with a hash (<code>#</code>) and normal markup parsing resumes after the
expression is finished. If a character would continue the expression but should
be interpreted as text, the expression can forcibly be ended with a semicolon
(<code>;</code>).</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">emoji</span><span class="typ-punct">.</span><span class="typ-pol">face</span> <span class="typ-escape">\\</span>
<span class="typ-str">#</span><span class="typ-str">&quot;hello&quot;</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5ebe230c3bc59885482cc6c5cb393d24.png" alt="Preview" /></div></div>
<p>The example above shows a few of the available expressions, including
<a href="/docs/reference/foundations/function/">function calls</a>, <a href="/docs/reference/scripting/#fields">field accesses</a>, and
<a href="/docs/reference/scripting/#methods">method calls</a>. More kinds of expressions are
discussed in the remainder of this chapter. A few kinds of expressions are not
compatible with the hash syntax (e.g. binary operator expressions). To embed
these into markup, you can use parentheses, as in <code><span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">+</span> <span class="typ-num">2</span><span class="typ-punct">)</span></code>.</p>
<h2 id="blocks">Blocks</h2>
<p>To structure your code and embed markup into it, Typst provides two kinds of
<em>blocks:</em></p>
<ul>
<li>
<p><strong>Code block:</strong> <code><span class="typ-punct">{</span> <span class="typ-key">let</span> x <span class="typ-op">=</span> <span class="typ-num">1</span><span class="typ-punct">;</span> x <span class="typ-op">+</span> <span class="typ-num">2</span> <span class="typ-punct">}</span></code> <br />
When writing code, you'll probably want to split up your computation into
multiple statements, create some intermediate variables and so on. Code blocks
let you write multiple expressions where one is expected. The individual
expressions in a code block should be separated by line breaks or semicolons.
The output values of the individual expressions in a code block are joined to
determine the block's value. Expressions without useful output, like <code><span class="typ-key">let</span></code>
bindings yield <code><span class="typ-key">none</span></code>, which can be joined with any value without effect.</p>
</li>
<li>
<p><strong>Content block:</strong> <code><span class="typ-punct">[</span><span class="typ-strong">*Hey*</span> there!<span class="typ-punct">]</span></code> <br />
With content blocks, you can handle markup/content as a programmatic value,
store it in variables and pass it to <a href="/docs/reference/foundations/function/">functions</a>. Content
blocks are delimited by square brackets and can contain arbitrary markup. A
content block results in a value of type <a href="/docs/reference/foundations/content/" title="content">content</a>. An arbitrary number of
content blocks can be passed as trailing arguments to functions. That is,
<code><span class="typ-func">list</span><span class="typ-punct">(</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">)</span></code> is equivalent to <code><span class="typ-func">list</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span></code>.</p>
</li>
</ul>
<p>Content and code blocks can be nested arbitrarily. In the example below,
<code><span class="typ-punct">[</span>hello <span class="typ-punct">]</span></code> is joined with the output of  <code>a <span class="typ-op">+</span> <span class="typ-punct">[</span> the <span class="typ-punct">]</span> <span class="typ-op">+</span> b</code> yielding
<code><span class="typ-punct">[</span>hello from the <span class="typ-strong">*world*</span><span class="typ-punct">]</span></code>.</p>
<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">{</span>
  <span class="typ-key">let</span> a <span class="typ-op">=</span> <span class="typ-punct">[</span>from<span class="typ-punct">]</span>
  <span class="typ-key">let</span> b <span class="typ-op">=</span> <span class="typ-punct">[</span><span class="typ-strong">*world*</span><span class="typ-punct">]</span>
  <span class="typ-punct">[</span>hello <span class="typ-punct">]</span>
  a <span class="typ-op">+</span> <span class="typ-punct">[</span> the <span class="typ-punct">]</span> <span class="typ-op">+</span> b
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/a0a3cf07e5b3a836acb2998b20e4aa0c.png" alt="Preview" /></div></div>
<h2 id="bindings">Bindings and Destructuring</h2>
<p>As already demonstrated above, variables can be defined with <code><span class="typ-key">let</span></code> bindings.
The variable is assigned the value of the expression that follows the <code>=</code> sign.
The assignment of a value is optional, if no value is assigned, the variable
will be initialized as <code><span class="typ-key">none</span></code>. The <code><span class="typ-key">let</span></code> keyword can also be used to create
a <a href="/docs/reference/foundations/function/#defining-functions">custom named function</a>. Variables can be
accessed for the rest of the containing block (or the rest of the file if there
is no containing block).</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> name <span class="typ-op">=</span> <span class="typ-str">&quot;Typst&quot;</span>
This is <span class="typ-pol">#</span><span class="typ-pol">name</span>&#39;s documentation.
It explains <span class="typ-pol">#</span><span class="typ-pol">name</span>.

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">add</span><span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=</span> x <span class="typ-op">+</span> y
Sum is <span class="typ-func">#</span><span class="typ-func">add</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span>.
</code></pre><div class="preview"><img src="/docs/assets/5ee31726b8dde8b563b0ffa837e51da8.png" alt="Preview" /></div></div>
<p>Let bindings can also be used to destructure <a href="/docs/reference/foundations/array/">arrays</a> and
<a href="/docs/reference/foundations/dictionary/">dictionaries</a>. In this case, the left-hand side of the
assignment should mirror an array or dictionary. The <code>..</code> operator can be used
once in the pattern to collect the remainder of the array's or dictionary's
items.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
The coordinates are <span class="typ-pol">#</span><span class="typ-pol">x</span>, <span class="typ-pol">#</span><span class="typ-pol">y</span>.

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>a<span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-punct">,</span> b<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
The first element is <span class="typ-pol">#</span><span class="typ-pol">a</span>.
The last element is <span class="typ-pol">#</span><span class="typ-pol">b</span>.

<span class="typ-key">#</span><span class="typ-key">let</span> books <span class="typ-op">=</span> <span class="typ-punct">(</span>
  Shakespeare<span class="typ-punct">:</span> <span class="typ-str">&quot;Hamlet&quot;</span><span class="typ-punct">,</span>
  Homer<span class="typ-punct">:</span> <span class="typ-str">&quot;The Odyssey&quot;</span><span class="typ-punct">,</span>
  Austen<span class="typ-punct">:</span> <span class="typ-str">&quot;Persuasion&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>Austen<span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">=</span> books
Austen wrote <span class="typ-pol">#</span><span class="typ-pol">Austen</span>.

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>Homer<span class="typ-punct">:</span> h<span class="typ-punct">)</span> <span class="typ-op">=</span> books
Homer wrote <span class="typ-pol">#</span><span class="typ-pol">h</span>.

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>Homer<span class="typ-punct">,</span> <span class="typ-op">..</span>other<span class="typ-punct">)</span> <span class="typ-op">=</span> books
<span class="typ-key">#</span><span class="typ-key">for</span> <span class="typ-punct">(</span>author<span class="typ-punct">,</span> title<span class="typ-punct">)</span> <span class="typ-key">in</span> other <span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">author</span> wrote <span class="typ-pol">#</span><span class="typ-pol">title</span>.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/57efd120df5827f86f06ce281845fded.png" alt="Preview" /></div></div>
<p>You can use the underscore to discard elements in a destructuring pattern:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
The y coordinate is <span class="typ-pol">#</span><span class="typ-pol">y</span>.
</code></pre><div class="preview"><img src="/docs/assets/7e41b273add5734b154f1ff6f129b6a6.png" alt="Preview" /></div></div>
<p>Destructuring also work in argument lists of functions ...</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> left <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> right <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-func">zip</span><span class="typ-punct">(</span>right<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>
  <span class="typ-punct">(</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span>b<span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> a <span class="typ-op">+</span> b
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/fb15e587e03fd899240b233127104c93.png" alt="Preview" /></div></div>
<p>... and on the left-hand side of normal assignments. This can be useful to
swap variables among other things.</p>
<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">{</span>
  <span class="typ-key">let</span> a <span class="typ-op">=</span> <span class="typ-num">1</span>
  <span class="typ-key">let</span> b <span class="typ-op">=</span> <span class="typ-num">2</span>
  <span class="typ-punct">(</span>a<span class="typ-punct">,</span> b<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span>b<span class="typ-punct">,</span> a<span class="typ-punct">)</span>
  <span class="typ-punct">[</span>a = <span class="typ-pol">#</span><span class="typ-pol">a</span>, b = <span class="typ-pol">#</span><span class="typ-pol">b</span><span class="typ-punct">]</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/94553af210fb7e617bacbe7a29a39ca9.png" alt="Preview" /></div></div>
<h2 id="conditionals">Conditionals</h2>
<p>With a conditional, you can display or compute different things depending on
whether some condition is fulfilled. Typst supports <code><span class="typ-key">if</span></code>, <code>else <span class="typ-key">if</span></code> and
<code>else</code> expression. When the condition evaluates to <code><span class="typ-key">true</span></code>, the conditional
yields the value resulting from the if's body, otherwise yields the value
resulting from the else's body.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">if</span> <span class="typ-num">1</span> <span class="typ-op">&lt;</span> <span class="typ-num">2</span> <span class="typ-punct">[</span>
  This is shown
<span class="typ-punct">]</span> <span class="typ-key">else</span> <span class="typ-punct">[</span>
  This is not.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/12d2b28f72285713707aaead6c4bec73.png" alt="Preview" /></div></div>
<p>Each branch can have a code or content block as its body.</p>
<ul>
<li><code><span class="typ-key">if</span> condition <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></li>
<li><code><span class="typ-key">if</span> condition <span class="typ-punct">[</span>..<span class="typ-punct">]</span></code></li>
<li><code><span class="typ-key">if</span> condition <span class="typ-punct">[</span>..<span class="typ-punct">]</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></li>
<li><code><span class="typ-key">if</span> condition <span class="typ-punct">[</span>..<span class="typ-punct">]</span> <span class="typ-key">else</span> <span class="typ-key">if</span> condition <span class="typ-punct">{</span>..<span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">[</span>..<span class="typ-punct">]</span></code></li>
</ul>
<h2 id="loops">Loops</h2>
<p>With loops, you can repeat content or compute something iteratively. Typst
supports two types of loops: <code><span class="typ-key">for</span></code> and <code><span class="typ-key">while</span></code> loops. The former iterate
over a specified collection whereas the latter iterate as long as a condition
stays fulfilled. Just like blocks, loops <em>join</em> the results from each iteration
into one value.</p>
<p>In the example below, the three sentences created by the for loop join together
into a single content value and the length-1 arrays in the while loop join
together into one larger array.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> c <span class="typ-key">in</span> <span class="typ-str">&quot;ABC&quot;</span> <span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">c</span> is a letter.
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">let</span> n <span class="typ-op">=</span> <span class="typ-num">2</span>
<span class="typ-key">#</span><span class="typ-key">while</span> n <span class="typ-op">&lt;</span> <span class="typ-num">10</span> <span class="typ-punct">{</span>
  n <span class="typ-op">=</span> <span class="typ-punct">(</span>n <span class="typ-op">*</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-op">-</span> <span class="typ-num">1</span>
  <span class="typ-punct">(</span>n<span class="typ-punct">,</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/3266a5453b20ed0d83dbcdced83c1d09.png" alt="Preview" /></div></div>
<p>For loops can iterate over a variety of collections:</p>
<ul>
<li>
<p><code><span class="typ-key">for</span> value <span class="typ-key">in</span> array <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code> <br />
Iterates over the items in the <a href="/docs/reference/foundations/array/" title="array">array</a>. The destructuring syntax described in
<a href="/docs/reference/scripting/#bindings">Let binding</a> can also be used here.</p>
</li>
<li>
<p><code><span class="typ-key">for</span> pair <span class="typ-key">in</span> dict <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code> <br />
Iterates over the key-value pairs of the <a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a>. The pairs can also be
destructured by using <code><span class="typ-key">for</span> <span class="typ-punct">(</span>key<span class="typ-punct">,</span> value<span class="typ-punct">)</span> <span class="typ-key">in</span> dict <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code>. It is more efficient
than <code><span class="typ-key">for</span> pair <span class="typ-key">in</span> dict<span class="typ-punct">.</span><span class="typ-func">pairs</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code> because it doesn't create a temporary
array of all key-value pairs.</p>
</li>
<li>
<p><code><span class="typ-key">for</span> letter <span class="typ-key">in</span> <span class="typ-str">&quot;abc&quot;</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code> <br />
Iterates over the characters of the <a href="/docs/reference/foundations/str/">string</a>. Technically, it iterates
over the grapheme clusters of the string. Most of the time, a grapheme cluster
is just a single codepoint. However, a grapheme cluster could contain multiple
codepoints, like a flag emoji.</p>
</li>
<li>
<p><code><span class="typ-key">for</span> byte <span class="typ-key">in</span> <span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-str">&quot;😀&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code> <br />
Iterates over the <a href="/docs/reference/foundations/bytes/" title="bytes">bytes</a>, which can be converted from a <a href="/docs/reference/foundations/str/">string</a> or
<a href="/docs/reference/data-loading/read/" title="read">read</a> from a file without encoding. Each byte value is an <a href="/docs/reference/foundations/int/">integer</a>
between <code><span class="typ-num">0</span></code> and <code><span class="typ-num">255</span></code>.</p>
</li>
</ul>
<p>To control the execution of the loop, Typst provides the <code><span class="typ-key">break</span></code> and
<code><span class="typ-key">continue</span></code> statements. The former performs an early exit from the loop while
the latter skips ahead to the next iteration of the loop.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> letter <span class="typ-key">in</span> <span class="typ-str">&quot;abc nope&quot;</span> <span class="typ-punct">{</span>
  <span class="typ-key">if</span> letter <span class="typ-op">==</span> <span class="typ-str">&quot; &quot;</span> <span class="typ-punct">{</span>
    <span class="typ-key">break</span>
  <span class="typ-punct">}</span>

  letter
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/abaaf42cb82ea13c625a3ebf99a0eeb1.png" alt="Preview" /></div></div>
<p>The body of a loop can be a code or content block:</p>
<ul>
<li><code><span class="typ-key">for</span> .. in collection <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></li>
<li><code><span class="typ-key">for</span> .. in collection <span class="typ-punct">[</span>..<span class="typ-punct">]</span></code></li>
<li><code><span class="typ-key">while</span> condition <span class="typ-punct">{</span>..<span class="typ-punct">}</span></code></li>
<li><code><span class="typ-key">while</span> condition <span class="typ-punct">[</span>..<span class="typ-punct">]</span></code></li>
</ul>
<h2 id="fields">Fields</h2>
<p>You can use <em>dot notation</em> to access fields on a value. For values of type
<a href="/docs/reference/foundations/content/" title="\`content\`"><code>content</code></a>, you can also use the <a href="/docs/reference/foundations/content/#definitions-fields"><code>fields</code></a> function to list
the fields.</p>
<p>The value in question can be either:</p>
<ul>
<li>a <a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a> that has the specified key,</li>
<li>a <a href="/docs/reference/symbols/symbol/" title="symbol">symbol</a> that has the specified modifier,</li>
<li>a <a href="/docs/reference/foundations/module/" title="module">module</a> containing the specified definition,</li>
<li><a href="/docs/reference/foundations/content/" title="content">content</a> consisting of an element that has the specified field. The
available fields match the arguments of the
<a href="/docs/reference/foundations/function/#element-functions">element function</a> that were given when the
element was constructed.</li>
</ul>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> it <span class="typ-op">=</span> <span class="typ-punct">[</span><span class="typ-heading">= Heading</span><span class="typ-punct">]</span>
<span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">body</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">depth</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-func">fields</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> dict <span class="typ-op">=</span> <span class="typ-punct">(</span>greet<span class="typ-punct">:</span> <span class="typ-str">&quot;Hello&quot;</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-pol">greet</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">emoji</span><span class="typ-punct">.</span><span class="typ-pol">face</span>

</code></pre><div class="preview"><img src="/docs/assets/5f29b7aa74292b8c450c34f440c855b5.png" alt="Preview" /></div></div>
<h2 id="methods">Methods</h2>
<p>A <em>method call</em> is a convenient way to call a function that is scoped to a
value's <a href="/docs/reference/foundations/type/" title="type">type</a>. For example, we can call the <a href="/docs/reference/foundations/str/#definitions-len"><code>str.len</code></a> function in
the following two equivalent ways:</p>
<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">str</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-str">&quot;abc&quot;</span><span class="typ-punct">)</span> is the same as
<span class="typ-str">#</span><span class="typ-str">&quot;abc&quot;</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/63aa24d8ad2148f375bb0db1bc9de9c.png" alt="Preview" /></div></div>
<p>The structure of a method call is <code>value<span class="typ-punct">.</span><span class="typ-func">method</span><span class="typ-punct">(</span><span class="typ-op">..</span>args<span class="typ-punct">)</span></code> and its equivalent
full function call is <code><span class="typ-func">type</span><span class="typ-punct">(</span>value<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">method</span><span class="typ-punct">(</span>value<span class="typ-punct">,</span> <span class="typ-op">..</span>args<span class="typ-punct">)</span></code>. The documentation
of each type lists it's scoped functions. You cannot currently define your own
methods.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> values <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">pop</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>

<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-str">&quot;a, b, c&quot;</span>
    <span class="typ-punct">.</span><span class="typ-func">split</span><span class="typ-punct">(</span><span class="typ-str">&quot;, &quot;</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">[</span> <span class="typ-escape">---</span> <span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-str">#</span><span class="typ-str">&quot;abc&quot;</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span> is the same as
<span class="typ-pol">#</span><span class="typ-pol">str</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-str">&quot;abc&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/210ee87fd03a6b3797dece149114d597.png" alt="Preview" /></div></div>
<p>There are a few special functions that modify the value they are called on (e.g.
<a href="/docs/reference/foundations/array/#definitions-push"><code>array.push</code></a>). These functions <em>must</em> be called in method form.
In some cases, when the method is only called for its side effect, its return
value should be ignored (and not participate in joining). The canonical way to
discard a value is with a let binding: <code><span class="typ-key">let</span> _ <span class="typ-op">=</span> array<span class="typ-punct">.</span><span class="typ-func">remove</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span></code>.</p>
<h2 id="modules">Modules</h2>
<p>You can split up your Typst projects into multiple files called <em>modules.</em> A
module can refer to the content and definitions of another module in multiple
ways:</p>
<ul>
<li>
<p><strong>Including:</strong> <code><span class="typ-key">include</span> <span class="typ-str">&quot;bar.typ&quot;</span></code> <br />
Evaluates the file at the path <code>bar.typ</code> and returns the resulting <a href="/docs/reference/foundations/content/" title="content">content</a>.</p>
</li>
<li>
<p><strong>Import:</strong> <code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span></code> <br />
Evaluates the file at the path <code>bar.typ</code> and inserts the resulting <a href="/docs/reference/foundations/module/" title="module">module</a>
into the current scope as <code>bar</code> (filename without extension). You can use the
<code>as</code> keyword to rename the imported module: <code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span> <span class="typ-key">as</span> baz</code>. You
can import nested items using dot notation: <code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span><span class="typ-punct">:</span> baz<span class="typ-punct">.</span>a</code>.</p>
</li>
<li>
<p><strong>Import items:</strong> <code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span><span class="typ-punct">:</span> a<span class="typ-punct">,</span> b</code> <br />
Evaluates the file at the path <code>bar.typ</code>, extracts the values of the variables
<code>a</code> and <code>b</code> (that need to be defined in <code>bar.typ</code>, e.g. through <code><span class="typ-key">let</span></code>
bindings) and defines them in the current file. Replacing <code>a, b</code> with <code>*</code>
loads all variables defined in a module. You can use the <code>as</code> keyword to
rename the individual items: <code><span class="typ-key">import</span> <span class="typ-str">&quot;bar.typ&quot;</span><span class="typ-punct">:</span> a <span class="typ-key">as</span> one<span class="typ-punct">,</span> b <span class="typ-key">as</span> two</code></p>
</li>
</ul>
<p>Instead of a path, you can also use a <a href="/docs/reference/foundations/module/">module value</a>, as shown in the
following example:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">import</span> emoji<span class="typ-punct">:</span> face
<span class="typ-pol">#</span><span class="typ-pol">face</span><span class="typ-punct">.</span><span class="typ-pol">grin</span>
</code></pre><div class="preview"><img src="/docs/assets/582750a9fdc5e78ea0af14425019c673.png" alt="Preview" /></div></div>
<h2 id="packages">Packages</h2>
<p>To reuse building blocks across projects, you can also create and import Typst
<em>packages.</em> A package import is specified as a triple of a namespace, a name,
and a version.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;@preview/example:0.1.0&quot;</span><span class="typ-punct">:</span> add
<span class="typ-func">#</span><span class="typ-func">add</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">7</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3154d9c07246bafa6c84ba034756cc85.png" alt="Preview" /></div></div>
<p>The <code>preview</code> namespace contains packages shared by the community. You can find
all available community packages on <a href="https://typst.app/universe/">Typst Universe</a>.</p>
<p>If you are using Typst locally, you can also create your own system-local
packages. For more details on this, see the
<a href="https://github.com/typst/packages">package repository</a>.</p>
<h2 id="operators">Operators</h2>
<p>The following table lists all available unary and binary operators with effect,
arity (unary, binary) and precedence level (higher binds stronger).</p>
<table><thead><tr><th style="text-align: center">Operator</th><th>Effect</th><th style="text-align: center">Arity</th><th style="text-align: center">Precedence</th></tr></thead><tbody>
<tr><td style="text-align: center"><code><span class="typ-op">-</span></code></td><td>Negation</td><td style="text-align: center">Unary</td><td style="text-align: center">7</td></tr>
<tr><td style="text-align: center"><code><span class="typ-op">+</span></code></td><td>No effect (exists for symmetry)</td><td style="text-align: center">Unary</td><td style="text-align: center">7</td></tr>
<tr><td style="text-align: center"><code>*</code></td><td>Multiplication</td><td style="text-align: center">Binary</td><td style="text-align: center">6</td></tr>
<tr><td style="text-align: center"><code>/</code></td><td>Division</td><td style="text-align: center">Binary</td><td style="text-align: center">6</td></tr>
<tr><td style="text-align: center"><code><span class="typ-op">+</span></code></td><td>Addition</td><td style="text-align: center">Binary</td><td style="text-align: center">5</td></tr>
<tr><td style="text-align: center"><code><span class="typ-op">-</span></code></td><td>Subtraction</td><td style="text-align: center">Binary</td><td style="text-align: center">5</td></tr>
<tr><td style="text-align: center"><code>==</code></td><td>Check equality</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code>!=</code></td><td>Check inequality</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code>&lt;</code></td><td>Check less-than</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code>&lt;=</code></td><td>Check less-than or equal</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code>&gt;</code></td><td>Check greater-than</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code>&gt;=</code></td><td>Check greater-than or equal</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code>in</code></td><td>Check if in collection</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code><span class="typ-key">not</span> <span class="typ-key">in</span></code></td><td>Check if not in collection</td><td style="text-align: center">Binary</td><td style="text-align: center">4</td></tr>
<tr><td style="text-align: center"><code><span class="typ-key">not</span></code></td><td>Logical &quot;not&quot;</td><td style="text-align: center">Unary</td><td style="text-align: center">3</td></tr>
<tr><td style="text-align: center"><code>and</code></td><td>Short-circuiting logical &quot;and&quot;</td><td style="text-align: center">Binary</td><td style="text-align: center">3</td></tr>
<tr><td style="text-align: center"><code>or</code></td><td>Short-circuiting logical &quot;or</td><td style="text-align: center">Binary</td><td style="text-align: center">2</td></tr>
<tr><td style="text-align: center"><code>=</code></td><td>Assignment</td><td style="text-align: center">Binary</td><td style="text-align: center">1</td></tr>
<tr><td style="text-align: center"><code>+=</code></td><td>Add-Assignment</td><td style="text-align: center">Binary</td><td style="text-align: center">1</td></tr>
<tr><td style="text-align: center"><code>-=</code></td><td>Subtraction-Assignment</td><td style="text-align: center">Binary</td><td style="text-align: center">1</td></tr>
<tr><td style="text-align: center"><code>*=</code></td><td>Multiplication-Assignment</td><td style="text-align: center">Binary</td><td style="text-align: center">1</td></tr>
<tr><td style="text-align: center"><code>/=</code></td><td>Division-Assignment</td><td style="text-align: center">Binary</td><td style="text-align: center">1</td></tr>
</tbody></table>`},children:[]},{route:"/docs/reference/context/",title:"Context",description:`How to deal with content that reacts to its location in the document.
`,part:null,outline:[{id:"style-context",name:"Style Context",children:[]},{id:"location-context",name:"Location Context",children:[]},{id:"nested-contexts",name:"Nested Contexts",children:[]},{id:"compiler-iterations",name:"Compiler Iterations",children:[]}],body:{kind:"html",content:`<h1>Context</h1>
<p>Sometimes, we want to create content that reacts to its location in the
document. This could be a localized phrase that depends on the configured text
language or something as simple as a heading number which prints the right
value based on how many headings came before it. However, Typst code isn't
directly aware of its location in the document. Some code at the beginning of
the source text could yield content that ends up at the back of the document.</p>
<p>To produce content that is reactive to its surroundings, we must thus
specifically instruct Typst: We do this with the <code><span class="typ-key">context</span></code> keyword, which
precedes an expression and ensures that it is computed with knowledge of its
environment. In return, the context expression itself ends up opaque. We cannot
directly access whatever results from it in our code, precisely because it is
contextual: There is no one correct result, there may be multiple results in
different places of the document. For this reason, everything that depends on
the contextual data must happen inside of the context expression.</p>
<p>Aside from explicit context expressions, context is also established implicitly
in some places that are also aware of their location in the document:
<a href="/docs/reference/styling/#show-rules">Show rules</a> provide context<sup class="footnote-reference"><a href="#1">1</a></sup> and numberings in the
outline, for instance, also provide the proper context to resolve counters.</p>
<h2 id="style-context">Style context</h2>
<p>With set rules, we can adjust style properties for parts or the whole of our
document. We cannot access these without a known context, as they may change
throughout the course of the document. When context is available, we can
retrieve them simply by accessing them as fields on the respective element
function.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> text<span class="typ-punct">.</span>lang
</code></pre><div class="preview"><img src="/docs/assets/ae4ccc7f3c138d00cde072a8e7d00280.png" alt="Preview" /></div></div>
<p>As explained above, a context expression is reactive to the different
environments it is placed into. In the example below, we create a single context
expression, store it in the <code>value</code> variable and use it multiple times. Each use
properly reacts to the current surroundings.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> value <span class="typ-op">=</span> <span class="typ-key">context</span> text<span class="typ-punct">.</span>lang
<span class="typ-pol">#</span><span class="typ-pol">value</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">value</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;fr&quot;</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">value</span>
</code></pre><div class="preview"><img src="/docs/assets/5432ec6ed4bd5d5b9ee6fe199c117a4f.png" alt="Preview" /></div></div>
<p>Crucially, upon creation, <code>value</code> becomes opaque <a href="/docs/reference/foundations/content/" title="content">content</a> that we cannot peek
into. It can only be resolved when placed somewhere because only then the
context is known. The body of a context expression may be evaluated zero, one,
or multiple times, depending on how many different places it is put into.</p>
<h2 id="location-context">Location context</h2>
<p>We've already seen that context gives us access to set rule values. But it can
do more: It also lets us know <em>where</em> in the document we currently are, relative
to other elements, and absolutely on the pages. We can use this information to
create very flexible interactions between different document parts. This
underpins features like heading numbering, the table of contents, or page
headers dependent on section headings.</p>
<p>Some functions like <a href="/docs/reference/introspection/counter/#definitions-get"><code>counter.get</code></a> implicitly access the current
location. In the example below, we want to retrieve the value of the heading
counter. Since it changes throughout the document, we need to first enter a
context expression. Then, we use <code>get</code> to retrieve the counter's current value.
This function accesses the current location from the context to resolve the
counter value. Counters have multiple levels and <code>get</code> returns an array with the
resolved numbers. Thus, we get the following result:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">= Background</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3639cbcb4dd8011e9f0bbf9c0a7fa459.png" alt="Preview" /></div></div>
<p>For more flexibility, we can also use the <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> function to directly extract
the current <a href="/docs/reference/introspection/location/" title="location">location</a> from the context. The example below
demonstrates this:</p>
<ul>
<li>We first have <code><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code>, which resolves to <code><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span><span class="typ-punct">)</span></code> as
before.</li>
<li>We then use the more powerful  <a href="/docs/reference/introspection/counter/#definitions-at" title="\`counter.at\`"><code>counter.at</code></a> with <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a>, which in
combination is equivalent to <code>get</code>, and thus get <code><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span><span class="typ-punct">)</span></code>.</li>
<li>Finally, we use <code>at</code> with a <a href="/docs/reference/foundations/label/" title="label">label</a> to retrieve the value of the counter at a
<em>different</em> location in the document, in our case that of the introduction
heading. This yields <code><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span><span class="typ-punct">)</span></code>. Typst's context system gives us time travel
abilities and lets us retrieve the values of any counters and states at <em>any</em>
location in the document.</li>
</ul>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-heading">= Background</span> <span class="typ-label">&lt;back&gt;</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/6a9f07ae4087c22855f5c16aad4b0af3.png" alt="Preview" /></div></div>
<p>As mentioned before, we can also use context to get the physical position of
elements on the pages. We do this with the <a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a> function, which works
similarly to <code>counter.at</code>: It takes a location or other <a href="/docs/reference/foundations/selector/" title="selector">selector</a> that resolves
to a unique element (could also be a label) and returns the position on the
pages for that element.</p>
<div class="previewed-code"><pre><code>Background is at: <span class="typ-escape">\\</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">locate</span><span class="typ-punct">(</span><span class="typ-label">&lt;back&gt;</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">position</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">= Background</span> <span class="typ-label">&lt;back&gt;</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2483765c598e2c29a72eb56cb39a37de.png" alt="Preview" /></div></div>
<p>There are other functions that make use of the location context, most
prominently <a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a>. Take a look at the
<a href="/docs/reference/introspection/">introspection</a> category for more details on those.</p>
<h2 id="nested-contexts">Nested contexts</h2>
<p>Context is also accessible from within function calls nested in context blocks.
In the example below, <code>foo</code> itself becomes a contextual function, just like
<a href="/docs/reference/layout/length/#definitions-to-absolute"><code>to-absolute</code></a> is.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">foo</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-num">1em</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-func">foo</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> text<span class="typ-punct">.</span>size
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/f9e2880aa5fe891e1068bbf63ac2dc43.png" alt="Preview" /></div></div>
<p>Context blocks can be nested. Contextual code will then always access the
innermost context. The example below demonstrates this: The first <code>text.lang</code>
will access the outer context block's styles and as such, it will <strong>not</strong>
see the effect of <code><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;fr&quot;</span><span class="typ-punct">)</span></code>. The nested context block around the
second <code>text.lang</code>, however, starts after the set rule and will thus show
its effect.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;fr&quot;</span><span class="typ-punct">)</span>
  <span class="typ-pol">#</span><span class="typ-pol">text</span><span class="typ-punct">.</span><span class="typ-pol">lang</span> <span class="typ-escape">\\</span>
  <span class="typ-key">#</span><span class="typ-key">context</span> text<span class="typ-punct">.</span>lang
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/84968737ef88b5076ffd19b12b5d17b2.png" alt="Preview" /></div></div>
<p>You might wonder why Typst ignores the French set rule when computing the first
<code>text.lang</code> in the example above. The reason is that, in the general case, Typst
cannot know all the styles that will apply as set rules can be applied to
content after it has been constructed. Below, <code>text.lang</code> is already computed
when the template function is applied. As such, it cannot possibly be aware of
the language change to French in the template.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">template</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;fr&quot;</span><span class="typ-punct">)</span>
  <span class="typ-func">upper</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span>
<span class="typ-punct">}</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> <span class="typ-func">template</span>
  <span class="typ-pol">#</span><span class="typ-pol">text</span><span class="typ-punct">.</span><span class="typ-pol">lang</span> <span class="typ-escape">\\</span>
  <span class="typ-key">#</span><span class="typ-key">context</span> text<span class="typ-punct">.</span>lang
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/544194fd5d0372127f75c6eaefb51e61.png" alt="Preview" /></div></div>
<p>The second <code>text.lang</code>, however, <em>does</em> react to the language change because
evaluation of its surrounding context block is deferred until the styles for it
are known. This illustrates the importance of picking the right insertion point for a context to get access to precisely the right styles.</p>
<p>The same also holds true for the location context. Below, the first
<code>c<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> call will access the outer context block and will thus not see
the effect of <code>c<span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span></code> while the second <code>c<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> accesses the inner context and will thus see it.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> c <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span><span class="typ-str">&quot;mycounter&quot;</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">c</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">c</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span>
  <span class="typ-pol">#</span><span class="typ-pol">c</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-key">#</span><span class="typ-key">context</span> c<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/7ec6a39bee32c2c68fc346fb9098ff02.png" alt="Preview" /></div></div>
<h2 id="compiler-iterations">Compiler iterations</h2>
<p>To resolve contextual interactions, the Typst compiler processes your document
multiple times. For instance, to resolve a <code>locate</code> call, Typst first provides a
placeholder position, layouts your document and then recompiles with the known
position from the finished layout. The same approach is taken to resolve
counters, states, and queries. In certain cases, Typst may even need more than
two iterations to resolve everything. While that's sometimes a necessity, it may
also be a sign of misuse of contextual functions (e.g. of
<a href="/docs/reference/introspection/state/#caution">state</a>). If Typst cannot resolve everything within five
attempts, it will stop and output the warning &quot;layout did not converge within 5
attempts.&quot;</p>
<p>A very careful reader might have noticed that not all of the functions presented
above actually make use of the current location. While
<code><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> definitely depends on it,
<code><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span></code>, for instance, does not. However, it still
requires context. While its value is always the same <em>within</em> one compilation
iteration, it may change over the course of multiple compiler iterations. If one
could call it directly at the top level of a module, the whole module and its
exports could change over the course of multiple compiler iterations, which
would not be desirable.</p>
<div class="footnote-definition" id="1"><sup class="footnote-definition-label">1</sup>
<p>Currently, all show rules provide styling context, but only show rules on
<a href="/docs/reference/introspection/location/#locatable">locatable</a> elements provide a location context.</p>
</div>`},children:[]},{route:"/docs/reference/foundations/",title:"Foundations",description:"Documentation for functions related to Foundations in Typst.",part:"Library",outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"foundations",title:"Foundations",details:`<p>Foundational types and functions.</p>
<p>Here, you'll find documentation for basic data types like <a href="/docs/reference/foundations/int/">integers</a>
and <a href="/docs/reference/foundations/str/">strings</a> as well as details about core computational functions.</p>`,items:[{name:"arguments",route:"/docs/reference/foundations/arguments/",oneliner:"Captured arguments to a function.",code:!0},{name:"array",route:"/docs/reference/foundations/array/",oneliner:"A sequence of values.",code:!0},{name:"assert",route:"/docs/reference/foundations/assert/",oneliner:"Ensures that a condition is fulfilled.",code:!0},{name:"auto",route:"/docs/reference/foundations/auto/",oneliner:"A value that indicates a smart default.",code:!0},{name:"bool",route:"/docs/reference/foundations/bool/",oneliner:"A type with two states.",code:!0},{name:"bytes",route:"/docs/reference/foundations/bytes/",oneliner:"A sequence of bytes.",code:!0},{name:"calc",route:"/docs/reference/foundations/calc",oneliner:"Module for calculations and processing of numeric values.",code:!1},{name:"content",route:"/docs/reference/foundations/content/",oneliner:"A piece of document content.",code:!0},{name:"datetime",route:"/docs/reference/foundations/datetime/",oneliner:"Represents a date, a time, or a combination of both.",code:!0},{name:"decimal",route:"/docs/reference/foundations/decimal/",oneliner:"A fixed-point decimal number type.",code:!0},{name:"dictionary",route:"/docs/reference/foundations/dictionary/",oneliner:"A map from string keys to values.",code:!0},{name:"duration",route:"/docs/reference/foundations/duration/",oneliner:"Represents a positive or negative span of time.",code:!0},{name:"eval",route:"/docs/reference/foundations/eval/",oneliner:"Evaluates a string as Typst code.",code:!0},{name:"float",route:"/docs/reference/foundations/float/",oneliner:"A floating-point number.",code:!0},{name:"function",route:"/docs/reference/foundations/function/",oneliner:"A mapping from argument values to a return value.",code:!0},{name:"int",route:"/docs/reference/foundations/int/",oneliner:"A whole number.",code:!0},{name:"label",route:"/docs/reference/foundations/label/",oneliner:"A label for an element.",code:!0},{name:"module",route:"/docs/reference/foundations/module/",oneliner:"An evaluated module, either built-in or resulting from a file.",code:!0},{name:"none",route:"/docs/reference/foundations/none/",oneliner:"A value that indicates the absence of any other value.",code:!0},{name:"panic",route:"/docs/reference/foundations/panic/",oneliner:"Fails with an error.",code:!0},{name:"plugin",route:"/docs/reference/foundations/plugin/",oneliner:"A WebAssembly plugin.",code:!0},{name:"regex",route:"/docs/reference/foundations/regex/",oneliner:"A regular expression.",code:!0},{name:"repr",route:"/docs/reference/foundations/repr/",oneliner:"Returns the string representation of a value.",code:!0},{name:"selector",route:"/docs/reference/foundations/selector/",oneliner:"A filter for selecting elements within the document.",code:!0},{name:"str",route:"/docs/reference/foundations/str/",oneliner:"A sequence of Unicode codepoints.",code:!0},{name:"style",route:"/docs/reference/foundations/style/",oneliner:"Provides access to active styles.",code:!0},{name:"sys",route:"/docs/reference/foundations/sys",oneliner:"Module for system interactions.",code:!1},{name:"type",route:"/docs/reference/foundations/type/",oneliner:"Describes a kind of value.",code:!0},{name:"version",route:"/docs/reference/foundations/version/",oneliner:"A version with an arbitrary number of components.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/foundations/arguments/",title:"Arguments",description:"Documentation for the Arguments type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"argument-sinks",name:"Argument Sinks",children:[]},{id:"spreading",name:"Spreading",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-arguments",name:"arguments",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-at",name:"At",children:[{id:"definitions-at-key",name:"key",children:[]},{id:"definitions-at-default",name:"default",children:[]}]},{id:"definitions-pos",name:"Positional",children:[]},{id:"definitions-named",name:"Named",children:[]}]}],body:{kind:"type",content:{name:"arguments",title:"Arguments",keywords:[],oneliner:"Captured arguments to a function.",details:`<p>Captured arguments to a function.</p>
<h2 id="argument-sinks">Argument Sinks</h2>
<p>Like built-in functions, custom functions can also take a variable number of
arguments. You can specify an <em>argument sink</em> which collects all excess
arguments as <code>..sink</code>. The resulting <code>sink</code> value is of the <code>arguments</code>
type. It exposes methods to access the positional and named arguments.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">format</span><span class="typ-punct">(</span>title<span class="typ-punct">,</span> <span class="typ-op">..</span>authors<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> by <span class="typ-op">=</span> authors
    <span class="typ-punct">.</span><span class="typ-func">pos</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;, &quot;</span><span class="typ-punct">,</span> last<span class="typ-punct">:</span> <span class="typ-str">&quot; and &quot;</span><span class="typ-punct">)</span>

  <span class="typ-punct">[</span><span class="typ-strong">*<span class="typ-pol">#</span><span class="typ-pol">title</span>*</span> <span class="typ-escape">\\</span> <span class="typ-emph">_Written by <span class="typ-pol">#</span><span class="typ-pol">by</span><span class="typ-punct">;</span>_</span><span class="typ-punct">]</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">format</span><span class="typ-punct">(</span><span class="typ-str">&quot;ArtosFlow&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;Jane&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;Joe&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4747a07e873bef8bd606086808096adf.png" alt="Preview" /></div></div>
<h2 id="spreading">Spreading</h2>
<p>Inversely to an argument sink, you can <em>spread</em> arguments, arrays and
dictionaries into a function call with the <code>..spread</code> operator:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> array <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">min</span><span class="typ-punct">(</span><span class="typ-op">..</span>array<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> dict <span class="typ-op">=</span> <span class="typ-punct">(</span>fill<span class="typ-punct">:</span> blue<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-op">..</span>dict<span class="typ-punct">)</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/ad3a29730b1ee0b8237fa94e91df7127.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"arguments",title:"Construct",keywords:[],oneliner:"Construct spreadable arguments in place.",element:!1,contextual:!1,details:`<p>Construct spreadable arguments in place.</p>
<p>This function behaves like <code><span class="typ-key">let</span> <span class="typ-func">args</span><span class="typ-punct">(</span><span class="typ-op">..</span>sink<span class="typ-punct">)</span> <span class="typ-op">=</span> sink</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> args <span class="typ-op">=</span> <span class="typ-func">arguments</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> red<span class="typ-punct">,</span> inset<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Body<span class="typ-punct">]</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-op">..</span>args<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/dc24671374a2433d874811ec9a0f7521.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"arguments",details:"<p>The arguments to construct.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["arguments"],scope:[]},scope:[{path:["arguments"],name:"at",title:"At",keywords:[],oneliner:"Returns the positional argument at the specified index, or the named",element:!1,contextual:!1,details:`<p>Returns the positional argument at the specified index, or the named
argument with the specified name.</p>
<p>If the key is an <a href="/docs/reference/foundations/int/">integer</a>, this is equivalent to first calling
<a href="/docs/reference/foundations/arguments/#definitions-pos"><code>pos</code></a> and then <a href="/docs/reference/foundations/array/#definitions-at" title="\`array.at\`"><code>array.at</code></a>. If it is a <a href="/docs/reference/foundations/str/">string</a>,
this is equivalent to first calling <a href="/docs/reference/foundations/arguments/#definitions-named"><code>named</code></a> and then
<a href="/docs/reference/foundations/dictionary/#definitions-at" title="\`dictionary.at\`"><code>dictionary.at</code></a>.</p>`,example:null,self:!0,params:[{name:"key",details:"<p>The index or name of the argument to get.</p>",example:null,types:["int","str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the key is invalid.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["arguments"],name:"pos",title:"Positional",keywords:[],oneliner:"Returns the captured positional arguments as an array.",element:!1,contextual:!1,details:"<p>Returns the captured positional arguments as an array.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["arguments"],name:"named",title:"Named",keywords:[],oneliner:"Returns the captured named arguments as a dictionary.",element:!1,contextual:!1,details:"<p>Returns the captured named arguments as a dictionary.</p>",example:null,self:!0,params:[],returns:["dictionary"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/array/",title:"Array",description:"Documentation for the Array type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-len",name:"Length",children:[]},{id:"definitions-first",name:"First",children:[]},{id:"definitions-last",name:"Last",children:[]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-index",name:"index",children:[]},{id:"definitions-at-default",name:"default",children:[]}]},{id:"definitions-push",name:"Push",children:[{id:"definitions-push-value",name:"value",children:[]}]},{id:"definitions-pop",name:"Pop",children:[]},{id:"definitions-insert",name:"Insert",children:[{id:"definitions-insert-index",name:"index",children:[]},{id:"definitions-insert-value",name:"value",children:[]}]},{id:"definitions-remove",name:"Remove",children:[{id:"definitions-remove-index",name:"index",children:[]},{id:"definitions-remove-default",name:"default",children:[]}]},{id:"definitions-slice",name:"Slice",children:[{id:"definitions-slice-start",name:"start",children:[]},{id:"definitions-slice-end",name:"end",children:[]},{id:"definitions-slice-count",name:"count",children:[]}]},{id:"definitions-contains",name:"Contains",children:[{id:"definitions-contains-value",name:"value",children:[]}]},{id:"definitions-find",name:"Find",children:[{id:"definitions-find-searcher",name:"searcher",children:[]}]},{id:"definitions-position",name:"Position",children:[{id:"definitions-position-searcher",name:"searcher",children:[]}]},{id:"definitions-range",name:"Range",children:[{id:"definitions-range-start",name:"start",children:[]},{id:"definitions-range-end",name:"end",children:[]},{id:"definitions-range-step",name:"step",children:[]}]},{id:"definitions-filter",name:"Filter",children:[{id:"definitions-filter-test",name:"test",children:[]}]},{id:"definitions-map",name:"Map",children:[{id:"definitions-map-mapper",name:"mapper",children:[]}]},{id:"definitions-enumerate",name:"Enumerate",children:[{id:"definitions-enumerate-start",name:"start",children:[]}]},{id:"definitions-zip",name:"Zip",children:[{id:"definitions-zip-exact",name:"exact",children:[]},{id:"definitions-zip-others",name:"others",children:[]}]},{id:"definitions-fold",name:"Fold",children:[{id:"definitions-fold-init",name:"init",children:[]},{id:"definitions-fold-folder",name:"folder",children:[]}]},{id:"definitions-sum",name:"Sum",children:[{id:"definitions-sum-default",name:"default",children:[]}]},{id:"definitions-product",name:"Product",children:[{id:"definitions-product-default",name:"default",children:[]}]},{id:"definitions-any",name:"Any",children:[{id:"definitions-any-test",name:"test",children:[]}]},{id:"definitions-all",name:"All",children:[{id:"definitions-all-test",name:"test",children:[]}]},{id:"definitions-flatten",name:"Flatten",children:[]},{id:"definitions-rev",name:"Reverse",children:[]},{id:"definitions-split",name:"Split",children:[{id:"definitions-split-at",name:"at",children:[]}]},{id:"definitions-join",name:"Join",children:[{id:"definitions-join-separator",name:"separator",children:[]},{id:"definitions-join-last",name:"last",children:[]}]},{id:"definitions-intersperse",name:"Intersperse",children:[{id:"definitions-intersperse-separator",name:"separator",children:[]}]},{id:"definitions-chunks",name:"Chunks",children:[{id:"definitions-chunks-chunk-size",name:"chunk-size",children:[]},{id:"definitions-chunks-exact",name:"exact",children:[]}]},{id:"definitions-windows",name:"Windows",children:[{id:"definitions-windows-window-size",name:"window-size",children:[]}]},{id:"definitions-sorted",name:"Sorted",children:[{id:"definitions-sorted-key",name:"key",children:[]}]},{id:"definitions-dedup",name:"Deduplicate",children:[{id:"definitions-dedup-key",name:"key",children:[]}]},{id:"definitions-to-dict",name:"To Dict",children:[]},{id:"definitions-reduce",name:"Reduce",children:[{id:"definitions-reduce-reducer",name:"reducer",children:[]}]}]}],body:{kind:"type",content:{name:"array",title:"Array",keywords:[],oneliner:"A sequence of values.",details:`<p>A sequence of values.</p>
<p>You can construct an array by enclosing a comma-separated sequence of values
in parentheses. The values do not have to be of the same type.</p>
<p>You can access and update array items with the <code>.at()</code> method. Indices are
zero-based and negative indices wrap around to the end of the array. You can
iterate over an array using a <a href="/docs/reference/scripting/#loops">for loop</a>. Arrays can be
added together with the <code>+</code> operator, <a href="/docs/reference/scripting/#blocks">joined together</a>
and multiplied with integers.</p>
<p><strong>Note:</strong> An array of length one needs a trailing comma, as in <code><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span><span class="typ-punct">)</span></code>.
This is to disambiguate from a simple parenthesized expressions like <code><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">+</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-op">*</span> <span class="typ-num">3</span></code>. An empty array is written as <code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> values <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span>values<span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">find</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span>even<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">filter</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span>odd<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span>abs<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">values</span><span class="typ-punct">.</span><span class="typ-func">rev</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">flatten</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-str">&quot;A&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;B&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;C&quot;</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;, &quot;</span><span class="typ-punct">,</span> last<span class="typ-punct">:</span> <span class="typ-str">&quot; and &quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7625eed356241b76dea70aa4ad22cb7b.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"array",title:"Construct",keywords:[],oneliner:"Converts a value to an array.",element:!1,contextual:!1,details:`<p>Converts a value to an array.</p>
<p>Note that this function is only intended for conversion of a collection-like
value to an array, not for creation of an array from individual items. Use
the array syntax <code>(1, 2, 3)</code> (or <code>(1,)</code> for a single-element array) instead.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> hi <span class="typ-op">=</span> <span class="typ-str">&quot;Hello 😃&quot;</span>
<span class="typ-func">#</span><span class="typ-func">array</span><span class="typ-punct">(</span><span class="typ-func">bytes</span><span class="typ-punct">(</span>hi<span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6f6dd799083b72452aae516ff23f1084.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to an array.</p>",example:null,types:["bytes","array","version"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},scope:[{path:["array"],name:"len",title:"Length",keywords:[],oneliner:"The number of values in the array.",element:!1,contextual:!1,details:"<p>The number of values in the array.</p>",example:null,self:!0,params:[],returns:["int"],scope:[]},{path:["array"],name:"first",title:"First",keywords:[],oneliner:"Returns the first item in the array. May be used on the left-hand side",element:!1,contextual:!1,details:`<p>Returns the first item in the array. May be used on the left-hand side
of an assignment. Fails with an error if the array is empty.</p>`,example:null,self:!0,params:[],returns:["any"],scope:[]},{path:["array"],name:"last",title:"Last",keywords:[],oneliner:"Returns the last item in the array. May be used on the left-hand side of",element:!1,contextual:!1,details:`<p>Returns the last item in the array. May be used on the left-hand side of
an assignment. Fails with an error if the array is empty.</p>`,example:null,self:!0,params:[],returns:["any"],scope:[]},{path:["array"],name:"at",title:"At",keywords:[],oneliner:"Returns the item at the specified index in the array. May be used on the",element:!1,contextual:!1,details:`<p>Returns the item at the specified index in the array. May be used on the
left-hand side of an assignment. Returns the default value if the index
is out of bounds or fails with an error if no default value was
specified.</p>`,example:null,self:!0,params:[{name:"index",details:`<p>The index at which to retrieve the item. If negative, indexes from
the back.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the index is out of bounds.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["array"],name:"push",title:"Push",keywords:[],oneliner:"Adds a value to the end of the array.",element:!1,contextual:!1,details:"<p>Adds a value to the end of the array.</p>",example:null,self:!0,params:[{name:"value",details:"<p>The value to insert at the end of the array.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:[],scope:[]},{path:["array"],name:"pop",title:"Pop",keywords:[],oneliner:"Removes the last item from the array and returns it. Fails with an error",element:!1,contextual:!1,details:`<p>Removes the last item from the array and returns it. Fails with an error
if the array is empty.</p>`,example:null,self:!0,params:[],returns:["any"],scope:[]},{path:["array"],name:"insert",title:"Insert",keywords:[],oneliner:"Inserts a value into the array at the specified index, shifting all",element:!1,contextual:!1,details:`<p>Inserts a value into the array at the specified index, shifting all
subsequent elements to the right. Fails with an error if the index is
out of bounds.</p>
<p>To replace an element of an array, use <a href="/docs/reference/foundations/array/#definitions-at"><code>at</code></a>.</p>`,example:null,self:!0,params:[{name:"index",details:`<p>The index at which to insert the item. If negative, indexes from
the back.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"value",details:"<p>The value to insert into the array.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:[],scope:[]},{path:["array"],name:"remove",title:"Remove",keywords:[],oneliner:"Removes the value at the specified index from the array and return it.",element:!1,contextual:!1,details:"<p>Removes the value at the specified index from the array and return it.</p>",example:null,self:!0,params:[{name:"index",details:`<p>The index at which to remove the item. If negative, indexes from
the back.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the index is out of bounds.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["array"],name:"slice",title:"Slice",keywords:[],oneliner:"Extracts a subslice of the array. Fails with an error if the start or end",element:!1,contextual:!1,details:`<p>Extracts a subslice of the array. Fails with an error if the start or end
index is out of bounds.</p>`,example:null,self:!0,params:[{name:"start",details:"<p>The start index (inclusive). If negative, indexes from the back.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"end",details:`<p>The end index (exclusive). If omitted, the whole slice until the end
of the array is extracted. If negative, indexes from the back.</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"count",details:`<p>The number of items to extract. This is equivalent to passing
<code>start + count</code> as the <code>end</code> position. Mutually exclusive with <code>end</code>.</p>`,example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"contains",title:"Contains",keywords:[],oneliner:"Whether the array contains the specified value.",element:!1,contextual:!1,details:`<p>Whether the array contains the specified value.</p>
<p>This method also has dedicated syntax: You can write <code><span class="typ-num">2</span> <span class="typ-key">in</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span></code>
instead of <code><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">contains</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span></code>.</p>`,example:null,self:!0,params:[{name:"value",details:"<p>The value to search for.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["array"],name:"find",title:"Find",keywords:[],oneliner:"Searches for an item for which the given function returns `{true}` and",element:!1,contextual:!1,details:`<p>Searches for an item for which the given function returns <code><span class="typ-key">true</span></code> and
returns the first match or <code><span class="typ-key">none</span></code> if there is no match.</p>`,example:null,self:!0,params:[{name:"searcher",details:"<p>The function to apply to each item. Must return a boolean.</p>",example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any","none"],scope:[]},{path:["array"],name:"position",title:"Position",keywords:[],oneliner:"Searches for an item for which the given function returns `{true}` and",element:!1,contextual:!1,details:`<p>Searches for an item for which the given function returns <code><span class="typ-key">true</span></code> and
returns the index of the first match or <code><span class="typ-key">none</span></code> if there is no match.</p>`,example:null,self:!0,params:[{name:"searcher",details:"<p>The function to apply to each item. Must return a boolean.</p>",example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["none","int"],scope:[]},{path:["array"],name:"range",title:"Range",keywords:[],oneliner:"Create an array consisting of a sequence of numbers.",element:!1,contextual:!1,details:`<p>Create an array consisting of a sequence of numbers.</p>
<p>If you pass just one positional parameter, it is interpreted as the
<code>end</code> of the range. If you pass two, they describe the <code>start</code> and <code>end</code>
of the range.</p>
<p>This function is available both in the array function's scope and
globally.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">20</span><span class="typ-punct">,</span> step<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">21</span><span class="typ-punct">,</span> step<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> step<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">1</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/537cc67e41926811e630b5fc70869ad0.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"start",details:"<p>The start of the range (inclusive).</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"end",details:"<p>The end of the range (exclusive).</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"step",details:"<p>The distance between the generated numbers.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"filter",title:"Filter",keywords:[],oneliner:"Produces a new array with only the items from the original one for which",element:!1,contextual:!1,details:`<p>Produces a new array with only the items from the original one for which
the given function returns true.</p>`,example:null,self:!0,params:[{name:"test",details:"<p>The function to apply to each item. Must return a boolean.</p>",example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"map",title:"Map",keywords:[],oneliner:"Produces a new array in which all items from the original one were",element:!1,contextual:!1,details:`<p>Produces a new array in which all items from the original one were
transformed with the given function.</p>`,example:null,self:!0,params:[{name:"mapper",details:"<p>The function to apply to each item.</p>",example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"enumerate",title:"Enumerate",keywords:[],oneliner:"Returns a new array with the values alongside their indices.",element:!1,contextual:!1,details:`<p>Returns a new array with the values alongside their indices.</p>
<p>The returned array consists of <code>(index, value)</code> pairs in the form of
length-2 arrays. These can be <a href="/docs/reference/scripting/#bindings">destructured</a> with
a let binding or for loop.</p>`,example:null,self:!0,params:[{name:"start",details:"<p>The index returned for the first pair of the returned list.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"zip",title:"Zip",keywords:[],oneliner:"Zips the array with other arrays.",element:!1,contextual:!1,details:`<p>Zips the array with other arrays.</p>
<p>Returns an array of arrays, where the <code>i</code>th inner array contains all the
<code>i</code>th elements from each original array.</p>
<p>If the arrays to be zipped have different lengths, they are zipped up to
the last element of the shortest array and all remaining elements are
ignored.</p>
<p>This function is variadic, meaning that you can zip multiple arrays
together at once: <code><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">zip</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-str">&quot;A&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;B&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">,</span> <span class="typ-num">20</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code> yields
<code><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-str">&quot;A&quot;</span><span class="typ-punct">,</span> <span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-str">&quot;B&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code>.</p>`,example:null,self:!0,params:[{name:"exact",details:`<p>Whether all arrays have to have the same length.
For example, <code><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">zip</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">,</span> exact<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code> produces an
error.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"others",details:"<p>The arrays to zip with.</p>",example:null,types:["array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"fold",title:"Fold",keywords:[],oneliner:"Folds all items into a single value using an accumulator function.",element:!1,contextual:!1,details:"<p>Folds all items into a single value using an accumulator function.</p>",example:null,self:!0,params:[{name:"init",details:"<p>The initial value to start with.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"folder",details:`<p>The folding function. Must have two parameters: One for the
accumulated value and one for an item.</p>`,example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["array"],name:"sum",title:"Sum",keywords:[],oneliner:"Sums all items (works for all types that can be added).",element:!1,contextual:!1,details:"<p>Sums all items (works for all types that can be added).</p>",example:null,self:!0,params:[{name:"default",details:`<p>What to return if the array is empty. Must be set if the array can
be empty.</p>`,example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["array"],name:"product",title:"Product",keywords:[],oneliner:"Calculates the product all items (works for all types that can be",element:!1,contextual:!1,details:`<p>Calculates the product all items (works for all types that can be
multiplied).</p>`,example:null,self:!0,params:[{name:"default",details:`<p>What to return if the array is empty. Must be set if the array can
be empty.</p>`,example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["array"],name:"any",title:"Any",keywords:[],oneliner:"Whether the given function returns `{true}` for any item in the array.",element:!1,contextual:!1,details:'<p>Whether the given function returns <code><span class="typ-key">true</span></code> for any item in the array.</p>',example:null,self:!0,params:[{name:"test",details:"<p>The function to apply to each item. Must return a boolean.</p>",example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["array"],name:"all",title:"All",keywords:[],oneliner:"Whether the given function returns `{true}` for all items in the array.",element:!1,contextual:!1,details:'<p>Whether the given function returns <code><span class="typ-key">true</span></code> for all items in the array.</p>',example:null,self:!0,params:[{name:"test",details:"<p>The function to apply to each item. Must return a boolean.</p>",example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["array"],name:"flatten",title:"Flatten",keywords:[],oneliner:"Combine all nested arrays into a single flat one.",element:!1,contextual:!1,details:"<p>Combine all nested arrays into a single flat one.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["array"],name:"rev",title:"Reverse",keywords:[],oneliner:"Return a new array with the same items, but in reverse order.",element:!1,contextual:!1,details:"<p>Return a new array with the same items, but in reverse order.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["array"],name:"split",title:"Split",keywords:[],oneliner:"Split the array at occurrences of the specified value.",element:!1,contextual:!1,details:"<p>Split the array at occurrences of the specified value.</p>",example:null,self:!0,params:[{name:"at",details:"<p>The value to split at.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"join",title:"Join",keywords:[],oneliner:"Combine all items in the array into one.",element:!1,contextual:!1,details:"<p>Combine all items in the array into one.</p>",example:null,self:!0,params:[{name:"separator",details:"<p>A value to insert between each item of the array.</p>",example:null,types:["any","none"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"last",details:"<p>An alternative separator between the last two items.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["array"],name:"intersperse",title:"Intersperse",keywords:[],oneliner:"Returns an array with a copy of the separator value placed between",element:!1,contextual:!1,details:`<p>Returns an array with a copy of the separator value placed between
adjacent elements.</p>`,example:null,self:!0,params:[{name:"separator",details:"<p>The value that will be placed between each adjacent element.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"chunks",title:"Chunks",keywords:[],oneliner:"Splits an array into non-overlapping chunks, starting at the beginning,",element:!1,contextual:!1,details:`<p>Splits an array into non-overlapping chunks, starting at the beginning,
ending with a single remainder chunk.</p>
<p>All chunks but the last have <code>chunk-size</code> elements.
If <code>exact</code> is set to <code><span class="typ-key">true</span></code>, the remainder is dropped if it
contains less than <code>chunk-size</code> elements.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> array <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">,</span> <span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">8</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">array</span><span class="typ-punct">.</span><span class="typ-func">chunks</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">array</span><span class="typ-punct">.</span><span class="typ-func">chunks</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">,</span> exact<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d64f57a9bfdb457cc1c3ec7dd90a0ed6.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"chunk-size",details:"<p>How many elements each chunk may at most contain.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"exact",details:"<p>Whether to keep the remainder if its size is less than <code>chunk-size</code>.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"windows",title:"Windows",keywords:[],oneliner:"Returns sliding windows of `window-size` elements over an array.",element:!1,contextual:!1,details:`<p>Returns sliding windows of <code>window-size</code> elements over an array.</p>
<p>If the array length is less than <code>window-size</code>, this will return an empty array.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> array <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">,</span> <span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">8</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">array</span><span class="typ-punct">.</span><span class="typ-func">windows</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b0018a5d3e91d8de1520ce37e07a577b.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"window-size",details:"<p>How many elements each window will contain.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"sorted",title:"Sorted",keywords:[],oneliner:"Return a sorted version of this array, optionally by a given key",element:!1,contextual:!1,details:`<p>Return a sorted version of this array, optionally by a given key
function. The sorting algorithm used is stable.</p>
<p>Returns an error if two values could not be compared or if the key
function (if given) yields an error.</p>`,example:null,self:!0,params:[{name:"key",details:`<p>If given, applies this function to the elements in the array to
determine the keys to sort by.</p>`,example:null,types:["function"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"dedup",title:"Deduplicate",keywords:[],oneliner:"Deduplicates all items in the array.",element:!1,contextual:!1,details:`<p>Deduplicates all items in the array.</p>
<p>Returns a new array with all duplicate items removed. Only the first
element of each duplicate is kept.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">dedup</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/95345f4be031e62b38bddd1d29ed5569.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"key",details:`<p>If given, applies this function to the elements in the array to
determine the keys to deduplicate by.</p>`,example:null,types:["function"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["array"],name:"to-dict",title:"To Dict",keywords:[],oneliner:"Converts an array of pairs into a dictionary.",element:!1,contextual:!1,details:`<p>Converts an array of pairs into a dictionary.
The first value of each pair is the key, the second the value.</p>
<p>If the same key occurs multiple times, the last value is selected.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;apples&quot;</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;peaches&quot;</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;apples&quot;</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-dict</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c85ea47ea8bcfc9ada4bce640cfd0181.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["dictionary"],scope:[]},{path:["array"],name:"reduce",title:"Reduce",keywords:[],oneliner:"Reduces the elements to a single one, by repeatedly applying a reducing",element:!1,contextual:!1,details:`<p>Reduces the elements to a single one, by repeatedly applying a reducing
operation.</p>
<p>If the array is empty, returns <code><span class="typ-key">none</span></code>, otherwise, returns the result
of the reduction.</p>
<p>The reducing function is a closure with two arguments: an &quot;accumulator&quot;,
and an element.</p>
<p>For arrays with at least one element, this is the same as <a href="/docs/reference/foundations/array/#definitions-fold" title="\`array.fold\`"><code>array.fold</code></a>
with the first element of the array as the initial accumulator value,
folding every subsequent element into it.</p>`,example:null,self:!0,params:[{name:"reducer",details:`<p>The reducing function. Must have two parameters: One for the
accumulated value and one for an item.</p>`,example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/assert/",title:"Assert",description:"Documentation for the `assert` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-condition",name:"condition",children:[]},{id:"parameters-message",name:"message",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-eq",name:"Assert Equal",children:[{id:"definitions-eq-left",name:"left",children:[]},{id:"definitions-eq-right",name:"right",children:[]},{id:"definitions-eq-message",name:"message",children:[]}]},{id:"definitions-ne",name:"Assert Not Equal",children:[{id:"definitions-ne-left",name:"left",children:[]},{id:"definitions-ne-right",name:"right",children:[]},{id:"definitions-ne-message",name:"message",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"assert",title:"Assert",keywords:[],oneliner:"Ensures that a condition is fulfilled.",element:!1,contextual:!1,details:`<p>Ensures that a condition is fulfilled.</p>
<p>Fails with an error if the condition is not fulfilled. Does not
produce any output in the document.</p>
<p>If you wish to test equality between two values, see
<a href="/docs/reference/foundations/assert/#definitions-eq"><code>assert.eq</code></a> and <a href="/docs/reference/foundations/assert/#definitions-ne"><code>assert.ne</code></a>.</p>
<h2 id="example">Example</h2>
<pre><code><span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">&lt;</span> <span class="typ-num">2</span><span class="typ-punct">,</span> message<span class="typ-punct">:</span> <span class="typ-str">&quot;math broke&quot;</span><span class="typ-punct">)</span>
</code></pre>`,example:null,self:!1,params:[{name:"condition",details:"<p>The condition that must be true for the assertion to pass.</p>",example:null,types:["bool"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"message",details:"<p>The error message when the assertion fails.</p>",example:null,types:["str"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:[],scope:[{path:["assert"],name:"eq",title:"Assert Equal",keywords:[],oneliner:"Ensures that two values are equal.",element:!1,contextual:!1,details:`<p>Ensures that two values are equal.</p>
<p>Fails with an error if the first value is not equal to the second. Does not
produce any output in the document.</p>`,example:`<pre><code><span class="typ-pol">#</span><span class="typ-pol">assert</span><span class="typ-punct">.</span><span class="typ-func">eq</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">,</span> <span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre>`,self:!1,params:[{name:"left",details:"<p>The first value to compare.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"right",details:"<p>The second value to compare.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"message",details:`<p>An optional message to display on error instead of the representations
of the compared values.</p>`,example:null,types:["str"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:[],scope:[]},{path:["assert"],name:"ne",title:"Assert Not Equal",keywords:[],oneliner:"Ensures that two values are not equal.",element:!1,contextual:!1,details:`<p>Ensures that two values are not equal.</p>
<p>Fails with an error if the first value is equal to the second. Does not
produce any output in the document.</p>`,example:`<pre><code><span class="typ-pol">#</span><span class="typ-pol">assert</span><span class="typ-punct">.</span><span class="typ-func">ne</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
</code></pre>`,self:!1,params:[{name:"left",details:"<p>The first value to compare.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"right",details:"<p>The second value to compare.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"message",details:`<p>An optional message to display on error instead of the representations
of the compared values.</p>`,example:null,types:["str"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:[],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/auto/",title:"Auto",description:"Documentation for the Auto type.",part:null,outline:[{id:"summary",name:"Summary",children:[]}],body:{kind:"type",content:{name:"auto",title:"Auto",keywords:[],oneliner:"A value that indicates a smart default.",details:`<p>A value that indicates a smart default.</p>
<p>The auto type has exactly one value: <code><span class="typ-key">auto</span></code>.</p>
<p>Parameters that support the <code><span class="typ-key">auto</span></code> value have some smart default or
contextual behaviour. A good example is the <a href="/docs/reference/text/text/#parameters-dir">text direction</a>
parameter. Setting it to <code><span class="typ-key">auto</span></code> lets Typst automatically determine the
direction from the <a href="/docs/reference/text/text/#parameters-lang">text language</a>.</p>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/foundations/bool/",title:"Boolean",description:"Documentation for the Boolean type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]}],body:{kind:"type",content:{name:"bool",title:"Boolean",keywords:[],oneliner:"A type with two states.",details:`<p>A type with two states.</p>
<p>The boolean type has two values: <code><span class="typ-key">true</span></code> and <code><span class="typ-key">false</span></code>. It denotes whether
something is active or enabled.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">false</span> <span class="typ-escape">\\</span>
<span class="typ-key">#</span><span class="typ-key">true</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">&lt;</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ddb71aac260d736a8e522bc7598e2129.png" alt="Preview" /></div></div>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/foundations/bytes/",title:"Bytes",description:"Documentation for the Bytes type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-len",name:"Length",children:[]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-index",name:"index",children:[]},{id:"definitions-at-default",name:"default",children:[]}]},{id:"definitions-slice",name:"Slice",children:[{id:"definitions-slice-start",name:"start",children:[]},{id:"definitions-slice-end",name:"end",children:[]},{id:"definitions-slice-count",name:"count",children:[]}]}]}],body:{kind:"type",content:{name:"bytes",title:"Bytes",keywords:[],oneliner:"A sequence of bytes.",details:`<p>A sequence of bytes.</p>
<p>This is conceptually similar to an array of <a href="/docs/reference/foundations/int/">integers</a> between <code><span class="typ-num">0</span></code>
and <code><span class="typ-num">255</span></code>, but represented much more efficiently. You can iterate over it
using a <a href="/docs/reference/scripting/#loops">for loop</a>.</p>
<p>You can convert</p>
<ul>
<li>a <a href="/docs/reference/foundations/str/">string</a> or an <a href="/docs/reference/foundations/array/" title="array">array</a> of integers to bytes with the <a href="/docs/reference/foundations/bytes/" title="\`bytes\`"><code>bytes</code></a>
constructor</li>
<li>bytes to a string with the <a href="/docs/reference/foundations/str/" title="\`str\`"><code>str</code></a> constructor, with UTF-8 encoding</li>
<li>bytes to an array of integers with the <a href="/docs/reference/foundations/array/" title="\`array\`"><code>array</code></a> constructor</li>
</ul>
<p>When <a href="/docs/reference/data-loading/read/">reading</a> data from a file, you can decide whether to load it
as a string or as raw bytes.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">123</span><span class="typ-punct">,</span> <span class="typ-num">160</span><span class="typ-punct">,</span> <span class="typ-num">22</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-str">&quot;Hello 😃&quot;</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> data <span class="typ-op">=</span> <span class="typ-func">read</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;rhino.png&quot;</span><span class="typ-punct">,</span>
  encoding<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-comment">// Magic bytes.</span>
<span class="typ-func">#</span><span class="typ-func">array</span><span class="typ-punct">(</span>data<span class="typ-punct">.</span><span class="typ-func">slice</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">str</span><span class="typ-punct">(</span>data<span class="typ-punct">.</span><span class="typ-func">slice</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/770e25a929d2d104d889fa0406b02fb1.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"bytes",title:"Construct",keywords:[],oneliner:"Converts a value to bytes.",element:!1,contextual:!1,details:`<p>Converts a value to bytes.</p>
<ul>
<li>Strings are encoded in UTF-8.</li>
<li>Arrays of integers between <code><span class="typ-num">0</span></code> and <code><span class="typ-num">255</span></code> are converted directly. The
dedicated byte representation is much more efficient than the array
representation and thus typically used for large byte buffers (e.g. image
data).</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-str">&quot;Hello 😃&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">123</span><span class="typ-punct">,</span> <span class="typ-num">160</span><span class="typ-punct">,</span> <span class="typ-num">22</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d26a4f282feb40e7dc0662a9c64acec3.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to bytes.</p>",example:null,types:["str","bytes","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bytes"],scope:[]},scope:[{path:["bytes"],name:"len",title:"Length",keywords:[],oneliner:"The length in bytes.",element:!1,contextual:!1,details:"<p>The length in bytes.</p>",example:null,self:!0,params:[],returns:["int"],scope:[]},{path:["bytes"],name:"at",title:"At",keywords:[],oneliner:"Returns the byte at the specified index. Returns the default value if",element:!1,contextual:!1,details:`<p>Returns the byte at the specified index. Returns the default value if
the index is out of bounds or fails with an error if no default value
was specified.</p>`,example:null,self:!0,params:[{name:"index",details:"<p>The index at which to retrieve the byte.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the index is out of bounds.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["bytes"],name:"slice",title:"Slice",keywords:[],oneliner:"Extracts a subslice of the bytes. Fails with an error if the start or end",element:!1,contextual:!1,details:`<p>Extracts a subslice of the bytes. Fails with an error if the start or end
index is out of bounds.</p>`,example:null,self:!0,params:[{name:"start",details:"<p>The start index (inclusive).</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"end",details:`<p>The end index (exclusive). If omitted, the whole slice until the end
is extracted.</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"count",details:`<p>The number of items to extract. This is equivalent to passing
<code>start + count</code> as the <code>end</code> position. Mutually exclusive with
<code>end</code>.</p>`,example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["bytes"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/calc",title:"Calculation",description:"Documentation for the calc functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-abs",name:"Absolute",children:[{id:"functions-abs-value",name:"value",children:[]}]},{id:"functions-pow",name:"Power",children:[{id:"functions-pow-base",name:"base",children:[]},{id:"functions-pow-exponent",name:"exponent",children:[]}]},{id:"functions-exp",name:"Exponential",children:[{id:"functions-exp-exponent",name:"exponent",children:[]}]},{id:"functions-sqrt",name:"Square Root",children:[{id:"functions-sqrt-value",name:"value",children:[]}]},{id:"functions-root",name:"Root",children:[{id:"functions-root-radicand",name:"radicand",children:[]},{id:"functions-root-index",name:"index",children:[]}]},{id:"functions-sin",name:"Sine",children:[{id:"functions-sin-angle",name:"angle",children:[]}]},{id:"functions-cos",name:"Cosine",children:[{id:"functions-cos-angle",name:"angle",children:[]}]},{id:"functions-tan",name:"Tangent",children:[{id:"functions-tan-angle",name:"angle",children:[]}]},{id:"functions-asin",name:"Arcsine",children:[{id:"functions-asin-value",name:"value",children:[]}]},{id:"functions-acos",name:"Arccosine",children:[{id:"functions-acos-value",name:"value",children:[]}]},{id:"functions-atan",name:"Arctangent",children:[{id:"functions-atan-value",name:"value",children:[]}]},{id:"functions-atan2",name:"Four-quadrant Arctangent",children:[{id:"functions-atan2-x",name:"x",children:[]},{id:"functions-atan2-y",name:"y",children:[]}]},{id:"functions-sinh",name:"Hyperbolic Sine",children:[{id:"functions-sinh-value",name:"value",children:[]}]},{id:"functions-cosh",name:"Hyperbolic Cosine",children:[{id:"functions-cosh-value",name:"value",children:[]}]},{id:"functions-tanh",name:"Hyperbolic Tangent",children:[{id:"functions-tanh-value",name:"value",children:[]}]},{id:"functions-log",name:"Logarithm",children:[{id:"functions-log-value",name:"value",children:[]},{id:"functions-log-base",name:"base",children:[]}]},{id:"functions-ln",name:"Natural Logarithm",children:[{id:"functions-ln-value",name:"value",children:[]}]},{id:"functions-fact",name:"Factorial",children:[{id:"functions-fact-number",name:"number",children:[]}]},{id:"functions-perm",name:"Permutation",children:[{id:"functions-perm-base",name:"base",children:[]},{id:"functions-perm-numbers",name:"numbers",children:[]}]},{id:"functions-binom",name:"Binomial",children:[{id:"functions-binom-n",name:"n",children:[]},{id:"functions-binom-k",name:"k",children:[]}]},{id:"functions-gcd",name:"Greatest Common Divisor",children:[{id:"functions-gcd-a",name:"a",children:[]},{id:"functions-gcd-b",name:"b",children:[]}]},{id:"functions-lcm",name:"Least Common Multiple",children:[{id:"functions-lcm-a",name:"a",children:[]},{id:"functions-lcm-b",name:"b",children:[]}]},{id:"functions-floor",name:"Floor",children:[{id:"functions-floor-value",name:"value",children:[]}]},{id:"functions-ceil",name:"Ceil",children:[{id:"functions-ceil-value",name:"value",children:[]}]},{id:"functions-trunc",name:"Truncate",children:[{id:"functions-trunc-value",name:"value",children:[]}]},{id:"functions-fract",name:"Fractional",children:[{id:"functions-fract-value",name:"value",children:[]}]},{id:"functions-round",name:"Round",children:[{id:"functions-round-value",name:"value",children:[]},{id:"functions-round-digits",name:"digits",children:[]}]},{id:"functions-clamp",name:"Clamp",children:[{id:"functions-clamp-value",name:"value",children:[]},{id:"functions-clamp-min",name:"min",children:[]},{id:"functions-clamp-max",name:"max",children:[]}]},{id:"functions-min",name:"Minimum",children:[{id:"functions-min-values",name:"values",children:[]}]},{id:"functions-max",name:"Maximum",children:[{id:"functions-max-values",name:"values",children:[]}]},{id:"functions-even",name:"Even",children:[{id:"functions-even-value",name:"value",children:[]}]},{id:"functions-odd",name:"Odd",children:[{id:"functions-odd-value",name:"value",children:[]}]},{id:"functions-rem",name:"Remainder",children:[{id:"functions-rem-dividend",name:"dividend",children:[]},{id:"functions-rem-divisor",name:"divisor",children:[]}]},{id:"functions-div-euclid",name:"Euclidean Division",children:[{id:"functions-div-euclid-dividend",name:"dividend",children:[]},{id:"functions-div-euclid-divisor",name:"divisor",children:[]}]},{id:"functions-rem-euclid",name:"Euclidean Remainder",children:[{id:"functions-rem-euclid-dividend",name:"dividend",children:[]},{id:"functions-rem-euclid-divisor",name:"divisor",children:[]}]},{id:"functions-quo",name:"Quotient",children:[{id:"functions-quo-dividend",name:"dividend",children:[]},{id:"functions-quo-divisor",name:"divisor",children:[]}]}]}],body:{kind:"group",content:{name:"calc",title:"Calculation",details:`<p>Module for calculations and processing of numeric values.</p>
<p>These definitions are part of the <code>calc</code> module and not imported by default.
In addition to the functions listed below, the <code>calc</code> module also defines
the constants <code>pi</code>, <code>tau</code>, <code>e</code>, and <code>inf</code>.</p>`,functions:[{path:["calc"],name:"abs",title:"Absolute",keywords:[],oneliner:"Calculates the absolute value of a numeric value.",element:!1,contextual:!1,details:"<p>Calculates the absolute value of a numeric value.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">abs</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">abs</span><span class="typ-punct">(</span><span class="typ-num">5pt</span> <span class="typ-op">-</span> <span class="typ-num">2cm</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">abs</span><span class="typ-punct">(</span><span class="typ-num">2fr</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">abs</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-342.440&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/96640fc3945dfa4d6cc80b0710cb8e75.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value whose absolute value to calculate.</p>",example:null,types:["int","float","length","angle","ratio","fraction","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["calc"],name:"pow",title:"Power",keywords:[],oneliner:"Raises a value to some exponent.",element:!1,contextual:!1,details:"<p>Raises a value to some exponent.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">pow</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">pow</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;2.5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/51891c9de7e1b19ddcac9c900699c0a3.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"base",details:'<p>The base of the power.</p>\n<p>If this is a <a href="/docs/reference/foundations/decimal/" title="`decimal`"><code>decimal</code></a>, the exponent can only be an <a href="/docs/reference/foundations/int/">integer</a>.</p>',example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"exponent",details:"<p>The exponent of the power.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"exp",title:"Exponential",keywords:[],oneliner:"Raises a value to some exponent of e.",element:!1,contextual:!1,details:"<p>Raises a value to some exponent of e.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">exp</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7a2b3f31404fd766baa33454f302ea72.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"exponent",details:"<p>The exponent of the power.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"sqrt",title:"Square Root",keywords:[],oneliner:"Calculates the square root of a number.",element:!1,contextual:!1,details:"<p>Calculates the square root of a number.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">sqrt</span><span class="typ-punct">(</span><span class="typ-num">16</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">sqrt</span><span class="typ-punct">(</span><span class="typ-num">2.5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6828f5d257820bc69f1818bc7ed5a3f1.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number whose square root to calculate. Must be non-negative.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"root",title:"Root",keywords:[],oneliner:"Calculates the real nth root of a number.",element:!1,contextual:!1,details:`<p>Calculates the real nth root of a number.</p>
<p>If the number is negative, then n must be odd.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">root</span><span class="typ-punct">(</span><span class="typ-num">16.0</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">root</span><span class="typ-punct">(</span><span class="typ-num">27.0</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7ac5bcb51d05c0d2079af80ae60e12b1.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"radicand",details:"<p>The expression to take the root of</p>",example:null,types:["float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"index",details:"<p>Which root of the radicand to take</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"sin",title:"Sine",keywords:[],oneliner:"Calculates the sine of an angle.",element:!1,contextual:!1,details:`<p>Calculates the sine of an angle.</p>
<p>When called with an integer or a float, they will be interpreted as
radians.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">sin</span><span class="typ-punct">(</span><span class="typ-num">1.5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">sin</span><span class="typ-punct">(</span><span class="typ-num">90deg</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d2c616a883624ed957b9869392971de.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"angle",details:"<p>The angle whose sine to calculate.</p>",example:null,types:["int","float","angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"cos",title:"Cosine",keywords:[],oneliner:"Calculates the cosine of an angle.",element:!1,contextual:!1,details:`<p>Calculates the cosine of an angle.</p>
<p>When called with an integer or a float, they will be interpreted as
radians.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">cos</span><span class="typ-punct">(</span><span class="typ-num">1.5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">cos</span><span class="typ-punct">(</span><span class="typ-num">90deg</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e06460c24eefcf669b27ad1a613d0a8c.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"angle",details:"<p>The angle whose cosine to calculate.</p>",example:null,types:["int","float","angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"tan",title:"Tangent",keywords:[],oneliner:"Calculates the tangent of an angle.",element:!1,contextual:!1,details:`<p>Calculates the tangent of an angle.</p>
<p>When called with an integer or a float, they will be interpreted as
radians.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">tan</span><span class="typ-punct">(</span><span class="typ-num">1.5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">tan</span><span class="typ-punct">(</span><span class="typ-num">90deg</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4de7e13591aabc388c8dfe8104aa9083.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"angle",details:"<p>The angle whose tangent to calculate.</p>",example:null,types:["int","float","angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"asin",title:"Arcsine",keywords:[],oneliner:"Calculates the arcsine of a number.",element:!1,contextual:!1,details:"<p>Calculates the arcsine of a number.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">asin</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">asin</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e927648bae851d9d9e1dc5c0d8dc0e7.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number whose arcsine to calculate. Must be between -1 and 1.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["angle"],scope:[]},{path:["calc"],name:"acos",title:"Arccosine",keywords:[],oneliner:"Calculates the arccosine of a number.",element:!1,contextual:!1,details:"<p>Calculates the arccosine of a number.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">acos</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">acos</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f498d887f0eca38b72f9896f02bcd0ff.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number whose arcsine to calculate. Must be between -1 and 1.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["angle"],scope:[]},{path:["calc"],name:"atan",title:"Arctangent",keywords:[],oneliner:"Calculates the arctangent of a number.",element:!1,contextual:!1,details:"<p>Calculates the arctangent of a number.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">atan</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">atan</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/341be4060ea2d1122f68811452be907e.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number whose arctangent to calculate.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["angle"],scope:[]},{path:["calc"],name:"atan2",title:"Four-quadrant Arctangent",keywords:[],oneliner:"Calculates the four-quadrant arctangent of a coordinate.",element:!1,contextual:!1,details:`<p>Calculates the four-quadrant arctangent of a coordinate.</p>
<p>The arguments are <code>(x, y)</code>, not <code>(y, x)</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">atan2</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">atan2</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/49977c274a22d4b5f76214256ac6db0a.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"x",details:"<p>The X coordinate.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"y",details:"<p>The Y coordinate.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["angle"],scope:[]},{path:["calc"],name:"sinh",title:"Hyperbolic Sine",keywords:[],oneliner:"Calculates the hyperbolic sine of a hyperbolic angle.",element:!1,contextual:!1,details:"<p>Calculates the hyperbolic sine of a hyperbolic angle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">sinh</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">sinh</span><span class="typ-punct">(</span><span class="typ-num">1.5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a0fe3f7cd587fdc0533bdd0481b81c6b.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The hyperbolic angle whose hyperbolic sine to calculate.</p>",example:null,types:["float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"cosh",title:"Hyperbolic Cosine",keywords:[],oneliner:"Calculates the hyperbolic cosine of a hyperbolic angle.",element:!1,contextual:!1,details:"<p>Calculates the hyperbolic cosine of a hyperbolic angle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">cosh</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">cosh</span><span class="typ-punct">(</span><span class="typ-num">1.5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/98c9c3b70dc3f6a453c0798f751cf149.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The hyperbolic angle whose hyperbolic cosine to calculate.</p>",example:null,types:["float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"tanh",title:"Hyperbolic Tangent",keywords:[],oneliner:"Calculates the hyperbolic tangent of an hyperbolic angle.",element:!1,contextual:!1,details:"<p>Calculates the hyperbolic tangent of an hyperbolic angle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">tanh</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">tanh</span><span class="typ-punct">(</span><span class="typ-num">1.5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c18b51b73aa6d8882f2b9e4f3c74ec04.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The hyperbolic angle whose hyperbolic tangent to calculate.</p>",example:null,types:["float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"log",title:"Logarithm",keywords:[],oneliner:"Calculates the logarithm of a number.",element:!1,contextual:!1,details:`<p>Calculates the logarithm of a number.</p>
<p>If the base is not specified, the logarithm is calculated in base 10.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">log</span><span class="typ-punct">(</span><span class="typ-num">100</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d7eec691d297641ab9ec30411b105697.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number whose logarithm to calculate. Must be strictly positive.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"base",details:"<p>The base of the logarithm. May not be zero.</p>",example:null,types:["float"],strings:[],default:'<code><span class="typ-num">10.0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"ln",title:"Natural Logarithm",keywords:[],oneliner:"Calculates the natural logarithm of a number.",element:!1,contextual:!1,details:"<p>Calculates the natural logarithm of a number.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">ln</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span>e<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f425fc2bf9c4dd72ccc7c29c6adda67.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number whose logarithm to calculate. Must be strictly positive.</p>",example:null,types:["int","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["calc"],name:"fact",title:"Factorial",keywords:[],oneliner:"Calculates the factorial of a number.",element:!1,contextual:!1,details:"<p>Calculates the factorial of a number.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">fact</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f11cf529e623477156fd80b0dcb0e5ab.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"number",details:"<p>The number whose factorial to calculate. Must be non-negative.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"perm",title:"Permutation",keywords:[],oneliner:"Calculates a permutation.",element:!1,contextual:!1,details:`<p>Calculates a permutation.</p>
<p>Returns the <code>k</code>-permutation of <code>n</code>, or the number of ways to choose <code>k</code>
items from a set of <code>n</code> with regard to order.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-str">&quot;perm&quot;</span>(n, k) <span class="typ-math-op">&amp;</span>= n!<span class="typ-math-op">/</span><span class="typ-punct">(</span>(n <span class="typ-escape">-</span> k)!<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-str">&quot;perm&quot;</span>(5, 3) <span class="typ-math-op">&amp;</span>= <span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">perm</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/df6dbe6c18af7c9012d2d22be3706a2d.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"base",details:"<p>The base number. Must be non-negative.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"numbers",details:"<p>The number of permutations. Must be non-negative.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"binom",title:"Binomial",keywords:[],oneliner:"Calculates a binomial coefficient.",element:!1,contextual:!1,details:`<p>Calculates a binomial coefficient.</p>
<p>Returns the <code>k</code>-combination of <code>n</code>, or the number of ways to choose <code>k</code>
items from a set of <code>n</code> without regard to order.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">binom</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/cc9e9c9f0e47a0626a5cc44560ea56eb.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"n",details:"<p>The upper coefficient. Must be non-negative.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"k",details:"<p>The lower coefficient. Must be non-negative.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"gcd",title:"Greatest Common Divisor",keywords:[],oneliner:"Calculates the greatest common divisor of two integers.",element:!1,contextual:!1,details:"<p>Calculates the greatest common divisor of two integers.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">gcd</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">42</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2c65b897684dca3cf85c6972c5cef08e.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"a",details:"<p>The first integer.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"b",details:"<p>The second integer.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"lcm",title:"Least Common Multiple",keywords:[],oneliner:"Calculates the least common multiple of two integers.",element:!1,contextual:!1,details:"<p>Calculates the least common multiple of two integers.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">lcm</span><span class="typ-punct">(</span><span class="typ-num">96</span><span class="typ-punct">,</span> <span class="typ-num">13</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1b44fddba75374248596cc06eeefd9ae.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"a",details:"<p>The first integer.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"b",details:"<p>The second integer.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"floor",title:"Floor",keywords:[],oneliner:"Rounds a number down to the nearest integer.",element:!1,contextual:!1,details:'<p>Rounds a number down to the nearest integer.</p>\n<p>If the number is already an integer, it is returned unchanged.</p>\n<p>Note that this function will always return an <a href="/docs/reference/foundations/int/">integer</a>, and will\nerror if the resulting <a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/foundations/decimal/" title="`decimal`"><code>decimal</code></a> is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">floor</span><span class="typ-punct">(</span><span class="typ-num">500.1</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">floor</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">floor</span><span class="typ-punct">(</span><span class="typ-num">3.14</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">floor</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-3.14&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-op">-</span><span class="typ-num">4</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/313f2ebccba8502e9f8176f01ab7b937.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to round down.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"ceil",title:"Ceil",keywords:[],oneliner:"Rounds a number up to the nearest integer.",element:!1,contextual:!1,details:'<p>Rounds a number up to the nearest integer.</p>\n<p>If the number is already an integer, it is returned unchanged.</p>\n<p>Note that this function will always return an <a href="/docs/reference/foundations/int/">integer</a>, and will\nerror if the resulting <a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/foundations/decimal/" title="`decimal`"><code>decimal</code></a> is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">ceil</span><span class="typ-punct">(</span><span class="typ-num">500.1</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">ceil</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">ceil</span><span class="typ-punct">(</span><span class="typ-num">3.14</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">ceil</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-3.14&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2080ce7c7ae4361888014021a10957e7.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to round up.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"trunc",title:"Truncate",keywords:[],oneliner:"Returns the integer part of a number.",element:!1,contextual:!1,details:'<p>Returns the integer part of a number.</p>\n<p>If the number is already an integer, it is returned unchanged.</p>\n<p>Note that this function will always return an <a href="/docs/reference/foundations/int/">integer</a>, and will\nerror if the resulting <a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/foundations/decimal/" title="`decimal`"><code>decimal</code></a> is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">trunc</span><span class="typ-punct">(</span><span class="typ-num">15.9</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">trunc</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">trunc</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">3.7</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">trunc</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;8493.12949582390&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">8493</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d404d10340502ae710a17f0184e849b4.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to truncate.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["calc"],name:"fract",title:"Fractional",keywords:[],oneliner:"Returns the fractional part of a number.",element:!1,contextual:!1,details:`<p>Returns the fractional part of a number.</p>
<p>If the number is an integer, returns <code>0</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">fract</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">3.1</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">fract</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">0</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">fract</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;234.23949211&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;0.23949211&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e9555260964f7708a3111266e10e2fde.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to truncate.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"round",title:"Round",keywords:[],oneliner:"Rounds a number to the nearest integer away from zero.",element:!1,contextual:!1,details:`<p>Rounds a number to the nearest integer away from zero.</p>
<p>Optionally, a number of decimal places can be specified.</p>
<p>If the number of digits is negative, its absolute value will indicate the
amount of significant integer digits to remove before the decimal point.</p>
<p>Note that this function will return the same type as the operand. That is,
applying <code>round</code> to a <a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a> will return a <code>float</code>, and to a <a href="/docs/reference/foundations/decimal/" title="\`decimal\`"><code>decimal</code></a>,
another <code>decimal</code>. You may explicitly convert the output of this function to
an integer with <a href="/docs/reference/foundations/int/" title="\`int\`"><code>int</code></a>, but note that such a conversion will error if the
<code>float</code> or <code>decimal</code> is larger than the maximum 64-bit signed integer or
smaller than the minimum integer.</p>
<p>In addition, this function can error if there is an attempt to round beyond
the maximum or minimum integer or <code>decimal</code>. If the number is a <code>float</code>,
such an attempt will cause <code>float<span class="typ-punct">.</span>inf</code> or <code><span class="typ-op">-</span>float<span class="typ-punct">.</span>inf</code> to be returned
for maximum and minimum respectively.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-num">3.1415</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-num">3.14</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-num">3.5</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">4.0</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-num">3333.45</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3300.0</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">48953.45</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-op">-</span><span class="typ-num">49000.0</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-num">3333</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">3300</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">48953</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-op">-</span><span class="typ-num">49000</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-6.5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-7&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;7.123456789&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-num">6</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;7.123457&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;3333.45&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;3300&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-48953.45&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;-49000&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/abbaebb3d369294ce5102b3f34bd4e9f.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to round.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"digits",details:`<p>If positive, the number of decimal places.</p>
<p>If negative, the number of significant integer digits that should be
removed before the decimal point.</p>`,example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"clamp",title:"Clamp",keywords:[],oneliner:"Clamps a number between a minimum and maximum value.",element:!1,contextual:!1,details:"<p>Clamps a number between a minimum and maximum value.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">clamp</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">clamp</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">10</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">5</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">clamp</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">,</span> <span class="typ-num">10</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-num">6</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">clamp</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;5.45&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;45.9&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;5.45&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">assert</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">clamp</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;5.45&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;6.75&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-num">12</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;6.75&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/225b4df5b8f535fe39a4e84b5022bf08.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to clamp.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"min",details:"<p>The inclusive minimum value.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"max",details:"<p>The inclusive maximum value.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"min",title:"Minimum",keywords:[],oneliner:"Determines the minimum of a sequence of values.",element:!1,contextual:!1,details:"<p>Determines the minimum of a sequence of values.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">min</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">20</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">min</span><span class="typ-punct">(</span><span class="typ-str">&quot;typst&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;is&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;cool&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/13fff674df2c58d40e1601a8286872bc.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"values",details:`<p>The sequence of values from which to extract the minimum.
Must not be empty.</p>`,example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["any"],scope:[]},{path:["calc"],name:"max",title:"Maximum",keywords:[],oneliner:"Determines the maximum of a sequence of values.",element:!1,contextual:!1,details:"<p>Determines the maximum of a sequence of values.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">max</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">20</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">max</span><span class="typ-punct">(</span><span class="typ-str">&quot;typst&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;is&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;cool&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/71c267b131cefba22b3057d62253d5c1.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"values",details:`<p>The sequence of values from which to extract the maximum.
Must not be empty.</p>`,example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["any"],scope:[]},{path:["calc"],name:"even",title:"Even",keywords:[],oneliner:"Determines whether an integer is even.",element:!1,contextual:!1,details:"<p>Determines whether an integer is even.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">even</span><span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">even</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">filter</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span>even<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/62c9fdff206cb4571b1811e03416e15b.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to check for evenness.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["calc"],name:"odd",title:"Odd",keywords:[],oneliner:"Determines whether an integer is odd.",element:!1,contextual:!1,details:"<p>Determines whether an integer is odd.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">filter</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span>odd<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f38d19909d8f39d8090b091e4114a85b.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The number to check for oddness.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["calc"],name:"rem",title:"Remainder",keywords:[],oneliner:"Calculates the remainder of two numbers.",element:!1,contextual:!1,details:`<p>Calculates the remainder of two numbers.</p>
<p>The value <code>calc.rem(x, y)</code> always has the same sign as <code>x</code>, and is smaller
in magnitude than <code>y</code>.</p>
<p>This can error if given a <a href="/docs/reference/foundations/decimal/" title="\`decimal\`"><code>decimal</code></a> input and the dividend is too small in
magnitude compared to the divisor.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem</span><span class="typ-punct">(</span><span class="typ-num">1.75</span><span class="typ-punct">,</span> <span class="typ-num">0.5</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e986ea20c0699ddbf65eefcdc60663ad.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"dividend",details:"<p>The dividend of the remainder.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"divisor",details:"<p>The divisor of the remainder.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"div-euclid",title:"Euclidean Division",keywords:[],oneliner:"Performs euclidean division of two numbers.",element:!1,contextual:!1,details:`<p>Performs euclidean division of two numbers.</p>
<p>The result of this computation is that of a division rounded to the integer
<code>n</code> such that the dividend is greater than or equal to <code>n</code> times the divisor.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">div-euclid</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">div-euclid</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">div-euclid</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">div-euclid</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">div-euclid</span><span class="typ-punct">(</span><span class="typ-num">1.75</span><span class="typ-punct">,</span> <span class="typ-num">0.5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">div-euclid</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.75&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;0.5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ccd9ed7b0727fa429132bc76e8e2cf18.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"dividend",details:"<p>The dividend of the division.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"divisor",details:"<p>The divisor of the division.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"rem-euclid",title:"Euclidean Remainder",keywords:[],oneliner:"This calculates the least nonnegative remainder of a division.",element:!1,contextual:!1,details:`<p>This calculates the least nonnegative remainder of a division.</p>
<p>Warning: Due to a floating point round-off error, the remainder may equal
the absolute value of the divisor if the dividend is much smaller in
magnitude than the divisor and the dividend is negative. This only applies
for floating point inputs.</p>
<p>In addition, this can error if given a <a href="/docs/reference/foundations/decimal/" title="\`decimal\`"><code>decimal</code></a> input and the dividend is
too small in magnitude compared to the divisor.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem-euclid</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem-euclid</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem-euclid</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem-euclid</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">7</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem-euclid</span><span class="typ-punct">(</span><span class="typ-num">1.75</span><span class="typ-punct">,</span> <span class="typ-num">0.5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">rem-euclid</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.75&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;0.5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b3907d690b4861e83b05fc19988686e9.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"dividend",details:"<p>The dividend of the remainder.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"divisor",details:"<p>The divisor of the remainder.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","float","decimal"],scope:[]},{path:["calc"],name:"quo",title:"Quotient",keywords:[],oneliner:"Calculates the quotient (floored division) of two numbers.",element:!1,contextual:!1,details:'<p>Calculates the quotient (floored division) of two numbers.</p>\n<p>Note that this function will always return an <a href="/docs/reference/foundations/int/">integer</a>, and will\nerror if the resulting <a href="/docs/reference/foundations/float/" title="`float`"><code>float</code></a> or <a href="/docs/reference/foundations/decimal/" title="`decimal`"><code>decimal</code></a> is larger than the maximum\n64-bit signed integer or smaller than the minimum for that type.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-str">&quot;quo&quot;</span>(a, b) <span class="typ-math-op">&amp;</span>= <span class="typ-func">floor</span><span class="typ-punct">(</span>a<span class="typ-math-op">/</span>b<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-str">&quot;quo&quot;</span>(14, 5) <span class="typ-math-op">&amp;</span>= <span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">quo</span><span class="typ-punct">(</span><span class="typ-num">14</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-str">&quot;quo&quot;</span>(3.46, 0.5) <span class="typ-math-op">&amp;</span>= <span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">quo</span><span class="typ-punct">(</span><span class="typ-num">3.46</span><span class="typ-punct">,</span> <span class="typ-num">0.5</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/e3e27fe6a650e9da04d534e295291929.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"dividend",details:"<p>The dividend of the quotient.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"divisor",details:"<p>The divisor of the quotient.</p>",example:null,types:["int","float","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/content/",title:"Content",description:"Documentation for the Content type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"representation",name:"Representation",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-func",name:"Func",children:[]},{id:"definitions-has",name:"Has",children:[{id:"definitions-has-field",name:"field",children:[]}]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-field",name:"field",children:[]},{id:"definitions-at-default",name:"default",children:[]}]},{id:"definitions-fields",name:"Fields",children:[]},{id:"definitions-location",name:"Location",children:[]}]}],body:{kind:"type",content:{name:"content",title:"Content",keywords:[],oneliner:"A piece of document content.",details:`<p>A piece of document content.</p>
<p>This type is at the heart of Typst. All markup you write and most
<a href="/docs/reference/foundations/function/">functions</a> you call produce content values. You can create a
content value by enclosing markup in square brackets. This is also how you
pass content to functions.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Type of <span class="typ-strong">*Hello!*</span> is
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-punct">[</span><span class="typ-strong">*Hello!*</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/bfee26a5998fe52487d12fecf612e96b.png" alt="Preview" /></div></div>
<p>Content can be added with the <code>+</code> operator,
<a href="/docs/reference/scripting/#blocks">joined together</a> and multiplied with integers. Wherever
content is expected, you can also pass a <a href="/docs/reference/foundations/str/">string</a> or <code><span class="typ-key">none</span></code>.</p>
<h2 id="representation">Representation</h2>
<p>Content consists of elements with fields. When constructing an element with
its <em>element function,</em> you provide these fields as arguments and when you
have a content value, you can access its fields with <a href="/docs/reference/scripting/#field-access">field access
syntax</a>.</p>
<p>Some fields are required: These must be provided when constructing an
element and as a consequence, they are always available through field access
on content of that type. Required fields are marked as such in the
documentation.</p>
<p>Most fields are optional: Like required fields, they can be passed to the
element function to configure them for a single element. However, these can
also be configured with <a href="/docs/reference/styling/#set-rules">set rules</a> to apply them to
all elements within a scope. Optional fields are only available with field
access syntax when they were explicitly passed to the element function, not
when they result from a set rule.</p>
<p>Each element has a default appearance. However, you can also completely
customize its appearance with a <a href="/docs/reference/styling/#show-rules">show rule</a>. The show
rule is passed the element. It can access the element's field and produce
arbitrary content from it.</p>
<p>In the web app, you can hover over a content variable to see exactly which
elements the content is composed of and what fields they have.
Alternatively, you can inspect the output of the <a href="/docs/reference/foundations/repr/" title="\`repr\`"><code>repr</code></a> function.</p>`,constructor:null,scope:[{path:["content"],name:"func",title:"Func",keywords:[],oneliner:"The content's element function. This function can be used to create the element",element:!1,contextual:!1,details:`<p>The content's element function. This function can be used to create the element
contained in this content. It can be used in set and show rules for the
element. Can be compared with global functions to check whether you have
a specific
kind of element.</p>`,example:null,self:!0,params:[],returns:["function"],scope:[]},{path:["content"],name:"has",title:"Has",keywords:[],oneliner:"Whether the content has the specified field.",element:!1,contextual:!1,details:"<p>Whether the content has the specified field.</p>",example:null,self:!0,params:[{name:"field",details:"<p>The field to look for.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["content"],name:"at",title:"At",keywords:[],oneliner:"Access the specified field on the content. Returns the default value if",element:!1,contextual:!1,details:`<p>Access the specified field on the content. Returns the default value if
the field does not exist or fails with an error if no default value was
specified.</p>`,example:null,self:!0,params:[{name:"field",details:"<p>The field to access.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the field does not exist.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["content"],name:"fields",title:"Fields",keywords:[],oneliner:"Returns the fields of this content.",element:!1,contextual:!1,details:"<p>Returns the fields of this content.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">10cm</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">10cm</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">fields</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ad63cf6d9368885d3b90461fb752eede.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["dictionary"],scope:[]},{path:["content"],name:"location",title:"Location",keywords:[],oneliner:"The location of the content. This is only available on content returned",element:!1,contextual:!1,details:`<p>The location of the content. This is only available on content returned
by <a href="/docs/reference/introspection/query/" title="query">query</a> or provided by a <a href="/docs/reference/styling/#show-rules">show rule</a>,
for other content it will be <code><span class="typ-key">none</span></code>. The resulting location can be
used with <a href="/docs/reference/introspection/counter/">counters</a>, <a href="/docs/reference/introspection/state/" title="state">state</a> and <a href="/docs/reference/introspection/query/">queries</a>.</p>`,example:null,self:!0,params:[],returns:["none","location"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/datetime/",title:"Datetime",description:"Documentation for the Datetime type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"datetime-and-duration",name:"Datetime And Duration",children:[]},{id:"format",name:"Format",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-year",name:"year",children:[]},{id:"constructor-month",name:"month",children:[]},{id:"constructor-day",name:"day",children:[]},{id:"constructor-hour",name:"hour",children:[]},{id:"constructor-minute",name:"minute",children:[]},{id:"constructor-second",name:"second",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-today",name:"Today",children:[{id:"definitions-today-offset",name:"offset",children:[]}]},{id:"definitions-display",name:"Display",children:[{id:"definitions-display-pattern",name:"pattern",children:[]}]},{id:"definitions-year",name:"Year",children:[]},{id:"definitions-month",name:"Month",children:[]},{id:"definitions-weekday",name:"Weekday",children:[]},{id:"definitions-day",name:"Day",children:[]},{id:"definitions-hour",name:"Hour",children:[]},{id:"definitions-minute",name:"Minute",children:[]},{id:"definitions-second",name:"Second",children:[]},{id:"definitions-ordinal",name:"Ordinal",children:[]}]}],body:{kind:"type",content:{name:"datetime",title:"Datetime",keywords:[],oneliner:"Represents a date, a time, or a combination of both.",details:`<p>Represents a date, a time, or a combination of both.</p>
<p>Can be created by either specifying a custom datetime using this type's
constructor function or getting the current date with
<a href="/docs/reference/foundations/datetime/#definitions-today"><code>datetime.today</code></a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> date <span class="typ-op">=</span> <span class="typ-func">datetime</span><span class="typ-punct">(</span>
  year<span class="typ-punct">:</span> <span class="typ-num">2020</span><span class="typ-punct">,</span>
  month<span class="typ-punct">:</span> <span class="typ-num">10</span><span class="typ-punct">,</span>
  day<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">date</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">date</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;y:[year repr:last_two]&quot;</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> time <span class="typ-op">=</span> <span class="typ-func">datetime</span><span class="typ-punct">(</span>
  hour<span class="typ-punct">:</span> <span class="typ-num">18</span><span class="typ-punct">,</span>
  minute<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  second<span class="typ-punct">:</span> <span class="typ-num">23</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">time</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">time</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;h:[hour repr:12][period]&quot;</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a461aed2975ff357d51ec4696077f016.png" alt="Preview" /></div></div>
<h2 id="datetime-and-duration">Datetime and Duration</h2>
<p>You can get a <a href="/docs/reference/foundations/duration/" title="duration">duration</a> by subtracting two datetime:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> first-of-march <span class="typ-op">=</span> <span class="typ-func">datetime</span><span class="typ-punct">(</span>day<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> month<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span> year<span class="typ-punct">:</span> <span class="typ-num">2024</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> first-of-jan <span class="typ-op">=</span> <span class="typ-func">datetime</span><span class="typ-punct">(</span>day<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> month<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> year<span class="typ-punct">:</span> <span class="typ-num">2024</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> distance <span class="typ-op">=</span> first-of-march <span class="typ-op">-</span> first-of-jan
<span class="typ-pol">#</span><span class="typ-pol">distance</span><span class="typ-punct">.</span><span class="typ-func">hours</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c932ecacbcdf47d325d853d8ca07a.png" alt="Preview" /></div></div>
<p>You can also add/subtract a datetime and a duration to retrieve a new,
offset datetime:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> date <span class="typ-op">=</span> <span class="typ-func">datetime</span><span class="typ-punct">(</span>day<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> month<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span> year<span class="typ-punct">:</span> <span class="typ-num">2024</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> two-days <span class="typ-op">=</span> <span class="typ-func">duration</span><span class="typ-punct">(</span>days<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> two-days-earlier <span class="typ-op">=</span> date <span class="typ-op">-</span> two-days
<span class="typ-key">#</span><span class="typ-key">let</span> two-days-later <span class="typ-op">=</span> date <span class="typ-op">+</span> two-days

<span class="typ-pol">#</span><span class="typ-pol">date</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">two-days-earlier</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">two-days-later</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/53c881b10e1ccad7234fc75a04e81f26.png" alt="Preview" /></div></div>
<h2 id="format">Format</h2>
<p>You can specify a customized formatting using the
<a href="/docs/reference/foundations/datetime/#definitions-display"><code>display</code></a> method. The format of a datetime is
specified by providing <em>components</em> with a specified number of <em>modifiers</em>.
A component represents a certain part of the datetime that you want to
display, and with the help of modifiers you can define how you want to
display that component. In order to display a component, you wrap the name
of the component in square brackets (e.g. <code>[year]</code> will display the year).
In order to add modifiers, you add a space after the component name followed
by the name of the modifier, a colon and the value of the modifier (e.g.
<code>[month repr:short]</code> will display the short representation of the month).</p>
<p>The possible combination of components and their respective modifiers is as
follows:</p>
<ul>
<li><code>year</code>: Displays the year of the datetime.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
year is padded.</li>
<li><code>repr</code> Can be either <code>full</code> in which case the full year is displayed or
<code>last_two</code> in which case only the last two digits are displayed.</li>
<li><code>sign</code>: Can be either <code>automatic</code> or <code>mandatory</code>. Specifies when the
sign should be displayed.</li>
</ul>
</li>
<li><code>month</code>: Displays the month of the datetime.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
month is padded.</li>
<li><code>repr</code>: Can be either <code>numerical</code>, <code>long</code> or <code>short</code>. Specifies if the
month should be displayed as a number or a word. Unfortunately, when
choosing the word representation, it can currently only display the
English version. In the future, it is planned to support localization.</li>
</ul>
</li>
<li><code>day</code>: Displays the day of the datetime.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
day is padded.</li>
</ul>
</li>
<li><code>week_number</code>: Displays the week number of the datetime.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
week number is padded.</li>
<li><code>repr</code>: Can be either <code>ISO</code>, <code>sunday</code> or <code>monday</code>. In the case of <code>ISO</code>,
week numbers are between 1 and 53, while the other ones are between 0
and 53.</li>
</ul>
</li>
<li><code>weekday</code>: Displays the weekday of the date.
<ul>
<li><code>repr</code> Can be either <code>long</code>, <code>short</code>, <code>sunday</code> or <code>monday</code>. In the case
of <code>long</code> and <code>short</code>, the corresponding English name will be displayed
(same as for the month, other languages are currently not supported). In
the case of <code>sunday</code> and <code>monday</code>, the numerical value will be displayed
(assuming Sunday and Monday as the first day of the week, respectively).</li>
<li><code>one_indexed</code>: Can be either <code>true</code> or <code>false</code>. Defines whether the
numerical representation of the week starts with 0 or 1.</li>
</ul>
</li>
<li><code>hour</code>: Displays the hour of the date.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
hour is padded.</li>
<li><code>repr</code>: Can be either <code>24</code> or <code>12</code>. Changes whether the hour is
displayed in the 24-hour or 12-hour format.</li>
</ul>
</li>
<li><code>period</code>: The AM/PM part of the hour
<ul>
<li><code>case</code>: Can be <code>lower</code> to display it in lower case and <code>upper</code> to
display it in upper case.</li>
</ul>
</li>
<li><code>minute</code>: Displays the minute of the date.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
minute is padded.</li>
</ul>
</li>
<li><code>second</code>: Displays the second of the date.
<ul>
<li><code>padding</code>: Can be either <code>zero</code>, <code>space</code> or <code>none</code>. Specifies how the
second is padded.</li>
</ul>
</li>
</ul>
<p>Keep in mind that not always all components can be used. For example, if you
create a new datetime with <code><span class="typ-func">datetime</span><span class="typ-punct">(</span>year<span class="typ-punct">:</span> <span class="typ-num">2023</span><span class="typ-punct">,</span> month<span class="typ-punct">:</span> <span class="typ-num">10</span><span class="typ-punct">,</span> day<span class="typ-punct">:</span> <span class="typ-num">13</span><span class="typ-punct">)</span></code>, it
will be stored as a plain date internally, meaning that you cannot use
components such as <code>hour</code> or <code>minute</code>, which would only work on datetimes
that have a specified time.</p>`,constructor:{path:[],name:"datetime",title:"Construct",keywords:[],oneliner:"Creates a new datetime.",element:!1,contextual:!1,details:`<p>Creates a new datetime.</p>
<p>You can specify the <a href="/docs/reference/foundations/datetime/" title="datetime">datetime</a> using a year, month, day, hour, minute,
and second.</p>
<p><em>Note</em>: Depending on which components of the datetime you specify, Typst
will store it in one of the following three ways:</p>
<ul>
<li>If you specify year, month and day, Typst will store just a date.</li>
<li>If you specify hour, minute and second, Typst will store just a time.</li>
<li>If you specify all of year, month, day, hour, minute and second, Typst
will store a full datetime.</li>
</ul>
<p>Depending on how it is stored, the <a href="/docs/reference/foundations/datetime/#definitions-display"><code>display</code></a> method
will choose a different formatting by default.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">datetime</span><span class="typ-punct">(</span>
  year<span class="typ-punct">:</span> <span class="typ-num">2012</span><span class="typ-punct">,</span>
  month<span class="typ-punct">:</span> <span class="typ-num">8</span><span class="typ-punct">,</span>
  day<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/359380955c551d551a3cd2829e196d14.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"year",details:"<p>The year of the datetime.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"month",details:"<p>The month of the datetime.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"day",details:"<p>The day of the datetime.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"hour",details:"<p>The hour of the datetime.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"minute",details:"<p>The minute of the datetime.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"second",details:"<p>The second of the datetime.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["datetime"],scope:[]},scope:[{path:["datetime"],name:"today",title:"Today",keywords:[],oneliner:"Returns the current date.",element:!1,contextual:!1,details:"<p>Returns the current date.</p>",example:`<div class="previewed-code"><pre><code>Today&#39;s date is
<span class="typ-pol">#</span><span class="typ-pol">datetime</span><span class="typ-punct">.</span><span class="typ-func">today</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>.
</code></pre><div class="preview"><img src="/docs/assets/1ffc70935ad2b7dfcfe06f2333c5982f.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"offset",details:`<p>An offset to apply to the current UTC date. If set to <code><span class="typ-key">auto</span></code>, the
offset will be the local offset.</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["datetime"],scope:[]},{path:["datetime"],name:"display",title:"Display",keywords:[],oneliner:"Displays the datetime in a specified format.",element:!1,contextual:!1,details:`<p>Displays the datetime in a specified format.</p>
<p>Depending on whether you have defined just a date, a time or both, the
default format will be different. If you specified a date, it will be
<code>[year]-[month]-[day]</code>. If you specified a time, it will be
<code>[hour]:[minute]:[second]</code>. In the case of a datetime, it will be
<code>[year]-[month]-[day] [hour]:[minute]:[second]</code>.</p>
<p>See the <a href="/docs/reference/foundations/datetime/#format">format syntax</a> for more information.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The format used to display the datetime.</p>",example:null,types:["auto","str"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]},{path:["datetime"],name:"year",title:"Year",keywords:[],oneliner:"The year if it was specified, or `{none}` for times without a date.",element:!1,contextual:!1,details:'<p>The year if it was specified, or <code><span class="typ-key">none</span></code> for times without a date.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"month",title:"Month",keywords:[],oneliner:"The month if it was specified, or `{none}` for times without a date.",element:!1,contextual:!1,details:'<p>The month if it was specified, or <code><span class="typ-key">none</span></code> for times without a date.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"weekday",title:"Weekday",keywords:[],oneliner:"The weekday (counting Monday as 1) or `{none}` for times without a date.",element:!1,contextual:!1,details:'<p>The weekday (counting Monday as 1) or <code><span class="typ-key">none</span></code> for times without a date.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"day",title:"Day",keywords:[],oneliner:"The day if it was specified, or `{none}` for times without a date.",element:!1,contextual:!1,details:'<p>The day if it was specified, or <code><span class="typ-key">none</span></code> for times without a date.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"hour",title:"Hour",keywords:[],oneliner:"The hour if it was specified, or `{none}` for dates without a time.",element:!1,contextual:!1,details:'<p>The hour if it was specified, or <code><span class="typ-key">none</span></code> for dates without a time.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"minute",title:"Minute",keywords:[],oneliner:"The minute if it was specified, or `{none}` for dates without a time.",element:!1,contextual:!1,details:'<p>The minute if it was specified, or <code><span class="typ-key">none</span></code> for dates without a time.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"second",title:"Second",keywords:[],oneliner:"The second if it was specified, or `{none}` for dates without a time.",element:!1,contextual:!1,details:'<p>The second if it was specified, or <code><span class="typ-key">none</span></code> for dates without a time.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]},{path:["datetime"],name:"ordinal",title:"Ordinal",keywords:[],oneliner:"The ordinal (day of the year), or `{none}` for times without a date.",element:!1,contextual:!1,details:'<p>The ordinal (day of the year), or <code><span class="typ-key">none</span></code> for times without a date.</p>',example:null,self:!0,params:[],returns:["none","int"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/decimal/",title:"Decimal",description:"Documentation for the Decimal type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"construction-and-casts",name:"Construction And Casts",children:[]},{id:"operations",name:"Operations",children:[]},{id:"displaying-decimals",name:"Displaying Decimals",children:[]},{id:"precision-and-limits",name:"Precision And Limits",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]}],body:{kind:"type",content:{name:"decimal",title:"Decimal",keywords:[],oneliner:"A fixed-point decimal number type.",details:`<p>A fixed-point decimal number type.</p>
<p>This type should be used for precise arithmetic operations on numbers
represented in base 10. A typical use case is representing currency.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Decimal: <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;0.1&quot;</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;0.2&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
Float: <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">0.1</span> <span class="typ-op">+</span> <span class="typ-num">0.2</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/adaf553812980f635e3d7dd391851992.png" alt="Preview" /></div></div>
<h2 id="construction-and-casts">Construction and casts</h2>
<p>To create a decimal number, use the <code><span class="typ-func">decimal</span><span class="typ-punct">(</span>string<span class="typ-punct">)</span></code> constructor, such as
in <code><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;3.141592653&quot;</span><span class="typ-punct">)</span></code> <strong>(note the double quotes!)</strong>. This
constructor preserves all given fractional digits, provided they are
representable as per the limits specified below (otherwise, an error is
raised).</p>
<p>You can also convert any <a href="/docs/reference/foundations/int/">integer</a> to a decimal with the
<code><span class="typ-func">decimal</span><span class="typ-punct">(</span>int<span class="typ-punct">)</span></code> constructor, e.g. <code><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-num">59</span><span class="typ-punct">)</span></code>. However, note that
constructing a decimal from a <a href="/docs/reference/foundations/float/">floating-point number</a>, while
supported, <strong>is an imprecise conversion and therefore discouraged.</strong> A
warning will be raised if Typst detects that there was an accidental <code>float</code>
to <code>decimal</code> cast through its constructor, e.g. if writing <code><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-num">3.14</span><span class="typ-punct">)</span></code>
(note the lack of double quotes, indicating this is an accidental <code>float</code>
cast and therefore imprecise). It is recommended to use strings for
constant decimal values instead (e.g. <code><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;3.14&quot;</span><span class="typ-punct">)</span></code>).</p>
<p>The precision of a <code>float</code> to <code>decimal</code> cast can be slightly improved by
rounding the result to 15 digits with <a href="/docs/reference/foundations/calc/#functions-round"><code>calc.round</code></a>, but there
are still no precision guarantees for that kind of conversion.</p>
<h2 id="operations">Operations</h2>
<p>Basic arithmetic operations are supported on two decimals and on pairs of
decimals and integers.</p>
<p>Built-in operations between <code>float</code> and <code>decimal</code> are not supported in order
to guard against accidental loss of precision. They will raise an error
instead.</p>
<p>Certain <code>calc</code> functions, such as trigonometric functions and power between
two real numbers, are also only supported for <code>float</code> (although raising
<code>decimal</code> to integer exponents is supported). You can opt into potentially
imprecise operations with the <code><span class="typ-func">float</span><span class="typ-punct">(</span>decimal<span class="typ-punct">)</span></code> constructor, which casts
the <code>decimal</code> number into a <code>float</code>, allowing for operations without
precision guarantees.</p>
<h2 id="displaying-decimals">Displaying decimals</h2>
<p>To display a decimal, simply insert the value into the document. To only
display a certain number of digits, <a href="/docs/reference/foundations/calc/#functions-round">round</a> the decimal first.
Localized formatting of decimals and other numbers is not yet supported, but
planned for the future.</p>
<p>You can convert decimals to strings using the <a href="/docs/reference/foundations/str/" title="\`str\`"><code>str</code></a> constructor. This way,
you can post-process the displayed representation, e.g. to replace the
period with a comma (as a stand-in for proper built-in localization to
languages that use the comma).</p>
<h2 id="precision-and-limits">Precision and limits</h2>
<p>A <code>decimal</code> number has a limit of 28 to 29 significant base-10 digits. This
includes the sum of digits before and after the decimal point. As such,
numbers with more fractional digits have a smaller range. The maximum and
minimum <code>decimal</code> numbers have a value of <code><span class="typ-num">79228162514264337593543950335</span></code>
and <code><span class="typ-op">-</span><span class="typ-num">79228162514264337593543950335</span></code> respectively. In contrast with
<a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a>, this type does not support infinity or NaN, so overflowing or
underflowing operations will raise an error.</p>
<p>Typical operations between <code>decimal</code> numbers, such as addition,
multiplication, and <a href="/docs/reference/foundations/calc/#functions-pow">power</a> to an integer, will be highly precise
due to their fixed-point representation. Note, however, that multiplication
and division may not preserve all digits in some edge cases: while they are
considered precise, digits past the limits specified above are rounded off
and lost, so some loss of precision beyond the maximum representable digits
is possible. Note that this behavior can be observed not only when dividing,
but also when multiplying by numbers between 0 and 1, as both operations can
push a number's fractional digits beyond the limits described above, leading
to rounding. When those two operations do not surpass the digit limits, they
are fully precise.</p>`,constructor:{path:[],name:"decimal",title:"Construct",keywords:[],oneliner:"Converts a value to a `decimal`.",element:!1,contextual:!1,details:`<p>Converts a value to a <code>decimal</code>.</p>
<p>It is recommended to use a string to construct the decimal number, or an
<a href="/docs/reference/foundations/int/">integer</a> (if desired). The string must contain a number in the
format <code><span class="typ-str">&quot;3.14159&quot;</span></code> (or <code><span class="typ-str">&quot;-3.141519&quot;</span></code> for negative numbers). The
fractional digits are fully preserved; if that's not possible due to the
limit of significant digits (around 28 to 29) having been reached, an
error is raised as the given decimal number wouldn't be representable.</p>
<p>While this constructor can be used with <a href="/docs/reference/foundations/float/">floating-point numbers</a>
to cast them to <code>decimal</code>, doing so is <strong>discouraged</strong> as <strong>this cast is
inherently imprecise.</strong> It is easy to accidentally perform this cast by
writing <code><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-num">1.234</span><span class="typ-punct">)</span></code> (note the lack of double quotes), which is
why Typst will emit a warning in that case. Please write
<code><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.234&quot;</span><span class="typ-punct">)</span></code> instead for that particular case (initialization of
a constant decimal). Also note that floats that are NaN or infinite
cannot be cast to decimals and will raise an error.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.222222222222222&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/78725cdd6816745645cbbf033d84df9c.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to a decimal.</p>",example:null,types:["int","float","str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["decimal"],scope:[]},scope:[]}},children:[]},{route:"/docs/reference/foundations/dictionary/",title:"Dictionary",description:"Documentation for the Dictionary type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-len",name:"Length",children:[]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-key",name:"key",children:[]},{id:"definitions-at-default",name:"default",children:[]}]},{id:"definitions-insert",name:"Insert",children:[{id:"definitions-insert-key",name:"key",children:[]},{id:"definitions-insert-value",name:"value",children:[]}]},{id:"definitions-remove",name:"Remove",children:[{id:"definitions-remove-key",name:"key",children:[]},{id:"definitions-remove-default",name:"default",children:[]}]},{id:"definitions-keys",name:"Keys",children:[]},{id:"definitions-values",name:"Values",children:[]},{id:"definitions-pairs",name:"Pairs",children:[]}]}],body:{kind:"type",content:{name:"dictionary",title:"Dictionary",keywords:[],oneliner:"A map from string keys to values.",details:`<p>A map from string keys to values.</p>
<p>You can construct a dictionary by enclosing comma-separated <code>key: value</code>
pairs in parentheses. The values do not have to be of the same type. Since
empty parentheses already yield an empty array, you have to use the special
<code>(:)</code> syntax to create an empty dictionary.</p>
<p>A dictionary is conceptually similar to an array, but it is indexed by
strings instead of integers. You can access and create dictionary entries
with the <code>.at()</code> method. If you know the key statically, you can
alternatively use <a href="/docs/reference/scripting/#fields">field access notation</a> (<code>.key</code>) to
access the value. Dictionaries can be added with the <code>+</code> operator and
<a href="/docs/reference/scripting/#blocks">joined together</a>. To check whether a key is present in
the dictionary, use the <code>in</code> keyword.</p>
<p>You can iterate over the pairs in a dictionary using a <a href="/docs/reference/scripting/#loops">for
loop</a>. This will iterate in the order the pairs were
inserted / declared.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> dict <span class="typ-op">=</span> <span class="typ-punct">(</span>
  name<span class="typ-punct">:</span> <span class="typ-str">&quot;Typst&quot;</span><span class="typ-punct">,</span>
  born<span class="typ-punct">:</span> <span class="typ-num">2019</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-pol">name</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span>dict<span class="typ-punct">.</span>launch <span class="typ-op">=</span> <span class="typ-num">20</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-func">keys</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-func">values</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-str">&quot;born&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">dict</span><span class="typ-punct">.</span><span class="typ-func">insert</span><span class="typ-punct">(</span><span class="typ-str">&quot;city&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;Berlin &quot;</span><span class="typ-punct">)</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-str">&quot;name&quot;</span> <span class="typ-key">in</span> dict<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/790c5e755a1e82701531093723f25b74.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"dictionary",title:"Construct",keywords:[],oneliner:"Converts a value into a dictionary.",element:!1,contextual:!1,details:`<p>Converts a value into a dictionary.</p>
<p>Note that this function is only intended for conversion of a
dictionary-like value to a dictionary, not for creation of a dictionary
from individual pairs. Use the dictionary syntax <code>(key: value)</code> instead.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">dictionary</span><span class="typ-punct">(</span>sys<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-str">&quot;version&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6d7c066d924a0dadadd93d1db0199a6a.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to a dictionary.</p>",example:null,types:["module"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["dictionary"],scope:[]},scope:[{path:["dictionary"],name:"len",title:"Length",keywords:[],oneliner:"The number of pairs in the dictionary.",element:!1,contextual:!1,details:"<p>The number of pairs in the dictionary.</p>",example:null,self:!0,params:[],returns:["int"],scope:[]},{path:["dictionary"],name:"at",title:"At",keywords:[],oneliner:"Returns the value associated with the specified key in the dictionary.",element:!1,contextual:!1,details:`<p>Returns the value associated with the specified key in the dictionary.
May be used on the left-hand side of an assignment if the key is already
present in the dictionary. Returns the default value if the key is not
part of the dictionary or fails with an error if no default value was
specified.</p>`,example:null,self:!0,params:[{name:"key",details:"<p>The key at which to retrieve the item.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the key is not part of the dictionary.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["dictionary"],name:"insert",title:"Insert",keywords:[],oneliner:"Inserts a new pair into the dictionary. If the dictionary already",element:!1,contextual:!1,details:`<p>Inserts a new pair into the dictionary. If the dictionary already
contains this key, the value is updated.</p>`,example:null,self:!0,params:[{name:"key",details:"<p>The key of the pair that should be inserted.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"value",details:"<p>The value of the pair that should be inserted.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:[],scope:[]},{path:["dictionary"],name:"remove",title:"Remove",keywords:[],oneliner:"Removes a pair from the dictionary by key and return the value.",element:!1,contextual:!1,details:"<p>Removes a pair from the dictionary by key and return the value.</p>",example:null,self:!0,params:[{name:"key",details:"<p>The key of the pair to remove.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the key does not exist.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["dictionary"],name:"keys",title:"Keys",keywords:[],oneliner:"Returns the keys of the dictionary as an array in insertion order.",element:!1,contextual:!1,details:"<p>Returns the keys of the dictionary as an array in insertion order.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["dictionary"],name:"values",title:"Values",keywords:[],oneliner:"Returns the values of the dictionary as an array in insertion order.",element:!1,contextual:!1,details:"<p>Returns the values of the dictionary as an array in insertion order.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["dictionary"],name:"pairs",title:"Pairs",keywords:[],oneliner:"Returns the keys and values of the dictionary as an array of pairs. Each",element:!1,contextual:!1,details:`<p>Returns the keys and values of the dictionary as an array of pairs. Each
pair is represented as an array of length two.</p>`,example:null,self:!0,params:[],returns:["array"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/duration/",title:"Duration",description:"Documentation for the Duration type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-seconds",name:"seconds",children:[]},{id:"constructor-minutes",name:"minutes",children:[]},{id:"constructor-hours",name:"hours",children:[]},{id:"constructor-days",name:"days",children:[]},{id:"constructor-weeks",name:"weeks",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-seconds",name:"Seconds",children:[]},{id:"definitions-minutes",name:"Minutes",children:[]},{id:"definitions-hours",name:"Hours",children:[]},{id:"definitions-days",name:"Days",children:[]},{id:"definitions-weeks",name:"Weeks",children:[]}]}],body:{kind:"type",content:{name:"duration",title:"Duration",keywords:[],oneliner:"Represents a positive or negative span of time.",details:"<p>Represents a positive or negative span of time.</p>",constructor:{path:[],name:"duration",title:"Construct",keywords:[],oneliner:"Creates a new duration.",element:!1,contextual:!1,details:`<p>Creates a new duration.</p>
<p>You can specify the <a href="/docs/reference/foundations/duration/" title="duration">duration</a> using weeks, days, hours, minutes and
seconds. You can also get a duration by subtracting two
<a href="/docs/reference/foundations/datetime/">datetimes</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">duration</span><span class="typ-punct">(</span>
  days<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  hours<span class="typ-punct">:</span> <span class="typ-num">12</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">hours</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d1fcbfdcf09c422141ad1f73ab7522d6.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"seconds",details:"<p>The number of seconds.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"minutes",details:"<p>The number of minutes.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"hours",details:"<p>The number of hours.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"days",details:"<p>The number of days.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"weeks",details:"<p>The number of weeks.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["duration"],scope:[]},scope:[{path:["duration"],name:"seconds",title:"Seconds",keywords:[],oneliner:"The duration expressed in seconds.",element:!1,contextual:!1,details:`<p>The duration expressed in seconds.</p>
<p>This function returns the total duration represented in seconds as a
floating-point number rather than the second component of the duration.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["duration"],name:"minutes",title:"Minutes",keywords:[],oneliner:"The duration expressed in minutes.",element:!1,contextual:!1,details:`<p>The duration expressed in minutes.</p>
<p>This function returns the total duration represented in minutes as a
floating-point number rather than the second component of the duration.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["duration"],name:"hours",title:"Hours",keywords:[],oneliner:"The duration expressed in hours.",element:!1,contextual:!1,details:`<p>The duration expressed in hours.</p>
<p>This function returns the total duration represented in hours as a
floating-point number rather than the second component of the duration.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["duration"],name:"days",title:"Days",keywords:[],oneliner:"The duration expressed in days.",element:!1,contextual:!1,details:`<p>The duration expressed in days.</p>
<p>This function returns the total duration represented in days as a
floating-point number rather than the second component of the duration.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["duration"],name:"weeks",title:"Weeks",keywords:[],oneliner:"The duration expressed in weeks.",element:!1,contextual:!1,details:`<p>The duration expressed in weeks.</p>
<p>This function returns the total duration represented in weeks as a
floating-point number rather than the second component of the duration.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/eval/",title:"Evaluate",description:"Documentation for the `eval` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-source",name:"source",children:[]},{id:"parameters-mode",name:"mode",children:[]},{id:"parameters-scope",name:"scope",children:[]}]}],body:{kind:"func",content:{path:[],name:"eval",title:"Evaluate",keywords:[],oneliner:"Evaluates a string as Typst code.",element:!1,contextual:!1,details:`<p>Evaluates a string as Typst code.</p>
<p>This function should only be used as a last resort.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span><span class="typ-str">&quot;1 + 1&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span><span class="typ-str">&quot;(1, 2, 3, 4)&quot;</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span><span class="typ-str">&quot;*Markup!*&quot;</span><span class="typ-punct">,</span> mode<span class="typ-punct">:</span> <span class="typ-str">&quot;markup&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
</code></pre><div class="preview"><img src="/docs/assets/26891d65b950cb5e327986d12ee971ac.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"source",details:"<p>A string of Typst code to evaluate.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"mode",details:`<p>The <a href="/docs/reference/syntax/#modes">syntactical mode</a> in which the string is
parsed.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span><span class="typ-str">&quot;= Heading&quot;</span><span class="typ-punct">,</span> mode<span class="typ-punct">:</span> <span class="typ-str">&quot;markup&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span><span class="typ-str">&quot;1_2^3&quot;</span><span class="typ-punct">,</span> mode<span class="typ-punct">:</span> <span class="typ-str">&quot;math&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9eea1000413c8d39c4074a9e62a9ff6c.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"code",details:"<p>Evaluate as code, as after a hash.</p>"},{string:"markup",details:"<p>Evaluate as markup, like in a Typst file.</p>"},{string:"math",details:"<p>Evaluate as math, as in an equation.</p>"}],default:'<code><span class="typ-str">&quot;code&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"scope",details:"<p>A scope of definitions that are made available.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span><span class="typ-str">&quot;x + 1&quot;</span><span class="typ-punct">,</span> scope<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">eval</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;abc/xyz&quot;</span><span class="typ-punct">,</span>
  mode<span class="typ-punct">:</span> <span class="typ-str">&quot;math&quot;</span><span class="typ-punct">,</span>
  scope<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    abc<span class="typ-punct">:</span> <span class="typ-math-delim">$</span>a + b + c<span class="typ-math-delim">$</span><span class="typ-punct">,</span>
    xyz<span class="typ-punct">:</span> <span class="typ-math-delim">$</span>x + y + z<span class="typ-math-delim">$</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1f24cfcc0b85c4a072298e838b2c2bd4.png" alt="Preview" /></div></div>`,types:["dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]}},children:[]},{route:"/docs/reference/foundations/float/",title:"Float",description:"Documentation for the Float type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-is-nan",name:"Is Nan",children:[]},{id:"definitions-is-infinite",name:"Is Infinite",children:[]},{id:"definitions-signum",name:"Signum",children:[]},{id:"definitions-from-bytes",name:"From Bytes",children:[{id:"definitions-from-bytes-bytes",name:"bytes",children:[]},{id:"definitions-from-bytes-endian",name:"endian",children:[]}]},{id:"definitions-to-bytes",name:"To Bytes",children:[{id:"definitions-to-bytes-endian",name:"endian",children:[]}]}]}],body:{kind:"type",content:{name:"float",title:"Float",keywords:[],oneliner:"A floating-point number.",details:`<p>A floating-point number.</p>
<p>A limited-precision representation of a real number. Typst uses 64 bits to
store floats. Wherever a float is expected, you can also pass an
<a href="/docs/reference/foundations/int/">integer</a>.</p>
<p>You can convert a value to a float with this type's constructor.</p>
<p>NaN and positive infinity are available as <code>float<span class="typ-punct">.</span>nan</code> and <code>float<span class="typ-punct">.</span>inf</code>
respectively.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">3.14</span> <span class="typ-escape">\\</span>
<span class="typ-num">#</span><span class="typ-num">1e4</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">10</span> <span class="typ-op">/</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/50913bbb0cff7b5035e1156f45239edc.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"float",title:"Construct",keywords:[],oneliner:"Converts a value to a float.",element:!1,contextual:!1,details:`<p>Converts a value to a float.</p>
<ul>
<li>Booleans are converted to <code>0.0</code> or <code>1.0</code>.</li>
<li>Integers are converted to the closest 64-bit float. For integers with
absolute value less than <code>calc<span class="typ-punct">.</span><span class="typ-func">pow</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">53</span><span class="typ-punct">)</span></code>, this conversion is
exact.</li>
<li>Ratios are divided by 100%.</li>
<li>Strings are parsed in base 10 to the closest 64-bit float. Exponential
notation is supported.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">float</span><span class="typ-punct">(</span><span class="typ-key">false</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">float</span><span class="typ-punct">(</span><span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">float</span><span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">float</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">float</span><span class="typ-punct">(</span><span class="typ-str">&quot;2.7&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">float</span><span class="typ-punct">(</span><span class="typ-str">&quot;1e5&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e661d2fad6ca47baae21d01ffe5da5a7.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to a float.</p>",example:null,types:["bool","int","float","ratio","str","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["float"],scope:[]},scope:[{path:["float"],name:"is-nan",title:"Is Nan",keywords:[],oneliner:"Checks if a float is not a number.",element:!1,contextual:!1,details:`<p>Checks if a float is not a number.</p>
<p>In IEEE 754, more than one bit pattern represents a NaN. This function
returns <code>true</code> if the float is any of those bit patterns.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">is-nan</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">is-nan</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">is-nan</span><span class="typ-punct">(</span>float<span class="typ-punct">.</span>nan<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/993542e848fb73ba7a54535edae6fd1c.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["bool"],scope:[]},{path:["float"],name:"is-infinite",title:"Is Infinite",keywords:[],oneliner:"Checks if a float is infinite.",element:!1,contextual:!1,details:`<p>Checks if a float is infinite.</p>
<p>Floats can represent positive infinity and negative infinity. This
function returns <code><span class="typ-key">true</span></code> if the float is an infinity.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">is-infinite</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">is-infinite</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">is-infinite</span><span class="typ-punct">(</span>float<span class="typ-punct">.</span>inf<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a77d20c3f5ff7968ad4123314edff734.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["bool"],scope:[]},{path:["float"],name:"signum",title:"Signum",keywords:[],oneliner:"Calculates the sign of a floating point number.",element:!1,contextual:!1,details:`<p>Calculates the sign of a floating point number.</p>
<ul>
<li>If the number is positive (including <code><span class="typ-op">+</span><span class="typ-num">0.0</span></code>), returns <code><span class="typ-num">1.0</span></code>.</li>
<li>If the number is negative (including <code><span class="typ-op">-</span><span class="typ-num">0.0</span></code>), returns <code><span class="typ-op">-</span><span class="typ-num">1.0</span></code>.</li>
<li>If the number is NaN, returns <code>float<span class="typ-punct">.</span>nan</code>.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">5.0</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">5.0</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">0.0</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-pol">nan</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/15380eab718f5a08a5c7f4171e292c89.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["float"],scope:[]},{path:["float"],name:"from-bytes",title:"From Bytes",keywords:[],oneliner:"Converts bytes to a float.",element:!1,contextual:!1,details:"<p>Converts bytes to a float.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">from-bytes</span><span class="typ-punct">(</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">240</span><span class="typ-punct">,</span> <span class="typ-num">63</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">float</span><span class="typ-punct">.</span><span class="typ-func">from-bytes</span><span class="typ-punct">(</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">63</span><span class="typ-punct">,</span> <span class="typ-num">240</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span> endian<span class="typ-punct">:</span> <span class="typ-str">&quot;big&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3f53996c508281f11d4d1566c95b0e36.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"bytes",details:`<p>The bytes that should be converted to a float.</p>
<p>Must be of length exactly 8 so that the result fits into a 64-bit
float.</p>`,example:null,types:["bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"endian",details:"<p>The endianness of the conversion.</p>",example:null,types:["str"],strings:[{string:"big",details:`<p>Big-endian byte order: The highest-value byte is at the beginning of the
bytes.</p>`},{string:"little",details:`<p>Little-endian byte order: The lowest-value byte is at the beginning of
the bytes.</p>`}],default:'<code><span class="typ-str">&quot;little&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["float"],scope:[]},{path:["float"],name:"to-bytes",title:"To Bytes",keywords:[],oneliner:"Converts a float to bytes.",element:!1,contextual:!1,details:"<p>Converts a float to bytes.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">array</span><span class="typ-punct">(</span><span class="typ-num">1.0</span><span class="typ-punct">.</span><span class="typ-func">to-bytes</span><span class="typ-punct">(</span>endian<span class="typ-punct">:</span> <span class="typ-str">&quot;big&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">array</span><span class="typ-punct">(</span><span class="typ-num">1.0</span><span class="typ-punct">.</span><span class="typ-func">to-bytes</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a2576b5af056a0fea3c6eba337b8fd2e.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"endian",details:"<p>The endianness of the conversion.</p>",example:null,types:["str"],strings:[{string:"big",details:`<p>Big-endian byte order: The highest-value byte is at the beginning of the
bytes.</p>`},{string:"little",details:`<p>Little-endian byte order: The lowest-value byte is at the beginning of
the bytes.</p>`}],default:'<code><span class="typ-str">&quot;little&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["bytes"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/function/",title:"Function",description:"Documentation for the Function type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"element-functions",name:"Element Functions",children:[]},{id:"function-scopes",name:"Function Scopes",children:[]},{id:"defining-functions",name:"Defining Functions",children:[]},{id:"importing-functions",name:"Importing Functions",children:[]},{id:"unnamed",name:"Unnamed",children:[]},{id:"note-on-function-purity",name:"Note On Function Purity",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-with",name:"With",children:[{id:"definitions-with-arguments",name:"arguments",children:[]}]},{id:"definitions-where",name:"Where",children:[{id:"definitions-where-fields",name:"fields",children:[]}]}]}],body:{kind:"type",content:{name:"function",title:"Function",keywords:[],oneliner:"A mapping from argument values to a return value.",details:`<p>A mapping from argument values to a return value.</p>
<p>You can call a function by writing a comma-separated list of function
<em>arguments</em> enclosed in parentheses directly after the function name.
Additionally, you can pass any number of trailing content blocks arguments
to a function <em>after</em> the normal argument list. If the normal argument list
would become empty, it can be omitted. Typst supports positional and named
arguments. The former are identified by position and type, while the latter
are written as <code>name: value</code>.</p>
<p>Within math mode, function calls have special behaviour. See the
<a href="/docs/reference/math/">math documentation</a> for more details.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-comment">// Call a function.</span>
<span class="typ-func">#</span><span class="typ-func">list</span><span class="typ-punct">(</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-comment">// Named arguments and trailing</span>
<span class="typ-comment">// content blocks.</span>
<span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span>

<span class="typ-comment">// Version without parentheses.</span>
<span class="typ-func">#</span><span class="typ-func">list</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/6c4b82eb1fc2f01aa7f8f6041a97b44d.png" alt="Preview" /></div></div>
<p>Functions are a fundamental building block of Typst. Typst provides
functions for a variety of typesetting tasks. Moreover, the markup you write
is backed by functions and all styling happens through functions. This
reference lists all available functions and how you can use them. Please
also refer to the documentation about <a href="/docs/reference/styling/#set-rules">set</a> and
<a href="/docs/reference/styling/#show-rules">show</a> rules to learn about additional ways you can
work with functions in Typst.</p>
<h2 id="element-functions">Element functions</h2>
<p>Some functions are associated with <em>elements</em> like <a href="/docs/reference/model/heading/">headings</a> or
<a href="/docs/reference/model/table/">tables</a>. When called, these create an element of their respective
kind. In contrast to normal functions, they can further be used in <a href="/docs/reference/styling/#set-rules">set
rules</a>, <a href="/docs/reference/styling/#show-rules">show rules</a>, and
<a href="/docs/reference/foundations/selector/">selectors</a>.</p>
<h2 id="function-scopes">Function scopes</h2>
<p>Functions can hold related definitions in their own scope, similar to a
<a href="/docs/reference/scripting/#modules">module</a>. Examples of this are
<a href="/docs/reference/foundations/assert/#definitions-eq"><code>assert.eq</code></a> or <a href="/docs/reference/model/list/#definitions-item"><code>list.item</code></a>. However, this
feature is currently only available for built-in functions.</p>
<h2 id="defining-functions">Defining functions</h2>
<p>You can define your own function with a <a href="/docs/reference/scripting/#bindings">let binding</a>
that has a parameter list after the binding's name. The parameter list can
contain mandatory positional parameters, named parameters with default
values and <a href="/docs/reference/foundations/arguments/">argument sinks</a>.</p>
<p>The right-hand side of a function binding is the function body, which can be
a block or any other expression. It defines the function's return value and
can depend on the parameters. If the function body is a <a href="/docs/reference/scripting/#blocks">code
block</a>, the return value is the result of joining the
values of each expression in the block.</p>
<p>Within a function body, the <code>return</code> keyword can be used to exit early and
optionally specify a return value. If no explicit return value is given, the
body evaluates to the result of joining all expressions preceding the
<code>return</code>.</p>
<p>Functions that don't return any meaningful value return <a href="/docs/reference/foundations/none/" title="\`none\`"><code>none</code></a> instead.
The return type of such functions is not explicitly specified in the
documentation. (An example of this is <a href="/docs/reference/foundations/array/#definitions-push" title="\`array.push\`"><code>array.push</code></a>).</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">alert</span><span class="typ-punct">(</span>body<span class="typ-punct">,</span> fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>white<span class="typ-punct">)</span>
  <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>
    fill<span class="typ-punct">:</span> fill<span class="typ-punct">,</span>
    inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
    radius<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span><span class="typ-strong">*Warning:<span class="typ-escape">\\</span> <span class="typ-pol">#</span><span class="typ-pol">body</span>*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">alert</span><span class="typ-punct">[</span>
  Danger is imminent!
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">alert</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> blue<span class="typ-punct">)</span><span class="typ-punct">[</span>
  KEEP OFF TRACKS
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/523d61ac494ac86be85963210b8da485.png" alt="Preview" /></div></div>
<h2 id="importing-functions">Importing functions</h2>
<p>Functions can be imported from one file (<a href="/docs/reference/scripting/#modules"><code>module</code></a>) into
another using <code><span class="typ-key">import</span></code>. For example, assume that we have defined the <code>alert</code>
function from the previous example in a file called <code>foo.typ</code>. We can import
it into another file by writing <code><span class="typ-key">import</span> <span class="typ-str">&quot;foo.typ&quot;</span><span class="typ-punct">:</span> alert</code>.</p>
<h2 id="unnamed">Unnamed functions</h2>
<p>You can also created an unnamed function without creating a binding by
specifying a parameter list followed by <code>=&gt;</code> and the function body. If your
function has just one parameter, the parentheses around the parameter list
are optional. Unnamed functions are mainly useful for show rules, but also
for settable properties that take functions like the page function's
<a href="/docs/reference/layout/page/#parameters-footer"><code>footer</code></a> property.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-str">&quot;once?&quot;</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">it</span> <span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">]</span>
once?
</code></pre><div class="preview"><img src="/docs/assets/3974ff969e934e0de4f39bf5bceb13c8.png" alt="Preview" /></div></div>
<h2 id="note-on-function-purity">Note on function purity</h2>
<p>In Typst, all functions are <em>pure.</em> This means that for the same
arguments, they always return the same result. They cannot &quot;remember&quot; things to
produce another value when they are called a second time.</p>
<p>The only exception are built-in methods like
<a href="/docs/reference/foundations/array/#definitions-push"><code>array.push(value)</code></a>. These can modify the values they are
called on.</p>`,constructor:null,scope:[{path:["function"],name:"with",title:"With",keywords:[],oneliner:"Returns a new function that has the given arguments pre-applied.",element:!1,contextual:!1,details:"<p>Returns a new function that has the given arguments pre-applied.</p>",example:null,self:!0,params:[{name:"arguments",details:"<p>The arguments to apply to the function.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["function"],scope:[]},{path:["function"],name:"where",title:"Where",keywords:[],oneliner:"Returns a selector that filters for elements belonging to this function",element:!1,contextual:!1,details:`<p>Returns a selector that filters for elements belonging to this function
whose fields have the values of the given arguments.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span>
<span class="typ-heading">= Section</span>
<span class="typ-heading">== Subsection</span>
<span class="typ-heading">=== Sub-subsection</span>
</code></pre><div class="preview"><img src="/docs/assets/7bced7e9474f2a7839850aa9cba16e77.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"fields",details:"<p>The fields to filter for.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["selector"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/int/",title:"Integer",description:"Documentation for the Integer type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-signum",name:"Signum",children:[]},{id:"definitions-bit-not",name:"Bitwise NOT",children:[]},{id:"definitions-bit-and",name:"Bitwise AND",children:[{id:"definitions-bit-and-rhs",name:"rhs",children:[]}]},{id:"definitions-bit-or",name:"Bitwise OR",children:[{id:"definitions-bit-or-rhs",name:"rhs",children:[]}]},{id:"definitions-bit-xor",name:"Bitwise XOR",children:[{id:"definitions-bit-xor-rhs",name:"rhs",children:[]}]},{id:"definitions-bit-lshift",name:"Bitwise Left Shift",children:[{id:"definitions-bit-lshift-shift",name:"shift",children:[]}]},{id:"definitions-bit-rshift",name:"Bitwise Right Shift",children:[{id:"definitions-bit-rshift-shift",name:"shift",children:[]},{id:"definitions-bit-rshift-logical",name:"logical",children:[]}]},{id:"definitions-from-bytes",name:"From Bytes",children:[{id:"definitions-from-bytes-bytes",name:"bytes",children:[]},{id:"definitions-from-bytes-endian",name:"endian",children:[]},{id:"definitions-from-bytes-signed",name:"signed",children:[]}]},{id:"definitions-to-bytes",name:"To Bytes",children:[{id:"definitions-to-bytes-endian",name:"endian",children:[]},{id:"definitions-to-bytes-size",name:"size",children:[]}]}]}],body:{kind:"type",content:{name:"int",title:"Integer",keywords:[],oneliner:"A whole number.",details:`<p>A whole number.</p>
<p>The number can be negative, zero, or positive. As Typst uses 64 bits to
store integers, integers cannot be smaller than <code><span class="typ-op">-</span><span class="typ-num">9223372036854775808</span></code> or
larger than <code><span class="typ-num">9223372036854775807</span></code>.</p>
<p>The number can also be specified as hexadecimal, octal, or binary by
starting it with a zero followed by either <code>x</code>, <code>o</code>, or <code>b</code>.</p>
<p>You can convert a value to an integer with this type's constructor.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span> <span class="typ-op">+</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">2</span> <span class="typ-op">-</span> <span class="typ-num">5</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">3</span> <span class="typ-op">+</span> <span class="typ-num">4</span> <span class="typ-op">&lt;</span> <span class="typ-num">8</span><span class="typ-punct">)</span>

<span class="typ-num">#</span><span class="typ-num">0xff</span> <span class="typ-escape">\\</span>
<span class="typ-num">#</span><span class="typ-num">0o10</span> <span class="typ-escape">\\</span>
<span class="typ-num">#</span><span class="typ-num">0b1001</span>
</code></pre><div class="preview"><img src="/docs/assets/9b8052fc363c9d3cf291d84c42361f34.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"int",title:"Construct",keywords:[],oneliner:"Converts a value to an integer. Raises an error if there is an attempt",element:!1,contextual:!1,details:`<p>Converts a value to an integer. Raises an error if there is an attempt
to produce an integer larger than the maximum 64-bit signed integer
or smaller than the minimum 64-bit signed integer.</p>
<ul>
<li>Booleans are converted to <code>0</code> or <code>1</code>.</li>
<li>Floats and decimals are truncated to the next 64-bit integer.</li>
<li>Strings are parsed in base 10.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">int</span><span class="typ-punct">(</span><span class="typ-key">false</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">int</span><span class="typ-punct">(</span><span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">int</span><span class="typ-punct">(</span><span class="typ-num">2.7</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">int</span><span class="typ-punct">(</span><span class="typ-func">decimal</span><span class="typ-punct">(</span><span class="typ-str">&quot;3.8&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-func">int</span><span class="typ-punct">(</span><span class="typ-str">&quot;27&quot;</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-func">int</span><span class="typ-punct">(</span><span class="typ-str">&quot;4&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ac08cedcf6509a74364cc1948f29fa00.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to an integer.</p>",example:null,types:["bool","int","float","str","decimal"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},scope:[{path:["int"],name:"signum",title:"Signum",keywords:[],oneliner:"Calculates the sign of an integer.",element:!1,contextual:!1,details:`<p>Calculates the sign of an integer.</p>
<ul>
<li>If the number is positive, returns <code><span class="typ-num">1</span></code>.</li>
<li>If the number is negative, returns <code><span class="typ-op">-</span><span class="typ-num">1</span></code>.</li>
<li>If the number is zero, returns <code><span class="typ-num">0</span></code>.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">signum</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1fb0dbae16acfe09b63102115a128bd8.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["int"],scope:[]},{path:["int"],name:"bit-not",title:"Bitwise NOT",keywords:[],oneliner:"Calculates the bitwise NOT of an integer.",element:!1,contextual:!1,details:`<p>Calculates the bitwise NOT of an integer.</p>
<p>For the purposes of this function, the operand is treated as a signed
integer of 64 bits.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">4</span><span class="typ-punct">.</span><span class="typ-func">bit-not</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">bit-not</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d7c982b5134550db61c15c0c56f380e0.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["int"],scope:[]},{path:["int"],name:"bit-and",title:"Bitwise AND",keywords:[],oneliner:"Calculates the bitwise AND between two integers.",element:!1,contextual:!1,details:`<p>Calculates the bitwise AND between two integers.</p>
<p>For the purposes of this function, the operands are treated as signed
integers of 64 bits.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">128</span><span class="typ-punct">.</span><span class="typ-func">bit-and</span><span class="typ-punct">(</span><span class="typ-num">192</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b767831d0b2799780e769e5dddaffd78.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"rhs",details:"<p>The right-hand operand of the bitwise AND.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["int"],name:"bit-or",title:"Bitwise OR",keywords:[],oneliner:"Calculates the bitwise OR between two integers.",element:!1,contextual:!1,details:`<p>Calculates the bitwise OR between two integers.</p>
<p>For the purposes of this function, the operands are treated as signed
integers of 64 bits.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">64</span><span class="typ-punct">.</span><span class="typ-func">bit-or</span><span class="typ-punct">(</span><span class="typ-num">32</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2aeb2fd323d70f043593ec92e6471020.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"rhs",details:"<p>The right-hand operand of the bitwise OR.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["int"],name:"bit-xor",title:"Bitwise XOR",keywords:[],oneliner:"Calculates the bitwise XOR between two integers.",element:!1,contextual:!1,details:`<p>Calculates the bitwise XOR between two integers.</p>
<p>For the purposes of this function, the operands are treated as signed
integers of 64 bits.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">64</span><span class="typ-punct">.</span><span class="typ-func">bit-xor</span><span class="typ-punct">(</span><span class="typ-num">96</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/19a85bfa2c0431f8e1af91738177aff6.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"rhs",details:"<p>The right-hand operand of the bitwise XOR.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["int"],name:"bit-lshift",title:"Bitwise Left Shift",keywords:[],oneliner:"Shifts the operand's bits to the left by the specified amount.",element:!1,contextual:!1,details:`<p>Shifts the operand's bits to the left by the specified amount.</p>
<p>For the purposes of this function, the operand is treated as a signed
integer of 64 bits. An error will occur if the result is too large to
fit in a 64-bit integer.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">33</span><span class="typ-punct">.</span><span class="typ-func">bit-lshift</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">bit-lshift</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/53b651516e17a323fdb77d3d41be86d9.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"shift",details:"<p>The amount of bits to shift. Must not be negative.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["int"],name:"bit-rshift",title:"Bitwise Right Shift",keywords:[],oneliner:"Shifts the operand's bits to the right by the specified amount.",element:!1,contextual:!1,details:`<p>Shifts the operand's bits to the right by the specified amount.
Performs an arithmetic shift by default (extends the sign bit to the left,
such that negative numbers stay negative), but that can be changed by the
<code>logical</code> parameter.</p>
<p>For the purposes of this function, the operand is treated as a signed
integer of 64 bits.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-num">#</span><span class="typ-num">64</span><span class="typ-punct">.</span><span class="typ-func">bit-rshift</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">8</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">bit-rshift</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">8</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">bit-rshift</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> logical<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/54b2293990a477a7ada56a4d2012a46a.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"shift",details:`<p>The amount of bits to shift. Must not be negative.</p>
<p>Shifts larger than 63 are allowed and will cause the return value to
saturate. For non-negative numbers, the return value saturates at
<code><span class="typ-num">0</span></code>, while, for negative numbers, it saturates at <code><span class="typ-op">-</span><span class="typ-num">1</span></code> if
<code>logical</code> is set to <code><span class="typ-key">false</span></code>, or <code><span class="typ-num">0</span></code> if it is <code><span class="typ-key">true</span></code>. This
behavior is consistent with just applying this operation multiple
times. Therefore, the shift will always succeed.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"logical",details:`<p>Toggles whether a logical (unsigned) right shift should be performed
instead of arithmetic right shift.
If this is <code><span class="typ-key">true</span></code>, negative operands will not preserve their sign
bit, and bits which appear to the left after the shift will be
<code><span class="typ-num">0</span></code>. This parameter has no effect on non-negative operands.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["int"],name:"from-bytes",title:"From Bytes",keywords:[],oneliner:"Converts bytes to an integer.",element:!1,contextual:!1,details:"<p>Converts bytes to an integer.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">int</span><span class="typ-punct">.</span><span class="typ-func">from-bytes</span><span class="typ-punct">(</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">int</span><span class="typ-punct">.</span><span class="typ-func">from-bytes</span><span class="typ-punct">(</span><span class="typ-func">bytes</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span> endian<span class="typ-punct">:</span> <span class="typ-str">&quot;big&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/295d54b64971994f90501a40b296a449.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"bytes",details:`<p>The bytes that should be converted to an integer.</p>
<p>Must be of length at most 8 so that the result fits into a 64-bit
signed integer.</p>`,example:null,types:["bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"endian",details:"<p>The endianness of the conversion.</p>",example:null,types:["str"],strings:[{string:"big",details:`<p>Big-endian byte order: The highest-value byte is at the beginning of the
bytes.</p>`},{string:"little",details:`<p>Little-endian byte order: The lowest-value byte is at the beginning of
the bytes.</p>`}],default:'<code><span class="typ-str">&quot;little&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"signed",details:`<p>Whether the bytes should be treated as a signed integer. If this is
<code><span class="typ-key">true</span></code> and the most significant bit is set, the resulting number
will negative.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["int"],name:"to-bytes",title:"To Bytes",keywords:[],oneliner:"Converts an integer to bytes.",element:!1,contextual:!1,details:"<p>Converts an integer to bytes.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">array</span><span class="typ-punct">(</span><span class="typ-num">10000</span><span class="typ-punct">.</span><span class="typ-func">to-bytes</span><span class="typ-punct">(</span>endian<span class="typ-punct">:</span> <span class="typ-str">&quot;big&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">array</span><span class="typ-punct">(</span><span class="typ-num">10000</span><span class="typ-punct">.</span><span class="typ-func">to-bytes</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ce3f62321d54c104ca13987a412d19e.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"endian",details:"<p>The endianness of the conversion.</p>",example:null,types:["str"],strings:[{string:"big",details:`<p>Big-endian byte order: The highest-value byte is at the beginning of the
bytes.</p>`},{string:"little",details:`<p>Little-endian byte order: The lowest-value byte is at the beginning of
the bytes.</p>`}],default:'<code><span class="typ-str">&quot;little&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"size",details:`<p>The size in bytes of the resulting bytes (must be at least zero). If
the integer is too large to fit in the specified size, the
conversion will truncate the remaining bytes based on the
endianness. To keep the same resulting value, if the endianness is
big-endian, the truncation will happen at the rightmost bytes.
Otherwise, if the endianness is little-endian, the truncation will
happen at the leftmost bytes.</p>
<p>Be aware that if the integer is negative and the size is not enough
to make the number fit, when passing the resulting bytes to
<code>int.from-bytes</code>, the resulting number might be positive, as the
most significant bit might not be set to 1.</p>`,example:null,types:["int"],strings:[],default:'<code><span class="typ-num">8</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["bytes"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/label/",title:"Label",description:"Documentation for the Label type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-name",name:"name",children:[]}]}],body:{kind:"type",content:{name:"label",title:"Label",keywords:[],oneliner:"A label for an element.",details:`<p>A label for an element.</p>
<p>Inserting a label into content attaches it to the closest preceding element
that is not a space. The preceding element must be in the same scope as the
label, which means that <code>Hello <span class="typ-punct">#</span><span class="typ-punct">[</span><span class="typ-label">&lt;label&gt;</span><span class="typ-punct">]</span></code>, for instance, wouldn't work.</p>
<p>A labelled element can be <a href="/docs/reference/model/ref/">referenced</a>, <a href="/docs/reference/introspection/query/">queried</a> for, and
<a href="/docs/reference/styling/">styled</a> through its label.</p>
<p>Once constructed, you can get the name of a label using
<a href="/docs/reference/foundations/str/#constructor"><code>str</code></a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-label">&lt;a&gt;</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;b&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>

<span class="typ-heading">= Heading</span> <span class="typ-label">&lt;a&gt;</span>
<span class="typ-strong">*Strong*</span> <span class="typ-func">#</span><span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;b&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4ef8898ed7ef78896e658212c00b3f9b.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: You can create a label by enclosing
its name in angle brackets. This works both in markup and code. A label's
name can contain letters, numbers, <code>_</code>, <code>-</code>, <code>:</code>, and <code>.</code>.</p>
<p>Note that there is a syntactical difference when using the dedicated syntax
for this function. In the code below, the <code><span class="typ-label">&lt;a&gt;</span></code> terminates the heading and
thus attaches to the heading itself, whereas the <code><span class="typ-func">#</span><span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;b&quot;</span><span class="typ-punct">)</span></code> is part of
the heading and thus attaches to the heading's text.</p>
<pre><code><span class="typ-comment">// Equivalent to \`#heading[Introduction] &lt;a&gt;\`.</span>
<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;a&gt;</span>

<span class="typ-comment">// Equivalent to \`#heading[Conclusion #label(&quot;b&quot;)]\`.</span>
<span class="typ-heading">= Conclusion <span class="typ-func">#</span><span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;b&quot;</span><span class="typ-punct">)</span></span>
</code></pre>
<p>Currently, labels can only be attached to elements in markup mode, not in
code mode. This might change in the future.</p>`,constructor:{path:[],name:"label",title:"Construct",keywords:[],oneliner:"Creates a label from a string.",element:!1,contextual:!1,details:"<p>Creates a label from a string.</p>",example:null,self:!1,params:[{name:"name",details:"<p>The name of the label.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["label"],scope:[]},scope:[]}},children:[]},{route:"/docs/reference/foundations/module/",title:"Module",description:"Documentation for the Module type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]}],body:{kind:"type",content:{name:"module",title:"Module",keywords:[],oneliner:"An evaluated module, either built-in or resulting from a file.",details:`<p>An evaluated module, either built-in or resulting from a file.</p>
<p>You can access definitions from the module using
<a href="/docs/reference/scripting/#fields">field access notation</a> and interact with it using the
<a href="/docs/reference/scripting/#modules">import and include syntaxes</a>. Alternatively, it is
possible to convert a module to a dictionary, and therefore access its
contents dynamically, using the
<a href="/docs/reference/foundations/dictionary/#constructor">dictionary constructor</a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;utils.typ&quot;</span>
<span class="typ-pol">#</span><span class="typ-pol">utils</span><span class="typ-punct">.</span><span class="typ-func">add</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">import</span> utils<span class="typ-punct">:</span> sub
<span class="typ-func">#</span><span class="typ-func">sub</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5896f126a10f89e919b1df458b92202e.png" alt="Preview" /></div></div>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/foundations/none/",title:"None",description:"Documentation for the None type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]}],body:{kind:"type",content:{name:"none",title:"None",keywords:[],oneliner:"A value that indicates the absence of any other value.",details:`<p>A value that indicates the absence of any other value.</p>
<p>The none type has exactly one value: <code><span class="typ-key">none</span></code>.</p>
<p>When inserted into the document, it is not visible. This is also the value
that is produced by empty code blocks. It can be
<a href="/docs/reference/scripting/#blocks">joined</a> with any value, yielding the other value.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Not visible: <span class="typ-key">#</span><span class="typ-key">none</span>
</code></pre><div class="preview"><img src="/docs/assets/cf230f26609704e921c284a3edf6786f.png" alt="Preview" /></div></div>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/foundations/panic/",title:"Panic",description:"Documentation for the `panic` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-values",name:"values",children:[]}]}],body:{kind:"func",content:{path:[],name:"panic",title:"Panic",keywords:["error"],oneliner:"Fails with an error.",element:!1,contextual:!1,details:`<p>Fails with an error.</p>
<p>Arguments are displayed to the user (not rendered in the document) as
strings, converting with <code>repr</code> if necessary.</p>
<h2 id="example">Example</h2>
<p>The code below produces the error <code>panicked with: &quot;this is wrong&quot;</code>.</p>
<pre><code><span class="typ-func">#</span><span class="typ-func">panic</span><span class="typ-punct">(</span><span class="typ-str">&quot;this is wrong&quot;</span><span class="typ-punct">)</span>
</code></pre>`,example:null,self:!1,params:[{name:"values",details:"<p>The values to panic with and display to the user.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:[],scope:[]}},children:[]},{route:"/docs/reference/foundations/plugin/",title:"Plugin",description:"Documentation for the Plugin type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"plugins-and-packages",name:"Plugins And Packages",children:[]},{id:"purity",name:"Purity",children:[]},{id:"example",name:"Example",children:[]},{id:"protocol",name:"Protocol",children:[{id:"exports",name:"Exports",children:[]},{id:"imports",name:"Imports",children:[]}]},{id:"resources",name:"Resources",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-path",name:"path",children:[]}]}],body:{kind:"type",content:{name:"plugin",title:"Plugin",keywords:[],oneliner:"A WebAssembly plugin.",details:`<p>A WebAssembly plugin.</p>
<p>Typst is capable of interfacing with plugins compiled to WebAssembly. Plugin
functions may accept multiple <a href="/docs/reference/foundations/bytes/">byte buffers</a> as arguments and return
a single byte buffer. They should typically be wrapped in idiomatic Typst
functions that perform the necessary conversions between native Typst types
and bytes.</p>
<p>Plugins run in isolation from your system, which means that printing,
reading files, or anything like that will not be supported for security
reasons. To run as a plugin, a program needs to be compiled to a 32-bit
shared WebAssembly library. Many compilers will use the
<a href="https://wasi.dev/">WASI ABI</a> by default or as their only option (e.g.
emscripten), which allows printing, reading files, etc. This ABI will not
directly work with Typst. You will either need to compile to a different
target or <a href="https://github.com/astrale-sharp/wasm-minimal-protocol/blob/master/wasi-stub">stub all functions</a>.</p>
<h2 id="plugins-and-packages">Plugins and Packages</h2>
<p>Plugins are distributed as packages. A package can make use of a plugin
simply by including a WebAssembly file and loading it. Because the
byte-based plugin interface is quite low-level, plugins are typically
exposed through wrapper functions, that also live in the same package.</p>
<h2 id="purity">Purity</h2>
<p>Plugin functions must be pure: Given the same arguments, they must always
return the same value. The reason for this is that Typst functions must be
pure (which is quite fundamental to the language design) and, since Typst
function can call plugin functions, this requirement is inherited. In
particular, if a plugin function is called twice with the same arguments,
Typst might cache the results and call your function only once.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> myplugin <span class="typ-op">=</span> <span class="typ-func">plugin</span><span class="typ-punct">(</span><span class="typ-str">&quot;hello.wasm&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">concat</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span> b<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">str</span><span class="typ-punct">(</span>
  myplugin<span class="typ-punct">.</span><span class="typ-func">concatenate</span><span class="typ-punct">(</span>
    <span class="typ-func">bytes</span><span class="typ-punct">(</span>a<span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-func">bytes</span><span class="typ-punct">(</span>b<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">concat</span><span class="typ-punct">(</span><span class="typ-str">&quot;hello&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;world&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3194aaca86aed011f91de2ac37f9db66.png" alt="Preview" /></div></div>
<h2 id="protocol">Protocol</h2>
<p>To be used as a plugin, a WebAssembly module must conform to the following
protocol:</p>
<h3 id="exports">Exports</h3>
<p>A plugin module can export functions to make them callable from Typst. To
conform to the protocol, an exported function should:</p>
<ul>
<li>
<p>Take <code>n</code> 32-bit integer arguments <code>a_1</code>, <code>a_2</code>, ..., <code>a_n</code> (interpreted as
lengths, so <code>usize/size_t</code> may be preferable), and return one 32-bit
integer.</p>
</li>
<li>
<p>The function should first allocate a buffer <code>buf</code> of length
<code>a_1 + a_2 + ... + a_n</code>, and then call
<code>wasm_minimal_protocol_write_args_to_buffer(buf.ptr)</code>.</p>
</li>
<li>
<p>The <code>a_1</code> first bytes of the buffer now constitute the first argument, the
<code>a_2</code> next bytes the second argument, and so on.</p>
</li>
<li>
<p>The function can now do its job with the arguments and produce an output
buffer. Before returning, it should call
<code>wasm_minimal_protocol_send_result_to_host</code> to send its result back to the
host.</p>
</li>
<li>
<p>To signal success, the function should return <code>0</code>.</p>
</li>
<li>
<p>To signal an error, the function should return <code>1</code>. The written buffer is
then interpreted as an UTF-8 encoded error message.</p>
</li>
</ul>
<h3 id="imports">Imports</h3>
<p>Plugin modules need to import two functions that are provided by the runtime.
(Types and functions are described using WAT syntax.)</p>
<ul>
<li>
<p><code>(import &quot;typst_env&quot; &quot;wasm_minimal_protocol_write_args_to_buffer&quot; (func (param i32)))</code></p>
<p>Writes the arguments for the current function into a plugin-allocated
buffer. When a plugin function is called, it
<a href="#exports">receives the lengths</a> of its input buffers as arguments. It
should then allocate a buffer whose capacity is at least the sum of these
lengths. It should then call this function with a <code>ptr</code> to the buffer to
fill it with the arguments, one after another.</p>
</li>
<li>
<p><code>(import &quot;typst_env&quot; &quot;wasm_minimal_protocol_send_result_to_host&quot; (func (param i32 i32)))</code></p>
<p>Sends the output of the current function to the host (Typst). The first
parameter shall be a pointer to a buffer (<code>ptr</code>), while the second is the
length of that buffer (<code>len</code>). The memory pointed at by <code>ptr</code> can be freed
immediately after this function returns. If the message should be
interpreted as an error message, it should be encoded as UTF-8.</p>
</li>
</ul>
<h2 id="resources">Resources</h2>
<p>For more resources, check out the
<a href="https://github.com/astrale-sharp/wasm-minimal-protocol">wasm-minimal-protocol repository</a>.
It contains:</p>
<ul>
<li>A list of example plugin implementations and a test runner for these
examples</li>
<li>Wrappers to help you write your plugin in Rust (Zig wrapper in
development)</li>
<li>A stubber for WASI</li>
</ul>`,constructor:{path:[],name:"plugin",title:"Construct",keywords:[],oneliner:"Creates a new plugin from a WebAssembly file.",element:!1,contextual:!1,details:"<p>Creates a new plugin from a WebAssembly file.</p>",example:null,self:!1,params:[{name:"path",details:`<p>Path to a WebAssembly file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["plugin"],scope:[]},scope:[]}},children:[]},{route:"/docs/reference/foundations/regex/",title:"Regex",description:"Documentation for the Regex type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-regex",name:"regex",children:[]}]}],body:{kind:"type",content:{name:"regex",title:"Regex",keywords:[],oneliner:"A regular expression.",details:`<p>A regular expression.</p>
<p>Can be used as a <a href="/docs/reference/styling/#show-rules">show rule selector</a> and with
<a href="/docs/reference/foundations/str/">string methods</a> like <code>find</code>, <code>split</code>, and <code>replace</code>.</p>
<p><a href="https://docs.rs/regex/latest/regex/#syntax">See here</a> for a specification
of the supported syntax.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-comment">// Works with string methods.</span>
<span class="typ-str">#</span><span class="typ-str">&quot;a,b;c&quot;</span><span class="typ-punct">.</span><span class="typ-func">split</span><span class="typ-punct">(</span><span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;[,;]&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-comment">// Works with show rules.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;\\d+&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>

The numbers 1 to 10.
</code></pre><div class="preview"><img src="/docs/assets/6efd0d1945016e626b45d83dac75af5f.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"regex",title:"Construct",keywords:[],oneliner:"Create a regular expression from a string.",element:!1,contextual:!1,details:"<p>Create a regular expression from a string.</p>",example:null,self:!1,params:[{name:"regex",details:`<p>The regular expression as a string.</p>
<p>Most regex escape sequences just work because they are not valid Typst
escape sequences. To produce regex escape sequences that are also valid in
Typst (e.g. <code><span class="typ-escape">\\\\</span></code>), you need to escape twice. Thus, to match a verbatim
backslash, you would need to write <code><span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;\\\\\\\\&quot;</span><span class="typ-punct">)</span></code>.</p>
<p>If you need many escape sequences, you can also create a raw element
and extract its text to use it for your regular expressions:</p>`,example:'<p><code><span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-raw">`\\d+\\.\\d+\\.\\d+`</span><span class="typ-punct">.</span>text<span class="typ-punct">)</span></code>.</p>',types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["regex"],scope:[]},scope:[]}},children:[]},{route:"/docs/reference/foundations/repr/",title:"Representation",description:"Documentation for the `repr` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-value",name:"value",children:[]}]}],body:{kind:"func",content:{path:[],name:"repr",title:"Representation",keywords:[],oneliner:"Returns the string representation of a value.",element:!1,contextual:!1,details:`<p>Returns the string representation of a value.</p>
<p>When inserted into content, most values are displayed as this representation
in monospace with syntax-highlighting. The exceptions are <code><span class="typ-key">none</span></code>,
integers, floats, strings, content, and functions.</p>
<p><strong>Note:</strong> This function is for debugging purposes. Its output should not be
considered stable and may change at any time!</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">none</span> vs <span class="typ-func">#</span><span class="typ-func">repr</span><span class="typ-punct">(</span><span class="typ-key">none</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-str">#</span><span class="typ-str">&quot;hello&quot;</span> vs <span class="typ-func">#</span><span class="typ-func">repr</span><span class="typ-punct">(</span><span class="typ-str">&quot;hello&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span> vs <span class="typ-func">#</span><span class="typ-func">repr</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">[</span><span class="typ-strong">*Hi*</span><span class="typ-punct">]</span> vs <span class="typ-func">#</span><span class="typ-func">repr</span><span class="typ-punct">(</span><span class="typ-punct">[</span><span class="typ-strong">*Hi*</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5d643b51faf0d29908e0e20cb10982f7.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"value",details:"<p>The value whose string representation to produce.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["str"],scope:[]}},children:[]},{route:"/docs/reference/foundations/selector/",title:"Selector",description:"Documentation for the Selector type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-target",name:"target",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-or",name:"Or",children:[{id:"definitions-or-others",name:"others",children:[]}]},{id:"definitions-and",name:"And",children:[{id:"definitions-and-others",name:"others",children:[]}]},{id:"definitions-before",name:"Before",children:[{id:"definitions-before-end",name:"end",children:[]},{id:"definitions-before-inclusive",name:"inclusive",children:[]}]},{id:"definitions-after",name:"After",children:[{id:"definitions-after-start",name:"start",children:[]},{id:"definitions-after-inclusive",name:"inclusive",children:[]}]}]}],body:{kind:"type",content:{name:"selector",title:"Selector",keywords:[],oneliner:"A filter for selecting elements within the document.",details:`<p>A filter for selecting elements within the document.</p>
<p>You can construct a selector in the following ways:</p>
<ul>
<li>you can use an element <a href="/docs/reference/foundations/function/" title="function">function</a></li>
<li>you can filter for an element function with
<a href="/docs/reference/foundations/function/#definitions-where">specific fields</a></li>
<li>you can use a <a href="/docs/reference/foundations/str/">string</a> or <a href="/docs/reference/foundations/regex/">regular expression</a></li>
<li>you can use a <a href="/docs/reference/foundations/label/"><code><span class="typ-label">&lt;label&gt;</span></code></a></li>
<li>you can use a <a href="/docs/reference/introspection/location/" title="\`location\`"><code>location</code></a></li>
<li>call the <a href="/docs/reference/foundations/selector/" title="\`selector\`"><code>selector</code></a> constructor to convert any of the above types into a
selector value and use the methods below to refine it</li>
</ul>
<p>Selectors are used to <a href="/docs/reference/styling/#show-rules">apply styling rules</a> to
elements. You can also use selectors to <a href="/docs/reference/introspection/query/" title="query">query</a> the document for certain
types of elements.</p>
<p>Furthermore, you can pass a selector to several of Typst's built-in
functions to configure their behaviour. One such example is the <a href="/docs/reference/model/outline/" title="outline">outline</a>
where it can be used to change which elements are listed within the outline.</p>
<p>Multiple selectors can be combined using the methods shown below. However,
not all kinds of selectors are supported in all places, at the moment.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">query</span><span class="typ-punct">(</span>
  heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">or</span><span class="typ-punct">(</span>heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= This will be found</span>
<span class="typ-heading">== So will this</span>
<span class="typ-heading">=== But this will not.</span>
</code></pre><div class="preview"><img src="/docs/assets/dfab22b2f786f92308bd4a936973e794.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"selector",title:"Construct",keywords:[],oneliner:"Turns a value into a selector. The following values are accepted:",element:!1,contextual:!1,details:`<p>Turns a value into a selector. The following values are accepted:</p>
<ul>
<li>An element function like a <code>heading</code> or <code>figure</code>.</li>
<li>A <code><span class="typ-label">&lt;label&gt;</span></code>.</li>
<li>A more complex selector like <code>heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span></code>.</li>
</ul>`,example:null,self:!1,params:[{name:"target",details:`<p>Can be an element function like a <code>heading</code> or <code>figure</code>, a <code><span class="typ-label">&lt;label&gt;</span></code>
or a more complex selector like <code>heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span></code>.</p>`,example:null,types:["str","regex","label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["selector"],scope:[]},scope:[{path:["selector"],name:"or",title:"Or",keywords:[],oneliner:"Selects all elements that match this or any of the other selectors.",element:!1,contextual:!1,details:"<p>Selects all elements that match this or any of the other selectors.</p>",example:null,self:!0,params:[{name:"others",details:"<p>The other selectors to match on.</p>",example:null,types:["str","regex","label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["selector"],scope:[]},{path:["selector"],name:"and",title:"And",keywords:[],oneliner:"Selects all elements that match this and all of the other selectors.",element:!1,contextual:!1,details:"<p>Selects all elements that match this and all of the other selectors.</p>",example:null,self:!0,params:[{name:"others",details:"<p>The other selectors to match on.</p>",example:null,types:["str","regex","label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["selector"],scope:[]},{path:["selector"],name:"before",title:"Before",keywords:[],oneliner:"Returns a modified selector that will only match elements that occur",element:!1,contextual:!1,details:`<p>Returns a modified selector that will only match elements that occur
before the first match of <code>end</code>.</p>`,example:null,self:!0,params:[{name:"end",details:"<p>The original selection will end at the first match of <code>end</code>.</p>",example:null,types:["label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"inclusive",details:`<p>Whether <code>end</code> itself should match or not. This is only relevant if
both selectors match the same type of element. Defaults to <code><span class="typ-key">true</span></code>.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["selector"],scope:[]},{path:["selector"],name:"after",title:"After",keywords:[],oneliner:"Returns a modified selector that will only match elements that occur",element:!1,contextual:!1,details:`<p>Returns a modified selector that will only match elements that occur
after the first match of <code>start</code>.</p>`,example:null,self:!0,params:[{name:"start",details:"<p>The original selection will start at the first match of <code>start</code>.</p>",example:null,types:["label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"inclusive",details:`<p>Whether <code>start</code> itself should match or not. This is only relevant
if both selectors match the same type of element. Defaults to
<code><span class="typ-key">true</span></code>.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["selector"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/str/",title:"String",description:"Documentation for the String type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"escapes",name:"Escapes",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]},{id:"constructor-base",name:"base",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-len",name:"Length",children:[]},{id:"definitions-first",name:"First",children:[]},{id:"definitions-last",name:"Last",children:[]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-index",name:"index",children:[]},{id:"definitions-at-default",name:"default",children:[]}]},{id:"definitions-slice",name:"Slice",children:[{id:"definitions-slice-start",name:"start",children:[]},{id:"definitions-slice-end",name:"end",children:[]},{id:"definitions-slice-count",name:"count",children:[]}]},{id:"definitions-clusters",name:"Clusters",children:[]},{id:"definitions-codepoints",name:"Codepoints",children:[]},{id:"definitions-to-unicode",name:"To Unicode",children:[{id:"definitions-to-unicode-character",name:"character",children:[]}]},{id:"definitions-from-unicode",name:"From Unicode",children:[{id:"definitions-from-unicode-value",name:"value",children:[]}]},{id:"definitions-contains",name:"Contains",children:[{id:"definitions-contains-pattern",name:"pattern",children:[]}]},{id:"definitions-starts-with",name:"Starts With",children:[{id:"definitions-starts-with-pattern",name:"pattern",children:[]}]},{id:"definitions-ends-with",name:"Ends With",children:[{id:"definitions-ends-with-pattern",name:"pattern",children:[]}]},{id:"definitions-find",name:"Find",children:[{id:"definitions-find-pattern",name:"pattern",children:[]}]},{id:"definitions-position",name:"Position",children:[{id:"definitions-position-pattern",name:"pattern",children:[]}]},{id:"definitions-match",name:"Match",children:[{id:"definitions-match-pattern",name:"pattern",children:[]}]},{id:"definitions-matches",name:"Matches",children:[{id:"definitions-matches-pattern",name:"pattern",children:[]}]},{id:"definitions-replace",name:"Replace",children:[{id:"definitions-replace-pattern",name:"pattern",children:[]},{id:"definitions-replace-replacement",name:"replacement",children:[]},{id:"definitions-replace-count",name:"count",children:[]}]},{id:"definitions-trim",name:"Trim",children:[{id:"definitions-trim-pattern",name:"pattern",children:[]},{id:"definitions-trim-at",name:"at",children:[]},{id:"definitions-trim-repeat",name:"repeat",children:[]}]},{id:"definitions-split",name:"Split",children:[{id:"definitions-split-pattern",name:"pattern",children:[]}]},{id:"definitions-rev",name:"Reverse",children:[]}]}],body:{kind:"type",content:{name:"str",title:"String",keywords:[],oneliner:"A sequence of Unicode codepoints.",details:`<p>A sequence of Unicode codepoints.</p>
<p>You can iterate over the grapheme clusters of the string using a <a href="/docs/reference/scripting/#loops">for
loop</a>. Grapheme clusters are basically characters but
keep together things that belong together, e.g. multiple codepoints that
together form a flag emoji. Strings can be added with the <code>+</code> operator,
<a href="/docs/reference/scripting/#blocks">joined together</a> and multiplied with integers.</p>
<p>Typst provides utility methods for string manipulation. Many of these
methods (e.g., <code>split</code>, <code>trim</code> and <code>replace</code>) operate on <em>patterns:</em> A
pattern can be either a string or a <a href="/docs/reference/foundations/regex/">regular expression</a>. This makes
the methods quite versatile.</p>
<p>All lengths and indices are expressed in terms of UTF-8 bytes. Indices are
zero-based and negative indices wrap around to the end of the string.</p>
<p>You can convert a value to a string with this type's constructor.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-str">#</span><span class="typ-str">&quot;hello world!&quot;</span> <span class="typ-escape">\\</span>
<span class="typ-str">#</span><span class="typ-str">&quot;\\&quot;hello\\n  world\\&quot;!&quot;</span> <span class="typ-escape">\\</span>
<span class="typ-str">#</span><span class="typ-str">&quot;1 2 3&quot;</span><span class="typ-punct">.</span><span class="typ-func">split</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-str">#</span><span class="typ-str">&quot;1,2;3&quot;</span><span class="typ-punct">.</span><span class="typ-func">split</span><span class="typ-punct">(</span><span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;[,;]&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;\\d+&quot;</span><span class="typ-punct">)</span> <span class="typ-key">in</span> <span class="typ-str">&quot;ten euros&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;\\d+&quot;</span><span class="typ-punct">)</span> <span class="typ-key">in</span> <span class="typ-str">&quot;10 euros&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/fd7698b0680e88e615bda656f2ec106f.png" alt="Preview" /></div></div>
<h2 id="escapes">Escape sequences</h2>
<p>Just like in markup, you can escape a few symbols in strings:</p>
<ul>
<li><code><span class="typ-escape">\\\\</span></code> for a backslash</li>
<li><code><span class="typ-escape">\\&quot;</span></code> for a quote</li>
<li><code><span class="typ-escape">\\n</span></code> for a newline</li>
<li><code><span class="typ-escape">\\r</span></code> for a carriage return</li>
<li><code><span class="typ-escape">\\t</span></code> for a tab</li>
<li><code><span class="typ-escape">\\u{1f600}</span></code> for a hexadecimal Unicode escape sequence</li>
</ul>`,constructor:{path:[],name:"str",title:"Construct",keywords:[],oneliner:"Converts a value to a string.",element:!1,contextual:!1,details:`<p>Converts a value to a string.</p>
<ul>
<li>Integers are formatted in base 10. This can be overridden with the
optional <code>base</code> parameter.</li>
<li>Floats are formatted in base 10 and never in exponential notation.</li>
<li>From labels the name is extracted.</li>
<li>Bytes are decoded as UTF-8.</li>
</ul>
<p>If you wish to convert from and to Unicode code points, see the
<a href="/docs/reference/foundations/str/#definitions-to-unicode"><code>to-unicode</code></a> and <a href="/docs/reference/foundations/str/#definitions-from-unicode"><code>from-unicode</code></a>
functions.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">str</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">str</span><span class="typ-punct">(</span><span class="typ-num">4000</span><span class="typ-punct">,</span> base<span class="typ-punct">:</span> <span class="typ-num">16</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">str</span><span class="typ-punct">(</span><span class="typ-num">2.7</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">str</span><span class="typ-punct">(</span><span class="typ-num">1e8</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">str</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4415a07baeda08163365ea9ba0d2ff17.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value that should be converted to a string.</p>",example:null,types:["int","float","str","bytes","label","decimal","version","type"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"base",details:"<p>The base (radix) to display integers in, between 2 and 36.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">10</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]},scope:[{path:["str"],name:"len",title:"Length",keywords:[],oneliner:"The length of the string in UTF-8 encoded bytes.",element:!1,contextual:!1,details:"<p>The length of the string in UTF-8 encoded bytes.</p>",example:null,self:!0,params:[],returns:["int"],scope:[]},{path:["str"],name:"first",title:"First",keywords:[],oneliner:"Extracts the first grapheme cluster of the string.",element:!1,contextual:!1,details:`<p>Extracts the first grapheme cluster of the string.
Fails with an error if the string is empty.</p>`,example:null,self:!0,params:[],returns:["str"],scope:[]},{path:["str"],name:"last",title:"Last",keywords:[],oneliner:"Extracts the last grapheme cluster of the string.",element:!1,contextual:!1,details:`<p>Extracts the last grapheme cluster of the string.
Fails with an error if the string is empty.</p>`,example:null,self:!0,params:[],returns:["str"],scope:[]},{path:["str"],name:"at",title:"At",keywords:[],oneliner:"Extracts the first grapheme cluster after the specified index. Returns",element:!1,contextual:!1,details:`<p>Extracts the first grapheme cluster after the specified index. Returns
the default value if the index is out of bounds or fails with an error
if no default value was specified.</p>`,example:null,self:!0,params:[{name:"index",details:"<p>The byte index. If negative, indexes from the back.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"default",details:"<p>A default value to return if the index is out of bounds.</p>",example:null,types:["any"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["str"],name:"slice",title:"Slice",keywords:[],oneliner:"Extracts a substring of the string.",element:!1,contextual:!1,details:`<p>Extracts a substring of the string.
Fails with an error if the start or end index is out of bounds.</p>`,example:null,self:!0,params:[{name:"start",details:`<p>The start byte index (inclusive). If negative, indexes from the
back.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"end",details:`<p>The end byte index (exclusive). If omitted, the whole slice until
the end of the string is extracted. If negative, indexes from the
back.</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"count",details:`<p>The number of bytes to extract. This is equivalent to passing
<code>start + count</code> as the <code>end</code> position. Mutually exclusive with <code>end</code>.</p>`,example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]},{path:["str"],name:"clusters",title:"Clusters",keywords:[],oneliner:"Returns the grapheme clusters of the string as an array of substrings.",element:!1,contextual:!1,details:"<p>Returns the grapheme clusters of the string as an array of substrings.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["str"],name:"codepoints",title:"Codepoints",keywords:[],oneliner:"Returns the Unicode codepoints of the string as an array of substrings.",element:!1,contextual:!1,details:"<p>Returns the Unicode codepoints of the string as an array of substrings.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["str"],name:"to-unicode",title:"To Unicode",keywords:[],oneliner:"Converts a character into its corresponding code point.",element:!1,contextual:!1,details:"<p>Converts a character into its corresponding code point.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-str">#</span><span class="typ-str">&quot;a&quot;</span><span class="typ-punct">.</span><span class="typ-func">to-unicode</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-str">&quot;a\\u{0300}&quot;</span>
   <span class="typ-punct">.</span><span class="typ-func">codepoints</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
   <span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>str<span class="typ-punct">.</span>to-unicode<span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e4ced0b62652dabac512fe1bfad35d2a.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"character",details:"<p>The character that should be converted.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]},{path:["str"],name:"from-unicode",title:"From Unicode",keywords:[],oneliner:"Converts a unicode code point into its corresponding string.",element:!1,contextual:!1,details:"<p>Converts a unicode code point into its corresponding string.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">str</span><span class="typ-punct">.</span><span class="typ-func">from-unicode</span><span class="typ-punct">(</span><span class="typ-num">97</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/29d60c658396258cd4346c2098179bac.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The code point that should be converted.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["str"],scope:[]},{path:["str"],name:"contains",title:"Contains",keywords:[],oneliner:"Whether the string contains the specified pattern.",element:!1,contextual:!1,details:`<p>Whether the string contains the specified pattern.</p>
<p>This method also has dedicated syntax: You can write <code><span class="typ-str">&quot;bc&quot;</span> <span class="typ-key">in</span> <span class="typ-str">&quot;abcd&quot;</span></code>
instead of <code><span class="typ-str">&quot;abcd&quot;</span><span class="typ-punct">.</span><span class="typ-func">contains</span><span class="typ-punct">(</span><span class="typ-str">&quot;bc&quot;</span><span class="typ-punct">)</span></code>.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to search for.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["str"],name:"starts-with",title:"Starts With",keywords:[],oneliner:"Whether the string starts with the specified pattern.",element:!1,contextual:!1,details:"<p>Whether the string starts with the specified pattern.</p>",example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern the string might start with.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["str"],name:"ends-with",title:"Ends With",keywords:[],oneliner:"Whether the string ends with the specified pattern.",element:!1,contextual:!1,details:"<p>Whether the string ends with the specified pattern.</p>",example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern the string might end with.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bool"],scope:[]},{path:["str"],name:"find",title:"Find",keywords:[],oneliner:"Searches for the specified pattern in the string and returns the first",element:!1,contextual:!1,details:`<p>Searches for the specified pattern in the string and returns the first
match as a string or <code><span class="typ-key">none</span></code> if there is no match.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to search for.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["none","str"],scope:[]},{path:["str"],name:"position",title:"Position",keywords:[],oneliner:"Searches for the specified pattern in the string and returns the index",element:!1,contextual:!1,details:`<p>Searches for the specified pattern in the string and returns the index
of the first match as an integer or <code><span class="typ-key">none</span></code> if there is no match.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to search for.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["none","int"],scope:[]},{path:["str"],name:"match",title:"Match",keywords:[],oneliner:"Searches for the specified pattern in the string and returns a",element:!1,contextual:!1,details:`<p>Searches for the specified pattern in the string and returns a
dictionary with details about the first match or <code><span class="typ-key">none</span></code> if there is no
match.</p>
<p>The returned dictionary has the following keys:</p>
<ul>
<li><code>start</code>: The start offset of the match</li>
<li><code>end</code>: The end offset of the match</li>
<li><code>text</code>: The text that matched.</li>
<li><code>captures</code>: An array containing a string for each matched capturing
group. The first item of the array contains the first matched
capturing, not the whole match! This is empty unless the <code>pattern</code> was
a regex with capturing groups.</li>
</ul>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to search for.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["none","dictionary"],scope:[]},{path:["str"],name:"matches",title:"Matches",keywords:[],oneliner:"Searches for the specified pattern in the string and returns an array of",element:!1,contextual:!1,details:`<p>Searches for the specified pattern in the string and returns an array of
dictionaries with details about all matches. For details about the
returned dictionaries, see above.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to search for.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["str"],name:"replace",title:"Replace",keywords:[],oneliner:"Replace at most `count` occurrences of the given pattern with a",element:!1,contextual:!1,details:`<p>Replace at most <code>count</code> occurrences of the given pattern with a
replacement string or function (beginning from the start). If no count
is given, all occurrences are replaced.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to search for.</p>",example:null,types:["str","regex"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"replacement",details:`<p>The string to replace the matches with or a function that gets a
dictionary for each match and can return individual replacement
strings.</p>`,example:null,types:["str","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"count",details:"<p>If given, only the first <code>count</code> matches of the pattern are placed.</p>",example:null,types:["int"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]},{path:["str"],name:"trim",title:"Trim",keywords:[],oneliner:"Removes matches of a pattern from one or both sides of the string, once or",element:!1,contextual:!1,details:`<p>Removes matches of a pattern from one or both sides of the string, once or
repeatedly and returns the resulting string.</p>`,example:null,self:!0,params:[{name:"pattern",details:'<p>The pattern to search for. If <code><span class="typ-key">none</span></code>, trims white spaces.</p>',example:null,types:["none","str","regex"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"at",details:`<p>Can be <code>start</code> or <code>end</code> to only trim the start or end of the
string. If omitted, both sides are trimmed.</p>`,example:null,types:["alignment"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"repeat",details:`<p>Whether to repeatedly removes matches of the pattern or just once.
Defaults to <code><span class="typ-key">true</span></code>.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]},{path:["str"],name:"split",title:"Split",keywords:[],oneliner:"Splits a string at matches of a specified pattern and returns an array",element:!1,contextual:!1,details:`<p>Splits a string at matches of a specified pattern and returns an array
of the resulting parts.</p>`,example:null,self:!0,params:[{name:"pattern",details:"<p>The pattern to split at. Defaults to whitespace.</p>",example:null,types:["none","str","regex"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["str"],name:"rev",title:"Reverse",keywords:[],oneliner:"Reverse the string.",element:!1,contextual:!1,details:"<p>Reverse the string.</p>",example:null,self:!0,params:[],returns:["str"],scope:[]}]}},children:[]},{route:"/docs/reference/foundations/style/",title:"Style",description:"Documentation for the `style` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-func",name:"func",children:[]}]}],body:{kind:"func",content:{path:[],name:"style",title:"Style",keywords:[],oneliner:"Provides access to active styles.",element:!1,contextual:!1,details:`<p>Provides access to active styles.</p>
<p><strong>Deprecation planned.</strong> Use <a href="/docs/reference/context/" title="context">context</a> instead.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">thing</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">style</span><span class="typ-punct">(</span>styles <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> size <span class="typ-op">=</span> <span class="typ-func">measure</span><span class="typ-punct">(</span>body<span class="typ-punct">,</span> styles<span class="typ-punct">)</span>
  <span class="typ-punct">[</span>Width of &quot;<span class="typ-pol">#</span><span class="typ-pol">body</span>&quot; is <span class="typ-pol">#</span><span class="typ-pol">size</span><span class="typ-punct">.</span><span class="typ-pol">width</span><span class="typ-punct">]</span>
<span class="typ-punct">}</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">thing</span><span class="typ-punct">[</span>Hey<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">thing</span><span class="typ-punct">[</span>Welcome<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/ac98fea0b1c08699f546d4736dbe6fd5.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"func",details:`<p>A function to call with the styles. Its return value is displayed
in the document.</p>
<p>This function is called once for each time the content returned by
<code>style</code> appears in the document. That makes it possible to generate
content that depends on the style context it appears in.</p>`,example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/foundations/sys",title:"System",description:"Documentation for the sys functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"functions",name:"Functions",children:[]}],body:{kind:"group",content:{name:"sys",title:"System",details:`<p>Module for system interactions.</p>
<p>This module defines the following items:</p>
<ul>
<li>
<p>The <code>sys.version</code> constant (of type <a href="/docs/reference/foundations/version/" title="\`version\`"><code>version</code></a>) that specifies
the currently active Typst compiler version.</p>
</li>
<li>
<p>The <code>sys.inputs</code> <a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a>, which makes external inputs
available to the project. An input specified in the command line as
<code>--input key=value</code> becomes available under <code>sys.inputs.key</code> as
<code><span class="typ-str">&quot;value&quot;</span></code>. To include spaces in the value, it may be enclosed with
single or double quotes.</p>
<p>The value is always of type <a href="/docs/reference/foundations/str/">string</a>. More complex data
may be parsed manually using functions like <a href="/docs/reference/data-loading/json/#definitions-decode"><code>json.decode</code></a>.</p>
</li>
</ul>`,functions:[]}},children:[]},{route:"/docs/reference/foundations/type/",title:"Type",description:"Documentation for the Type type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"compatibility",name:"Compatibility",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-value",name:"value",children:[]}]}],body:{kind:"type",content:{name:"type",title:"Type",keywords:[],oneliner:"Describes a kind of value.",details:`<p>Describes a kind of value.</p>
<p>To style your document, you need to work with values of different kinds:
Lengths specifying the size of your elements, colors for your text and
shapes, and more. Typst categorizes these into clearly defined <em>types</em> and
tells you where it expects which type of value.</p>
<p>Apart from basic types for numeric values and <a href="/docs/reference/foundations/int/">typical</a>
<a href="/docs/reference/foundations/float/">types</a> <a href="/docs/reference/foundations/str/">known</a> <a href="/docs/reference/foundations/array/">from</a> <a href="/docs/reference/foundations/dictionary/">programming</a>
languages, Typst provides a special type for <a href="/docs/reference/foundations/content/"><em>content.</em></a> A value
of this type can hold anything that you can enter into your document: Text,
elements like headings and shapes, and style information.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> x <span class="typ-op">=</span> <span class="typ-num">10</span>
<span class="typ-key">#</span><span class="typ-key">if</span> <span class="typ-func">type</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-op">==</span> int <span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">x</span> is an integer!
<span class="typ-punct">]</span> <span class="typ-key">else</span> <span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">x</span> is another value<span class="typ-escape">...</span>
<span class="typ-punct">]</span>

An image is of type
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>.
</code></pre><div class="preview"><img src="/docs/assets/48ab220fedc9359599ac9e88e121eb05.png" alt="Preview" /></div></div>
<p>The type of <code>10</code> is <code>int</code>. Now, what is the type of <code>int</code> or even <code>type</code>?</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span>int<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span>type<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/fadd8c275906c3654fd9a344cc1c4ce5.png" alt="Preview" /></div></div>
<h2 id="compatibility">Compatibility</h2>
<p>In Typst 0.7 and lower, the <code>type</code> function returned a string instead of a
type. Compatibility with the old way will remain for a while to give package
authors time to upgrade, but it will be removed at some point.</p>
<ul>
<li>Checks like <code>int <span class="typ-op">==</span> <span class="typ-str">&quot;integer&quot;</span></code> evaluate to <code><span class="typ-key">true</span></code></li>
<li>Adding/joining a type and string will yield a string</li>
<li>The <code>in</code> operator on a type and a dictionary will evaluate to <code><span class="typ-key">true</span></code>
if the dictionary has a string key matching the type's name</li>
</ul>`,constructor:{path:[],name:"type",title:"Construct",keywords:[],oneliner:"Determines a value's type.",element:!1,contextual:!1,details:"<p>Determines a value's type.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-num">12</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-num">14.7</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-str">&quot;hello&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-label">&lt;glacier&gt;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span>x <span class="typ-op">=&gt;</span> x <span class="typ-op">+</span> <span class="typ-num">1</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">type</span><span class="typ-punct">(</span>type<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/93adec1da84a7a213ab92472626a95cd.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"value",details:"<p>The value whose type's to determine.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["type"],scope:[]},scope:[]}},children:[]},{route:"/docs/reference/foundations/version/",title:"Version",description:"Documentation for the Version type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-components",name:"components",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-at",name:"At",children:[{id:"definitions-at-index",name:"index",children:[]}]}]}],body:{kind:"type",content:{name:"version",title:"Version",keywords:[],oneliner:"A version with an arbitrary number of components.",details:`<p>A version with an arbitrary number of components.</p>
<p>The first three components have names that can be used as fields: <code>major</code>,
<code>minor</code>, <code>patch</code>. All following components do not have names.</p>
<p>The list of components is semantically extended by an infinite list of
zeros. This means that, for example, <code>0.8</code> is the same as <code>0.8.0</code>. As a
special case, the empty version (that has no components at all) is the same
as <code>0</code>, <code>0.0</code>, <code>0.0.0</code>, and so on.</p>
<p>The current version of the Typst compiler is available as <code>sys.version</code>.</p>
<p>You can convert a version to an array of explicitly given components using
the <a href="/docs/reference/foundations/array/" title="\`array\`"><code>array</code></a> constructor.</p>`,constructor:{path:[],name:"version",title:"Construct",keywords:[],oneliner:"Creates a new version.",element:!1,contextual:!1,details:`<p>Creates a new version.</p>
<p>It can have any number of components (even zero).</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">version</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">version</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">version</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">version</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">4</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">version</span><span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d996a0b85ac2fa7acd7cf1cee6b29e6a.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"components",details:"<p>The components of the version (array arguments are flattened)</p>",example:null,types:["int","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["version"],scope:[]},scope:[{path:["version"],name:"at",title:"At",keywords:[],oneliner:"Retrieves a component of a version.",element:!1,contextual:!1,details:`<p>Retrieves a component of a version.</p>
<p>The returned integer is always non-negative. Returns <code>0</code> if the version
isn't specified to the necessary length.</p>`,example:null,self:!0,params:[{name:"index",details:`<p>The index at which to retrieve the component. If negative, indexes
from the back of the explicitly given components.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int"],scope:[]}]}},children:[]}]},{route:"/docs/reference/model/",title:"Model",description:"Documentation for functions related to Model in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"model",title:"Model",details:`<p>Document structuring.</p>
<p>Here, you can find functions to structure your document and interact with
that structure. This includes section headings, figures, bibliography
management, cross-referencing and more.</p>`,items:[{name:"bibliography",route:"/docs/reference/model/bibliography/",oneliner:"A bibliography / reference listing.",code:!0},{name:"cite",route:"/docs/reference/model/cite/",oneliner:"Cite a work from the bibliography.",code:!0},{name:"document",route:"/docs/reference/model/document/",oneliner:"The root element of a document and its metadata.",code:!0},{name:"emph",route:"/docs/reference/model/emph/",oneliner:"Emphasizes content by toggling italics.",code:!0},{name:"enum",route:"/docs/reference/model/enum/",oneliner:"A numbered list.",code:!0},{name:"figure",route:"/docs/reference/model/figure/",oneliner:"A figure with an optional caption.",code:!0},{name:"footnote",route:"/docs/reference/model/footnote/",oneliner:"A footnote.",code:!0},{name:"heading",route:"/docs/reference/model/heading/",oneliner:"A section heading.",code:!0},{name:"link",route:"/docs/reference/model/link/",oneliner:"Links to a URL or a location in the document.",code:!0},{name:"list",route:"/docs/reference/model/list/",oneliner:"A bullet list.",code:!0},{name:"numbering",route:"/docs/reference/model/numbering/",oneliner:"Applies a numbering to a sequence of numbers.",code:!0},{name:"outline",route:"/docs/reference/model/outline/",oneliner:"A table of contents, figures, or other elements.",code:!0},{name:"par",route:"/docs/reference/model/par/",oneliner:"Arranges text, spacing and inline-level elements into a paragraph.",code:!0},{name:"parbreak",route:"/docs/reference/model/parbreak/",oneliner:"A paragraph break.",code:!0},{name:"quote",route:"/docs/reference/model/quote/",oneliner:"Displays a quote alongside an optional attribution.",code:!0},{name:"ref",route:"/docs/reference/model/ref/",oneliner:"A reference to a label or bibliography.",code:!0},{name:"strong",route:"/docs/reference/model/strong/",oneliner:"Strongly emphasizes content by increasing the font weight.",code:!0},{name:"table",route:"/docs/reference/model/table/",oneliner:"A table of items.",code:!0},{name:"terms",route:"/docs/reference/model/terms/",oneliner:"A list of terms and their descriptions.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/model/bibliography/",title:"Bibliography",description:"Documentation for the `bibliography` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"styles",name:"Styles",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]},{id:"parameters-title",name:"title",children:[]},{id:"parameters-full",name:"full",children:[]},{id:"parameters-style",name:"style",children:[]}]}],body:{kind:"func",content:{path:[],name:"bibliography",title:"Bibliography",keywords:[],oneliner:"A bibliography / reference listing.",element:!0,contextual:!1,details:`<p>A bibliography / reference listing.</p>
<p>You can create a new bibliography by calling this function with a path
to a bibliography file in either one of two formats:</p>
<ul>
<li>A Hayagriva <code>.yml</code> file. Hayagriva is a new bibliography file format
designed for use with Typst. Visit its
<a href="https://github.com/typst/hayagriva/blob/main/docs/file-format.md">documentation</a>
for more details.</li>
<li>A BibLaTeX <code>.bib</code> file.</li>
</ul>
<p>As soon as you add a bibliography somewhere in your document, you can start
citing things with reference syntax (<code><span class="typ-ref">@key</span></code>) or explicit calls to the
<a href="/docs/reference/model/cite/">citation</a> function (<code><span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;key&gt;</span><span class="typ-punct">)</span></code>). The bibliography will only
show entries for works that were referenced in the document.</p>
<h2 id="styles">Styles</h2>
<p>Typst offers a wide selection of built-in
<a href="/docs/reference/model/bibliography/#parameters-style">citation and bibliography styles</a>. Beyond those, you
can add and use custom <a href="https://citationstyles.org/">CSL</a> (Citation Style
Language) files. Wondering which style to use? Here are some good defaults
based on what discipline you're working in:</p>
<table><thead><tr><th>Fields</th><th>Typical Styles</th></tr></thead><tbody>
<tr><td>Engineering, IT</td><td><code><span class="typ-str">&quot;ieee&quot;</span></code></td></tr>
<tr><td>Psychology, Life Sciences</td><td><code><span class="typ-str">&quot;apa&quot;</span></code></td></tr>
<tr><td>Social sciences</td><td><code><span class="typ-str">&quot;chicago-author-date&quot;</span></code></td></tr>
<tr><td>Humanities</td><td><code><span class="typ-str">&quot;mla&quot;</span></code>, <code><span class="typ-str">&quot;chicago-notes&quot;</span></code>, <code><span class="typ-str">&quot;harvard-cite-them-right&quot;</span></code></td></tr>
<tr><td>Economics</td><td><code><span class="typ-str">&quot;harvard-cite-them-right&quot;</span></code></td></tr>
<tr><td>Physics</td><td><code><span class="typ-str">&quot;american-physics-society&quot;</span></code></td></tr>
</tbody></table>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This was already noted by
pirates long ago. <span class="typ-ref">@arrgh</span>

Multiple sources say <span class="typ-escape">...</span>
<span class="typ-ref">@arrgh</span> <span class="typ-ref">@netwok</span>.

<span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b4336ea131051e97421a35218b084a6d.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:"<p>Path(s) to Hayagriva <code>.yml</code> and/or BibLaTeX <code>.bib</code> files.</p>",example:null,types:["str","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"title",details:`<p>The title of the bibliography.</p>
<ul>
<li>When set to <code><span class="typ-key">auto</span></code>, an appropriate title for the
<a href="/docs/reference/text/text/#parameters-lang">text language</a> will be used. This is the default.</li>
<li>When set to <code><span class="typ-key">none</span></code>, the bibliography will not have a title.</li>
<li>A custom title can be set by passing content.</li>
</ul>
<p>The bibliography's heading will not be numbered by default, but you can
force it to be with a show-set rule:
<code><span class="typ-key">show</span> <span class="typ-func">bibliography</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span></code></p>`,example:null,types:["none","auto","content"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"full",details:`<p>Whether to include all works from the given bibliography files, even
those that weren't cited in the document.</p>
<p>To selectively add individual cited works without showing them, you can
also use the <code>cite</code> function with <a href="/docs/reference/model/cite/#parameters-form"><code>form</code></a> set to <code><span class="typ-key">none</span></code>.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"style",details:`<p>The bibliography style.</p>
<p>Should be either one of the built-in styles (see below) or a path to
a <a href="https://citationstyles.org/">CSL file</a>. Some of the styles listed
below appear twice, once with their full name and once with a short
alias.</p>`,example:null,types:["str"],strings:[{string:"alphanumeric",details:"<p>Alphanumeric</p>"},{string:"american-anthropological-association",details:"<p>American Anthropological Association</p>"},{string:"american-chemical-society",details:"<p>American Chemical Society</p>"},{string:"american-geophysical-union",details:"<p>American Geophysical Union</p>"},{string:"american-institute-of-aeronautics-and-astronautics",details:"<p>American Institute of Aeronautics and Astronautics</p>"},{string:"american-institute-of-physics",details:"<p>American Institute of Physics 4th edition</p>"},{string:"american-medical-association",details:"<p>American Medical Association 11th edition</p>"},{string:"american-meteorological-society",details:"<p>American Meteorological Society</p>"},{string:"american-physics-society",details:"<p>American Physical Society</p>"},{string:"american-physiological-society",details:"<p>American Physiological Society</p>"},{string:"american-political-science-association",details:"<p>American Political Science Association</p>"},{string:"american-psychological-association",details:"<p>American Psychological Association 7th edition</p>"},{string:"american-society-for-microbiology",details:"<p>American Society for Microbiology</p>"},{string:"american-society-of-civil-engineers",details:"<p>American Society of Civil Engineers</p>"},{string:"american-society-of-mechanical-engineers",details:"<p>American Society of Mechanical Engineers</p>"},{string:"american-sociological-association",details:"<p>American Sociological Association 6th/7th edition</p>"},{string:"angewandte-chemie",details:"<p>Angewandte Chemie International Edition</p>"},{string:"annual-reviews",details:"<p>Annual Reviews (sorted by order of appearance)</p>"},{string:"annual-reviews-author-date",details:"<p>Annual Reviews (author-date)</p>"},{string:"associacao-brasileira-de-normas-tecnicas",details:"<p>Associação Brasileira de Normas Técnicas (Português - Brasil)</p>"},{string:"association-for-computing-machinery",details:"<p>Association for Computing Machinery</p>"},{string:"biomed-central",details:"<p>BioMed Central</p>"},{string:"bristol-university-press",details:"<p>Bristol University Press</p>"},{string:"british-medical-journal",details:"<p>BMJ</p>"},{string:"cell",details:"<p>Cell</p>"},{string:"chicago-author-date",details:"<p>Chicago Manual of Style 17th edition (author-date)</p>"},{string:"chicago-fullnotes",details:"<p>Chicago Manual of Style 17th edition (full note)</p>"},{string:"chicago-notes",details:"<p>Chicago Manual of Style 17th edition (note)</p>"},{string:"copernicus",details:"<p>Copernicus Publications</p>"},{string:"council-of-science-editors",details:"<p>Council of Science Editors, Citation-Sequence (numeric, brackets)</p>"},{string:"council-of-science-editors-author-date",details:"<p>Council of Science Editors, Name-Year (author-date)</p>"},{string:"current-opinion",details:"<p>Current Opinion journals</p>"},{string:"deutsche-gesellschaft-für-psychologie",details:"<p>Deutsche Gesellschaft für Psychologie 5. Auflage (Deutsch)</p>"},{string:"deutsche-sprache",details:"<p>Deutsche Sprache (Deutsch)</p>"},{string:"elsevier-harvard",details:"<p>Elsevier - Harvard (with titles)</p>"},{string:"elsevier-vancouver",details:"<p>Elsevier - Vancouver</p>"},{string:"elsevier-with-titles",details:"<p>Elsevier (numeric, with titles)</p>"},{string:"frontiers",details:"<p>Frontiers journals</p>"},{string:"future-medicine",details:"<p>Future Medicine journals</p>"},{string:"future-science",details:"<p>Future Science Group</p>"},{string:"gb-7714-2005-numeric",details:"<p>China National Standard GB/T 7714-2005 (numeric, 中文)</p>"},{string:"gb-7714-2015-author-date",details:"<p>China National Standard GB/T 7714-2015 (author-date, 中文)</p>"},{string:"gb-7714-2015-note",details:"<p>China National Standard GB/T 7714-2015 (note, 中文)</p>"},{string:"gb-7714-2015-numeric",details:"<p>China National Standard GB/T 7714-2015 (numeric, 中文)</p>"},{string:"gost-r-705-2008-numeric",details:"<p>Russian GOST R 7.0.5-2008 (numeric)</p>"},{string:"harvard-cite-them-right",details:"<p>Cite Them Right 12th edition - Harvard</p>"},{string:"institute-of-electrical-and-electronics-engineers",details:"<p>IEEE</p>"},{string:"institute-of-physics-numeric",details:"<p>Institute of Physics (numeric)</p>"},{string:"iso-690-author-date",details:"<p>ISO-690 (author-date, English)</p>"},{string:"iso-690-numeric",details:"<p>ISO-690 (numeric, English)</p>"},{string:"karger",details:"<p>Karger journals</p>"},{string:"mary-ann-liebert-vancouver",details:"<p>Mary Ann Liebert - Vancouver</p>"},{string:"modern-humanities-research-association",details:"<p>Modern Humanities Research Association 4th edition (note with bibliography)</p>"},{string:"modern-language-association",details:"<p>Modern Language Association 9th edition</p>"},{string:"modern-language-association-8",details:"<p>Modern Language Association 8th edition</p>"},{string:"multidisciplinary-digital-publishing-institute",details:"<p>Multidisciplinary Digital Publishing Institute</p>"},{string:"nature",details:"<p>Nature</p>"},{string:"pensoft",details:"<p>Pensoft Journals</p>"},{string:"public-library-of-science",details:"<p>Public Library of Science</p>"},{string:"royal-society-of-chemistry",details:"<p>Royal Society of Chemistry</p>"},{string:"sage-vancouver",details:"<p>SAGE - Vancouver</p>"},{string:"sist02",details:"<p>SIST02 (日本語)</p>"},{string:"spie",details:"<p>SPIE journals</p>"},{string:"springer-basic",details:"<p>Springer - Basic (numeric, brackets)</p>"},{string:"springer-basic-author-date",details:"<p>Springer - Basic (author-date)</p>"},{string:"springer-fachzeitschriften-medizin-psychologie",details:"<p>Springer - Fachzeitschriften Medizin Psychologie (Deutsch)</p>"},{string:"springer-humanities-author-date",details:"<p>Springer - Humanities (author-date)</p>"},{string:"springer-lecture-notes-in-computer-science",details:"<p>Springer - Lecture Notes in Computer Science</p>"},{string:"springer-mathphys",details:"<p>Springer - MathPhys (numeric, brackets)</p>"},{string:"springer-socpsych-author-date",details:"<p>Springer - SocPsych (author-date)</p>"},{string:"springer-vancouver",details:"<p>Springer - Vancouver (brackets)</p>"},{string:"taylor-and-francis-chicago-author-date",details:"<p>Taylor &amp; Francis - Chicago Manual of Style (author-date)</p>"},{string:"taylor-and-francis-national-library-of-medicine",details:"<p>Taylor &amp; Francis - National Library of Medicine</p>"},{string:"the-institution-of-engineering-and-technology",details:"<p>The Institution of Engineering and Technology</p>"},{string:"the-lancet",details:"<p>The Lancet</p>"},{string:"thieme",details:"<p>Thieme-German (Deutsch)</p>"},{string:"trends",details:"<p>Trends journals</p>"},{string:"turabian-author-date",details:"<p>Turabian 9th edition (author-date)</p>"},{string:"turabian-fullnote-8",details:"<p>Turabian 8th edition (full note)</p>"},{string:"vancouver",details:"<p>Vancouver</p>"},{string:"vancouver-superscript",details:"<p>Vancouver (superscript)</p>"}],default:'<code><span class="typ-str">&quot;ieee&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/list/",title:"Bullet List",description:"Documentation for the `list` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-tight",name:"tight",children:[]},{id:"parameters-marker",name:"marker",children:[]},{id:"parameters-indent",name:"indent",children:[]},{id:"parameters-body-indent",name:"body-indent",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-children",name:"children",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-item",name:"Bullet List Item",children:[{id:"definitions-item-body",name:"body",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"list",title:"Bullet List",keywords:[],oneliner:"A bullet list.",element:!0,contextual:!1,details:`<p>A bullet list.</p>
<p>Displays a sequence of items vertically, with each item introduced by a
marker.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Normal list.
<span class="typ-marker">-</span> Text
<span class="typ-marker">-</span> Math
<span class="typ-marker">-</span> Layout
<span class="typ-marker">-</span> <span class="typ-escape">...</span>

Multiple lines.
<span class="typ-marker">-</span> This list item spans multiple
  lines because it is indented.

Function call.
<span class="typ-func">#</span><span class="typ-func">list</span><span class="typ-punct">(</span>
  <span class="typ-punct">[</span>Foundations<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Calculate<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Construct<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Data Loading<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6376961c6a9deb7fc813f99a85615cb2.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This functions also has dedicated syntax: Start a line with a hyphen,
followed by a space to create a list item. A list item can contain multiple
paragraphs and other block-level content. All content that is indented
more than an item's marker becomes part of that item.</p>`,example:null,self:!1,params:[{name:"tight",details:`<p>Defines the default <a href="/docs/reference/model/list/#parameters-spacing">spacing</a> of the list. If it is
<code><span class="typ-key">false</span></code>, the items are spaced apart with
<a href="/docs/reference/model/par/#parameters-spacing">paragraph spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use
<a href="/docs/reference/model/par/#parameters-leading">paragraph leading</a> instead. This makes the list more
compact, which can look better if the items are short.</p>
<p>In markup mode, the value of this parameter is determined based on
whether items are separated with a blank line. If items directly follow
each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
line, this is set to <code><span class="typ-key">false</span></code>. The markup-defined tightness cannot be
overridden with set rules.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-marker">-</span> If a list has a lot of text, and
  maybe other inline content, it
  should not be tight anymore.

<span class="typ-marker">-</span> To make a list wide, simply insert
  a blank line between the items.
</code></pre><div class="preview"><img src="/docs/assets/32fc20a6f4319baad0c33b09fe444cac.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"marker",details:`<p>The marker which introduces each item.</p>
<p>Instead of plain content, you can also pass an array with multiple
markers that should be used for nested lists. If the list nesting depth
exceeds the number of markers, the markers are cycled. For total
control, you may pass a function that maps the list's nesting depth
(starting from <code><span class="typ-num">0</span></code>) to a desired marker.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">list</span><span class="typ-punct">(</span>marker<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-escape">--</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
<span class="typ-marker">-</span> A more classic list
<span class="typ-marker">-</span> With en-dashes

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">list</span><span class="typ-punct">(</span>marker<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-punct">[</span>•<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-escape">--</span><span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-marker">-</span> Top-level
  <span class="typ-marker">-</span> Nested
  <span class="typ-marker">-</span> Items
<span class="typ-marker">-</span> Items
</code></pre><div class="preview"><img src="/docs/assets/67b358926734c92541adb40f763075a8.png" alt="Preview" /></div></div>`,types:["content","array","function"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">[</span>•<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>‣<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>–<span class="typ-punct">]</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"indent",details:"<p>The indent of each item.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body-indent",details:"<p>The spacing between the marker and the body of each item.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.5em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:`<p>The spacing between the items of the list.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, uses paragraph <a href="/docs/reference/model/par/#parameters-leading"><code>leading</code></a> for tight
lists and paragraph <a href="/docs/reference/model/par/#parameters-spacing"><code>spacing</code></a> for wide (non-tight)
lists.</p>`,example:null,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:`<p>The bullet list's children.</p>
<p>When using the list syntax, adjacent items are automatically collected
into lists, even through constructs like for loops.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> letter <span class="typ-key">in</span> <span class="typ-str">&quot;ABC&quot;</span> <span class="typ-punct">[</span>
  <span class="typ-marker">-</span> Letter <span class="typ-pol">#</span><span class="typ-pol">letter</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/462215a4cae67988b36d9e198a6d217e.png" alt="Preview" /></div></div>`,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[{path:["list"],name:"item",title:"Bullet List Item",keywords:[],oneliner:"A bullet list item.",element:!0,contextual:!1,details:"<p>A bullet list item.</p>",example:null,self:!1,params:[{name:"body",details:"<p>The item's body.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/cite/",title:"Cite",description:"Documentation for the `cite` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-key",name:"key",children:[]},{id:"parameters-supplement",name:"supplement",children:[]},{id:"parameters-form",name:"form",children:[]},{id:"parameters-style",name:"style",children:[]}]}],body:{kind:"func",content:{path:[],name:"cite",title:"Cite",keywords:[],oneliner:"Cite a work from the bibliography.",element:!0,contextual:!1,details:`<p>Cite a work from the bibliography.</p>
<p>Before you starting citing, you need to add a <a href="/docs/reference/model/bibliography/" title="bibliography">bibliography</a> somewhere in
your document.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This was already noted by
pirates long ago. <span class="typ-ref">@arrgh</span>

Multiple sources say <span class="typ-escape">...</span>
<span class="typ-ref">@arrgh</span> <span class="typ-ref">@netwok</span>.

You can also call <span class="typ-raw">\`cite\`</span>
explicitly. <span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;arrgh&gt;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d111010e6888c20d136dda70339e5f8a.png" alt="Preview" /></div></div>
<p>If your source name contains certain characters such as slashes, which are
not recognized by the <code>&lt;&gt;</code> syntax, you can explicitly call <code>label</code> instead.</p>
<pre><code>Computer Modern is an example of a modernist serif typeface.
<span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;DBLP:books/lib/Knuth86a&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>.
</code></pre>
<h2 id="syntax">Syntax</h2>
<p>This function indirectly has dedicated syntax. <a href="/docs/reference/model/ref/">References</a> can be
used to cite works from the bibliography. The label then corresponds to the
citation key.</p>`,example:null,self:!1,params:[{name:"key",details:`<p>The citation key that identifies the entry in the bibliography that
shall be cited, as a label.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-comment">// All the same</span>
<span class="typ-ref">@netwok</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;netwok&gt;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-func">label</span><span class="typ-punct">(</span><span class="typ-str">&quot;netwok&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3aa34d1e16a0b8626e8487fb802fc883.png" alt="Preview" /></div></div>`,types:["label"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"supplement",details:`<p>A supplement for the citation such as page or chapter number.</p>
<p>In reference syntax, the supplement can be added in square brackets:</p>`,example:`<div class="previewed-code"><pre><code>This has been proven. <span class="typ-ref">@distress<span class="typ-punct">[</span>p.<span class="typ-escape">~</span>7<span class="typ-punct">]</span></span>

<span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5013cee48a8038ada25530df4b44d92d.png" alt="Preview" /></div></div>`,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"form",details:`<p>The kind of citation to produce. Different forms are useful in different
scenarios: A normal citation is useful as a source at the end of a
sentence, while a &quot;prose&quot; citation is more suitable for inclusion in the
flow of text.</p>
<p>If set to <code><span class="typ-key">none</span></code>, the cited work is included in the bibliography, but
nothing will be displayed.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;netwok&gt;</span><span class="typ-punct">,</span> form<span class="typ-punct">:</span> <span class="typ-str">&quot;prose&quot;</span><span class="typ-punct">)</span>
show the outsized effects of
pirate life on the human psyche.
</code></pre><div class="preview"><img src="/docs/assets/9a75ddcee21588ad00dc2079c333a72.png" alt="Preview" /></div></div>`,types:["none","str"],strings:[{string:"normal",details:"<p>Display in the standard way for the active style.</p>"},{string:"prose",details:"<p>Produces a citation that is suitable for inclusion in a sentence.</p>"},{string:"full",details:"<p>Mimics a bibliography entry, with full information about the cited work.</p>"},{string:"author",details:"<p>Shows only the cited work's author(s).</p>"},{string:"year",details:"<p>Shows only the cited work's year.</p>"}],default:'<code><span class="typ-str">&quot;normal&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"style",details:`<p>The citation style.</p>
<p>Should be either <code><span class="typ-key">auto</span></code>, one of the built-in styles (see below) or a
path to a <a href="https://citationstyles.org/">CSL file</a>. Some of the styles
listed below appear twice, once with their full name and once with a
short alias.</p>
<p>When set to <code><span class="typ-key">auto</span></code>, automatically use the
<a href="/docs/reference/model/bibliography/#parameters-style">bibliography's style</a> for the citations.</p>`,example:null,types:["auto","str"],strings:[{string:"alphanumeric",details:"<p>Alphanumeric</p>"},{string:"american-anthropological-association",details:"<p>American Anthropological Association</p>"},{string:"american-chemical-society",details:"<p>American Chemical Society</p>"},{string:"american-geophysical-union",details:"<p>American Geophysical Union</p>"},{string:"american-institute-of-aeronautics-and-astronautics",details:"<p>American Institute of Aeronautics and Astronautics</p>"},{string:"american-institute-of-physics",details:"<p>American Institute of Physics 4th edition</p>"},{string:"american-medical-association",details:"<p>American Medical Association 11th edition</p>"},{string:"american-meteorological-society",details:"<p>American Meteorological Society</p>"},{string:"american-physics-society",details:"<p>American Physical Society</p>"},{string:"american-physiological-society",details:"<p>American Physiological Society</p>"},{string:"american-political-science-association",details:"<p>American Political Science Association</p>"},{string:"american-psychological-association",details:"<p>American Psychological Association 7th edition</p>"},{string:"american-society-for-microbiology",details:"<p>American Society for Microbiology</p>"},{string:"american-society-of-civil-engineers",details:"<p>American Society of Civil Engineers</p>"},{string:"american-society-of-mechanical-engineers",details:"<p>American Society of Mechanical Engineers</p>"},{string:"american-sociological-association",details:"<p>American Sociological Association 6th/7th edition</p>"},{string:"angewandte-chemie",details:"<p>Angewandte Chemie International Edition</p>"},{string:"annual-reviews",details:"<p>Annual Reviews (sorted by order of appearance)</p>"},{string:"annual-reviews-author-date",details:"<p>Annual Reviews (author-date)</p>"},{string:"associacao-brasileira-de-normas-tecnicas",details:"<p>Associação Brasileira de Normas Técnicas (Português - Brasil)</p>"},{string:"association-for-computing-machinery",details:"<p>Association for Computing Machinery</p>"},{string:"biomed-central",details:"<p>BioMed Central</p>"},{string:"bristol-university-press",details:"<p>Bristol University Press</p>"},{string:"british-medical-journal",details:"<p>BMJ</p>"},{string:"cell",details:"<p>Cell</p>"},{string:"chicago-author-date",details:"<p>Chicago Manual of Style 17th edition (author-date)</p>"},{string:"chicago-fullnotes",details:"<p>Chicago Manual of Style 17th edition (full note)</p>"},{string:"chicago-notes",details:"<p>Chicago Manual of Style 17th edition (note)</p>"},{string:"copernicus",details:"<p>Copernicus Publications</p>"},{string:"council-of-science-editors",details:"<p>Council of Science Editors, Citation-Sequence (numeric, brackets)</p>"},{string:"council-of-science-editors-author-date",details:"<p>Council of Science Editors, Name-Year (author-date)</p>"},{string:"current-opinion",details:"<p>Current Opinion journals</p>"},{string:"deutsche-gesellschaft-für-psychologie",details:"<p>Deutsche Gesellschaft für Psychologie 5. Auflage (Deutsch)</p>"},{string:"deutsche-sprache",details:"<p>Deutsche Sprache (Deutsch)</p>"},{string:"elsevier-harvard",details:"<p>Elsevier - Harvard (with titles)</p>"},{string:"elsevier-vancouver",details:"<p>Elsevier - Vancouver</p>"},{string:"elsevier-with-titles",details:"<p>Elsevier (numeric, with titles)</p>"},{string:"frontiers",details:"<p>Frontiers journals</p>"},{string:"future-medicine",details:"<p>Future Medicine journals</p>"},{string:"future-science",details:"<p>Future Science Group</p>"},{string:"gb-7714-2005-numeric",details:"<p>China National Standard GB/T 7714-2005 (numeric, 中文)</p>"},{string:"gb-7714-2015-author-date",details:"<p>China National Standard GB/T 7714-2015 (author-date, 中文)</p>"},{string:"gb-7714-2015-note",details:"<p>China National Standard GB/T 7714-2015 (note, 中文)</p>"},{string:"gb-7714-2015-numeric",details:"<p>China National Standard GB/T 7714-2015 (numeric, 中文)</p>"},{string:"gost-r-705-2008-numeric",details:"<p>Russian GOST R 7.0.5-2008 (numeric)</p>"},{string:"harvard-cite-them-right",details:"<p>Cite Them Right 12th edition - Harvard</p>"},{string:"institute-of-electrical-and-electronics-engineers",details:"<p>IEEE</p>"},{string:"institute-of-physics-numeric",details:"<p>Institute of Physics (numeric)</p>"},{string:"iso-690-author-date",details:"<p>ISO-690 (author-date, English)</p>"},{string:"iso-690-numeric",details:"<p>ISO-690 (numeric, English)</p>"},{string:"karger",details:"<p>Karger journals</p>"},{string:"mary-ann-liebert-vancouver",details:"<p>Mary Ann Liebert - Vancouver</p>"},{string:"modern-humanities-research-association",details:"<p>Modern Humanities Research Association 4th edition (note with bibliography)</p>"},{string:"modern-language-association",details:"<p>Modern Language Association 9th edition</p>"},{string:"modern-language-association-8",details:"<p>Modern Language Association 8th edition</p>"},{string:"multidisciplinary-digital-publishing-institute",details:"<p>Multidisciplinary Digital Publishing Institute</p>"},{string:"nature",details:"<p>Nature</p>"},{string:"pensoft",details:"<p>Pensoft Journals</p>"},{string:"public-library-of-science",details:"<p>Public Library of Science</p>"},{string:"royal-society-of-chemistry",details:"<p>Royal Society of Chemistry</p>"},{string:"sage-vancouver",details:"<p>SAGE - Vancouver</p>"},{string:"sist02",details:"<p>SIST02 (日本語)</p>"},{string:"spie",details:"<p>SPIE journals</p>"},{string:"springer-basic",details:"<p>Springer - Basic (numeric, brackets)</p>"},{string:"springer-basic-author-date",details:"<p>Springer - Basic (author-date)</p>"},{string:"springer-fachzeitschriften-medizin-psychologie",details:"<p>Springer - Fachzeitschriften Medizin Psychologie (Deutsch)</p>"},{string:"springer-humanities-author-date",details:"<p>Springer - Humanities (author-date)</p>"},{string:"springer-lecture-notes-in-computer-science",details:"<p>Springer - Lecture Notes in Computer Science</p>"},{string:"springer-mathphys",details:"<p>Springer - MathPhys (numeric, brackets)</p>"},{string:"springer-socpsych-author-date",details:"<p>Springer - SocPsych (author-date)</p>"},{string:"springer-vancouver",details:"<p>Springer - Vancouver (brackets)</p>"},{string:"taylor-and-francis-chicago-author-date",details:"<p>Taylor &amp; Francis - Chicago Manual of Style (author-date)</p>"},{string:"taylor-and-francis-national-library-of-medicine",details:"<p>Taylor &amp; Francis - National Library of Medicine</p>"},{string:"the-institution-of-engineering-and-technology",details:"<p>The Institution of Engineering and Technology</p>"},{string:"the-lancet",details:"<p>The Lancet</p>"},{string:"thieme",details:"<p>Thieme-German (Deutsch)</p>"},{string:"trends",details:"<p>Trends journals</p>"},{string:"turabian-author-date",details:"<p>Turabian 9th edition (author-date)</p>"},{string:"turabian-fullnote-8",details:"<p>Turabian 8th edition (full note)</p>"},{string:"vancouver",details:"<p>Vancouver</p>"},{string:"vancouver-superscript",details:"<p>Vancouver (superscript)</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/document/",title:"Document",description:"Documentation for the `document` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-title",name:"title",children:[]},{id:"parameters-author",name:"author",children:[]},{id:"parameters-keywords",name:"keywords",children:[]},{id:"parameters-date",name:"date",children:[]}]}],body:{kind:"func",content:{path:[],name:"document",title:"Document",keywords:[],oneliner:"The root element of a document and its metadata.",element:!0,contextual:!1,details:`<p>The root element of a document and its metadata.</p>
<p>All documents are automatically wrapped in a <code>document</code> element. You cannot
create a document element yourself. This function is only used with
<a href="/docs/reference/styling/#set-rules">set rules</a> to specify document metadata. Such a set
rule must not occur inside of any layout container.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">document</span><span class="typ-punct">(</span>title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">)</span>

This has no visible output, but
embeds metadata into the PDF!
</code></pre><div class="preview"><img src="/docs/assets/2bbb8be06e3f61b6bba7b7adb3796842.png" alt="Preview" /></div></div>
<p>Note that metadata set with this function is not rendered within the
document. Instead, it is embedded in the compiled PDF file.</p>`,example:null,self:!1,params:[{name:"title",details:`<p>The document's title. This is often rendered as the title of the
PDF viewer window.</p>
<p>While this can be arbitrary content, PDF viewers only support plain text
titles, so the conversion might be lossy.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"author",details:"<p>The document's authors.</p>",example:null,types:["str","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"keywords",details:"<p>The document's keywords.</p>",example:null,types:["str","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"date",details:`<p>The document's creation date.</p>
<p>If this is <code><span class="typ-key">auto</span></code> (default), Typst uses the current date and time.
Setting it to <code><span class="typ-key">none</span></code> prevents Typst from embedding any creation date
into the PDF metadata.</p>
<p>The year component must be at least zero in order to be embedded into a
PDF.</p>
<p>If you want to create byte-by-byte reproducible PDFs, set this to
something other than <code><span class="typ-key">auto</span></code>.</p>`,example:null,types:["none","auto","datetime"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/emph/",title:"Emphasis",description:"Documentation for the `emph` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"emph",title:"Emphasis",keywords:["italic"],oneliner:"Emphasizes content by toggling italics.",element:!0,contextual:!1,details:`<p>Emphasizes content by toggling italics.</p>
<ul>
<li>If the current <a href="/docs/reference/text/text/#parameters-style">text style</a> is <code><span class="typ-str">&quot;normal&quot;</span></code>, this turns it
into <code><span class="typ-str">&quot;italic&quot;</span></code>.</li>
<li>If it is already <code><span class="typ-str">&quot;italic&quot;</span></code> or <code><span class="typ-str">&quot;oblique&quot;</span></code>, it turns it back to
<code><span class="typ-str">&quot;normal&quot;</span></code>.</li>
</ul>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This is <span class="typ-emph">_emphasized._</span> <span class="typ-escape">\\</span>
This is <span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">[</span>too.<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">emph</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">,</span> it<span class="typ-punct">.</span>body<span class="typ-punct">)</span>
<span class="typ-punct">}</span>

This is <span class="typ-emph">_emphasized_</span> differently.
</code></pre><div class="preview"><img src="/docs/assets/3a27555bb9667a1b0eff48c4fd7f3227.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: To emphasize content, simply
enclose it in underscores (<code>_</code>). Note that this only works at word
boundaries. To emphasize part of a word, you have to use the function.</p>`,example:null,self:!1,params:[{name:"body",details:"<p>The content to emphasize.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/figure/",title:"Figure",description:"Documentation for the `figure` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"figure-behaviour",name:"Figure Behaviour",children:[]},{id:"caption-customization",name:"Caption Customization",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]},{id:"parameters-placement",name:"placement",children:[]},{id:"parameters-scope",name:"scope",children:[]},{id:"parameters-caption",name:"caption",children:[]},{id:"parameters-kind",name:"kind",children:[]},{id:"parameters-supplement",name:"supplement",children:[]},{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-gap",name:"gap",children:[]},{id:"parameters-outlined",name:"outlined",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-caption",name:"Caption",children:[{id:"definitions-caption-position",name:"position",children:[]},{id:"definitions-caption-separator",name:"separator",children:[]},{id:"definitions-caption-body",name:"body",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"figure",title:"Figure",keywords:[],oneliner:"A figure with an optional caption.",element:!0,contextual:!1,details:`<p>A figure with an optional caption.</p>
<p>Automatically detects its kind to select the correct counting track. For
example, figures containing images will be numbered separately from figures
containing tables.</p>
<h2 id="examples">Examples</h2>
<p>The example below shows a basic figure with an image:</p>
<div class="previewed-code"><pre><code><span class="typ-ref">@glacier</span> shows a glacier. Glaciers
are complex systems.

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A curious figure.<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-label">&lt;glacier&gt;</span>
</code></pre><div class="preview"><img src="/docs/assets/6f87daa8db2de71af5597c6b2b88f072.png" alt="Preview" /></div></div>
<p>You can also insert <a href="/docs/reference/model/table/">tables</a> into figures to give them a caption.
The figure will detect this and automatically use a separate counter.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>t<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>y<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.3s<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.4s<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.8s<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Timing results<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4ebb82388652f6de6542f87d28a46ef6.png" alt="Preview" /></div></div>
<p>This behaviour can be overridden by explicitly specifying the figure's
<code>kind</code>. All figures of the same kind share a common counter.</p>
<h2 id="figure-behaviour">Figure behaviour</h2>
<p>By default, figures are placed within the flow of content. To make them
float to the top or bottom of the page, you can use the
<a href="/docs/reference/model/figure/#parameters-placement"><code>placement</code></a> argument.</p>
<p>If your figure is too large and its contents are breakable across pages
(e.g. if it contains a large table), then you can make the figure itself
breakable across pages as well with this show rule:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">figure</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>breakable<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
</code></pre>
<p>See the <a href="/docs/reference/layout/block/#parameters-breakable">block</a> documentation for more information about
breakable and non-breakable blocks.</p>
<h2 id="caption-customization">Caption customization</h2>
<p>You can modify the appearance of the figure's caption with its associated
<a href="/docs/reference/model/figure/#definitions-caption"><code>caption</code></a> function. In the example below, we emphasize
all captions:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">:</span> <span class="typ-func">emph</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I am emphasized!<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d441746ecc2e05aee1f97a71b74f01aa.png" alt="Preview" /></div></div>
<p>By using a <a href="/docs/reference/foundations/function/#definitions-where"><code>where</code></a> selector, we can scope such rules to
specific kinds of figures. For example, to position the caption above
tables, but keep it below for all other kinds of figures, we could write the
following show-set rule:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
  kind<span class="typ-punct">:</span> table
<span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>position<span class="typ-punct">:</span> top<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">[</span>D<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I&#39;m up here<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6c0b502f0f5551bb8ce0cc2ac4fe95dd.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"body",details:'<p>The content of the figure. Often, an <a href="/docs/reference/visualize/image/" title="image">image</a>.</p>',example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"placement",details:`<p>The figure's placement on the page.</p>
<ul>
<li><code><span class="typ-key">none</span></code>: The figure stays in-flow exactly where it was specified
like other content.</li>
<li><code><span class="typ-key">auto</span></code>: The figure picks <code>top</code> or <code>bottom</code> depending on which
is closer.</li>
<li><code>top</code>: The figure floats to the top of the page.</li>
<li><code>bottom</code>: The figure floats to the bottom of the page.</li>
</ul>
<p>The gap between the main flow content and the floating figure is
controlled by the <a href="/docs/reference/layout/place/#parameters-clearance"><code>clearance</code></a> argument on the
<code>place</code> function.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">200pt</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  placement<span class="typ-punct">:</span> bottom<span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A glacier<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">60</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/dc054fd34e35f6a2ee6060d0cf4f0972.png" alt="Preview" /></div></div>`,types:["none","auto","alignment"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"scope",details:`<p>Relative to which containing scope the figure is placed.</p>
<p>Set this to <code><span class="typ-str">&quot;parent&quot;</span></code> to create a full-width figure in a two-column
document.</p>
<p>Has no effect if <code>placement</code> is <code><span class="typ-key">none</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">250pt</span><span class="typ-punct">,</span> columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  placement<span class="typ-punct">:</span> bottom<span class="typ-punct">,</span>
  scope<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A glacier<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;glacier.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">60</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/cfc55a499a05de0bc1ad860d5ad84a7b.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"column",details:"<p>Place into the current column.</p>"},{string:"parent",details:"<p>Place relative to the parent, letting the content span over all columns.</p>"}],default:'<code><span class="typ-str">&quot;column&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"caption",details:"<p>The figure's caption.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"kind",details:`<p>The kind of figure this is.</p>
<p>All figures of the same kind share a common counter.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the figure will try to automatically determine its
kind based on the type of its body. Automatically detected kinds are
<a href="/docs/reference/model/table/">tables</a> and <a href="/docs/reference/text/raw/">code</a>. In other cases, the inferred kind is
that of an <a href="/docs/reference/visualize/image/" title="image">image</a>.</p>
<p>Setting this to something other than <code><span class="typ-key">auto</span></code> will override the
automatic detection. This can be useful if</p>
<ul>
<li>you wish to create a custom figure type that is not an
<a href="/docs/reference/visualize/image/" title="image">image</a>, a <a href="/docs/reference/model/table/" title="table">table</a> or <a href="/docs/reference/text/raw/">code</a>,</li>
<li>you want to force the figure to use a specific counter regardless of
its content.</li>
</ul>
<p>You can set the kind to be an element function or a string. If you set
it to an element function other than <a href="/docs/reference/model/table/"><code>table</code></a>, <a href="/docs/reference/text/raw/"><code>raw</code></a>
or <a href="/docs/reference/visualize/image/"><code>image</code></a>, you will need to manually specify the figure's
supplement.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">circle</span><span class="typ-punct">(</span>radius<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A curious atom.<span class="typ-punct">]</span><span class="typ-punct">,</span>
  kind<span class="typ-punct">:</span> <span class="typ-str">&quot;atom&quot;</span><span class="typ-punct">,</span>
  supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Atom<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ddf4319430f0da752772176c05dd4cbe.png" alt="Preview" /></div></div>`,types:["auto","str","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"supplement",details:`<p>The figure's supplement.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the figure will try to automatically determine the
correct supplement based on the <code>kind</code> and the active
<a href="/docs/reference/text/text/#parameters-lang">text language</a>. If you are using a custom figure type, you
will need to manually specify the supplement.</p>
<p>If a function is specified, it is passed the first descendant of the
specified <code>kind</code> (typically, the figure's body) and should return
content.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-punct">[</span>The contents of my figure!<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>My custom figure<span class="typ-punct">]</span><span class="typ-punct">,</span>
  supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Bar<span class="typ-punct">]</span><span class="typ-punct">,</span>
  kind<span class="typ-punct">:</span> <span class="typ-str">&quot;foo&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/77a69576e267524e690b97be511e9730.png" alt="Preview" /></div></div>`,types:["none","auto","content","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"numbering",details:`<p>How to number the figure. Accepts a
<a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>`,example:null,types:["none","str","function"],strings:[],default:'<code><span class="typ-str">&quot;1&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gap",details:"<p>The vertical gap between the body and caption.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.65em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outlined",details:'<p>Whether the figure should appear in an <a href="/docs/reference/model/outline/" title="`outline`"><code>outline</code></a> of figures.</p>',example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[{path:["figure"],name:"caption",title:"Caption",keywords:[],oneliner:"The caption of a figure. This element can be used in set and show rules to",element:!0,contextual:!1,details:`<p>The caption of a figure. This element can be used in set and show rules to
customize the appearance of captions for all figures or figures of a
specific kind.</p>
<p>In addition to its <code>pos</code> and <code>body</code>, the <code>caption</code> also provides the
figure's <code>kind</code>, <code>supplement</code>, <code>counter</code>, and <code>numbering</code> as fields. These
parts can be used in <a href="/docs/reference/foundations/function/#definitions-where"><code>where</code></a> selectors and show rules to
build a completely custom caption.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">:</span> <span class="typ-func">emph</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7cd957cdc6e093d8bb4e025d99c06743.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"position",details:"<p>The caption's position in the figure. Either <code>top</code> or <code>bottom</code>.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
  kind<span class="typ-punct">:</span> table
<span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>position<span class="typ-punct">:</span> top<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I&#39;m up here<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>I&#39;m down here<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>
    position<span class="typ-punct">:</span> bottom<span class="typ-punct">,</span>
    <span class="typ-punct">[</span>I&#39;m down here too!<span class="typ-punct">]</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ce489964cae88ce9323c8b0c9397774c.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:"<code>bottom</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"separator",details:`<p>The separator which will appear between the number and body.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the separator will be adapted to the current
<a href="/docs/reference/text/text/#parameters-lang">language</a> and <a href="/docs/reference/text/text/#parameters-region">region</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">(</span>separator<span class="typ-punct">:</span> <span class="typ-punct">[</span> <span class="typ-escape">---</span> <span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c60ed986ad8bfd9eb221882ee729eac.png" alt="Preview" /></div></div>`,types:["auto","content"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The caption's body.</p>
<p>Can be used alongside <code>kind</code>, <code>supplement</code>, <code>counter</code>, <code>numbering</code>, and
<code>location</code> to completely customize the caption.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> figure<span class="typ-punct">.</span><span class="typ-func">caption</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span> |
  <span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">supplement</span>
  <span class="typ-key">#</span><span class="typ-key">context</span> it<span class="typ-punct">.</span>counter<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>numbering<span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d90a97415921fc6b85c589d5b4606593.png" alt="Preview" /></div></div>`,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/footnote/",title:"Footnote",description:"Documentation for the `footnote` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-body",name:"body",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-entry",name:"Footnote Entry",children:[{id:"definitions-entry-note",name:"note",children:[]},{id:"definitions-entry-separator",name:"separator",children:[]},{id:"definitions-entry-clearance",name:"clearance",children:[]},{id:"definitions-entry-gap",name:"gap",children:[]},{id:"definitions-entry-indent",name:"indent",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"footnote",title:"Footnote",keywords:[],oneliner:"A footnote.",element:!0,contextual:!1,details:`<p>A footnote.</p>
<p>Includes additional remarks and references on the same page with footnotes.
A footnote will insert a superscript number that links to the note at the
bottom of the page. Notes are numbered sequentially throughout your document
and can break across multiple pages.</p>
<p>To customize the appearance of the entry in the footnote listing, see
<a href="/docs/reference/model/footnote/#definitions-entry"><code>footnote.entry</code></a>. The footnote itself is realized as a
normal superscript, so you can use a set rule on the <a href="/docs/reference/text/super/" title="\`super\`"><code>super</code></a> function to
customize it. You can also apply a show rule to customize only the footnote
marker (superscript number) in the running text.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Check the docs for more details.
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span><span class="typ-link">https://typst.app/docs</span><span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/c82e196422ca0002d44e4e622c263c00.png" alt="Preview" /></div></div>
<p>The footnote automatically attaches itself to the preceding word, even if
there is a space before it in the markup. To force space, you can use the
string <code><span class="typ-str">#</span><span class="typ-str">&quot; &quot;</span></code> or explicit <a href="/docs/reference/layout/h/">horizontal spacing</a>.</p>
<p>By giving a label to a footnote, you can have multiple references to it.</p>
<div class="previewed-code"><pre><code>You can edit Typst documents online.
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span><span class="typ-link">https://typst.app/app</span><span class="typ-punct">]</span> <span class="typ-label">&lt;fn&gt;</span>
Checkout Typst&#39;s website. <span class="typ-ref">@fn</span>
And the online app. <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">(</span><span class="typ-label">&lt;fn&gt;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/bd39940e41ae487f7c0fa4f7b081ea7.png" alt="Preview" /></div></div>
<p><em>Note:</em> Set and show rules in the scope where <code>footnote</code> is called may not
apply to the footnote's content. See <a href="https://github.com/typst/typst/issues/1467#issuecomment-1588799440">here</a> for more information.</p>`,example:null,self:!1,params:[{name:"numbering",details:`<p>How to number footnotes.</p>
<p>By default, the footnote numbering continues throughout your document.
If you prefer per-page footnote numbering, you can reset the footnote
<a href="/docs/reference/introspection/counter/" title="counter">counter</a> in the page <a href="/docs/reference/layout/page/#parameters-header">header</a>. In the future, there might
be a simpler way to achieve this.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">footnote</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;*&quot;</span><span class="typ-punct">)</span>

Footnotes:
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Star<span class="typ-punct">]</span>,
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Dagger<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/7e2faa38a4648db18a040ae28a1f04d4.png" alt="Preview" /></div></div>`,types:["str","function"],strings:[],default:'<code><span class="typ-str">&quot;1&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The content to put into the footnote. Can also be the label of another
footnote this one should point to.</p>`,example:null,types:["label","content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[{path:["footnote"],name:"entry",title:"Footnote Entry",keywords:[],oneliner:"An entry in a footnote list.",element:!0,contextual:!1,details:`<p>An entry in a footnote list.</p>
<p>This function is not intended to be called directly. Instead, it is used in
set and show rules to customize footnote listings.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>

My footnote listing
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>It&#39;s down here<span class="typ-punct">]</span>
has red text!
</code></pre><div class="preview"><img src="/docs/assets/18064f1fa3eaf8c03ddc65772dd030d6.png" alt="Preview" /></div></div>
<p><em>Note:</em> Footnote entry properties must be uniform across each page run (a
page run is a sequence of pages without an explicit pagebreak in between).
For this reason, set and show rules for footnote entries should be defined
before any page content, typically at the very start of the document.</p>`,self:!1,params:[{name:"note",details:`<p>The footnote for this entry. It's location can be used to determine
the footnote counter state.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> loc <span class="typ-op">=</span> it<span class="typ-punct">.</span>note<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  <span class="typ-func">numbering</span><span class="typ-punct">(</span>
    <span class="typ-str">&quot;1: &quot;</span><span class="typ-punct">,</span>
    <span class="typ-op">..</span><span class="typ-func">counter</span><span class="typ-punct">(</span>footnote<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>loc<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
  it<span class="typ-punct">.</span>note<span class="typ-punct">.</span>body
<span class="typ-punct">}</span>

Customized <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span>
listing <span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>World! 🌏<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/c2909eace7590b3cec670854a4bfb39f.png" alt="Preview" /></div></div>`,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"separator",details:"<p>The separator between the document body and the footnote listing.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>
  separator<span class="typ-punct">:</span> <span class="typ-func">repeat</span><span class="typ-punct">[</span>.<span class="typ-punct">]</span>
<span class="typ-punct">)</span>

Testing a different separator.
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>
  Unconventional, but maybe
  not that bad?
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/a67774915dea2b0f721c99c8590dfe14.png" alt="Preview" /></div></div>`,types:["content"],strings:[],default:'<code><span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">30%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span><span class="typ-punct">,</span> stroke<span class="typ-punct">:</span> <span class="typ-num">0.5pt</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"clearance",details:"<p>The amount of clearance between the document body and the separator.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>clearance<span class="typ-punct">:</span> <span class="typ-num">3em</span><span class="typ-punct">)</span>

Footnotes also need <span class="typ-escape">...</span>
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>
  <span class="typ-escape">...</span> some space to breathe.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/3da6fa89fe29cefffe0a77d86c1f5b59.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">1em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gap",details:"<p>The gap between footnote entries.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>gap<span class="typ-punct">:</span> <span class="typ-num">0.8em</span><span class="typ-punct">)</span>

Footnotes:
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Spaced<span class="typ-punct">]</span>,
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Apart<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/5fcd664bd829a63bc457e25417ccd1df.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0.5em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"indent",details:"<p>The indent of each footnote entry.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> footnote<span class="typ-punct">.</span><span class="typ-func">entry</span><span class="typ-punct">(</span>indent<span class="typ-punct">:</span> <span class="typ-num">0em</span><span class="typ-punct">)</span>

Footnotes:
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>No<span class="typ-punct">]</span>,
<span class="typ-func">#</span><span class="typ-func">footnote</span><span class="typ-punct">[</span>Indent<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/d7f31c9cb3852c4d332908713eacd2f5.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">1em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/heading/",title:"Heading",description:"Documentation for the `heading` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-level",name:"level",children:[]},{id:"parameters-depth",name:"depth",children:[]},{id:"parameters-offset",name:"offset",children:[]},{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-supplement",name:"supplement",children:[]},{id:"parameters-outlined",name:"outlined",children:[]},{id:"parameters-bookmarked",name:"bookmarked",children:[]},{id:"parameters-hanging-indent",name:"hanging-indent",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"heading",title:"Heading",keywords:[],oneliner:"A section heading.",element:!0,contextual:!1,details:`<p>A section heading.</p>
<p>With headings, you can structure your document into sections. Each heading
has a <em>level,</em> which starts at one and is unbounded upwards. This level
indicates the logical role of the following content (section, subsection,
etc.) A top-level heading indicates a top-level section of the document
(not the document's title).</p>
<p>Typst can automatically number your headings for you. To enable numbering,
specify how you want your headings to be numbered with a
<a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
<p>Independently of the numbering, Typst can also automatically generate an
<a href="/docs/reference/model/outline/" title="outline">outline</a> of all headings for you. To exclude one or more headings from this
outline, you can set the <code>outlined</code> parameter to <code><span class="typ-key">false</span></code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
In recent years, <span class="typ-escape">...</span>

<span class="typ-heading">== Preliminaries</span>
To start, <span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/8a42522eed535dbefbd1924115ff00d5.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>Headings have dedicated syntax: They can be created by starting a line with
one or multiple equals signs, followed by a space. The number of equals
signs determines the heading's logical nesting depth. The <code>offset</code> field
can be set to configure the starting depth.</p>`,example:null,self:!1,params:[{name:"level",details:`<p>The absolute nesting depth of the heading, starting from one. If set
to <code><span class="typ-key">auto</span></code>, it is computed from <code>offset <span class="typ-op">+</span> depth</code>.</p>
<p>This is primarily useful for usage in <a href="/docs/reference/styling/#show-rules">show rules</a>
(either with <a href="/docs/reference/foundations/function/#definitions-where"><code>where</code></a> selectors or by accessing the
level directly on a shown heading).</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>

<span class="typ-heading">= Level 1</span>
<span class="typ-heading">== Level 2</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span>
<span class="typ-heading">= Also level 2</span>
<span class="typ-heading">== Level 3</span>
</code></pre><div class="preview"><img src="/docs/assets/15955872aab526b1e9d4210db4fdb2ee.png" alt="Preview" /></div></div>`,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"depth",details:`<p>The relative nesting depth of the heading, starting from one. This is
combined with <code>offset</code> to compute the actual <code>level</code>.</p>
<p>This is set by the heading syntax, such that <code><span class="typ-heading">== Heading</span></code> creates a
heading with logical depth of 2, but actual level <code>offset <span class="typ-op">+</span> <span class="typ-num">2</span></code>. If you
construct a heading manually, you should typically prefer this over
setting the absolute level.</p>`,example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"offset",details:`<p>The starting offset of each heading's <code>level</code>, used to turn its
relative <code>depth</code> into its absolute <code>level</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-heading">= Level 1</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.1&quot;</span><span class="typ-punct">)</span>
<span class="typ-heading">= Level 2</span>

<span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> depth<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  I&#39;m level 4
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/d1fc02542b5a2acd9e7bc63ec60454af.png" alt="Preview" /></div></div>`,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"numbering",details:`<p>How to number the heading. Accepts a
<a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= A section</span>
<span class="typ-heading">== A subsection</span>
<span class="typ-heading">=== A sub-subsection</span>
</code></pre><div class="preview"><img src="/docs/assets/605416ba918f7169c7b80577c765d163.png" alt="Preview" /></div></div>`,types:["none","str","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"supplement",details:`<p>A supplement for the heading.</p>
<p>For references to headings, this is added before the referenced number.</p>
<p>If a function is specified, it is passed the referenced heading and
should return content.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">,</span> supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Chapter<span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
In <span class="typ-ref">@intro</span>, we see how to turn
Sections into Chapters. And
in <span class="typ-ref">@intro<span class="typ-punct">[</span>Part<span class="typ-punct">]</span></span>, it is done
manually.
</code></pre><div class="preview"><img src="/docs/assets/de9feaa973df3c7fa172f6fdce8d534d.png" alt="Preview" /></div></div>`,types:["none","auto","content","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outlined",details:`<p>Whether the heading should appear in the <a href="/docs/reference/model/outline/" title="outline">outline</a>.</p>
<p>Note that this property, if set to <code><span class="typ-key">true</span></code>, ensures the heading is also
shown as a bookmark in the exported PDF's outline (when exporting to
PDF). To change that behavior, use the <code>bookmarked</code> property.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>Normal<span class="typ-punct">]</span>
This is a normal heading.

<span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">(</span>outlined<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Hidden<span class="typ-punct">]</span>
This heading does not appear
in the outline.
</code></pre><div class="preview"><img src="/docs/assets/4cd7f7c1f7f4ebb8741a7c77c70ac5de.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"bookmarked",details:`<p>Whether the heading should appear as a bookmark in the exported PDF's
outline. Doesn't affect other export formats, such as PNG.</p>
<p>The default value of <code><span class="typ-key">auto</span></code> indicates that the heading will only
appear in the exported PDF's outline if its <code>outlined</code> property is set
to <code><span class="typ-key">true</span></code>, that is, if it would also be listed in Typst's <a href="/docs/reference/model/outline/" title="outline">outline</a>.
Setting this property to either <code><span class="typ-key">true</span></code> (bookmark) or <code><span class="typ-key">false</span></code> (don't
bookmark) bypasses that behavior.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>Normal heading<span class="typ-punct">]</span>
This heading will be shown in
the PDF&#39;s bookmark outline.

<span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">(</span>bookmarked<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Not bookmarked<span class="typ-punct">]</span>
This heading won&#39;t be
bookmarked in the resulting
PDF.
</code></pre><div class="preview"><img src="/docs/assets/77a02d150b50a7b43ed6eaaf59b80e0c.png" alt="Preview" /></div></div>`,types:["auto","bool"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"hanging-indent",details:`<p>The indent all but the first line of a heading should have.</p>
<p>The default value of <code><span class="typ-key">auto</span></code> indicates that the subsequent heading
lines will be indented based on the width of the numbering.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">[</span>A very, very, very, very, very, very long heading<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/4315c5d90cb73e399c194db05437187e.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The heading's title.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/link/",title:"Link",description:"Documentation for the `link` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-dest",name:"dest",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"link",title:"Link",keywords:[],oneliner:"Links to a URL or a location in the document.",element:!0,contextual:!1,details:`<p>Links to a URL or a location in the document.</p>
<p>By default, links are not styled any different from normal text. However,
you can easily apply a style of your choice with a show rule.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">link</span><span class="typ-punct">:</span> <span class="typ-func">underline</span>

<span class="typ-link">https://example.com</span> <span class="typ-escape">\\</span>

<span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;https://example.com&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;https://example.com&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  See example.com
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/2e3c0889ea9e86697e8b58aa12ffa5b4.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: Text that starts with <code>http://</code> or
<code>https://</code> is automatically turned into a link.</p>`,example:null,self:!1,params:[{name:"dest",details:`<p>The destination the link points to.</p>
<ul>
<li>
<p>To link to web pages, <code>dest</code> should be a valid URL string. If the URL
is in the <code>mailto:</code> or <code>tel:</code> scheme and the <code>body</code> parameter is
omitted, the email address or phone number will be the link's body,
without the scheme.</p>
</li>
<li>
<p>To link to another part of the document, <code>dest</code> can take one of three
forms:</p>
<ul>
<li>
<p>A <a href="/docs/reference/foundations/label/" title="label">label</a> attached to an element. If you also want automatic text
for the link based on the element, consider using a
<a href="/docs/reference/model/ref/">reference</a> instead.</p>
</li>
<li>
<p>A <a href="/docs/reference/introspection/location/" title="\`location\`"><code>location</code></a> (typically retrieved from <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a>, <a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a> or
<a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a>).</p>
</li>
<li>
<p>A dictionary with a <code>page</code> key of type <a href="/docs/reference/foundations/int/">integer</a> and <code>x</code> and
<code>y</code> coordinates of type <a href="/docs/reference/layout/length/" title="length">length</a>. Pages are counted from one, and
the coordinates are relative to the page's top left corner.</p>
</li>
</ul>
</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
<span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;mailto:hello@typst.app&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Go to intro<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-punct">(</span>page<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> x<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  Go to top
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/162c6377f80de4757d9773d61913120b.png" alt="Preview" /></div></div>`,types:["str","label","location","dictionary"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"body",details:`<p>The content that should become a link.</p>
<p>If <code>dest</code> is an URL string, the parameter can be omitted. In this case,
the URL will be shown as the link.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/enum/",title:"Numbered List",description:"Documentation for the `enum` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-tight",name:"tight",children:[]},{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-start",name:"start",children:[]},{id:"parameters-full",name:"full",children:[]},{id:"parameters-indent",name:"indent",children:[]},{id:"parameters-body-indent",name:"body-indent",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-number-align",name:"number-align",children:[]},{id:"parameters-children",name:"children",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-item",name:"Numbered List Item",children:[{id:"definitions-item-number",name:"number",children:[]},{id:"definitions-item-body",name:"body",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"enum",title:"Numbered List",keywords:[],oneliner:"A numbered list.",element:!0,contextual:!1,details:`<p>A numbered list.</p>
<p>Displays a sequence of items vertically and numbers them consecutively.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Automatically numbered:
<span class="typ-marker">+</span> Preparations
<span class="typ-marker">+</span> Analysis
<span class="typ-marker">+</span> Conclusions

Manually numbered:
<span class="typ-marker">2.</span> What is the first step?
<span class="typ-marker">5.</span> I am confused.
<span class="typ-marker">+</span>  Moving on <span class="typ-escape">...</span>

Multiple lines:
<span class="typ-marker">+</span> This enum item has multiple
  lines because the next line
  is indented.

Function call.
<span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">[</span>First<span class="typ-punct">]</span><span class="typ-punct">[</span>Second<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/193485a0d64a60dd4eb050c4a8ff4fe0.png" alt="Preview" /></div></div>
<p>You can easily switch all your enumerations to a different numbering style
with a set rule.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;a)&quot;</span><span class="typ-punct">)</span>

<span class="typ-marker">+</span> Starting off <span class="typ-escape">...</span>
<span class="typ-marker">+</span> Don&#39;t forget step two
</code></pre><div class="preview"><img src="/docs/assets/4582f1e1de9f12331328dcb0a4566c06.png" alt="Preview" /></div></div>
<p>You can also use <a href="/docs/reference/model/enum/#definitions-item"><code>enum.item</code></a> to programmatically customize the
number of each item in the enumeration:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
  enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">[</span>First step<span class="typ-punct">]</span><span class="typ-punct">,</span>
  enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Fifth step<span class="typ-punct">]</span><span class="typ-punct">,</span>
  enum<span class="typ-punct">.</span><span class="typ-func">item</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Tenth step<span class="typ-punct">]</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/edcb39670fe0363e32c5366119932ff.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This functions also has dedicated syntax:</p>
<ul>
<li>Starting a line with a plus sign creates an automatically numbered
enumeration item.</li>
<li>Starting a line with a number followed by a dot creates an explicitly
numbered enumeration item.</li>
</ul>
<p>Enumeration items can contain multiple paragraphs and other block-level
content. All content that is indented more than an item's marker becomes
part of that item.</p>`,example:null,self:!1,params:[{name:"tight",details:`<p>Defines the default <a href="/docs/reference/model/enum/#parameters-spacing">spacing</a> of the enumeration. If it
is <code><span class="typ-key">false</span></code>, the items are spaced apart with
<a href="/docs/reference/model/par/#parameters-spacing">paragraph spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use
<a href="/docs/reference/model/par/#parameters-leading">paragraph leading</a> instead. This makes the list more
compact, which can look better if the items are short.</p>
<p>In markup mode, the value of this parameter is determined based on
whether items are separated with a blank line. If items directly follow
each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
line, this is set to <code><span class="typ-key">false</span></code>. The markup-defined tightness cannot be
overridden with set rules.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-marker">+</span> If an enum has a lot of text, and
  maybe other inline content, it
  should not be tight anymore.

<span class="typ-marker">+</span> To make an enum wide, simply
  insert a blank line between the
  items.
</code></pre><div class="preview"><img src="/docs/assets/cdf3c6bef93548cca8ef68e46b5c42e1.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"numbering",details:`<p>How to number the enumeration. Accepts a
<a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>
<p>If the numbering pattern contains multiple counting symbols, they apply
to nested enums. If given a function, the function receives one argument
if <code>full</code> is <code><span class="typ-key">false</span></code> and multiple arguments if <code>full</code> is <code><span class="typ-key">true</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">)</span>
<span class="typ-marker">+</span> Different
<span class="typ-marker">+</span> Numbering
  <span class="typ-marker">+</span> Nested
  <span class="typ-marker">+</span> Items
<span class="typ-marker">+</span> Style

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-func">super</span><span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">n</span><span class="typ-punct">]</span><span class="typ-punct">)</span>
<span class="typ-marker">+</span> Superscript
<span class="typ-marker">+</span> Numbering!
</code></pre><div class="preview"><img src="/docs/assets/8464ab877e63b36f47691daaeaeb13d0.png" alt="Preview" /></div></div>`,types:["str","function"],strings:[],default:'<code><span class="typ-str">&quot;1.&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"start",details:"<p>Which number to start the enumeration with.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">enum</span><span class="typ-punct">(</span>
  start<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Skipping<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Ahead<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6a0f1d8a289e261529675069f0a486ad.png" alt="Preview" /></div></div>`,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"full",details:`<p>Whether to display the full numbering, including the numbers of
all parent enumerations.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a)&quot;</span><span class="typ-punct">,</span> full<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-marker">+</span> Cook
  <span class="typ-marker">+</span> Heat water
  <span class="typ-marker">+</span> Add ingredients
<span class="typ-marker">+</span> Eat
</code></pre><div class="preview"><img src="/docs/assets/2c42e29159eacec46f27bafd01d16779.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"indent",details:"<p>The indentation of each item.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body-indent",details:"<p>The space between the numbering and the body of each item.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.5em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:`<p>The spacing between the items of the enumeration.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, uses paragraph <a href="/docs/reference/model/par/#parameters-leading"><code>leading</code></a> for tight
enumerations and paragraph <a href="/docs/reference/model/par/#parameters-spacing"><code>spacing</code></a> for wide
(non-tight) enumerations.</p>`,example:null,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-align",details:`<p>The alignment that enum numbers should have.</p>
<p>By default, this is set to <code>end <span class="typ-op">+</span> top</code>, which aligns enum numbers
towards end of the current text direction (in left-to-right script,
for example, this is the same as <code>right</code>) and at the top of the line.
The choice of <code>end</code> for horizontal alignment of enum numbers is
usually preferred over <code>start</code>, as numbers then grow away from the
text instead of towards it, avoiding certain visual issues. This option
lets you override this behaviour, however. (Also to note is that the
<a href="/docs/reference/model/list/">unordered list</a> uses a different method for this, by giving the
<code>marker</code> content an alignment directly.).</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>number-align<span class="typ-punct">:</span> start <span class="typ-op">+</span> bottom<span class="typ-punct">)</span>

Here are some powers of two:
<span class="typ-marker">1.</span> One
<span class="typ-marker">2.</span> Two
<span class="typ-marker">4.</span> Four
<span class="typ-marker">8.</span> Eight
<span class="typ-marker">16.</span> Sixteen
<span class="typ-marker">32.</span> Thirty two
</code></pre><div class="preview"><img src="/docs/assets/4639d40ebb3ec5249970e1367aacf4b.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>end <span class="typ-op">+</span> top</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:`<p>The numbered list's items.</p>
<p>When using the enum syntax, adjacent items are automatically collected
into enumerations, even through constructs like for loops.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> phase <span class="typ-key">in</span> <span class="typ-punct">(</span>
   <span class="typ-str">&quot;Launch&quot;</span><span class="typ-punct">,</span>
   <span class="typ-str">&quot;Orbit&quot;</span><span class="typ-punct">,</span>
   <span class="typ-str">&quot;Descent&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-punct">[</span><span class="typ-marker">+</span> <span class="typ-pol">#</span><span class="typ-pol">phase</span><span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/486f5762b8a93cfd1fa4999f7912fbf9.png" alt="Preview" /></div></div>`,types:["content","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[{path:["enum"],name:"item",title:"Numbered List Item",keywords:[],oneliner:"An enumeration item.",element:!0,contextual:!1,details:"<p>An enumeration item.</p>",example:null,self:!1,params:[{name:"number",details:"<p>The item's number.</p>",example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The item's body.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/numbering/",title:"Numbering",description:"Documentation for the `numbering` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"numbering-patterns-and-numbering-functions",name:"Numbering Patterns And Numbering Functions",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-numbers",name:"numbers",children:[]}]}],body:{kind:"func",content:{path:[],name:"numbering",title:"Numbering",keywords:[],oneliner:"Applies a numbering to a sequence of numbers.",element:!1,contextual:!1,details:`<p>Applies a numbering to a sequence of numbers.</p>
<p>A numbering defines how a sequence of numbers should be displayed as
content. It is defined either through a pattern string or an arbitrary
function.</p>
<p>A numbering pattern consists of counting symbols, for which the actual
number is substituted, their prefixes, and one suffix. The prefixes and the
suffix are repeated as-is.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.1)&quot;</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span><span class="typ-str">&quot;1.a.i&quot;</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span><span class="typ-str">&quot;I – 1&quot;</span><span class="typ-punct">,</span> <span class="typ-num">12</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">numbering</span><span class="typ-punct">(</span>
  <span class="typ-punct">(</span><span class="typ-op">..</span>nums<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> nums
    <span class="typ-punct">.</span><span class="typ-func">pos</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>str<span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;.&quot;</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-str">&quot;)&quot;</span><span class="typ-punct">,</span>
  <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f60c7bc03c1b207ca6dc10fdcf68c4b3.png" alt="Preview" /></div></div>
<h2 id="numbering-patterns-and-numbering-functions">Numbering patterns and numbering functions</h2>
<p>There are multiple instances where you can provide a numbering pattern or
function in Typst. For example, when defining how to number
<a href="/docs/reference/model/heading/">headings</a> or <a href="/docs/reference/model/figure/">figures</a>. Every time, the expected format
is the same as the one described below for the
<a href="/docs/reference/model/numbering/#parameters-numbering"><code>numbering</code></a> parameter.</p>
<p>The following example illustrates that a numbering function is just a
regular <a href="/docs/reference/foundations/function/" title="function">function</a> that accepts numbers and returns <a href="/docs/reference/foundations/content/" title="\`content\`"><code>content</code></a>.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">unary</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">,</span> last<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-str">&quot;|&quot;</span> <span class="typ-op">*</span> last
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> unary<span class="typ-punct">)</span>
<span class="typ-heading">= First heading</span>
<span class="typ-heading">= Second heading</span>
<span class="typ-heading">= Third heading</span>
</code></pre><div class="preview"><img src="/docs/assets/ce13a66e10cbcf87e8547c0174ab6427.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"numbering",details:`<p>Defines how the numbering works.</p>
<p><strong>Counting symbols</strong> are <code>1</code>, <code>a</code>, <code>A</code>, <code>i</code>, <code>I</code>, <code>一</code>, <code>壹</code>, <code>あ</code>, <code>い</code>,
<code>ア</code>, <code>イ</code>, <code>א</code>, <code>가</code>, <code>ㄱ</code>, <code>*</code>, <code>①</code>, and <code>⓵</code>. They are replaced by the
number in the sequence, preserving the original case.</p>
<p>The <code>*</code> character means that symbols should be used to count, in the
order of <code>*</code>, <code>†</code>, <code>‡</code>, <code>§</code>, <code>¶</code>, <code>‖</code>. If there are more than six
items, the number is represented using repeated symbols.</p>
<p><strong>Suffixes</strong> are all characters after the last counting symbol. They are
repeated as-is at the end of any rendered number.</p>
<p><strong>Prefixes</strong> are all characters that are neither counting symbols nor
suffixes. They are repeated as-is at in front of their rendered
equivalent of their counting symbol.</p>
<p>This parameter can also be an arbitrary function that gets each number
as an individual argument. When given a function, the <code>numbering</code>
function just forwards the arguments to that function. While this is not
particularly useful in itself, it means that you can just give arbitrary
numberings to the <code>numbering</code> function without caring whether they are
defined as a pattern or function.</p>`,example:null,types:["str","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"numbers",details:`<p>The numbers to apply the numbering to. Must be positive.</p>
<p>If <code>numbering</code> is a pattern and more numbers than counting symbols are
given, the last counting symbol with its prefix is repeated.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["any"],scope:[]}},children:[]},{route:"/docs/reference/model/outline/",title:"Outline",description:"Documentation for the `outline` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"alternative-outlines",name:"Alternative Outlines",children:[]},{id:"styling-the-outline",name:"Styling The Outline",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-title",name:"title",children:[]},{id:"parameters-target",name:"target",children:[]},{id:"parameters-depth",name:"depth",children:[]},{id:"parameters-indent",name:"indent",children:[]},{id:"parameters-fill",name:"fill",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-entry",name:"Outline Entry",children:[{id:"definitions-entry-level",name:"level",children:[]},{id:"definitions-entry-element",name:"element",children:[]},{id:"definitions-entry-body",name:"body",children:[]},{id:"definitions-entry-fill",name:"fill",children:[]},{id:"definitions-entry-page",name:"page",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"outline",title:"Outline",keywords:["Table of Contents"],oneliner:"A table of contents, figures, or other elements.",element:!0,contextual:!1,details:`<p>A table of contents, figures, or other elements.</p>
<p>This function generates a list of all occurrences of an element in the
document, up to a given depth. The element's numbering and page number will
be displayed in the outline alongside its title or caption. By default this
generates a table of contents.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-heading">= Prior work</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ea673cd33453490a73aec601d2c716b1.png" alt="Preview" /></div></div>
<h2 id="alternative-outlines">Alternative outlines</h2>
<p>By setting the <code>target</code> parameter, the outline can be used to generate a
list of other kinds of elements than headings. In the example below, we list
all figures containing images by setting <code>target</code> to <code>figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> image<span class="typ-punct">)</span></code>. We could have also set it to just <code>figure</code>, but then the list
would also include figures containing tables or other material. For more
details on the <code>where</code> selector, <a href="/docs/reference/foundations/function/#definitions-where">see here</a>.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>List of Figures<span class="typ-punct">]</span><span class="typ-punct">,</span>
  target<span class="typ-punct">:</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> image<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A nice figure!<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/18bcea6720e328f12714fec86af508ef.png" alt="Preview" /></div></div>
<h2 id="styling-the-outline">Styling the outline</h2>
<p>The outline element has several options for customization, such as its
<code>title</code> and <code>indent</code> parameters. If desired, however, it is possible to have
more control over the outline's look and style through the
<a href="/docs/reference/model/outline/#definitions-entry"><code>outline.entry</code></a> element.</p>`,example:null,self:!1,params:[{name:"title",details:`<p>The title of the outline.</p>
<ul>
<li>When set to <code><span class="typ-key">auto</span></code>, an appropriate title for the
<a href="/docs/reference/text/text/#parameters-lang">text language</a> will be used. This is the default.</li>
<li>When set to <code><span class="typ-key">none</span></code>, the outline will not have a title.</li>
<li>A custom title can be set by passing content.</li>
</ul>
<p>The outline's heading will not be numbered by default, but you can
force it to be with a show-set rule:
<code><span class="typ-key">show</span> <span class="typ-func">outline</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span></code></p>`,example:null,types:["none","auto","content"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"target",details:`<p>The type of element to include in the outline.</p>
<p>To list figures containing a specific kind of element, like a table, you
can write <code>figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> table<span class="typ-punct">)</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>List of Tables<span class="typ-punct">]</span><span class="typ-punct">,</span>
  target<span class="typ-punct">:</span> figure<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>kind<span class="typ-punct">:</span> table<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>t<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>y<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.3<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.7<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>0.5<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Experiment results<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6fe5f437dc3f5eaeaddd7a7eb16c3985.png" alt="Preview" /></div></div>`,types:["label","selector","location","function"],strings:[],default:'<code>heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>outlined<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"depth",details:`<p>The maximum level up to which elements are included in the outline. When
this argument is <code><span class="typ-key">none</span></code>, all elements are included.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>depth<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>

<span class="typ-heading">= Yes</span>
Top-level section.

<span class="typ-heading">== Still</span>
Subsection.

<span class="typ-heading">=== Nope</span>
Not included.
</code></pre><div class="preview"><img src="/docs/assets/a030f4e7df509ac4d8941dd286e993af.png" alt="Preview" /></div></div>`,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"indent",details:`<p>How to indent the outline's entries.</p>
<ul>
<li><code><span class="typ-key">none</span></code>: No indent</li>
<li><code><span class="typ-key">auto</span></code>: Indents the numbering of the nested entry with the title of
its parent entry. This only has an effect if the entries are numbered
(e.g., via <a href="/docs/reference/model/heading/#parameters-numbering">heading numbering</a>).</li>
<li><a href="/docs/reference/layout/relative/">Relative length</a>: Indents the item by this length
multiplied by its nesting level. Specifying <code><span class="typ-num">2em</span></code>, for instance,
would indent top-level headings (not nested) by <code><span class="typ-num">0em</span></code>, second level
headings by <code><span class="typ-num">2em</span></code> (nested once), third-level headings by <code><span class="typ-num">4em</span></code>
(nested twice) and so on.</li>
<li><a href="/docs/reference/foundations/function/">Function</a>: You can completely customize this setting with
a function. That function receives the nesting level as a parameter
(starting at 0 for top-level headings/elements) and can return a
relative length or content making up the indent. For example,
<code>n <span class="typ-op">=&gt;</span> n <span class="typ-op">*</span> <span class="typ-num">2em</span></code> would be equivalent to just specifying <code><span class="typ-num">2em</span></code>, while
<code>n <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>→ <span class="typ-punct">]</span> <span class="typ-op">*</span> n</code> would indent with one arrow per nesting level.</li>
</ul>
<p><em>Migration hints:</em>  Specifying <code><span class="typ-key">true</span></code> (equivalent to <code><span class="typ-key">auto</span></code>) or
<code><span class="typ-key">false</span></code> (equivalent to <code><span class="typ-key">none</span></code>) for this option is deprecated and
will be removed in a future release.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.a.&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Contents (Automatic)<span class="typ-punct">]</span><span class="typ-punct">,</span>
  indent<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Contents (Length)<span class="typ-punct">]</span><span class="typ-punct">,</span>
  indent<span class="typ-punct">:</span> <span class="typ-num">2em</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>Contents (Function)<span class="typ-punct">]</span><span class="typ-punct">,</span>
  indent<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>→ <span class="typ-punct">]</span> <span class="typ-op">*</span> n<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= About ACME Corp.</span>
<span class="typ-heading">== History</span>
<span class="typ-heading">=== Origins</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>

<span class="typ-heading">== Products</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5dae7edfcaf5a634e04e879fed239563.png" alt="Preview" /></div></div>`,types:["none","auto","bool","relative","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>Content to fill the space between the title and the page number. Can be
set to <code><span class="typ-key">none</span></code> to disable filling.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-heading">= A New Beginning</span>
</code></pre><div class="preview"><img src="/docs/assets/1ac87c1204a29a11b95c01c00595123a.png" alt="Preview" /></div></div>`,types:["none","content"],strings:[],default:'<code><span class="typ-func">repeat</span><span class="typ-punct">(</span>body<span class="typ-punct">:</span> <span class="typ-punct">[</span>.<span class="typ-punct">]</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[{path:["outline"],name:"entry",title:"Outline Entry",keywords:[],oneliner:"Represents each entry line in an outline, including the reference to the",element:!0,contextual:!1,details:`<p>Represents each entry line in an outline, including the reference to the
outlined element, its page number, and the filler content between both.</p>
<p>This element is intended for use with show rules to control the appearance
of outlines. To customize an entry's line, you can build it from scratch by
accessing the <code>level</code>, <code>element</code>, <code>body</code>, <code>fill</code> and <code>page</code> fields on the
entry.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">show</span> outline<span class="typ-punct">.</span>entry<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
  level<span class="typ-punct">:</span> <span class="typ-num">1</span>
<span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">12pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
  <span class="typ-func">strong</span><span class="typ-punct">(</span>it<span class="typ-punct">)</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span>indent<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-heading">= Background</span>
<span class="typ-heading">== History</span>
<span class="typ-heading">== State of the Art</span>
<span class="typ-heading">= Analysis</span>
<span class="typ-heading">== Setup</span>
</code></pre><div class="preview"><img src="/docs/assets/cbf48ba3b373e5ae196adda199f0d0f4.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"level",details:`<p>The nesting level of this outline entry. Starts at <code><span class="typ-num">1</span></code> for top-level
entries.</p>`,example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"element",details:`<p>The element this entry refers to. Its location will be available
through the <a href="/docs/reference/foundations/content/#definitions-location"><code>location</code></a> method on content
and can be <a href="/docs/reference/model/link/">linked</a> to.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"body",details:`<p>The content which is displayed in place of the referred element at its
entry in the outline. For a heading, this would be its number followed
by the heading's title, for example.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"fill",details:`<p>The content used to fill the space between the element's outline and
its page number, as defined by the outline element this entry is
located in. When <code><span class="typ-key">none</span></code>, empty space is inserted in that gap instead.</p>
<p>Note that, when using show rules to override outline entries, it is
recommended to wrap the filling content in a <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a> with fractional
width. For example, <code><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">repeat</span><span class="typ-punct">[</span>-<span class="typ-punct">]</span><span class="typ-punct">)</span></code> would show precisely
as many <code>-</code> characters as necessary to fill a particular gap.</p>`,example:null,types:["none","content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"page",details:`<p>The page number of the element this entry links to, formatted with the
numbering set for the referenced page.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/par/",title:"Paragraph",description:"Documentation for the `par` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-leading",name:"leading",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-justify",name:"justify",children:[]},{id:"parameters-linebreaks",name:"linebreaks",children:[]},{id:"parameters-first-line-indent",name:"first-line-indent",children:[]},{id:"parameters-hanging-indent",name:"hanging-indent",children:[]},{id:"parameters-body",name:"body",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-line",name:"Paragraph Line",children:[{id:"definitions-line-numbering",name:"numbering",children:[]},{id:"definitions-line-number-align",name:"number-align",children:[]},{id:"definitions-line-number-margin",name:"number-margin",children:[]},{id:"definitions-line-number-clearance",name:"number-clearance",children:[]},{id:"definitions-line-numbering-scope",name:"numbering-scope",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"par",title:"Paragraph",keywords:[],oneliner:"Arranges text, spacing and inline-level elements into a paragraph.",element:!0,contextual:!1,details:`<p>Arranges text, spacing and inline-level elements into a paragraph.</p>
<p>Although this function is primarily used in set rules to affect paragraph
properties, it can also be used to explicitly render its argument onto a
paragraph of its own.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>
  first-line-indent<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">0.65em</span><span class="typ-punct">,</span>
  justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

We proceed by contradiction.
Suppose that there exists a set
of positive integers <span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>, <span class="typ-math-delim">$</span>b<span class="typ-math-delim">$</span>, and
<span class="typ-math-delim">$</span>c<span class="typ-math-delim">$</span> that satisfies the equation
<span class="typ-math-delim">$</span>a<span class="typ-math-op">^</span>n + b<span class="typ-math-op">^</span>n = c<span class="typ-math-op">^</span>n<span class="typ-math-delim">$</span> for some
integer value of <span class="typ-math-delim">$</span>n &gt; 2<span class="typ-math-delim">$</span>.

Without loss of generality,
let <span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span> be the smallest of the
three integers. Then, we <span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/50ceceef401d425dcc58e3fc0708b44f.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"leading",details:`<p>The spacing between lines.</p>
<p>Leading defines the spacing between the <a href="/docs/reference/text/text/#parameters-bottom-edge">bottom edge</a>
of one line and the <a href="/docs/reference/text/text/#parameters-top-edge">top edge</a> of the following line. By
default, these two properties are up to the font, but they can also be
configured manually with a text set rule.</p>
<p>By setting top edge, bottom edge, and leading, you can also configure a
consistent baseline-to-baseline distance. You could, for instance, set
the leading to <code><span class="typ-num">1em</span></code>, the top-edge to <code><span class="typ-num">0.8em</span></code>, and the bottom-edge
to <code><span class="typ-op">-</span><span class="typ-num">0.2em</span></code> to get a baseline gap of exactly <code><span class="typ-num">2em</span></code>. The exact
distribution of the top- and bottom-edge values affects the bounds of
the first and last line.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.65em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:`<p>The spacing between paragraphs.</p>
<p>Just like leading, this defines the spacing between the bottom edge of a
paragraph's last line and the top edge of the next paragraph's first
line.</p>
<p>When a paragraph is adjacent to a <a href="/docs/reference/layout/block/" title="\`block\`"><code>block</code></a> that is not a paragraph,
that block's <a href="/docs/reference/layout/block/#parameters-above"><code>above</code></a> or <a href="/docs/reference/layout/block/#parameters-below"><code>below</code></a> property
takes precedence over the paragraph spacing. Headings, for instance,
reduce the spacing below them by default for a better look.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">1.2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"justify",details:`<p>Whether to justify text in its line.</p>
<p>Hyphenation will be enabled for justified paragraphs if the
<a href="/docs/reference/text/text/#parameters-hyphenate">text function's <code>hyphenate</code> property</a> is set to
<code><span class="typ-key">auto</span></code> and the current language is known.</p>
<p>Note that the current <a href="/docs/reference/layout/align/#parameters-alignment">alignment</a> still has an effect
on the placement of the last line except if it ends with a
<a href="/docs/reference/text/linebreak/#parameters-justify">justified line break</a>.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"linebreaks",details:`<p>How to determine line breaks.</p>
<p>When this property is set to <code><span class="typ-key">auto</span></code>, its default value, optimized line
breaks will be used for justified paragraphs. Enabling optimized line
breaks for ragged paragraphs may also be worthwhile to improve the
appearance of the text.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">207pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>linebreaks<span class="typ-punct">:</span> <span class="typ-str">&quot;simple&quot;</span><span class="typ-punct">)</span>
Some texts feature many longer
words. Those are often exceedingly
challenging to break in a visually
pleasing way.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>linebreaks<span class="typ-punct">:</span> <span class="typ-str">&quot;optimized&quot;</span><span class="typ-punct">)</span>
Some texts feature many longer
words. Those are often exceedingly
challenging to break in a visually
pleasing way.
</code></pre><div class="preview"><img src="/docs/assets/463dc74bd387e6193f73e136607305a9.png" alt="Preview" /></div></div>`,types:["auto","str"],strings:[{string:"simple",details:"<p>Determine the line breaks in a simple first-fit style.</p>"},{string:"optimized",details:`<p>Optimize the line breaks for the whole paragraph.</p>
<p>Typst will try to produce more evenly filled lines of text by
considering the whole paragraph when calculating line breaks.</p>`}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"first-line-indent",details:`<p>The indent the first line of a paragraph should have.</p>
<p>Only the first line of a consecutive paragraph will be indented (not
the first one in a block or on the page).</p>
<p>By typographic convention, paragraph breaks are indicated either by some
space between paragraphs or by indented first lines. Consider reducing
the <a href="/docs/reference/layout/block/#parameters-spacing">paragraph spacing</a> to the <a href="/docs/reference/model/par/#parameters-leading"><code>leading</code></a>
when using this property (e.g. using <code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">0.65em</span><span class="typ-punct">)</span></code>).</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"hanging-indent",details:"<p>The indent all but the first line of a paragraph should have.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The contents of the paragraph.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[{path:["par"],name:"line",title:"Paragraph Line",keywords:["line numbering"],oneliner:"A paragraph line.",element:!0,contextual:!1,details:`<p>A paragraph line.</p>
<p>This element is exclusively used for line number configuration through set
rules and cannot be placed.</p>
<p>The <a href="/docs/reference/model/par/#definitions-line-numbering"><code>numbering</code></a> option is used to enable line
numbers by specifying a numbering format.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">)</span>

Roses are red. <span class="typ-escape">\\</span>
Violets are blue. <span class="typ-escape">\\</span>
Typst is there for you.
</code></pre><div class="preview"><img src="/docs/assets/b3d901f2b5ae0040162391143645d6a7.png" alt="Preview" /></div></div>
<p>The <code>numbering</code> option takes either a predefined
<a href="/docs/reference/model/numbering/">numbering pattern</a> or a function returning styled content. You
can disable line numbers for text inside certain elements by setting the
numbering to <code><span class="typ-key">none</span></code> using show-set rules.</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// Styled red line numbers.</span>
<span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  numbering<span class="typ-punct">:</span> n <span class="typ-op">=&gt;</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span><span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">n</span><span class="typ-punct">]</span>
<span class="typ-punct">)</span>

<span class="typ-comment">// Disable numbers inside figures.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">figure</span><span class="typ-punct">:</span> <span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  numbering<span class="typ-punct">:</span> <span class="typ-key">none</span>
<span class="typ-punct">)</span>

Roses are red. <span class="typ-escape">\\</span>
Violets are blue.

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Without line numbers.<span class="typ-punct">]</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>
  Lorem ipsum <span class="typ-escape">\\</span>
  dolor sit amet
<span class="typ-punct">]</span>

The text above is a sample <span class="typ-escape">\\</span>
originating from distant times.
</code></pre><div class="preview"><img src="/docs/assets/495368e9f09269d0ab0dc36072e2f583.png" alt="Preview" /></div></div>
<p>This element exposes further options which may be used to control other
aspects of line numbering, such as its <a href="/docs/reference/model/par/#definitions-line-number-align">alignment</a>
or <a href="/docs/reference/model/par/#definitions-line-number-margin">margin</a>. In addition, you can control whether
the numbering is reset on each page through the
<a href="/docs/reference/model/par/#definitions-line-numbering-scope"><code>numbering-scope</code></a> option.</p>`,self:!1,params:[{name:"numbering",details:`<p>How to number each line. Accepts a
<a href="/docs/reference/model/numbering/">numbering pattern or function</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;I&quot;</span><span class="typ-punct">)</span>

Roses are red. <span class="typ-escape">\\</span>
Violets are blue. <span class="typ-escape">\\</span>
Typst is there for you.
</code></pre><div class="preview"><img src="/docs/assets/e431d4be236dfdc1062f9c177a793a6f.png" alt="Preview" /></div></div>`,types:["none","str","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-align",details:`<p>The alignment of line numbers associated with each line.</p>
<p>The default of <code><span class="typ-key">auto</span></code> indicates a smart default where numbers grow
horizontally away from the text, considering the margin they're in and
the current text direction.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;I&quot;</span><span class="typ-punct">,</span>
  number-align<span class="typ-punct">:</span> left<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

Hello world! <span class="typ-escape">\\</span>
Today is a beautiful day <span class="typ-escape">\\</span>
For exploring the world.
</code></pre><div class="preview"><img src="/docs/assets/b243f3cf627f9714e191fb223c17606d.png" alt="Preview" /></div></div>`,types:["auto","alignment"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-margin",details:`<p>The margin at which line numbers appear.</p>
<p><em>Note:</em> In a multi-column document, the line numbers for paragraphs
inside the last column will always appear on the <code>end</code> margin (right
margin for left-to-right text and left margin for right-to-left),
regardless of this configuration. That behavior cannot be changed at
this moment.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">,</span>
  number-margin<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= Report</span>
<span class="typ-marker">-</span> Brightness: Dark, yet darker
<span class="typ-marker">-</span> Readings: Negative
</code></pre><div class="preview"><img src="/docs/assets/b2c5c077642f20e5deef2ad24f843728.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:"<code>start</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-clearance",details:`<p>The distance between line numbers and text.</p>
<p>The default value of <code><span class="typ-key">auto</span></code> results in a clearance that is adaptive to
the page width and yields reasonable results in most cases.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">,</span>
  number-clearance<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

Typesetting <span class="typ-escape">\\</span>
Styling <span class="typ-escape">\\</span>
Layout
</code></pre><div class="preview"><img src="/docs/assets/8edc0ca37cda3261f68e15c8b2caad4f.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"numbering-scope",details:`<p>Controls when to reset line numbering.</p>
<p><em>Note:</em> The line numbering scope must be uniform across each page run (a
page run is a sequence of pages without an explicit pagebreak in
between). For this reason, set rules for it should be defined before any
page content, typically at the very start of the document.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> par<span class="typ-punct">.</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">,</span>
  numbering-scope<span class="typ-punct">:</span> <span class="typ-str">&quot;page&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

First line <span class="typ-escape">\\</span>
Second line
<span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
First line again <span class="typ-escape">\\</span>
Second line again
</code></pre><div class="preview"><img src="/docs/assets/e95376d808ce2cc934691521fa069f0.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"document",details:`<p>Indicates the line number counter spans the whole document, that is,
is never automatically reset.</p>`},{string:"page",details:`<p>Indicates the line number counter should be reset at the start of every
new page.</p>`}],default:'<code><span class="typ-str">&quot;document&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/parbreak/",title:"Paragraph Break",description:"Documentation for the `parbreak` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]}],body:{kind:"func",content:{path:[],name:"parbreak",title:"Paragraph Break",keywords:[],oneliner:"A paragraph break.",element:!0,contextual:!1,details:`<p>A paragraph break.</p>
<p>This starts a new paragraph. Especially useful when used within code like
<a href="/docs/reference/scripting/#loops">for loops</a>. Multiple consecutive
paragraph breaks collapse into a single one.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> i <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
  <span class="typ-punct">[</span>Blind text <span class="typ-pol">#</span><span class="typ-pol">i</span>: <span class="typ-punct">]</span>
  <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span>
  <span class="typ-func">parbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/d806cc6e13528cfcc1bedce6356b9316.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>Instead of calling this function, you can insert a blank line into your
markup to create a paragraph break.</p>`,example:null,self:!1,params:[],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/quote/",title:"Quote",description:"Documentation for the `quote` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-block",name:"block",children:[]},{id:"parameters-quotes",name:"quotes",children:[]},{id:"parameters-attribution",name:"attribution",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"quote",title:"Quote",keywords:[],oneliner:"Displays a quote alongside an optional attribution.",element:!0,contextual:!1,details:`<p>Displays a quote alongside an optional attribution.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Plato is often misquoted as the author of <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>I know that I know
nothing<span class="typ-punct">]</span>, however, this is a derivation form his original quote:

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">quote</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>Plato<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-escape">...</span> ἔοικα γοῦν τούτου γε σμικρῷ τινι αὐτῷ τούτῳ σοφώτερος εἶναι, ὅτι
  ἃ μὴ οἶδα οὐδὲ οἴομαι εἰδέναι.
<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>from the Henry Cary literal translation of 1897<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-escape">...</span> I seem, then, in just this little thing to be wiser than this man at
  any rate, that what I do not know I do not think I know either.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/4e985eb999cb6e499d2db05e5291dfe1.png" alt="Preview" /></div></div>
<p>By default block quotes are padded left and right by <code><span class="typ-num">1em</span></code>, alignment and
padding can be controlled with show rules:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">quote</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">quote</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">quote</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">pad</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">5em</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>
  You cannot pass<span class="typ-escape">...</span> I am a servant of the Secret Fire, wielder of the
  flame of Anor. You cannot pass. The dark fire will not avail you,
  flame of Udûn. Go back to the Shadow! You cannot pass.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/bbb0c9286b463008128ea71f06e26e5f.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"block",details:"<p>Whether this is a block quote.</p>",example:`<div class="previewed-code"><pre><code>An inline citation would look like
this: <span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>
  attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>René Descartes<span class="typ-punct">]</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>
  cogito, ergo sum
<span class="typ-punct">]</span>, and a block equation like this:
<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>
  block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>JFK<span class="typ-punct">]</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>
  Ich bin ein Berliner.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/277a634659ecac9c10e44d395c90532c.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"quotes",details:`<p>Whether double quotes should be added around this quote.</p>
<p>The double quotes used are inferred from the <code>quotes</code> property on
<a href="/docs/reference/text/smartquote/" title="smartquote">smartquote</a>, which is affected by the <code>lang</code> property on <a href="/docs/reference/text/text/" title="text">text</a>.</p>
<ul>
<li><code><span class="typ-key">true</span></code>: Wrap this quote in double quotes.</li>
<li><code><span class="typ-key">false</span></code>: Do not wrap this quote in double quotes.</li>
<li><code><span class="typ-key">auto</span></code>: Infer whether to wrap this quote in double quotes based on
the <code>block</code> property. If <code>block</code> is <code><span class="typ-key">false</span></code>, double quotes are
automatically added.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>

Ein deutsch-sprechender Author
zitiert unter umständen JFK:
<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>Ich bin ein Berliner.<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;en&quot;</span><span class="typ-punct">)</span>

And an english speaking one may
translate the quote:
<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">[</span>I am a Berliner.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/aa8a42f0a7e5079c8f16e72f8e625970.png" alt="Preview" /></div></div>`,types:["auto","bool"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"attribution",details:`<p>The attribution of this quote, usually the author or source. Can be a
label pointing to a bibliography entry or any content. By default only
displayed for block quotes, but can be changed using a <code><span class="typ-key">show</span></code> rule.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-punct">[</span>René Descartes<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  cogito, ergo sum
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">show</span> quote<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-punct">[</span>&quot;<span class="typ-punct">]</span> <span class="typ-op">+</span> <span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-op">+</span> it<span class="typ-punct">.</span>body <span class="typ-op">+</span> <span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-punct">[</span>&quot;<span class="typ-punct">]</span>
  <span class="typ-key">if</span> it<span class="typ-punct">.</span>attribution <span class="typ-op">!=</span> <span class="typ-key">none</span> <span class="typ-punct">[</span> (<span class="typ-pol">#</span><span class="typ-pol">it</span><span class="typ-punct">.</span><span class="typ-pol">attribution</span>)<span class="typ-punct">]</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>
  attribution<span class="typ-punct">:</span> <span class="typ-func">link</span><span class="typ-punct">(</span><span class="typ-str">&quot;https://typst.app/home&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>typst.com<span class="typ-punct">]</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>
  Compose papers faster
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">quote</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">quote</span><span class="typ-punct">(</span>attribution<span class="typ-punct">:</span> <span class="typ-label">&lt;tolkien54&gt;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  You cannot pass<span class="typ-escape">...</span> I am a servant
  of the Secret Fire, wielder of the
  flame of Anor. You cannot pass. The
  dark fire will not avail you, flame
  of Udûn. Go back to the Shadow! You
  cannot pass.
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;apa&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/70f7ad2ecc60c5ad4fd99eb3230a72f5.png" alt="Preview" /></div></div>`,types:["none","label","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The quote.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/ref/",title:"Reference",description:"Documentation for the `ref` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"customization",name:"Customization",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-target",name:"target",children:[]},{id:"parameters-supplement",name:"supplement",children:[]}]}],body:{kind:"func",content:{path:[],name:"ref",title:"Reference",keywords:[],oneliner:"A reference to a label or bibliography.",element:!0,contextual:!1,details:`<p>A reference to a label or bibliography.</p>
<p>Produces a textual reference to a label. For example, a reference to a
heading will yield an appropriate string such as &quot;Section 1&quot; for a reference
to the first heading. The references are also links to the respective
element. Reference syntax can also be used to <a href="/docs/reference/model/cite/" title="cite">cite</a> from a bibliography.</p>
<p>Referenceable elements include <a href="/docs/reference/model/heading/">headings</a>, <a href="/docs/reference/model/figure/">figures</a>,
<a href="/docs/reference/math/equation/">equations</a>, and <a href="/docs/reference/model/footnote/">footnotes</a>. To create a custom
referenceable element like a theorem, you can create a figure of a custom
<a href="/docs/reference/model/figure/#parameters-kind"><code>kind</code></a> and write a show rule for it. In the future, there
might be a more direct way to define a custom referenceable element.</p>
<p>If you just want to link to a labelled element and not get an automatic
textual reference, consider using the <a href="/docs/reference/model/link/" title="\`link\`"><code>link</code></a> function instead.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
Recent developments in
typesetting software have
rekindled hope in previously
frustrated researchers. <span class="typ-ref">@distress</span>
As shown in <span class="typ-ref">@results</span>, we <span class="typ-escape">...</span>

<span class="typ-heading">= Results</span> <span class="typ-label">&lt;results&gt;</span>
We discuss our approach in
comparison with others.

<span class="typ-heading">== Performance</span> <span class="typ-label">&lt;perf&gt;</span>
<span class="typ-ref">@slow</span> demonstrates what slow
software looks like.
<span class="typ-math-delim">$</span> T(n) = O(2<span class="typ-math-op">^</span>n) <span class="typ-math-delim">$</span> <span class="typ-label">&lt;slow&gt;</span>

<span class="typ-func">#</span><span class="typ-func">bibliography</span><span class="typ-punct">(</span><span class="typ-str">&quot;works.bib&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/bbe47ca409a00dd0e0b67a1f5329c6c.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: A reference to a label can be
created by typing an <code>@</code> followed by the name of the label (e.g.
<code><span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span></code> can be referenced by typing <code><span class="typ-ref">@intro</span></code>).</p>
<p>To customize the supplement, add content in square brackets after the
reference: <code><span class="typ-ref">@intro<span class="typ-punct">[</span>Chapter<span class="typ-punct">]</span></span></code>.</p>
<h2 id="customization">Customization</h2>
<p>If you write a show rule for references, you can access the referenced
element through the <code>element</code> field of the reference. The <code>element</code> may
be <code><span class="typ-key">none</span></code> even if it exists if Typst hasn't discovered it yet, so you
always need to handle that case in your code.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">ref</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> eq <span class="typ-op">=</span> math<span class="typ-punct">.</span>equation
  <span class="typ-key">let</span> el <span class="typ-op">=</span> it<span class="typ-punct">.</span>element
  <span class="typ-key">if</span> el <span class="typ-op">!=</span> <span class="typ-key">none</span> <span class="typ-key">and</span> el<span class="typ-punct">.</span><span class="typ-func">func</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> eq <span class="typ-punct">{</span>
    <span class="typ-comment">// Override equation references.</span>
    <span class="typ-func">link</span><span class="typ-punct">(</span>el<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span><span class="typ-func">numbering</span><span class="typ-punct">(</span>
      el<span class="typ-punct">.</span>numbering<span class="typ-punct">,</span>
      <span class="typ-op">..</span><span class="typ-func">counter</span><span class="typ-punct">(</span>eq<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>el<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
    <span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
    <span class="typ-comment">// Other references as usual.</span>
    it
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span>

<span class="typ-heading">= Beginnings</span> <span class="typ-label">&lt;beginning&gt;</span>
In <span class="typ-ref">@beginning</span> we prove <span class="typ-ref">@pythagoras</span>.
<span class="typ-math-delim">$</span> a<span class="typ-math-op">^</span>2 + b<span class="typ-math-op">^</span>2 = c<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span> <span class="typ-label">&lt;pythagoras&gt;</span>
</code></pre><div class="preview"><img src="/docs/assets/c402946d33ccef4fcdb7b0e6ae43f0c9.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"target",details:'<p>The target label that should be referenced.</p>\n<p>Can be a label that is defined in the document or an entry from the\n<a href="/docs/reference/model/bibliography/" title="`bibliography`"><code>bibliography</code></a>.</p>',example:null,types:["label"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"supplement",details:`<p>A supplement for the reference.</p>
<p>For references to headings or figures, this is added before the
referenced number. For citations, this can be used to add a page number.</p>
<p>If a function is specified, it is passed the referenced element and
should return content.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">ref</span><span class="typ-punct">(</span>supplement<span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">if</span> it<span class="typ-punct">.</span><span class="typ-func">func</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> heading <span class="typ-punct">{</span>
    <span class="typ-str">&quot;Chapter&quot;</span>
  <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
    <span class="typ-str">&quot;Thing&quot;</span>
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
In <span class="typ-ref">@intro</span>, we see how to turn
Sections into Chapters. And
in <span class="typ-ref">@intro<span class="typ-punct">[</span>Part<span class="typ-punct">]</span></span>, it is done
manually.
</code></pre><div class="preview"><img src="/docs/assets/9cbb676967e682aa1cc5f5f6d14bf406.png" alt="Preview" /></div></div>`,types:["none","auto","content","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/strong/",title:"Strong Emphasis",description:"Documentation for the `strong` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-delta",name:"delta",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"strong",title:"Strong Emphasis",keywords:["bold","weight"],oneliner:"Strongly emphasizes content by increasing the font weight.",element:!0,contextual:!1,details:`<p>Strongly emphasizes content by increasing the font weight.</p>
<p>Increases the current font weight by a given <code>delta</code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This is <span class="typ-strong">*strong.*</span> <span class="typ-escape">\\</span>
This is <span class="typ-func">#</span><span class="typ-func">strong</span><span class="typ-punct">[</span>too.<span class="typ-punct">]</span> <span class="typ-escape">\\</span>

<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">strong</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span>
And this is <span class="typ-strong">*evermore.*</span>
</code></pre><div class="preview"><img src="/docs/assets/df7b63dfeb40c9f325a9b41df7d7d938.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: To strongly emphasize content,
simply enclose it in stars/asterisks (<code>*</code>). Note that this only works at
word boundaries. To strongly emphasize part of a word, you have to use the
function.</p>`,example:null,self:!1,params:[{name:"delta",details:"<p>The delta to apply on the font weight.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">strong</span><span class="typ-punct">(</span>delta<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span>
No <span class="typ-strong">*effect!*</span>
</code></pre><div class="preview"><img src="/docs/assets/a167fc5f2e6b43be3198933dcb973665.png" alt="Preview" /></div></div>`,types:["int"],strings:[],default:'<code><span class="typ-num">300</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to strongly emphasize.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/model/table/",title:"Table",description:"Documentation for the `table` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-columns",name:"columns",children:[]},{id:"parameters-rows",name:"rows",children:[]},{id:"parameters-gutter",name:"gutter",children:[]},{id:"parameters-column-gutter",name:"column-gutter",children:[]},{id:"parameters-row-gutter",name:"row-gutter",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-align",name:"align",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-children",name:"children",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-cell",name:"Table Cell",children:[{id:"definitions-cell-body",name:"body",children:[]},{id:"definitions-cell-x",name:"x",children:[]},{id:"definitions-cell-y",name:"y",children:[]},{id:"definitions-cell-colspan",name:"colspan",children:[]},{id:"definitions-cell-rowspan",name:"rowspan",children:[]},{id:"definitions-cell-fill",name:"fill",children:[]},{id:"definitions-cell-align",name:"align",children:[]},{id:"definitions-cell-inset",name:"inset",children:[]},{id:"definitions-cell-stroke",name:"stroke",children:[]},{id:"definitions-cell-breakable",name:"breakable",children:[]}]},{id:"definitions-hline",name:"Table Horizontal Line",children:[{id:"definitions-hline-y",name:"y",children:[]},{id:"definitions-hline-start",name:"start",children:[]},{id:"definitions-hline-end",name:"end",children:[]},{id:"definitions-hline-stroke",name:"stroke",children:[]},{id:"definitions-hline-position",name:"position",children:[]}]},{id:"definitions-vline",name:"Table Vertical Line",children:[{id:"definitions-vline-x",name:"x",children:[]},{id:"definitions-vline-start",name:"start",children:[]},{id:"definitions-vline-end",name:"end",children:[]},{id:"definitions-vline-stroke",name:"stroke",children:[]},{id:"definitions-vline-position",name:"position",children:[]}]},{id:"definitions-header",name:"Table Header",children:[{id:"definitions-header-repeat",name:"repeat",children:[]},{id:"definitions-header-children",name:"children",children:[]}]},{id:"definitions-footer",name:"Table Footer",children:[{id:"definitions-footer-repeat",name:"repeat",children:[]},{id:"definitions-footer-children",name:"children",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"table",title:"Table",keywords:[],oneliner:"A table of items.",element:!0,contextual:!1,details:`<p>A table of items.</p>
<p>Tables are used to arrange content in cells. Cells can contain arbitrary
content, including multiple paragraphs and are specified in row-major order.
For a hands-on explanation of all the ways you can use and customize tables
in Typst, check out the <a href="/docs/guides/table-guide/">table guide</a>.</p>
<p>Because tables are just grids with different defaults for some cell
properties (notably <code>stroke</code> and <code>inset</code>), refer to the <a href="/docs/reference/layout/grid/">grid
documentation</a> for more information on how to size the table tracks
and specify the cell appearance properties.</p>
<p>If you are unsure whether you should be using a table or a grid, consider
whether the content you are arranging semantically belongs together as a set
of related data points or similar or whether you are just want to enhance
your presentation by arranging unrelated content in a grid. In the former
case, a table is the right choice, while in the latter case, a grid is more
appropriate. Furthermore, Typst will annotate its output in the future such
that screenreaders will announce content in <code>table</code> as tabular while a
grid's content will be announced no different than multiple content blocks
in the document flow.</p>
<p>Note that, to override a particular cell's properties or apply show rules on
table cells, you can use the <a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code></a> element. See its
documentation for more information.</p>
<p>Although the <code>table</code> and the <code>grid</code> share most properties, set and show
rules on one of them do not affect the other.</p>
<p>To give a table a caption and make it <a href="/docs/reference/model/ref/">referenceable</a>, put it into a
<a href="/docs/reference/model/figure/" title="figure">figure</a>.</p>
<h2 id="example">Example</h2>
<p>The example below demonstrates some of the most common table options.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
    <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Volume*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Parameters*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;cylinder.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-math-delim">$</span> <span class="typ-pol">pi</span> h <span class="typ-punct">(</span>D<span class="typ-math-op">^</span>2 <span class="typ-escape">-</span> d<span class="typ-math-op">^</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 4 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>
    <span class="typ-math-delim">$</span>h<span class="typ-math-delim">$</span>: height <span class="typ-escape">\\</span>
    <span class="typ-math-delim">$</span>D<span class="typ-math-delim">$</span>: outer radius <span class="typ-escape">\\</span>
    <span class="typ-math-delim">$</span>d<span class="typ-math-delim">$</span>: inner radius
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tetrahedron.svg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-math-delim">$</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 12 a<span class="typ-math-op">^</span>3 <span class="typ-math-delim">$</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>: edge length<span class="typ-punct">]</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/dcbbe14042c1f55375f058d9fd07e778.png" alt="Preview" /></div></div>
<p>Much like with grids, you can use <a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code></a> to customize
the appearance and the position of each cell.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
  gutter<span class="typ-punct">:</span> <span class="typ-num">0.2em</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
    <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> gray <span class="typ-punct">}</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>right<span class="typ-punct">:</span> <span class="typ-num">1.5em</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">if</span> it<span class="typ-punct">.</span>x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> it<span class="typ-punct">.</span>y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span>
    <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>white<span class="typ-punct">)</span>
    <span class="typ-func">strong</span><span class="typ-punct">(</span>it<span class="typ-punct">)</span>
  <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-key">if</span> it<span class="typ-punct">.</span>body <span class="typ-op">==</span> <span class="typ-punct">[</span><span class="typ-punct">]</span> <span class="typ-punct">{</span>
    <span class="typ-comment">// Replace empty cells with &#39;N/A&#39;</span>
    <span class="typ-func">pad</span><span class="typ-punct">(</span><span class="typ-op">..</span>it<span class="typ-punct">.</span>inset<span class="typ-punct">)</span><span class="typ-punct">[</span><span class="typ-emph">_N/A_</span><span class="typ-punct">]</span>
  <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
    it
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span>

<span class="typ-key">#</span><span class="typ-key">let</span> a <span class="typ-op">=</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> green<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span>
<span class="typ-key">#</span><span class="typ-key">let</span> b <span class="typ-op">=</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> aqua<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">60%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Exam 1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Exam 2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Exam 3<span class="typ-punct">]</span><span class="typ-punct">,</span>

  <span class="typ-punct">[</span>John<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> a<span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Mary<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> a<span class="typ-punct">,</span> a<span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Robert<span class="typ-punct">]</span><span class="typ-punct">,</span> b<span class="typ-punct">,</span> a<span class="typ-punct">,</span> b<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b6f5c9a0a07ca098d233bc5be71f34b5.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"columns",details:`<p>The column sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more
information on track sizing.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"rows",details:`<p>The row sizes. See the <a href="/docs/reference/layout/grid/">grid documentation</a> for more information
on track sizing.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gutter",details:`<p>The gaps between rows and columns. This is a shorthand for setting
<code>column-gutter</code> and <code>row-gutter</code> to the same value. See the <a href="/docs/reference/layout/grid/">grid
documentation</a> for more information on gutters.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"column-gutter",details:`<p>The gaps between columns. Takes precedence over <code>gutter</code>. See the
<a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"row-gutter",details:`<p>The gaps between rows. Takes precedence over <code>gutter</code>. See the
<a href="/docs/reference/layout/grid/">grid documentation</a> for more information on gutters.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>How to fill the cells.</p>
<p>This can be a color or a function that returns a color. The function
receives the cells' column and row indices, starting from zero. This can
be used to implement striped tables.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
    <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span> <span class="typ-punct">}</span>
    <span class="typ-key">else</span> <span class="typ-punct">{</span> white <span class="typ-punct">}</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
    <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> center <span class="typ-punct">}</span>
    <span class="typ-key">else</span> <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span>
    <span class="typ-key">else</span> <span class="typ-punct">{</span> right <span class="typ-punct">}</span><span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q1*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q2*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Q3*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Revenue:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>2000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>3000 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Expenses:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Profit:<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>500 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1000 €<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1500 €<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b768bbec67113aa79afefeb435397587.png" alt="Preview" /></div></div>`,types:["none","color","gradient","array","pattern","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:`<p>How to align the cells' content.</p>
<p>This can either be a single alignment, an array of alignments
(corresponding to each column) or a function that returns an alignment.
The function receives the cells' column and row indices, starting from
zero. If set to <code><span class="typ-key">auto</span></code>, the outer alignment is used.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> <span class="typ-punct">(</span>left<span class="typ-punct">,</span> center<span class="typ-punct">,</span> right<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/78f652b49cb0d4dc1ba1a5745347e262.png" alt="Preview" /></div></div>`,types:["auto","array","alignment","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the cells.</p>
<p>Strokes can be disabled by setting this to <code><span class="typ-key">none</span></code>.</p>
<p>If it is necessary to place lines which can cross spacing between cells
produced by the <code>gutter</code> option, or to override the stroke between
multiple specific cells, consider specifying one or more of
<a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a> and <a href="/docs/reference/model/table/#definitions-vline"><code>table.vline</code></a>
alongside your table cells.</p>
<p>See the <a href="/docs/reference/layout/grid/#parameters-stroke">grid documentation</a> for more information on
strokes.</p>`,example:null,types:["none","length","color","gradient","array","stroke","pattern","dictionary","function"],strings:[],default:'<code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:"<p>How much to pad the cells' content.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    x<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
    y<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Hello<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>World<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5d579020c6442890ae24fac4562111f9.png" alt="Preview" /></div></div>`,types:["relative","array","dictionary","function"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:`<p>The contents of the table cells, plus any extra table lines specified
with the <a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a> and
<a href="/docs/reference/model/table/#definitions-vline"><code>table.vline</code></a> elements.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[{path:["table"],name:"cell",title:"Table Cell",keywords:[],oneliner:"A cell in the table. Use this to position a cell manually or to apply",element:!0,contextual:!1,details:`<p>A cell in the table. Use this to position a cell manually or to apply
styling. To do the latter, you can either use the function to override the
properties for a particular cell, or use it in show rules to apply certain
styles to multiple cells at once.</p>
<p>Perhaps the most important use case of <code>table<span class="typ-punct">.</span>cell</code> is to make a cell span
multiple columns and/or rows with the <code>colspan</code> and <code>rowspan</code> fields.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span>
    <span class="typ-punct">(</span>bottom<span class="typ-punct">:</span> <span class="typ-num">0.7pt</span> <span class="typ-op">+</span> black<span class="typ-punct">)</span>
  <span class="typ-punct">}</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
    <span class="typ-key">if</span> x <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> center <span class="typ-punct">}</span>
    <span class="typ-key">else</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
    <span class="typ-punct">[</span>Substance<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Subcritical °C<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Supercritical °C<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Hydrochloric Acid<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>12.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>92.1<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Sodium Myreth Sulfate<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>16.6<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>104<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Potassium Hydroxide<span class="typ-punct">]</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>24.7<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b2e3c01767d677c88c9f22894f07dfaf.png" alt="Preview" /></div></div>
<p>For example, you can override the fill, alignment or inset for a single
cell:</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// You can also import those.</span>
<span class="typ-key">#</span><span class="typ-key">import</span> table<span class="typ-punct">:</span> cell<span class="typ-punct">,</span> header

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> center<span class="typ-punct">,</span>
  <span class="typ-func">header</span><span class="typ-punct">(</span>
    <span class="typ-punct">[</span><span class="typ-strong">*Trip progress*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span><span class="typ-strong">*Itinerary*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">cell</span><span class="typ-punct">(</span>
    align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
    fill<span class="typ-punct">:</span> fuchsia<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>🚗<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Get in, folks!<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>🚗<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Eat curbside hotdog<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">cell</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> left<span class="typ-punct">)</span><span class="typ-punct">[</span>🌴🚗<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">cell</span><span class="typ-punct">(</span>
    inset<span class="typ-punct">:</span> <span class="typ-num">0.06em</span><span class="typ-punct">,</span>
    <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.62em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>🛖🌅🌊<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e19beea2ffa3b6f0ced12755ee776f1.png" alt="Preview" /></div></div>
<p>You may also apply a show rule on <code>table.cell</code> to style all cells at once.
Combined with selectors, this allows you to apply styles based on a cell's
position:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  gutter<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Name<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Age<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Strength<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Hannes<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>36<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Grace<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Irma<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>50<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Resourcefulness<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Vikram<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>49<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Perseverance<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/44584f66ffe617be41959eb1817380b6.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The cell's body.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"x",details:`<p>The cell's column (zero-indexed).
Functions identically to the <code>x</code> field in <a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a>.</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"y",details:`<p>The cell's row (zero-indexed).
Functions identically to the <code>y</code> field in <a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a>.</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"colspan",details:"<p>The amount of columns spanned by this cell.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"rowspan",details:"<p>The amount of rows spanned by this cell.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>The cell's <a href="/docs/reference/model/table/#parameters-fill">fill</a> override.</p>`,example:null,types:["none","auto","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:`<p>The cell's <a href="/docs/reference/model/table/#parameters-align">alignment</a> override.</p>`,example:null,types:["auto","alignment"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>The cell's <a href="/docs/reference/model/table/#parameters-inset">inset</a> override.</p>`,example:null,types:["auto","relative","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The cell's <a href="/docs/reference/model/table/#parameters-stroke">stroke</a> override.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"breakable",details:`<p>Whether rows spanned by this cell can be placed in different pages.
When equal to <code><span class="typ-key">auto</span></code>, a cell spanning only fixed-size rows is
unbreakable, while a cell spanning at least one <code><span class="typ-key">auto</span></code>-sized row is
breakable.</p>`,example:null,types:["auto","bool"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["table"],name:"hline",title:"Table Horizontal Line",keywords:[],oneliner:"A horizontal line in the table.",element:!0,contextual:!1,details:`<p>A horizontal line in the table.</p>
<p>Overrides any per-cell stroke, including stroke specified through the
table's <code>stroke</code> field. Can cross spacing between cells created through the
table's <a href="/docs/reference/model/table/#parameters-column-gutter"><code>column-gutter</code></a> option.</p>
<p>Use this function instead of the table's <code>stroke</code> field if you want to
manually place a horizontal line at a specific position in a single table.
Consider using <a href="/docs/reference/model/table/#parameters-stroke">table's <code>stroke</code></a> field or <a href="/docs/reference/model/table/#definitions-cell-stroke"><code>table.cell</code>'s
<code>stroke</code></a> field instead if the line you want to place is
part of all your tables' designs.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">.6pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>09:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Badge pick up<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>09:45<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Opening Keynote<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>10:30<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Typst&#39;s Future<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>11:15<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Session: Good PRs<span class="typ-punct">]</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Noon<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-emph">_Lunch break_</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>14:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Tracked Layout<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>15:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Automations<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>16:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Workshop: Tables<span class="typ-punct">]</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>19:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Day 1 Attendee Mixer<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/12a4a9d2d32948dab0d4c7c1284a3279.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"y",details:`<p>The row above which the horizontal line is placed (zero-indexed).
Functions identically to the <code>y</code> field in <a href="/docs/reference/layout/grid/#definitions-hline-y"><code>grid.hline</code></a>.</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"start",details:"<p>The column at which the horizontal line starts (zero-indexed, inclusive).</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"end",details:`<p>The column before which the horizontal line ends (zero-indexed,
exclusive).</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The line's stroke.</p>
<p>Specifying <code><span class="typ-key">none</span></code> removes any lines previously placed across this
line's range, including hlines or per-cell stroke below it.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"position",details:`<p>The position at which the line is placed, given its row (<code>y</code>) - either
<code>top</code> to draw above it or <code>bottom</code> to draw below it.</p>
<p>This setting is only relevant when row gutter is enabled (and
shouldn't be used otherwise - prefer just increasing the <code>y</code> field by
one instead), since then the position below a row becomes different
from the position above the next row due to the spacing between both.</p>`,example:null,types:["alignment"],strings:[],default:"<code>top</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["table"],name:"vline",title:"Table Vertical Line",keywords:[],oneliner:"A vertical line in the table. See the docs for [`grid.vline`]($grid.vline)",element:!0,contextual:!1,details:`<p>A vertical line in the table. See the docs for <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a>
for more information regarding how to use this element's fields.</p>
<p>Overrides any per-cell stroke, including stroke specified through the
table's <code>stroke</code> field. Can cross spacing between cells created through the
table's <a href="/docs/reference/model/table/#parameters-row-gutter"><code>row-gutter</code></a> option.</p>
<p>Similar to <a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a>, use this function if you want to
manually place a vertical line at a specific position in a single table and
use the <a href="/docs/reference/model/table/#parameters-stroke">table's <code>stroke</code></a> field or <a href="/docs/reference/model/table/#definitions-cell-stroke"><code>table.cell</code>'s
<code>stroke</code></a> field instead if the line you want to place is
part of all your tables' designs.</p>`,example:null,self:!1,params:[{name:"x",details:`<p>The column before which the horizontal line is placed (zero-indexed).
Functions identically to the <code>x</code> field in <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a>.</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"start",details:"<p>The row at which the vertical line starts (zero-indexed, inclusive).</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"end",details:`<p>The row on top of which the vertical line ends (zero-indexed,
exclusive).</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The line's stroke.</p>
<p>Specifying <code><span class="typ-key">none</span></code> removes any lines previously placed across this
line's range, including vlines or per-cell stroke below it.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"position",details:`<p>The position at which the line is placed, given its column (<code>x</code>) -
either <code>start</code> to draw before it or <code>end</code> to draw after it.</p>
<p>The values <code>left</code> and <code>right</code> are also accepted, but discouraged as
they cause your table to be inconsistent between left-to-right and
right-to-left documents.</p>
<p>This setting is only relevant when column gutter is enabled (and
shouldn't be used otherwise - prefer just increasing the <code>x</code> field by
one instead), since then the position after a column becomes different
from the position before the next column due to the spacing between
both.</p>`,example:null,types:["alignment"],strings:[],default:"<code>start</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["table"],name:"header",title:"Table Header",keywords:[],oneliner:"A repeatable table header.",element:!0,contextual:!1,details:`<p>A repeatable table header.</p>
<p>You should wrap your tables' heading rows in this function even if you do not
plan to wrap your table across pages because Typst will use this function to
attach accessibility metadata to tables in the future and ensure universal
access to your document.</p>
<p>You can use the <code>repeat</code> parameter to control whether your table's header
will be repeated across pages.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">11.5em</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
    <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span>
      gray<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">)</span>
    <span class="typ-punct">}</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
    <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Blue chip<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Fresh IPO<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Penny st&#39;k<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
    rowspan<span class="typ-punct">:</span> <span class="typ-num">6</span><span class="typ-punct">,</span>
    align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
    <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">90deg</span><span class="typ-punct">,</span> reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
      <span class="typ-strong">*USD / day*</span>
    <span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>0.20<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>104<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>3.17<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>108<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1.59<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>84<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>0.26<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>98<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>15<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>0.01<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>195<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>7.34<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>57<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/44c42cd5a1281a5b5cef960eae735d94.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"repeat",details:"<p>Whether this header should be repeated across pages.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The cells and lines within the header.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]},{path:["table"],name:"footer",title:"Table Footer",keywords:[],oneliner:"A repeatable table footer.",element:!0,contextual:!1,details:`<p>A repeatable table footer.</p>
<p>Just like the <a href="/docs/reference/model/table/#definitions-header"><code>table.header</code></a> element, the footer can repeat
itself on every page of the table. This is useful for improving legibility
by adding the column labels in both the header and footer of a large table,
totals, or other information that should be visible on every page.</p>
<p>No other table cells may be placed after the footer.</p>`,example:null,self:!1,params:[{name:"repeat",details:"<p>Whether this footer should be repeated across pages.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The cells and lines within the footer.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/model/terms/",title:"Term List",description:"Documentation for the `terms` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-tight",name:"tight",children:[]},{id:"parameters-separator",name:"separator",children:[]},{id:"parameters-indent",name:"indent",children:[]},{id:"parameters-hanging-indent",name:"hanging-indent",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-children",name:"children",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-item",name:"Term List Item",children:[{id:"definitions-item-term",name:"term",children:[]},{id:"definitions-item-description",name:"description",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"terms",title:"Term List",keywords:[],oneliner:"A list of terms and their descriptions.",element:!0,contextual:!1,details:`<p>A list of terms and their descriptions.</p>
<p>Displays a sequence of terms and their descriptions vertically. When the
descriptions span over multiple lines, they use hanging indent to
communicate the visual hierarchy.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-marker">/</span> <span class="typ-term">Ligature</span><span class="typ-punct">:</span> A merged glyph.
<span class="typ-marker">/</span> <span class="typ-term">Kerning</span><span class="typ-punct">:</span> A spacing adjustment
  between two adjacent letters.
</code></pre><div class="preview"><img src="/docs/assets/a51fa5562b046592f8172a4da0decfd3.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: Starting a line with a slash,
followed by a term, a colon and a description creates a term list item.</p>`,example:null,self:!1,params:[{name:"tight",details:`<p>Defines the default <a href="/docs/reference/model/terms/#parameters-spacing">spacing</a> of the term list. If it is
<code><span class="typ-key">false</span></code>, the items are spaced apart with
<a href="/docs/reference/model/par/#parameters-spacing">paragraph spacing</a>. If it is <code><span class="typ-key">true</span></code>, they use
<a href="/docs/reference/model/par/#parameters-leading">paragraph leading</a> instead. This makes the list more
compact, which can look better if the items are short.</p>
<p>In markup mode, the value of this parameter is determined based on
whether items are separated with a blank line. If items directly follow
each other, this is set to <code><span class="typ-key">true</span></code>; if items are separated by a blank
line, this is set to <code><span class="typ-key">false</span></code>. The markup-defined tightness cannot be
overridden with set rules.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-marker">/</span> <span class="typ-term">Fact</span><span class="typ-punct">:</span> If a term list has a lot
  of text, and maybe other inline
  content, it should not be tight
  anymore.

<span class="typ-marker">/</span> <span class="typ-term">Tip</span><span class="typ-punct">:</span> To make it wide, simply
  insert a blank line between the
  items.
</code></pre><div class="preview"><img src="/docs/assets/d741451c08ac2a50915140d0893c34c3.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"separator",details:`<p>The separator between the item and the description.</p>
<p>If you want to just separate them with a certain amount of space, use
<code><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">2cm</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code> as the separator and replace <code><span class="typ-num">2cm</span></code> with your
desired amount of space.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">terms</span><span class="typ-punct">(</span>separator<span class="typ-punct">:</span> <span class="typ-punct">[</span>: <span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-marker">/</span> <span class="typ-term">Colon</span><span class="typ-punct">:</span> A nice separator symbol.
</code></pre><div class="preview"><img src="/docs/assets/38d36df7f67f3993aa2129f785f9dc42.png" alt="Preview" /></div></div>`,types:["content"],strings:[],default:'<code><span class="typ-func">h</span><span class="typ-punct">(</span>amount<span class="typ-punct">:</span> <span class="typ-num">0.6em</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"indent",details:"<p>The indentation of each item.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"hanging-indent",details:`<p>The hanging indent of the description.</p>
<p>This is in addition to the whole item's <code>indent</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">terms</span><span class="typ-punct">(</span>hanging-indent<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
<span class="typ-marker">/</span> <span class="typ-term">Term</span><span class="typ-punct">:</span> This term list does not
  make use of hanging indents.
</code></pre><div class="preview"><img src="/docs/assets/f8f0aed0877636115e1c124d4048260b.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:`<p>The spacing between the items of the term list.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, uses paragraph <a href="/docs/reference/model/par/#parameters-leading"><code>leading</code></a> for tight
term lists and paragraph <a href="/docs/reference/model/par/#parameters-spacing"><code>spacing</code></a> for wide
(non-tight) term lists.</p>`,example:null,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:`<p>The term list's children.</p>
<p>When using the term list syntax, adjacent items are automatically
collected into term lists, even through constructs like for loops.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> <span class="typ-punct">(</span>year<span class="typ-punct">,</span> product<span class="typ-punct">)</span> <span class="typ-key">in</span> <span class="typ-punct">(</span>
  <span class="typ-str">&quot;1978&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;TeX&quot;</span><span class="typ-punct">,</span>
  <span class="typ-str">&quot;1984&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;LaTeX&quot;</span><span class="typ-punct">,</span>
  <span class="typ-str">&quot;2019&quot;</span><span class="typ-punct">:</span> <span class="typ-str">&quot;Typst&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-punct">[</span><span class="typ-marker">/</span> <span class="typ-term"><span class="typ-pol">#</span><span class="typ-pol">product</span></span><span class="typ-punct">:</span> Born in <span class="typ-pol">#</span><span class="typ-pol">year</span>.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/c6e809bb7f65e8cde5e46eab85d27642.png" alt="Preview" /></div></div>`,types:["content","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[{path:["terms"],name:"item",title:"Term List Item",keywords:[],oneliner:"A term list item.",element:!0,contextual:!1,details:"<p>A term list item.</p>",example:null,self:!1,params:[{name:"term",details:"<p>The term described by the list item.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"description",details:"<p>The description of the term.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]}]},{route:"/docs/reference/text/",title:"Text",description:"Documentation for functions related to Text in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"text",title:"Text",details:`<p>Text styling.</p>
<p>The <a href="/docs/reference/text/text/">text function</a> is of particular interest.</p>`,items:[{name:"highlight",route:"/docs/reference/text/highlight/",oneliner:"Highlights text with a background color.",code:!0},{name:"linebreak",route:"/docs/reference/text/linebreak/",oneliner:"Inserts a line break.",code:!0},{name:"lorem",route:"/docs/reference/text/lorem/",oneliner:"Creates blind text.",code:!0},{name:"lower",route:"/docs/reference/text/lower/",oneliner:"Converts a string or content to lowercase.",code:!0},{name:"overline",route:"/docs/reference/text/overline/",oneliner:"Adds a line over text.",code:!0},{name:"raw",route:"/docs/reference/text/raw/",oneliner:"Raw text with optional syntax highlighting.",code:!0},{name:"smallcaps",route:"/docs/reference/text/smallcaps/",oneliner:"Displays text in small capitals.",code:!0},{name:"smartquote",route:"/docs/reference/text/smartquote/",oneliner:"A language-aware quote that reacts to its context.",code:!0},{name:"strike",route:"/docs/reference/text/strike/",oneliner:"Strikes through text.",code:!0},{name:"sub",route:"/docs/reference/text/sub/",oneliner:"Renders text in subscript.",code:!0},{name:"super",route:"/docs/reference/text/super/",oneliner:"Renders text in superscript.",code:!0},{name:"text",route:"/docs/reference/text/text/",oneliner:"Customizes the look and layout of text in a variety of ways.",code:!0},{name:"underline",route:"/docs/reference/text/underline/",oneliner:"Underlines text.",code:!0},{name:"upper",route:"/docs/reference/text/upper/",oneliner:"Converts a string or content to uppercase.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/text/highlight/",title:"Highlight",description:"Documentation for the `highlight` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-top-edge",name:"top-edge",children:[]},{id:"parameters-bottom-edge",name:"bottom-edge",children:[]},{id:"parameters-extent",name:"extent",children:[]},{id:"parameters-radius",name:"radius",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"highlight",title:"Highlight",keywords:[],oneliner:"Highlights text with a background color.",element:!0,contextual:!1,details:`<p>Highlights text with a background color.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This is <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>important<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/d57bc011fff18977558e99551ec271e6.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"fill",details:"<p>The color to highlight the text with.</p>",example:`<div class="previewed-code"><pre><code>This is <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> blue
<span class="typ-punct">)</span><span class="typ-punct">[</span>highlighted with blue<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/b2cee02c2f84cec153ca857487d4df8a.png" alt="Preview" /></div></div>`,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#fffd11a1&quot;</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The highlight's border color. See the
<a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>`,example:`<div class="previewed-code"><pre><code>This is a <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> fuchsia
<span class="typ-punct">)</span><span class="typ-punct">[</span>stroked highlighting<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/db8a449f8a29a3ea9a6f93107a788406.png" alt="Preview" /></div></div>`,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"top-edge",details:"<p>The top end of the background rectangle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">highlight</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;ascender&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>a<span class="typ-punct">]</span> <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>aib<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">highlight</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;x-height&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>a<span class="typ-punct">]</span> <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>aib<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/dc066d3cceed4a1b4a0acc31e1e0477a.png" alt="Preview" /></div></div>`,types:["length","str"],strings:[{string:"ascender",details:"<p>The font's ascender, which typically exceeds the height of all glyphs.</p>"},{string:"cap-height",details:"<p>The approximate height of uppercase letters.</p>"},{string:"x-height",details:"<p>The approximate height of non-ascending lowercase letters.</p>"},{string:"baseline",details:"<p>The baseline on which the letters rest.</p>"},{string:"bounds",details:"<p>The top edge of the glyph's bounding box.</p>"}],default:'<code><span class="typ-str">&quot;ascender&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"bottom-edge",details:"<p>The bottom end of the background rectangle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">highlight</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;descender&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>a<span class="typ-punct">]</span> <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>ap<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">highlight</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;baseline&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>a<span class="typ-punct">]</span> <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">[</span>ap<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/e35eaaa5dc6710ed422addf48c00ba64.png" alt="Preview" /></div></div>`,types:["length","str"],strings:[{string:"baseline",details:"<p>The baseline on which the letters rest.</p>"},{string:"descender",details:"<p>The font's descender, which typically exceeds the depth of all glyphs.</p>"},{string:"bounds",details:"<p>The bottom edge of the glyph's bounding box.</p>"}],default:'<code><span class="typ-str">&quot;descender&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"extent",details:`<p>The amount by which to extend the background to the sides beyond
(or within if negative) the content.</p>`,example:`<div class="previewed-code"><pre><code>A long <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>background<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/b46b26650c4be52a98ef3f022a617dd4.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"radius",details:`<p>How much to round the highlight's corners. See the
<a href="/docs/reference/visualize/rect/#parameters-radius">rectangle's documentation</a> for more details.</p>`,example:`<div class="previewed-code"><pre><code>Listen <span class="typ-func">#</span><span class="typ-func">highlight</span><span class="typ-punct">(</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span> extent<span class="typ-punct">:</span> <span class="typ-num">2pt</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>carefully<span class="typ-punct">]</span>, it will be on the test.
</code></pre><div class="preview"><img src="/docs/assets/9694ed412cf087048a8814c15362f93b.png" alt="Preview" /></div></div>`,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content that should be highlighted.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/linebreak/",title:"Line Break",description:"Documentation for the `linebreak` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-justify",name:"justify",children:[]}]}],body:{kind:"func",content:{path:[],name:"linebreak",title:"Line Break",keywords:[],oneliner:"Inserts a line break.",element:!0,contextual:!1,details:`<p>Inserts a line break.</p>
<p>Advances the paragraph to the next line. A single trailing line break at the
end of a paragraph is ignored, but more than one creates additional empty
lines.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-strong">*Date:*</span> 26.12.2022 <span class="typ-escape">\\</span>
<span class="typ-strong">*Topic:*</span> Infrastructure Test <span class="typ-escape">\\</span>
<span class="typ-strong">*Severity:*</span> High <span class="typ-escape">\\</span>
</code></pre><div class="preview"><img src="/docs/assets/2a165b048b781df7c04cb25359a6c671.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: To insert a line break, simply write
a backslash followed by whitespace. This always creates an unjustified
break.</p>`,example:null,self:!1,params:[{name:"justify",details:`<p>Whether to justify the line before the break.</p>
<p>This is useful if you found a better line break opportunity in your
justified text than Typst did.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> jb <span class="typ-op">=</span> <span class="typ-func">linebreak</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

I have manually tuned the <span class="typ-pol">#</span><span class="typ-pol">jb</span>
line breaks in this paragraph <span class="typ-pol">#</span><span class="typ-pol">jb</span>
for an <span class="typ-emph">_interesting_</span> result. <span class="typ-pol">#</span><span class="typ-pol">jb</span>
</code></pre><div class="preview"><img src="/docs/assets/d55112fbbdf41234e62126cdff24e63.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/lorem/",title:"Lorem",description:"Documentation for the `lorem` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-words",name:"words",children:[]}]}],body:{kind:"func",content:{path:[],name:"lorem",title:"Lorem",keywords:["Blind Text"],oneliner:"Creates blind text.",element:!1,contextual:!1,details:`<p>Creates blind text.</p>
<p>This function yields a Latin-like <em>Lorem Ipsum</em> blind text with the given
number of words. The sequence of words generated by the function is always
the same but randomly chosen. As usual for blind texts, it does not make any
sense. Use it as a placeholder to try layouts.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-heading">= Blind Text</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>

<span class="typ-heading">= More Blind Text</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/93a39f325b4765c7370f03e493f78c13.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"words",details:"<p>The length of the blind text in words.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["str"],scope:[]}},children:[]},{route:"/docs/reference/text/lower/",title:"Lowercase",description:"Documentation for the `lower` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-text",name:"text",children:[]}]}],body:{kind:"func",content:{path:[],name:"lower",title:"Lowercase",keywords:[],oneliner:"Converts a string or content to lowercase.",element:!1,contextual:!1,details:`<p>Converts a string or content to lowercase.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">lower</span><span class="typ-punct">(</span><span class="typ-str">&quot;ABC&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">lower</span><span class="typ-punct">[</span><span class="typ-strong">*My Text*</span><span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">lower</span><span class="typ-punct">[</span>already low<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/3076a62b869a9fb0916ad448509ef658.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"text",details:"<p>The text to convert to lowercase.</p>",example:null,types:["str","content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["str","content"],scope:[]}},children:[]},{route:"/docs/reference/text/overline/",title:"Overline",description:"Documentation for the `overline` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-offset",name:"offset",children:[]},{id:"parameters-extent",name:"extent",children:[]},{id:"parameters-evade",name:"evade",children:[]},{id:"parameters-background",name:"background",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"overline",title:"Overline",keywords:[],oneliner:"Adds a line over text.",element:!0,contextual:!1,details:`<p>Adds a line over text.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">[</span>A line over text.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/1df9897f69e7db3965fddad10104a6af.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the line.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, takes on the text's color and a thickness defined in
the current font.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> olive<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> green<span class="typ-punct">.</span><span class="typ-func">darken</span><span class="typ-punct">(</span><span class="typ-num">20%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">12pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>The Forest Theme<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d8bb3e026716a0a002a514255be73c10.png" alt="Preview" /></div></div>`,types:["auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"offset",details:`<p>The position of the line relative to the baseline. Read from the font
tables if <code><span class="typ-key">auto</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">1.2em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  The Tale Of A Faraway Line II
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/b462fee9e4c4b40ec8c2ac1a306b6ea9.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"extent",details:`<p>The amount by which to extend the line beyond (or within if negative)
the content.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">overline</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">underline</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span><span class="typ-func">underline</span><span class="typ-punct">[</span>Typography Today<span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c8a70d5266ca3b8c33eb2c74c5c0d59a.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"evade",details:`<p>Whether the line skips sections in which it would collide with the
glyphs.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>
  evade<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">,</span>
  offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">7.5pt</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
  extent<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Temple<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/91b97df42a2ee387630a03847cbd2099.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"background",details:"<p>Whether the line is placed behind the content it overlines.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">overline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>thickness<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span> paint<span class="typ-punct">:</span> maroon<span class="typ-punct">,</span> cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is stylized.<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">overline</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is partially hidden.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/410237d9238bd5b7d6c4ba710be31097.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to add a line over.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/raw/",title:"Raw Text / Code",description:"Documentation for the `raw` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-text",name:"text",children:[]},{id:"parameters-block",name:"block",children:[]},{id:"parameters-lang",name:"lang",children:[]},{id:"parameters-align",name:"align",children:[]},{id:"parameters-syntaxes",name:"syntaxes",children:[]},{id:"parameters-theme",name:"theme",children:[]},{id:"parameters-tab-size",name:"tab-size",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-line",name:"Raw Text / Code Line",children:[{id:"definitions-line-number",name:"number",children:[]},{id:"definitions-line-count",name:"count",children:[]},{id:"definitions-line-text",name:"text",children:[]},{id:"definitions-line-body",name:"body",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"raw",title:"Raw Text / Code",keywords:[],oneliner:"Raw text with optional syntax highlighting.",element:!0,contextual:!1,details:'<p>Raw text with optional syntax highlighting.</p>\n<p>Displays the text verbatim and in a monospace font. This is typically used\nto embed computer code into your document.</p>\n<h2 id="example">Example</h2>\n<div class="previewed-code"><pre><code>Adding <span class="typ-raw">`rbx`</span> to <span class="typ-raw">`rcx`</span> gives\nthe desired result.\n\nWhat is <span class="typ-raw">```rust fn main()```</span> in Rust\nwould be <span class="typ-raw">```c int main()```</span> in C.\n\n<span class="typ-raw">```rust\nfn main() {\n    println!(&quot;Hello World!&quot;);\n}\n```</span>\n\nThis has <span class="typ-raw">``` `backticks` ```</span> in it\n(but the spaces are trimmed). And\n<span class="typ-raw">``` here```</span> the leading space is\nalso trimmed.\n</code></pre><div class="preview"><img src="/docs/assets/542e5ce29fc199efdeb4fbf9df7e3ad1.png" alt="Preview" /></div></div>\n<p>You can also construct a <a href="/docs/reference/text/raw/" title="`raw`"><code>raw</code></a> element programmatically from a string (and\nprovide the language tag via the optional <a href="/docs/reference/text/raw/#parameters-lang"><code>lang</code></a> argument).</p>\n<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">raw</span><span class="typ-punct">(</span><span class="typ-str">&quot;fn &quot;</span> <span class="typ-op">+</span> <span class="typ-str">&quot;main() {}&quot;</span><span class="typ-punct">,</span> lang<span class="typ-punct">:</span> <span class="typ-str">&quot;rust&quot;</span><span class="typ-punct">)</span>\n</code></pre><div class="preview"><img src="/docs/assets/c4e01d5b001b15ec4223568f714f365.png" alt="Preview" /></div></div>\n<h2 id="syntax">Syntax</h2>\n<p>This function also has dedicated syntax. You can enclose text in 1 or 3+\nbackticks (<code>`</code>) to make it raw. Two backticks produce empty raw text.\nThis works both in markup and code.</p>\n<p>When you use three or more backticks, you can additionally specify a\nlanguage tag for syntax highlighting directly after the opening backticks.\nWithin raw blocks, everything (except for the language tag, if applicable)\nis rendered as is, in particular, there are no escape sequences.</p>\n<p>The language tag is an identifier that directly follows the opening\nbackticks only if there are three or more backticks. If your text starts\nwith something that looks like an identifier, but no syntax highlighting is\nneeded, start the text with a single space (which will be trimmed) or use\nthe single backtick syntax. If your text should start or end with a\nbacktick, put a space before or after it (it will be trimmed).</p>',example:null,self:!1,params:[{name:"text",details:`<p>The raw text.</p>
<p>You can also use raw blocks creatively to create custom syntaxes for
your automations.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-comment">// Parse numbers in raw blocks with the</span>
<span class="typ-comment">// \`mydsl\` tag and sum them up.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> raw<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;mydsl&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> sum <span class="typ-op">=</span> <span class="typ-num">0</span>
  <span class="typ-key">for</span> part <span class="typ-key">in</span> it<span class="typ-punct">.</span>text<span class="typ-punct">.</span><span class="typ-func">split</span><span class="typ-punct">(</span><span class="typ-str">&quot;+&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
    sum <span class="typ-op">+=</span> <span class="typ-func">int</span><span class="typ-punct">(</span>part<span class="typ-punct">.</span><span class="typ-func">trim</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-punct">}</span>
  sum
<span class="typ-punct">}</span>

<span class="typ-raw">\`\`\`mydsl
1 + 2 + 3 + 4 + 5
\`\`\`</span>
</code></pre><div class="preview"><img src="/docs/assets/41085eac58b82f0e9f2591b8d56abd85.png" alt="Preview" /></div></div>`,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"block",details:`<p>Whether the raw text is displayed as a separate block.</p>
<p>In markup mode, using one-backtick notation makes this <code><span class="typ-key">false</span></code>.
Using three-backtick notation makes it <code><span class="typ-key">true</span></code> if the enclosed content
contains at least one line break.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-comment">// Display inline code in a small box</span>
<span class="typ-comment">// that retains the correct baseline.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> raw<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">:</span> box<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  outset<span class="typ-punct">:</span> <span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-comment">// Display block code in a larger block</span>
<span class="typ-comment">// with more padding.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> raw<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>block<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">:</span> block<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">240</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

With <span class="typ-raw">\`rg\`</span>, you can search through your files quickly.
This example searches the current directory recursively
for the text <span class="typ-raw">\`Hello World\`</span>:

<span class="typ-raw">\`\`\`bash
rg &quot;Hello World&quot;
\`\`\`</span>
</code></pre><div class="preview"><img src="/docs/assets/a4afe7376c056637ee854748ca2b71fa.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"lang",details:`<p>The language to syntax-highlight in.</p>
<p>Apart from typical language tags known from Markdown, this supports the
<code><span class="typ-str">&quot;typ&quot;</span></code>, <code><span class="typ-str">&quot;typc&quot;</span></code>, and <code><span class="typ-str">&quot;typm&quot;</span></code> tags for
<a href="/docs/reference/syntax/#markup">Typst markup</a>,
<a href="/docs/reference/syntax/#code">Typst code</a>, and
<a href="/docs/reference/syntax/#math">Typst math</a>, respectively.</p>`,example:'<div class="previewed-code"><pre><code><span class="typ-raw">```typ\nThis is *Typst!*\n```</span>\n\nThis is <span class="typ-raw">```typ also *Typst*```</span>, but inline!\n</code></pre><div class="preview"><img src="/docs/assets/2516b0acec382531458e334dc6e4cd0b.png" alt="Preview" /></div></div>',types:["none","str"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:`<p>The horizontal alignment that each line in a raw block should have.
This option is ignored if this is not a raw block (if specified
<code>block: false</code> or single backticks were used in markup mode).</p>
<p>By default, this is set to <code>start</code>, meaning that raw text is
aligned towards the start of the text direction inside the block
by default, regardless of the current context's alignment (allowing
you to center the raw block itself without centering the text inside
it, for example).</p>`,example:'<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">raw</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> center<span class="typ-punct">)</span>\n\n<span class="typ-raw">```typc\nlet f(x) = x\ncode = &quot;centered&quot;\n```</span>\n</code></pre><div class="preview"><img src="/docs/assets/c66e86afe3153ea156ed8475d4aff40e.png" alt="Preview" /></div></div>',types:["alignment"],strings:[],default:"<code>start</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"syntaxes",details:`<p>One or multiple additional syntax definitions to load. The syntax
definitions should be in the
<a href="https://www.sublimetext.com/docs/syntax.html"><code>sublime-syntax</code> file format</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">raw</span><span class="typ-punct">(</span>syntaxes<span class="typ-punct">:</span> <span class="typ-str">&quot;SExpressions.sublime-syntax&quot;</span><span class="typ-punct">)</span>

<span class="typ-raw">\`\`\`sexp
(defun factorial (x)
  (if (zerop x)
    ; with a comment
    1
    (* x (factorial (- x 1)))))
\`\`\`</span>
</code></pre><div class="preview"><img src="/docs/assets/c4ede55256b07facfa19d22410ca2806.png" alt="Preview" /></div></div>`,types:["str","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"theme",details:`<p>The theme to use for syntax highlighting. Theme files should be in the
<a href="https://www.sublimetext.com/docs/color_schemes_tmtheme.html"><code>tmTheme</code> file format</a>.</p>
<p>Applying a theme only affects the color of specifically highlighted
text. It does not consider the theme's foreground and background
properties, so that you retain control over the color of raw text. You
can apply the foreground color yourself with the <a href="/docs/reference/text/text/" title="\`text\`"><code>text</code></a> function and
the background with a <a href="/docs/reference/layout/block/#parameters-fill">filled block</a>. You could also use
the <a href="/docs/reference/data-loading/xml/" title="\`xml\`"><code>xml</code></a> function to extract these properties from the theme.</p>
<p>Additionally, you can set the theme to <code><span class="typ-key">none</span></code> to disable highlighting.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">raw</span><span class="typ-punct">(</span>theme<span class="typ-punct">:</span> <span class="typ-str">&quot;halcyon.tmTheme&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">raw</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-func">block</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#1d2433&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#a2aabc&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> it<span class="typ-punct">)</span>
<span class="typ-punct">)</span>

<span class="typ-raw">\`\`\`typ
= Chapter 1
#let hi = &quot;Hello World&quot;
\`\`\`</span>
</code></pre><div class="preview"><img src="/docs/assets/346e0463b36cc58dab33c96c4cb18ec6.png" alt="Preview" /></div></div>`,types:["none","auto","str"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"tab-size",details:`<p>The size for a tab stop in spaces. A tab is replaced with enough spaces to
align with the next multiple of the size.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">raw</span><span class="typ-punct">(</span>tab-size<span class="typ-punct">:</span> <span class="typ-num">8</span><span class="typ-punct">)</span>
<span class="typ-raw">\`\`\`tsv
Year	Month	Day
2000	2	3
2001	2	1
2002	3	10
\`\`\`</span>
</code></pre><div class="preview"><img src="/docs/assets/5f7393b39bf518f55a691823806ad550.png" alt="Preview" /></div></div>`,types:["int"],strings:[],default:'<code><span class="typ-num">2</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[{path:["raw"],name:"line",title:"Raw Text / Code Line",keywords:[],oneliner:"A highlighted line of raw text.",element:!0,contextual:!1,details:`<p>A highlighted line of raw text.</p>
<p>This is a helper element that is synthesized by <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> elements.</p>
<p>It allows you to access various properties of the line, such as the line
number, the raw non-highlighted text, the highlighted text, and whether it
is the first or last line of the raw block.</p>`,example:null,self:!1,params:[{name:"number",details:"<p>The line number of the raw line inside of the raw block, starts at 1.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"count",details:"<p>The total number of lines in the raw block.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"text",details:"<p>The line of raw text.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"body",details:"<p>The highlighted raw text.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/text/smallcaps/",title:"Small Capitals",description:"Documentation for the `smallcaps` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"smallcaps-fonts",name:"Smallcaps Fonts",children:[]},{id:"smallcaps-headings",name:"Smallcaps Headings",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"smallcaps",title:"Small Capitals",keywords:[],oneliner:"Displays text in small capitals.",element:!0,contextual:!1,details:`<p>Displays text in small capitals.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Hello <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">smallcaps</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/18f5b37e810bfc557727bef82ed786d3.png" alt="Preview" /></div></div>
<h2 id="smallcaps-fonts">Smallcaps fonts</h2>
<p>By default, this enables the OpenType <code>smcp</code> feature for the font. Not all
fonts support this feature. Sometimes smallcaps are part of a dedicated
font. This is, for example, the case for the <em>Latin Modern</em> family of fonts.
In those cases, you can use a show-set rule to customize the appearance of
the text in smallcaps:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">smallcaps</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Latin Modern Roman Caps&quot;</span><span class="typ-punct">)</span>
</code></pre>
<p>In the future, this function will support synthesizing smallcaps from normal
letters, but this is not yet implemented.</p>
<h2 id="smallcaps-headings">Smallcaps headings</h2>
<p>You can use a <a href="/docs/reference/styling/#show-rules">show rule</a> to apply smallcaps
formatting to all your headings. In the example below, we also center-align
our headings and disable the standard bold font.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;I.&quot;</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-func">smallcaps</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span>
<span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">40</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/57bf62281dacfa0125bb311564fe1f5a.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"body",details:"<p>The content to display in small capitals.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/smartquote/",title:"Smartquote",description:"Documentation for the `smartquote` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-double",name:"double",children:[]},{id:"parameters-enabled",name:"enabled",children:[]},{id:"parameters-alternative",name:"alternative",children:[]},{id:"parameters-quotes",name:"quotes",children:[]}]}],body:{kind:"func",content:{path:[],name:"smartquote",title:"Smartquote",keywords:[],oneliner:"A language-aware quote that reacts to its context.",element:!0,contextual:!1,details:`<p>A language-aware quote that reacts to its context.</p>
<p>Automatically turns into an appropriate opening or closing quote based on
the active <a href="/docs/reference/text/text/#parameters-lang">text language</a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>&quot;This is in quotes.&quot;

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
&quot;Das ist in Anführungszeichen.&quot;

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;fr&quot;</span><span class="typ-punct">)</span>
&quot;C&#39;est entre guillemets.&quot;
</code></pre><div class="preview"><img src="/docs/assets/53896c08ede45593fa3b876392abbe7f.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: The normal quote characters
(<code>'</code> and <code>&quot;</code>). Typst automatically makes your quotes smart.</p>`,example:null,self:!1,params:[{name:"double",details:"<p>Whether this should be a double quote.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"enabled",details:`<p>Whether smart quotes are enabled.</p>
<p>To disable smartness for a single quote, you can also escape it with a
backslash.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>enabled<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>

These are &quot;dumb&quot; quotes.
</code></pre><div class="preview"><img src="/docs/assets/d881ce51d8d4f22722902255dfb360c1.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"alternative",details:`<p>Whether to use alternative quotes.</p>
<p>Does nothing for languages that don't have alternative quotes, or if
explicit quotes were set.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>alternative<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

&quot;Das ist in anderen Anführungszeichen.&quot;
</code></pre><div class="preview"><img src="/docs/assets/a9e2ead24f3911d050692a09a9267d2.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"quotes",details:`<p>The quotes to use.</p>
<ul>
<li>When set to <code><span class="typ-key">auto</span></code>, the appropriate single quotes for the
<a href="/docs/reference/text/text/#parameters-lang">text language</a> will be used. This is the default.</li>
<li>Custom quotes can be passed as a string, array, or dictionary of either
<ul>
<li><a href="/docs/reference/foundations/str/">string</a>: a string consisting of two characters containing the
opening and closing double quotes (characters here refer to Unicode
grapheme clusters)</li>
<li><a href="/docs/reference/foundations/array/" title="array">array</a>: an array containing the opening and closing double quotes</li>
<li><a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a>: an array containing the double and single quotes, each
specified as either <code><span class="typ-key">auto</span></code>, string, or array</li>
</ul>
</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
&#39;Das sind normale Anführungszeichen.&#39;

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>quotes<span class="typ-punct">:</span> <span class="typ-str">&quot;()&quot;</span><span class="typ-punct">)</span>
&quot;Das sind eigene Anführungszeichen.&quot;

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">smartquote</span><span class="typ-punct">(</span>quotes<span class="typ-punct">:</span> <span class="typ-punct">(</span>single<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;[[&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;]]&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>  double<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
&#39;Das sind eigene Anführungszeichen.&#39;
</code></pre><div class="preview"><img src="/docs/assets/b73dac3e63473f8e5cbdc44fe2cbcaf9.png" alt="Preview" /></div></div>`,types:["auto","str","array","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/strike/",title:"Strikethrough",description:"Documentation for the `strike` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-offset",name:"offset",children:[]},{id:"parameters-extent",name:"extent",children:[]},{id:"parameters-background",name:"background",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"strike",title:"Strikethrough",keywords:[],oneliner:"Strikes through text.",element:!0,contextual:!1,details:`<p>Strikes through text.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This is <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">[</span>not<span class="typ-punct">]</span> relevant.
</code></pre><div class="preview"><img src="/docs/assets/7f5f38e43edb5c96ef6d2b7ed68cb588.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the line.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, takes on the text's color and a thickness defined in
the current font.</p>
<p><em>Note:</em> Please don't use this for real redaction as you can still copy
paste the text.</p>`,example:`<div class="previewed-code"><pre><code>This is <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span> <span class="typ-op">+</span> red<span class="typ-punct">)</span><span class="typ-punct">[</span>very stricken through<span class="typ-punct">]</span>. <span class="typ-escape">\\</span>
This is <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>redacted<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/fb381b86afc6e533f562c799747cf364.png" alt="Preview" /></div></div>`,types:["auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"offset",details:`<p>The position of the line relative to the baseline. Read from the font
tables if <code><span class="typ-key">auto</span></code>.</p>
<p>This is useful if you are unhappy with the offset your font provides.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">)</span>
This is <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">[</span>low-ish<span class="typ-punct">]</span>. <span class="typ-escape">\\</span>
This is <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">3.5pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>on-top<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/6dbc647557aea3f996edf102cfec9fa0.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"extent",details:`<p>The amount by which to extend the line beyond (or within if negative)
the content.</p>`,example:`<div class="previewed-code"><pre><code>This <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>skips<span class="typ-punct">]</span> parts of the word.
This <span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>extends<span class="typ-punct">]</span> beyond the word.
</code></pre><div class="preview"><img src="/docs/assets/b9a6699bdccec4d60183343b4f289f9f.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"background",details:"<p>Whether the line is placed behind the content.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">strike</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> red<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is behind.<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">strike</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is in front.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/d46ce938419228dcce983802e18c875f.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to strike through.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/sub/",title:"Subscript",description:"Documentation for the `sub` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-typographic",name:"typographic",children:[]},{id:"parameters-baseline",name:"baseline",children:[]},{id:"parameters-size",name:"size",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"sub",title:"Subscript",keywords:[],oneliner:"Renders text in subscript.",element:!0,contextual:!1,details:`<p>Renders text in subscript.</p>
<p>The text is rendered smaller and its baseline is lowered.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Revenue<span class="typ-func">#</span><span class="typ-func">sub</span><span class="typ-punct">[</span>yearly<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/d3a8f686259cb95ac4496cdbd4a7a271.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"typographic",details:`<p>Whether to prefer the dedicated subscript characters of the font.</p>
<p>If this is enabled, Typst first tries to transform the text to subscript
codepoints. If that fails, it falls back to rendering lowered and shrunk
normal letters.</p>`,example:`<div class="previewed-code"><pre><code>N<span class="typ-func">#</span><span class="typ-func">sub</span><span class="typ-punct">(</span>typographic<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1<span class="typ-punct">]</span>
N<span class="typ-func">#</span><span class="typ-func">sub</span><span class="typ-punct">(</span>typographic<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/6f5ca7cbc398024da9d579c05873b1c.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"baseline",details:`<p>The baseline shift for synthetic subscripts. Does not apply if
<code>typographic</code> is true and the font has subscript codepoints for the
given <code>body</code>.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"size",details:`<p>The font size for synthetic subscripts. Does not apply if
<code>typographic</code> is true and the font has subscript codepoints for the
given <code>body</code>.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.6em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The text to display in subscript.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/super/",title:"Superscript",description:"Documentation for the `super` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-typographic",name:"typographic",children:[]},{id:"parameters-baseline",name:"baseline",children:[]},{id:"parameters-size",name:"size",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"super",title:"Superscript",keywords:[],oneliner:"Renders text in superscript.",element:!0,contextual:!1,details:`<p>Renders text in superscript.</p>
<p>The text is rendered smaller and its baseline is raised.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>1<span class="typ-func">#</span><span class="typ-func">super</span><span class="typ-punct">[</span>st<span class="typ-punct">]</span> try!
</code></pre><div class="preview"><img src="/docs/assets/ab12335b99e58fc3f74e3388691233c5.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"typographic",details:`<p>Whether to prefer the dedicated superscript characters of the font.</p>
<p>If this is enabled, Typst first tries to transform the text to
superscript codepoints. If that fails, it falls back to rendering
raised and shrunk normal letters.</p>`,example:`<div class="previewed-code"><pre><code>N<span class="typ-func">#</span><span class="typ-func">super</span><span class="typ-punct">(</span>typographic<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1<span class="typ-punct">]</span>
N<span class="typ-func">#</span><span class="typ-func">super</span><span class="typ-punct">(</span>typographic<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/98cb5828cacbfc0a15a624d237d96710.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"baseline",details:`<p>The baseline shift for synthetic superscripts. Does not apply if
<code>typographic</code> is true and the font has superscript codepoints for the
given <code>body</code>.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-op">-</span><span class="typ-num">0.5em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"size",details:`<p>The font size for synthetic superscripts. Does not apply if
<code>typographic</code> is true and the font has superscript codepoints for the
given <code>body</code>.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0.6em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The text to display in superscript.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/text/",title:"Text",description:"Documentation for the `text` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-font",name:"font",children:[]},{id:"parameters-fallback",name:"fallback",children:[]},{id:"parameters-style",name:"style",children:[]},{id:"parameters-weight",name:"weight",children:[]},{id:"parameters-stretch",name:"stretch",children:[]},{id:"parameters-size",name:"size",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-tracking",name:"tracking",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-cjk-latin-spacing",name:"cjk-latin-spacing",children:[]},{id:"parameters-baseline",name:"baseline",children:[]},{id:"parameters-overhang",name:"overhang",children:[]},{id:"parameters-top-edge",name:"top-edge",children:[]},{id:"parameters-bottom-edge",name:"bottom-edge",children:[]},{id:"parameters-lang",name:"lang",children:[]},{id:"parameters-region",name:"region",children:[]},{id:"parameters-script",name:"script",children:[]},{id:"parameters-dir",name:"dir",children:[]},{id:"parameters-hyphenate",name:"hyphenate",children:[]},{id:"parameters-costs",name:"costs",children:[]},{id:"parameters-kerning",name:"kerning",children:[]},{id:"parameters-alternates",name:"alternates",children:[]},{id:"parameters-stylistic-set",name:"stylistic-set",children:[]},{id:"parameters-ligatures",name:"ligatures",children:[]},{id:"parameters-discretionary-ligatures",name:"discretionary-ligatures",children:[]},{id:"parameters-historical-ligatures",name:"historical-ligatures",children:[]},{id:"parameters-number-type",name:"number-type",children:[]},{id:"parameters-number-width",name:"number-width",children:[]},{id:"parameters-slashed-zero",name:"slashed-zero",children:[]},{id:"parameters-fractions",name:"fractions",children:[]},{id:"parameters-features",name:"features",children:[]},{id:"parameters-body",name:"body",children:[]},{id:"parameters-text",name:"text",children:[]}]}],body:{kind:"func",content:{path:[],name:"text",title:"Text",keywords:[],oneliner:"Customizes the look and layout of text in a variety of ways.",element:!0,contextual:!1,details:`<p>Customizes the look and layout of text in a variety of ways.</p>
<p>This function is used frequently, both with set rules and directly. While
the set rule is often the simpler choice, calling the <code>text</code> function
directly can be useful when passing text as an argument to another function.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">18pt</span><span class="typ-punct">)</span>
With a set rule.

<span class="typ-func">#</span><span class="typ-func">emph</span><span class="typ-punct">(</span><span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span><span class="typ-punct">[</span>
  With a function call.
<span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f9b18266709222474fc3a3ed17096ff8.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"font",details:`<p>A font family name or priority list of font family names.</p>
<p>When processing text, Typst tries all specified font families in order
until it finds a font that has the necessary glyphs. In the example
below, the font <code>Inria Serif</code> is preferred, but since it does not
contain Arabic glyphs, the arabic text uses <code>Noto Sans Arabic</code> instead.</p>
<p>The collection of available fonts differs by platform:</p>
<ul>
<li>
<p>In the web app, you can see the list of available fonts by clicking on
the &quot;Ag&quot; button. You can provide additional fonts by uploading <code>.ttf</code>
or <code>.otf</code> files into your project. They will be discovered
automatically. The priority is: project fonts &gt; server fonts.</p>
</li>
<li>
<p>Locally, Typst uses your installed system fonts or embedded fonts in
the CLI, which are <code>Libertinus Serif</code>, <code>New Computer Modern</code>,
<code>New Computer Modern Math</code>, and <code>DejaVu Sans Mono</code>. In addition, you
can use the <code>--font-path</code> argument or <code>TYPST_FONT_PATHS</code> environment
variable to add directories that should be scanned for fonts. The
priority is: <code>--font-paths</code> &gt; system fonts &gt; embedded fonts. Run
<code>typst fonts</code> to see the fonts that Typst has discovered on your
system. Note that you can pass the <code>--ignore-system-fonts</code> parameter
to the CLI to ensure Typst won't search for system fonts.</p>
</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;PT Sans&quot;</span><span class="typ-punct">)</span>
This is sans-serif.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-punct">(</span>
  <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">,</span>
  <span class="typ-str">&quot;Noto Sans Arabic&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>

This is Latin. <span class="typ-escape">\\</span>
هذا عربي.
</code></pre><div class="preview"><img src="/docs/assets/aaec9719ed0fae0b48f16d9bbdf3977a.png" alt="Preview" /></div></div>`,types:["str","array"],strings:[],default:'<code><span class="typ-str">&quot;libertinus serif&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fallback",details:`<p>Whether to allow last resort font fallback when the primary font list
contains no match. This lets Typst search through all available fonts
for the most similar one that has the necessary glyphs.</p>
<p><em>Note:</em> Currently, there are no warnings when fallback is disabled and
no glyphs are found. Instead, your text shows up in the form of &quot;tofus&quot;:
Small boxes that indicate the lack of an appropriate glyph. In the
future, you will be able to instruct Typst to issue warnings so you know
something is up.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Inria Serif&quot;</span><span class="typ-punct">)</span>
هذا عربي

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fallback<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
هذا عربي
</code></pre><div class="preview"><img src="/docs/assets/f0bd1120731becdf1486e85056bc34d6.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"style",details:`<p>The desired font style.</p>
<p>When an italic style is requested and only an oblique one is available,
it is used. Similarly, the other way around, an italic style can stand
in for an oblique one.  When neither an italic nor an oblique style is
available, Typst selects the normal style. Since most fonts are only
available either in an italic or oblique style, the difference between
italic and oblique style is rarely observable.</p>
<p>If you want to emphasize your text, you should do so using the <a href="/docs/reference/model/emph/" title="emph">emph</a>
function instead. This makes it easy to adapt the style later if you
change your mind about how to signify the emphasis.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Libertinus Serif&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;italic&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Italic<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;DejaVu Sans&quot;</span><span class="typ-punct">,</span> style<span class="typ-punct">:</span> <span class="typ-str">&quot;oblique&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Oblique<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/270913591225a53002ee202063e2dbde.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"normal",details:"<p>The default, typically upright style.</p>"},{string:"italic",details:"<p>A cursive style with custom letterform.</p>"},{string:"oblique",details:"<p>Just a slanted version of the normal style.</p>"}],default:'<code><span class="typ-str">&quot;normal&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"weight",details:`<p>The desired thickness of the font's glyphs. Accepts an integer between
<code><span class="typ-num">100</span></code> and <code><span class="typ-num">900</span></code> or one of the predefined weight names. When the
desired weight is not available, Typst selects the font from the family
that is closest in weight.</p>
<p>If you want to strongly emphasize your text, you should do so using the
<a href="/docs/reference/model/strong/" title="strong">strong</a> function instead. This makes it easy to adapt the style later
if you change your mind about how to signify the strong emphasis.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;light&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Light<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;regular&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Regular<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;medium&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Medium<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-num">500</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Medium<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Bold<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/9230f329f6dd8b8177e36d2c7686eb9.png" alt="Preview" /></div></div>`,types:["int","str"],strings:[{string:"thin",details:"<p>Thin weight (100).</p>"},{string:"extralight",details:"<p>Extra light weight (200).</p>"},{string:"light",details:"<p>Light weight (300).</p>"},{string:"regular",details:"<p>Regular weight (400).</p>"},{string:"medium",details:"<p>Medium weight (500).</p>"},{string:"semibold",details:"<p>Semibold weight (600).</p>"},{string:"bold",details:"<p>Bold weight (700).</p>"},{string:"extrabold",details:"<p>Extrabold weight (800).</p>"},{string:"black",details:"<p>Black weight (900).</p>"}],default:'<code><span class="typ-str">&quot;regular&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stretch",details:`<p>The desired width of the glyphs. Accepts a ratio between <code><span class="typ-num">50%</span></code> and
<code><span class="typ-num">200%</span></code>. When the desired width is not available, Typst selects the
font from the family that is closest in stretch. This will only stretch
the text if a condensed or expanded version of the font is available.</p>
<p>If you want to adjust the amount of space between characters instead of
stretching the glyphs itself, use the <a href="/docs/reference/text/text/#parameters-tracking"><code>tracking</code></a>
property instead.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stretch<span class="typ-punct">:</span> <span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Condensed<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stretch<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Normal<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/8777e40c6a968520c063cb72f63ce395.png" alt="Preview" /></div></div>`,types:["ratio"],strings:[],default:'<code><span class="typ-num">100%</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"size",details:`<p>The size of the glyphs. This value forms the basis of the <code>em</code> unit:
<code><span class="typ-num">1em</span></code> is equivalent to the font size.</p>
<p>You can also give the font size itself in <code>em</code> units. Then, it is
relative to the previous font size.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
very <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.5em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>big<span class="typ-punct">]</span> text
</code></pre><div class="preview"><img src="/docs/assets/9546c477f535df5551f2384fac0b5722.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">11pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:"<p>The glyph fill paint.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span>
This text is red.
</code></pre><div class="preview"><img src="/docs/assets/e94b7d87d15a2dbaa16595ceb33cefb6.png" alt="Preview" /></div></div>`,types:["color","gradient","pattern"],strings:[],default:'<code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">0%</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:"<p>How to stroke the text.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">0.5pt</span> <span class="typ-op">+</span> red<span class="typ-punct">)</span><span class="typ-punct">[</span>Stroked<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/a9326d2fc99d33eaa20a5ebb356dd34d.png" alt="Preview" /></div></div>`,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"tracking",details:"<p>The amount of space that should be added between characters.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>tracking<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span><span class="typ-punct">)</span>
Distant text.
</code></pre><div class="preview"><img src="/docs/assets/65651bfbd47ee7a94e72e420a09f61ab.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:`<p>The amount of space between words.</p>
<p>Can be given as an absolute length, but also relative to the width of
the space character in the font.</p>
<p>If you want to adjust the amount of space between characters rather than
words, use the <a href="/docs/reference/text/text/#parameters-tracking"><code>tracking</code></a> property instead.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">200%</span><span class="typ-punct">)</span>
Text with distant words.
</code></pre><div class="preview"><img src="/docs/assets/f29da04d3f63cbdb51b28407ccab21e0.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">100%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"cjk-latin-spacing",details:"<p>Whether to automatically insert spacing between CJK and Latin characters.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>cjk-latin-spacing<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">)</span>
第4章介绍了基本的API。

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>cjk-latin-spacing<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span>
第4章介绍了基本的API。
</code></pre><div class="preview"><img src="/docs/assets/28350896d3fc938504a50a7a8d4c7790.png" alt="Preview" /></div></div>`,types:["none","auto"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"baseline",details:"<p>An amount to shift the text baseline by.</p>",example:`<div class="previewed-code"><pre><code>A <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>baseline<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>lowered<span class="typ-punct">]</span>
word.
</code></pre><div class="preview"><img src="/docs/assets/b4d950022aa2cb8a8129e4d3498f38a9.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"overhang",details:`<p>Whether certain glyphs can hang over into the margin in justified text.
This can make justification visually more pleasing.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
This justified text has a hyphen in
the paragraph&#39;s first line. Hanging
the hyphen slightly into the margin
results in a clearer paragraph edge.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>overhang<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
This justified text has a hyphen in
the paragraph&#39;s first line. Hanging
the hyphen slightly into the margin
results in a clearer paragraph edge.
</code></pre><div class="preview"><img src="/docs/assets/61144fb259fda00f30be3a488a8b71e7.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"top-edge",details:`<p>The top end of the conceptual frame around the text used for layout and
positioning. This affects the size of containers that hold text.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;ascender&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>top-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;cap-height&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/23efc8f1b74b3666af03bf3036807c4e.png" alt="Preview" /></div></div>`,types:["length","str"],strings:[{string:"ascender",details:"<p>The font's ascender, which typically exceeds the height of all glyphs.</p>"},{string:"cap-height",details:"<p>The approximate height of uppercase letters.</p>"},{string:"x-height",details:"<p>The approximate height of non-ascending lowercase letters.</p>"},{string:"baseline",details:"<p>The baseline on which the letters rest.</p>"},{string:"bounds",details:"<p>The top edge of the glyph's bounding box.</p>"}],default:'<code><span class="typ-str">&quot;cap-height&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"bottom-edge",details:`<p>The bottom end of the conceptual frame around the text used for layout
and positioning. This affects the size of containers that hold text.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;baseline&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>bottom-edge<span class="typ-punct">:</span> <span class="typ-str">&quot;descender&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Typst<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/c1de6291eabb6c2c8186cd7de6120805.png" alt="Preview" /></div></div>`,types:["length","str"],strings:[{string:"baseline",details:"<p>The baseline on which the letters rest.</p>"},{string:"descender",details:"<p>The font's descender, which typically exceeds the depth of all glyphs.</p>"},{string:"bounds",details:"<p>The bottom edge of the glyph's bounding box.</p>"}],default:'<code><span class="typ-str">&quot;baseline&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"lang",details:`<p>An <a href="https://en.wikipedia.org/wiki/ISO_639">ISO 639-1/2/3 language code.</a></p>
<p>Setting the correct language affects various parts of Typst:</p>
<ul>
<li>The text processing pipeline can make more informed choices.</li>
<li>Hyphenation will use the correct patterns for the language.</li>
<li><a href="/docs/reference/text/smartquote/">Smart quotes</a> turns into the correct quotes for the
language.</li>
<li>And all other things which are language-aware.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;de&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">outline</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">= Einleitung</span>
In diesem Dokument, <span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/9c77bdf37824a4ef3e05f7c1ff556faa.png" alt="Preview" /></div></div>`,types:["str"],strings:[],default:'<code><span class="typ-str">&quot;en&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"region",details:`<p>An <a href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2">ISO 3166-1 alpha-2 region code.</a></p>
<p>This lets the text processing pipeline make more informed choices.</p>`,example:null,types:["none","str"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"script",details:`<p>The OpenType writing script.</p>
<p>The combination of <code>lang</code> and <code>script</code> determine how font features,
such as glyph substitution, are implemented. Frequently the value is a
modified (all-lowercase) ISO 15924 script identifier, and the <code>math</code>
writing script is used for features appropriate for mathematical
symbols.</p>
<p>When set to <code><span class="typ-key">auto</span></code>, the default and recommended setting, an
appropriate script is chosen for each block of characters sharing a
common Unicode script property.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  font<span class="typ-punct">:</span> <span class="typ-str">&quot;Libertinus Serif&quot;</span><span class="typ-punct">,</span>
  size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> scedilla <span class="typ-op">=</span> <span class="typ-punct">[</span>Ş<span class="typ-punct">]</span>
<span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a cedilla</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ro&quot;</span><span class="typ-punct">,</span> script<span class="typ-punct">:</span> <span class="typ-str">&quot;latn&quot;</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a subscript comma</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ro&quot;</span><span class="typ-punct">,</span> script<span class="typ-punct">:</span> <span class="typ-str">&quot;grek&quot;</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">scedilla</span> <span class="typ-comment">// S with a cedilla</span>
</code></pre><div class="preview"><img src="/docs/assets/ee73e728cacfb5b2ae161b54e8a6afe4.png" alt="Preview" /></div></div>`,types:["auto","str"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"dir",details:`<p>The dominant direction for text and inline objects. Possible values are:</p>
<ul>
<li><code><span class="typ-key">auto</span></code>: Automatically infer the direction from the <code>lang</code> property.</li>
<li><code>ltr</code>: Layout text from left to right.</li>
<li><code>rtl</code>: Layout text from right to left.</li>
</ul>
<p>When writing in right-to-left scripts like Arabic or Hebrew, you should
set the <a href="/docs/reference/text/text/#parameters-lang">text language</a> or direction. While individual runs
of text are automatically layouted in the correct direction, setting the
dominant direction gives the bidirectional reordering algorithm the
necessary information to correctly place punctuation and inline objects.
Furthermore, setting the direction affects the alignment values <code>start</code>
and <code>end</code>, which are equivalent to <code>left</code> and <code>right</code> in <code>ltr</code> text and
the other way around in <code>rtl</code> text.</p>
<p>If you set this to <code>rtl</code> and experience bugs or in some way bad looking
output, please get in touch with us through the
<a href="https://forum.typst.app/">Forum</a>,
<a href="https://discord.gg/2uDybryKPe">Discord server</a>,
or our <a href="https://typst.app/contact">contact form</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> rtl<span class="typ-punct">)</span>
هذا عربي.
</code></pre><div class="preview"><img src="/docs/assets/161a1fa2e09f6f6d3a7579b9c0a42302.png" alt="Preview" /></div></div>`,types:["auto","direction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"hyphenate",details:`<p>Whether to hyphenate text to improve line breaking. When <code><span class="typ-key">auto</span></code>, text
will be hyphenated if and only if justification is enabled.</p>
<p>Setting the <a href="/docs/reference/text/text/#parameters-lang">text language</a> ensures that the correct
hyphenation patterns are used.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">200pt</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
This text illustrates how
enabling hyphenation can
improve justification.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>hyphenate<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
This text illustrates how
enabling hyphenation can
improve justification.
</code></pre><div class="preview"><img src="/docs/assets/c6dae396c0d5b4d70f1d3e4dae305815.png" alt="Preview" /></div></div>`,types:["auto","bool"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"costs",details:`<p>The &quot;cost&quot; of various choices when laying out text. A higher cost means
the layout engine will make the choice less often. Costs are specified
as a ratio of the default cost, so <code><span class="typ-num">50%</span></code> will make text layout twice
as eager to make a given choice, while <code><span class="typ-num">200%</span></code> will make it half as
eager.</p>
<p>Currently, the following costs can be customized:</p>
<ul>
<li><code>hyphenation</code>: splitting a word across multiple lines</li>
<li><code>runt</code>: ending a paragraph with a line with a single word</li>
<li><code>widow</code>: leaving a single line of paragraph on the next page</li>
<li><code>orphan</code>: leaving single line of paragraph on the previous page</li>
</ul>
<p>Hyphenation is generally avoided by placing the whole word on the next
line, so a higher hyphenation cost can result in awkward justification
spacing.</p>
<p>Runts are avoided by placing more or fewer words on previous lines, so a
higher runt cost can result in more awkward in justification spacing.</p>
<p>Text layout prevents widows and orphans by default because they are
generally discouraged by style guides. However, in some contexts they
are allowed because the prevention method, which moves a line to the
next page, can result in an uneven number of lines between pages. The
<code>widow</code> and <code>orphan</code> costs allow disabling these modifications.
(Currently, <code><span class="typ-num">0%</span></code> allows widows/orphans; anything else, including the
default of <code><span class="typ-num">100%</span></code>, prevents them. More nuanced cost specification for
these modifications is planned for the future.)</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>hyphenate<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span> size<span class="typ-punct">:</span> <span class="typ-num">11.4pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>

<span class="typ-comment">// Set hyphenation to ten times the normal cost.</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>costs<span class="typ-punct">:</span> <span class="typ-punct">(</span>hyphenation<span class="typ-punct">:</span> <span class="typ-num">1000%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d5cebe0d5ff3a9c03b6f42f7db0faf7.png" alt="Preview" /></div></div>`,types:["dictionary"],strings:[],default:`<code><span class="typ-punct">(</span>
  hyphenation<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  runt<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  widow<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  orphan<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span></code>`,positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"kerning",details:`<p>Whether to apply kerning.</p>
<p>When enabled, specific letter pairings move closer together or further
apart for a more visually pleasing result. The example below
demonstrates how decreasing the gap between the &quot;T&quot; and &quot;o&quot; results in a
more natural look. Setting this to <code><span class="typ-key">false</span></code> disables kerning by turning
off the OpenType <code>kern</code> font feature.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">25pt</span><span class="typ-punct">)</span>
Totally

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>kerning<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
Totally
</code></pre><div class="preview"><img src="/docs/assets/bacbf579fa322a66b9859be0fab6f385.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"alternates",details:`<p>Whether to apply stylistic alternates.</p>
<p>Sometimes fonts contain alternative glyphs for the same codepoint.
Setting this to <code><span class="typ-key">true</span></code> switches to these by enabling the OpenType
<code>salt</code> font feature.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">,</span>
  size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

0, a, g, ß

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>alternates<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
0, a, g, ß
</code></pre><div class="preview"><img src="/docs/assets/3928921bc0f1db9cdf3075e1082636a1.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stylistic-set",details:`<p>Which stylistic sets to apply. Font designers can categorize alternative
glyphs forms into stylistic sets. As this value is highly font-specific,
you need to consult your font to know which sets are available.</p>
<p>This can be set to an integer or an array of integers, all
of which must be between <code><span class="typ-num">1</span></code> and <code><span class="typ-num">20</span></code>, enabling the
corresponding OpenType feature(s) from <code>ss01</code> to <code>ss20</code>.
Setting this to <code><span class="typ-key">none</span></code> will disable all stylistic sets.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Serif&quot;</span><span class="typ-punct">)</span>
ß vs <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stylistic-set<span class="typ-punct">:</span> <span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">[</span>ß<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
10 years ago vs <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>stylistic-set<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>10 years ago<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/786d59de9103199e7fdca3ef101eb2b7.png" alt="Preview" /></div></div>`,types:["none","int","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"ligatures",details:`<p>Whether standard ligatures are active.</p>
<p>Certain letter combinations like &quot;fi&quot; are often displayed as a single
merged glyph called a <em>ligature.</em> Setting this to <code><span class="typ-key">false</span></code> disables
these ligatures by turning off the OpenType <code>liga</code> and <code>clig</code> font
features.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
A fine ligature.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>ligatures<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
A fine ligature.
</code></pre><div class="preview"><img src="/docs/assets/22209750bf535c1e63d3370f8308b31b.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"discretionary-ligatures",details:`<p>Whether ligatures that should be used sparingly are active. Setting this
to <code><span class="typ-key">true</span></code> enables the OpenType <code>dlig</code> font feature.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"historical-ligatures",details:`<p>Whether historical ligatures are active. Setting this to <code><span class="typ-key">true</span></code>
enables the OpenType <code>hlig</code> font feature.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-type",details:`<p>Which kind of numbers / figures to select. When set to <code><span class="typ-key">auto</span></code>, the
default numbers for the font are used.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-type<span class="typ-punct">:</span> <span class="typ-str">&quot;lining&quot;</span><span class="typ-punct">)</span>
Number 9.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-type<span class="typ-punct">:</span> <span class="typ-str">&quot;old-style&quot;</span><span class="typ-punct">)</span>
Number 9.
</code></pre><div class="preview"><img src="/docs/assets/9f434673bce102282e6877bb30b5705f.png" alt="Preview" /></div></div>`,types:["auto","str"],strings:[{string:"lining",details:`<p>Numbers that fit well with capital text (the OpenType <code>lnum</code>
font feature).</p>`},{string:"old-style",details:`<p>Numbers that fit well into a flow of upper- and lowercase text (the
OpenType <code>onum</code> font feature).</p>`}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-width",details:`<p>The width of numbers / figures. When set to <code><span class="typ-key">auto</span></code>, the default
numbers for the font are used.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans&quot;</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-width<span class="typ-punct">:</span> <span class="typ-str">&quot;proportional&quot;</span><span class="typ-punct">)</span>
A 12 B 34. <span class="typ-escape">\\</span>
A 56 B 78.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>number-width<span class="typ-punct">:</span> <span class="typ-str">&quot;tabular&quot;</span><span class="typ-punct">)</span>
A 12 B 34. <span class="typ-escape">\\</span>
A 56 B 78.
</code></pre><div class="preview"><img src="/docs/assets/e8a8228b87b4b5036d19c41d08c03bdf.png" alt="Preview" /></div></div>`,types:["auto","str"],strings:[{string:"proportional",details:"<p>Numbers with glyph-specific widths (the OpenType <code>pnum</code> font feature).</p>"},{string:"tabular",details:"<p>Numbers of equal width (the OpenType <code>tnum</code> font feature).</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"slashed-zero",details:`<p>Whether to have a slash through the zero glyph. Setting this to <code><span class="typ-key">true</span></code>
enables the OpenType <code>zero</code> font feature.</p>`,example:`<div class="previewed-code"><pre><code>0, <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>slashed-zero<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>0<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/cb3cbbbf6e9ea2cd8ec3a86a177780b6.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fractions",details:`<p>Whether to turn numbers into fractions. Setting this to <code><span class="typ-key">true</span></code>
enables the OpenType <code>frac</code> font feature.</p>
<p>It is not advisable to enable this property globally as it will mess
with all appearances of numbers after a slash (e.g., in URLs). Instead,
enable it locally when you want a fraction.</p>`,example:`<div class="previewed-code"><pre><code>1/2 <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>fractions<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>1/2<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/ec587ca68b8ef146b68af2b2d5922154.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"features",details:`<p>Raw OpenType features to apply.</p>
<ul>
<li>If given an array of strings, sets the features identified by the
strings to <code><span class="typ-num">1</span></code>.</li>
<li>If given a dictionary mapping to numbers, sets the features
identified by the keys to the values.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-comment">// Enable the \`frac\` feature manually.</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>features<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;frac&quot;</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
1/2
</code></pre><div class="preview"><img src="/docs/assets/6077a4eda2eac4e8caf472c231d8b0c6.png" alt="Preview" /></div></div>`,types:["array","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>Content in which all text is styled according to the other arguments.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"text",details:"<p>The text.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/underline/",title:"Underline",description:"Documentation for the `underline` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-offset",name:"offset",children:[]},{id:"parameters-extent",name:"extent",children:[]},{id:"parameters-evade",name:"evade",children:[]},{id:"parameters-background",name:"background",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"underline",title:"Underline",keywords:[],oneliner:"Underlines text.",element:!0,contextual:!1,details:`<p>Underlines text.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>This is <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">[</span>important<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/c6f8dbb966d56ca7f3869684a1af794d.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the line.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, takes on the text's color and a thickness defined in
the current font.</p>`,example:`<div class="previewed-code"><pre><code>Take <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span> <span class="typ-op">+</span> red<span class="typ-punct">,</span>
  offset<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>care<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/81ec45ecf78fb8b122bc7ca90f8a0f0f.png" alt="Preview" /></div></div>`,types:["auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"offset",details:`<p>The position of the line relative to the baseline, read from the font
tables if <code><span class="typ-key">auto</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>offset<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  The Tale Of A Faraway Line I
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/e2646ad3582f43987df38a8e9e9ca14a.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"extent",details:`<p>The amount by which to extend the line beyond (or within if negative)
the content.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">,</span>
  <span class="typ-func">underline</span><span class="typ-punct">(</span>extent<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Chapter 1<span class="typ-punct">]</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f783d4724f93adc74c1ef8ff1441c85b.png" alt="Preview" /></div></div>`,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"evade",details:`<p>Whether the line skips sections in which it would collide with the
glyphs.</p>`,example:`<div class="previewed-code"><pre><code>This <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>evade<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>is great<span class="typ-punct">]</span>.
This <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>evade<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>is less great<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/dd6f2b9a67fa739338d7ae65b5756d6b.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"background",details:"<p>Whether the line is placed behind the content it underlines.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">underline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>thickness<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span> paint<span class="typ-punct">:</span> maroon<span class="typ-punct">,</span> cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is stylized.<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is partially hidden.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/a4cf5c89505008bd7aedfdd289ef6d24.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to underline.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/text/upper/",title:"Uppercase",description:"Documentation for the `upper` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-text",name:"text",children:[]}]}],body:{kind:"func",content:{path:[],name:"upper",title:"Uppercase",keywords:[],oneliner:"Converts a string or content to uppercase.",element:!1,contextual:!1,details:`<p>Converts a string or content to uppercase.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">upper</span><span class="typ-punct">(</span><span class="typ-str">&quot;abc&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">upper</span><span class="typ-punct">[</span><span class="typ-strong">*my text*</span><span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">upper</span><span class="typ-punct">[</span>ALREADY HIGH<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/25c4b3d12ba7c8938f99bd232b54016e.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"text",details:"<p>The text to convert to uppercase.</p>",example:null,types:["str","content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["str","content"],scope:[]}},children:[]}]},{route:"/docs/reference/math/",title:"Math",description:"Documentation for functions related to Math in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"variables",name:"Variables",children:[]},{id:"symbols",name:"Symbols",children:[]},{id:"line-breaks",name:"Line Breaks",children:[]},{id:"function-calls",name:"Function Calls",children:[]},{id:"alignment",name:"Alignment",children:[]},{id:"math-fonts",name:"Math Fonts",children:[]},{id:"math-module",name:"Math Module",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"math",title:"Math",details:`<p>Typst has special <a href="/docs/reference/syntax/#math">syntax</a> and library functions to typeset
mathematical formulas. Math formulas can be displayed inline with text or as
separate blocks. They will be typeset into their own block if they start and
end with at least one space (e.g. <code><span class="typ-math-delim">$</span> x<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span></code>).</p>
<h2 id="variables">Variables</h2>
<p>In math, single letters are always displayed as is. Multiple letters,
however, are interpreted as variables and functions. To display multiple
letters verbatim, you can place them into quotes and to access single letter
variables, you can use the <a href="/docs/reference/scripting/#expressions">hash syntax</a>.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> A = <span class="typ-pol">pi</span> r<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-str">&quot;area&quot;</span> = <span class="typ-pol">pi</span> <span class="typ-pol">dot</span> <span class="typ-str">&quot;radius&quot;</span><span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">cal</span><span class="typ-punct">(</span>A<span class="typ-punct">)</span> <span class="typ-escape">:=</span>
    { x <span class="typ-pol">in</span> <span class="typ-pol">RR</span> | x <span class="typ-str">&quot;is natural&quot;</span> } <span class="typ-math-delim">$</span>
<span class="typ-key">#</span><span class="typ-key">let</span> x <span class="typ-op">=</span> <span class="typ-num">5</span>
<span class="typ-math-delim">$</span> <span class="typ-pol">#</span><span class="typ-pol">x</span> &lt; 17 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/db23ffa2f601cb2035f96c67fffa090d.png" alt="Preview" /></div></div>
<h2 id="symbols">Symbols</h2>
<p>Math mode makes a wide selection of <a href="/docs/reference/symbols/sym/">symbols</a> like
<code>pi</code>, <code>dot</code>, or <code>RR</code> available. Many mathematical symbols are available in
different variants. You can select between different variants by applying
<a href="/docs/reference/symbols/symbol/">modifiers</a> to the symbol. Typst further recognizes a number of
shorthand sequences like <code>=&gt;</code> that approximate a symbol. When such a
shorthand exists, the symbol's documentation lists it.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> x &lt; y <span class="typ-escape">=&gt;</span> x <span class="typ-pol">gt</span><span class="typ-punct">.</span><span class="typ-pol">eq</span><span class="typ-punct">.</span><span class="typ-pol">not</span> y <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/1be66ea69979fcb51fa43e855dc1a201.png" alt="Preview" /></div></div>
<h2 id="line-breaks">Line Breaks</h2>
<p>Formulas can also contain line breaks. Each line can contain one or multiple
<em>alignment points</em> (<code>&amp;</code>) which are then aligned.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>k=0<span class="typ-punct">)</span><span class="typ-math-op">^</span>n k
    <span class="typ-math-op">&amp;</span>= 1 + <span class="typ-escape">...</span> + n <span class="typ-escape">\\</span>
    <span class="typ-math-op">&amp;</span>= <span class="typ-punct">(</span>n(n+1)<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/5e2dae05ba45fa50a1921517a5269bcd.png" alt="Preview" /></div></div>
<h2 id="function-calls">Function calls</h2>
<p>Math mode supports special function calls without the hash prefix. In these
&quot;math calls&quot;, the argument list works a little differently than in code:</p>
<ul>
<li>Within them, Typst is still in &quot;math mode&quot;. Thus, you can write math
directly into them, but need to use hash syntax to pass code expressions
(except for strings, which are available in the math syntax).</li>
<li>They support positional and named arguments, but don't support trailing
content blocks and argument spreading.</li>
<li>They provide additional syntax for 2-dimensional argument lists. The
semicolon (<code>;</code>) merges preceding arguments separated by commas into an
array argument.</li>
</ul>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">frac</span><span class="typ-punct">(</span>a<span class="typ-math-op">^</span>2<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">vec</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-pol">lim</span><span class="typ-math-op">_</span>x =
    <span class="typ-func">op</span><span class="typ-punct">(</span><span class="typ-str">&quot;lim&quot;</span><span class="typ-punct">,</span> limits<span class="typ-punct">:</span> <span class="typ-key">#</span><span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-math-op">_</span>x <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/44bf2586d944204dc580fa91b44c2dac.png" alt="Preview" /></div></div>
<p>To write a verbatim comma or semicolon in a math call, escape it with a
backslash. The colon on the other hand is only recognized in a special way
if directly preceded by an identifier, so to display it verbatim in those
cases, you can just insert a space before it.</p>
<p>Functions calls preceded by a hash are normal code function calls and not
affected by these rules.</p>
<h2 id="alignment">Alignment</h2>
<p>When equations include multiple <em>alignment points</em> (<code>&amp;</code>), this creates
blocks of alternatingly right- and left-aligned columns. In the example
below, the expression <code>(3x + y) / 7</code> is right-aligned and <code>= 9</code> is
left-aligned. The word &quot;given&quot; is also left-aligned because <code>&amp;&amp;</code> creates two
alignment points in a row, alternating the alignment twice. <code>&amp; &amp;</code> and <code>&amp;&amp;</code>
behave exactly the same way. Meanwhile, &quot;multiply by 7&quot; is right-aligned
because just one <code>&amp;</code> precedes it. Each alignment point simply alternates
between right-aligned/left-aligned.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-punct">(</span>3x + y<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 7 <span class="typ-math-op">&amp;</span>= 9 <span class="typ-math-op">&amp;</span><span class="typ-math-op">&amp;</span> <span class="typ-str">&quot;given&quot;</span> <span class="typ-escape">\\</span>
  3x + y <span class="typ-math-op">&amp;</span>= 63 <span class="typ-math-op">&amp;</span> <span class="typ-str">&quot;multiply by 7&quot;</span> <span class="typ-escape">\\</span>
  3x <span class="typ-math-op">&amp;</span>= 63 <span class="typ-escape">-</span> y <span class="typ-math-op">&amp;</span><span class="typ-math-op">&amp;</span> <span class="typ-str">&quot;subtract y&quot;</span> <span class="typ-escape">\\</span>
  x <span class="typ-math-op">&amp;</span>= 21 <span class="typ-escape">-</span> y<span class="typ-math-op">/</span>3 <span class="typ-math-op">&amp;</span> <span class="typ-str">&quot;divide by 3&quot;</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/15c1c2e1900bf6dd883d6688906375a8.png" alt="Preview" /></div></div>
<h2 id="math-fonts">Math fonts</h2>
<p>You can set the math font by with a <a href="/docs/reference/styling/#show-rules">show-set rule</a> as
demonstrated below. Note that only special OpenType math fonts are suitable
for typesetting maths.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Fira Math&quot;</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>i <span class="typ-pol">in</span> <span class="typ-pol">NN</span><span class="typ-punct">)</span> 1 + i <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/5b7efa5f6f39e494f086a82e1234dbb1.png" alt="Preview" /></div></div>
<h2 id="math-module">Math module</h2>
<p>All math functions are part of the <code>math</code> <a href="/docs/reference/scripting/#modules">module</a>,
which is available by default in equations. Outside of equations, they can
be accessed with the <code>math.</code> prefix.</p>`,items:[{name:"accent",route:"/docs/reference/math/accent/",oneliner:"Attaches an accent to a base.",code:!0},{name:"attach",route:"/docs/reference/math/attach",oneliner:"Subscript, superscripts, and limits.",code:!1},{name:"binom",route:"/docs/reference/math/binom/",oneliner:"A binomial expression.",code:!0},{name:"cancel",route:"/docs/reference/math/cancel/",oneliner:"Displays a diagonal line over a part of an equation.",code:!0},{name:"cases",route:"/docs/reference/math/cases/",oneliner:"A case distinction.",code:!0},{name:"class",route:"/docs/reference/math/class/",oneliner:"Forced use of a certain math class.",code:!0},{name:"equation",route:"/docs/reference/math/equation/",oneliner:"A mathematical equation.",code:!0},{name:"frac",route:"/docs/reference/math/frac/",oneliner:"A mathematical fraction.",code:!0},{name:"lr",route:"/docs/reference/math/lr",oneliner:"Delimiter matching.",code:!1},{name:"mat",route:"/docs/reference/math/mat/",oneliner:"A matrix.",code:!0},{name:"op",route:"/docs/reference/math/op/",oneliner:"A text operator in an equation.",code:!0},{name:"primes",route:"/docs/reference/math/primes/",oneliner:"Grouped primes.",code:!0},{name:"roots",route:"/docs/reference/math/roots",oneliner:"Square and non-square roots.",code:!1},{name:"sizes",route:"/docs/reference/math/sizes",oneliner:"Forced size styles for expressions within formulas.",code:!1},{name:"stretch",route:"/docs/reference/math/stretch/",oneliner:"Stretches a glyph.",code:!0},{name:"styles",route:"/docs/reference/math/styles",oneliner:"Alternate letterforms within formulas.",code:!1},{name:"underover",route:"/docs/reference/math/underover",oneliner:"Delimiters above or below parts of an equation.",code:!1},{name:"variants",route:"/docs/reference/math/variants",oneliner:"Alternate typefaces within formulas.",code:!1},{name:"vec",route:"/docs/reference/math/vec/",oneliner:"A column vector.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/math/accent/",title:"Accent",description:"Documentation for the `accent` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-base",name:"base",children:[]},{id:"parameters-accent",name:"accent",children:[]},{id:"parameters-size",name:"size",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"accent",title:"Accent",keywords:[],oneliner:"Attaches an accent to a base.",element:!0,contextual:!1,details:`<p>Attaches an accent to a base.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-func">grave</span><span class="typ-punct">(</span>a<span class="typ-punct">)</span> = <span class="typ-func">accent</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span> \`<span class="typ-punct">)</span><span class="typ-math-delim">$</span> <span class="typ-escape">\\</span>
<span class="typ-math-delim">$</span><span class="typ-func">arrow</span><span class="typ-punct">(</span>a<span class="typ-punct">)</span> = <span class="typ-func">accent</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span> <span class="typ-pol">arrow</span><span class="typ-punct">)</span><span class="typ-math-delim">$</span> <span class="typ-escape">\\</span>
<span class="typ-math-delim">$</span><span class="typ-func">tilde</span><span class="typ-punct">(</span>a<span class="typ-punct">)</span> = <span class="typ-func">accent</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span> <span class="typ-escape">\\u{0303}</span><span class="typ-punct">)</span><span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d8136965ad3780fd8fed7e7f10cc7188.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"base",details:`<p>The base to which the accent is applied.
May consist of multiple letters.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-func">arrow</span><span class="typ-punct">(</span>A B C<span class="typ-punct">)</span><span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/ba404d28c91cb9c25b7955597d3e97d8.png" alt="Preview" /></div></div>`,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"accent",details:`<p>The accent to apply to the base.</p>
<p>Supported accents include:</p>
<table><thead><tr><th>Accent</th><th>Name</th><th>Codepoint</th></tr></thead><tbody>
<tr><td>Grave</td><td><code>grave</code></td><td><code>\`</code></td></tr>
<tr><td>Acute</td><td><code>acute</code></td><td><code>´</code></td></tr>
<tr><td>Circumflex</td><td><code>hat</code></td><td><code>^</code></td></tr>
<tr><td>Tilde</td><td><code>tilde</code></td><td><code>~</code></td></tr>
<tr><td>Macron</td><td><code>macron</code></td><td><code>¯</code></td></tr>
<tr><td>Dash</td><td><code>dash</code></td><td><code>‾</code></td></tr>
<tr><td>Breve</td><td><code>breve</code></td><td><code>˘</code></td></tr>
<tr><td>Dot</td><td><code>dot</code></td><td><code>.</code></td></tr>
<tr><td>Double dot, Diaeresis</td><td><code>dot.double</code>, <code>diaer</code></td><td><code>¨</code></td></tr>
<tr><td>Triple dot</td><td><code>dot.triple</code></td><td><code>⃛</code></td></tr>
<tr><td>Quadruple dot</td><td><code>dot.quad</code></td><td><code>⃜</code></td></tr>
<tr><td>Circle</td><td><code>circle</code></td><td><code>∘</code></td></tr>
<tr><td>Double acute</td><td><code>acute.double</code></td><td><code>˝</code></td></tr>
<tr><td>Caron</td><td><code>caron</code></td><td><code>ˇ</code></td></tr>
<tr><td>Right arrow</td><td><code>arrow</code>, <code>-&gt;</code></td><td><code>→</code></td></tr>
<tr><td>Left arrow</td><td><code>arrow.l</code>, <code>&lt;-</code></td><td><code>←</code></td></tr>
<tr><td>Left/Right arrow</td><td><code>arrow.l.r</code></td><td><code>↔</code></td></tr>
<tr><td>Right harpoon</td><td><code>harpoon</code></td><td><code>⇀</code></td></tr>
<tr><td>Left harpoon</td><td><code>harpoon.lt</code></td><td><code>↼</code></td></tr>
</tbody></table>`,example:null,types:["str","content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"size",details:"<p>The size of the accent, relative to the width of the base.</p>",example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/attach",title:"Attach",description:"Documentation for the attach functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-attach",name:"Attach",children:[{id:"functions-attach-base",name:"base",children:[]},{id:"functions-attach-t",name:"t",children:[]},{id:"functions-attach-b",name:"b",children:[]},{id:"functions-attach-tl",name:"tl",children:[]},{id:"functions-attach-bl",name:"bl",children:[]},{id:"functions-attach-tr",name:"tr",children:[]},{id:"functions-attach-br",name:"br",children:[]}]},{id:"functions-scripts",name:"Scripts",children:[{id:"functions-scripts-body",name:"body",children:[]}]},{id:"functions-limits",name:"Limits",children:[{id:"functions-limits-body",name:"body",children:[]},{id:"functions-limits-inline",name:"inline",children:[]}]}]}],body:{kind:"group",content:{name:"attach",title:"Attach",details:`<p>Subscript, superscripts, and limits.</p>
<p>Attachments can be displayed either as sub/superscripts, or limits. Typst
automatically decides which is more suitable depending on the base, but you
can also control this manually with the <code>scripts</code> and <code>limits</code> functions.</p>
<p>If you want the base to stretch to fit long top and bottom attachments (for
example, an arrow with text above it), use the <a href="/docs/reference/math/stretch/"><code>stretch</code></a>
function.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>i=0<span class="typ-punct">)</span><span class="typ-math-op">^</span>n a<span class="typ-math-op">_</span>i = 2<span class="typ-math-op">^</span><span class="typ-punct">(</span>1+i<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/7db9e6982ed6a9b863628ba9787b5c05.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax for attachments after the base: Use
the underscore (<code>_</code>) to indicate a subscript i.e. bottom attachment and the
hat (<code>^</code>) to indicate a superscript i.e. top attachment.</p>`,functions:[{path:["math"],name:"attach",title:"Attach",keywords:[],oneliner:"A base with optional attachments.",element:!0,contextual:!1,details:"<p>A base with optional attachments.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">attach</span><span class="typ-punct">(</span>
  <span class="typ-pol">Pi</span><span class="typ-punct">,</span> t<span class="typ-punct">:</span> <span class="typ-pol">alpha</span><span class="typ-punct">,</span> b<span class="typ-punct">:</span> <span class="typ-pol">beta</span><span class="typ-punct">,</span>
  tl<span class="typ-punct">:</span> 1<span class="typ-punct">,</span> tr<span class="typ-punct">:</span> 2+3<span class="typ-punct">,</span> bl<span class="typ-punct">:</span> 4+5<span class="typ-punct">,</span> br<span class="typ-punct">:</span> 6<span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/6d7ba7e73e0be9c4b0d3e31806bff4e2.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"base",details:"<p>The base to which things are attached.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"t",details:`<p>The top attachment, smartly positioned at top-right or above the base.</p>
<p>You can wrap the base in <code><span class="typ-func">limits</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> or <code><span class="typ-func">scripts</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> to override the
smart positioning.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"b",details:`<p>The bottom attachment, smartly positioned at the bottom-right or below
the base.</p>
<p>You can wrap the base in <code><span class="typ-func">limits</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> or <code><span class="typ-func">scripts</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> to override the
smart positioning.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"tl",details:"<p>The top-left attachment (before the base).</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"bl",details:"<p>The bottom-left attachment (before base).</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"tr",details:"<p>The top-right attachment (after the base).</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"br",details:"<p>The bottom-right attachment (after the base).</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"scripts",title:"Scripts",keywords:[],oneliner:"Forces a base to display attachments as scripts.",element:!0,contextual:!1,details:"<p>Forces a base to display attachments as scripts.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">scripts</span><span class="typ-punct">(</span><span class="typ-pol">sum</span><span class="typ-punct">)</span><span class="typ-math-op">_</span>1<span class="typ-math-op">^</span>2 <span class="typ-escape">!=</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span>1<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/6d67502ba812de1d9fa78bca1d733fb4.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The base to attach the scripts to.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"limits",title:"Limits",keywords:[],oneliner:"Forces a base to display attachments as limits.",element:!0,contextual:!1,details:"<p>Forces a base to display attachments as limits.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">limits</span><span class="typ-punct">(</span>A<span class="typ-punct">)</span><span class="typ-math-op">_</span>1<span class="typ-math-op">^</span>2 <span class="typ-escape">!=</span> A<span class="typ-math-op">_</span>1<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/f148f7187b9d54e87755265e61907b95.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The base to attach the limits to.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"inline",details:`<p>Whether to also force limits in inline equations.</p>
<p>When applying limits globally (e.g., through a show rule), it is
typically a good idea to disable this.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/binom/",title:"Binomial",description:"Documentation for the `binom` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-upper",name:"upper",children:[]},{id:"parameters-lower",name:"lower",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"binom",title:"Binomial",keywords:[],oneliner:"A binomial expression.",element:!0,contextual:!1,details:`<p>A binomial expression.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">binom</span><span class="typ-punct">(</span>n<span class="typ-punct">,</span> k<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">binom</span><span class="typ-punct">(</span>n<span class="typ-punct">,</span> k<span class="typ-math-op">_</span>1<span class="typ-punct">,</span> k<span class="typ-math-op">_</span>2<span class="typ-punct">,</span> k<span class="typ-math-op">_</span>3<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> k<span class="typ-math-op">_</span>m<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/bd415887e92568fec27b2bb33417e4bd.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"upper",details:"<p>The binomial's upper index.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"lower",details:"<p>The binomial's lower index.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/cancel/",title:"Cancel",description:"Documentation for the `cancel` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]},{id:"parameters-length",name:"length",children:[]},{id:"parameters-inverted",name:"inverted",children:[]},{id:"parameters-cross",name:"cross",children:[]},{id:"parameters-angle",name:"angle",children:[]},{id:"parameters-stroke",name:"stroke",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"cancel",title:"Cancel",keywords:[],oneliner:"Displays a diagonal line over a part of an equation.",element:!0,contextual:!1,details:`<p>Displays a diagonal line over a part of an equation.</p>
<p>This is commonly used to show the elimination of a term.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Here, we can simplify:
<span class="typ-math-delim">$</span> <span class="typ-punct">(</span>a <span class="typ-pol">dot</span> b <span class="typ-pol">dot</span> <span class="typ-func">cancel</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-op">/</span>
    <span class="typ-func">cancel</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/e18d844b6a5dfdda7d38cc7eb3a2aea0.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"body",details:"<p>The content over which the line should be placed.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"length",details:`<p>The length of the line, relative to the length of the diagonal spanning
the whole element being &quot;cancelled&quot;. A value of <code><span class="typ-num">100%</span></code> would then have
the line span precisely the element's diagonal.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> a + <span class="typ-func">cancel</span><span class="typ-punct">(</span>x<span class="typ-punct">,</span> length<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">200%</span><span class="typ-punct">)</span>
    <span class="typ-escape">-</span> <span class="typ-func">cancel</span><span class="typ-punct">(</span>x<span class="typ-punct">,</span> length<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">200%</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/3f91217aca4e762adcd724207c8ec191.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">100%</span> <span class="typ-op">+</span> <span class="typ-num">3pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inverted",details:`<p>Whether the cancel line should be inverted (flipped along the y-axis).
For the default angle setting, inverted means the cancel line
points to the top left instead of top right.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-punct">(</span>a <span class="typ-func">cancel</span><span class="typ-punct">(</span>(b + c)<span class="typ-punct">,</span> inverted<span class="typ-punct">:</span> <span class="typ-key">#</span><span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-op">/</span>
    <span class="typ-func">cancel</span><span class="typ-punct">(</span>b + c<span class="typ-punct">,</span> inverted<span class="typ-punct">:</span> <span class="typ-key">#</span><span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/8162c4ba220d2ae4001a200ece696366.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"cross",details:`<p>Whether two opposing cancel lines should be drawn, forming a cross over
the element. Overrides <code>inverted</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">cancel</span><span class="typ-punct">(</span><span class="typ-pol">Pi</span><span class="typ-punct">,</span> cross<span class="typ-punct">:</span> <span class="typ-key">#</span><span class="typ-key">true</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/529f2d5db1626cbc3d4ea20051a306e.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"angle",details:`<p>How much to rotate the cancel line.</p>
<ul>
<li>If given an angle, the line is rotated by that angle clockwise with
respect to the y-axis.</li>
<li>If <code><span class="typ-key">auto</span></code>, the line assumes the default angle; that is, along the
rising diagonal of the content box.</li>
<li>If given a function <code>angle =&gt; angle</code>, the line is rotated, with
respect to the y-axis, by the angle returned by that function. The
function receives the default angle as its input.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">cancel</span><span class="typ-punct">(</span><span class="typ-pol">Pi</span><span class="typ-punct">)</span>
  <span class="typ-func">cancel</span><span class="typ-punct">(</span><span class="typ-pol">Pi</span><span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">0deg</span><span class="typ-punct">)</span>
  <span class="typ-func">cancel</span><span class="typ-punct">(</span><span class="typ-pol">Pi</span><span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">45deg</span><span class="typ-punct">)</span>
  <span class="typ-func">cancel</span><span class="typ-punct">(</span><span class="typ-pol">Pi</span><span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">90deg</span><span class="typ-punct">)</span>
  <span class="typ-func">cancel</span><span class="typ-punct">(</span>1<span class="typ-math-op">/</span><span class="typ-punct">(</span>1+x<span class="typ-punct">)</span><span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span>a <span class="typ-op">=&gt;</span> a <span class="typ-op">+</span> <span class="typ-num">45deg</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-func">cancel</span><span class="typ-punct">(</span>1<span class="typ-math-op">/</span><span class="typ-punct">(</span>1+x<span class="typ-punct">)</span><span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span>a <span class="typ-op">=&gt;</span> a <span class="typ-op">+</span> <span class="typ-num">90deg</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/4e3786989d771d8725aeff4b4d4998e5.png" alt="Preview" /></div></div>`,types:["auto","angle","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:'<p>How to <a href="/docs/reference/visualize/stroke/">stroke</a> the cancel line.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">cancel</span><span class="typ-punct">(</span>
  <span class="typ-pol">sum</span> x<span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span>
    paint<span class="typ-punct">:</span> red<span class="typ-punct">,</span>
    thickness<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span><span class="typ-punct">,</span>
    dash<span class="typ-punct">:</span> <span class="typ-str">&quot;dashed&quot;</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/9385c3e94f62b4e593f8bca7d343892e.png" alt="Preview" /></div></div>`,types:["length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-num">0.5pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/cases/",title:"Cases",description:"Documentation for the `cases` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-delim",name:"delim",children:[]},{id:"parameters-reverse",name:"reverse",children:[]},{id:"parameters-gap",name:"gap",children:[]},{id:"parameters-children",name:"children",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"cases",title:"Cases",keywords:[],oneliner:"A case distinction.",element:!0,contextual:!1,details:`<p>A case distinction.</p>
<p>Content across different branches can be aligned with the <code>&amp;</code> symbol.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> f(x, y) <span class="typ-escape">:=</span> <span class="typ-func">cases</span><span class="typ-punct">(</span>
  1 <span class="typ-str">&quot;if&quot;</span> <span class="typ-punct">(</span>x <span class="typ-pol">dot</span> y<span class="typ-punct">)</span><span class="typ-math-op">/</span>2 <span class="typ-escape">&lt;=</span> 0<span class="typ-punct">,</span>
  2 <span class="typ-str">&quot;if&quot;</span> x <span class="typ-str">&quot;is even&quot;</span><span class="typ-punct">,</span>
  3 <span class="typ-str">&quot;if&quot;</span> x <span class="typ-pol">in</span> <span class="typ-pol">NN</span><span class="typ-punct">,</span>
  4 <span class="typ-str">&quot;else&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/52239d4e898a0de4f437de1cde1bb780.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"delim",details:`<p>The delimiter to use.</p>
<p>Can be a single character specifying the left delimiter, in which case
the right delimiter is inferred. Otherwise, can be an array containing a
left and a right delimiter.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">cases</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> x = <span class="typ-func">cases</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/77d5338c3ea51380c666921ae5ad0bb6.png" alt="Preview" /></div></div>`,types:["none","str","array","symbol"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-str">&quot;{&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;}&quot;</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"reverse",details:"<p>Whether the direction of cases should be reversed.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">cases</span><span class="typ-punct">(</span>reverse<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">cases</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> = x <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/858a9ff9764b2e090a174030d858d86a.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gap",details:"<p>The gap between branches.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">cases</span><span class="typ-punct">(</span>gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> x = <span class="typ-func">cases</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/80e32036e948445b3c37c1a9aff11e6c.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0.2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The branches of the case distinction.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/class/",title:"Class",description:"Documentation for the `class` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-class",name:"class",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"class",title:"Class",keywords:[],oneliner:"Forced use of a certain math class.",element:!0,contextual:!1,details:`<p>Forced use of a certain math class.</p>
<p>This is useful to treat certain symbols as if they were of a different
class, e.g. to make a symbol behave like a relation. The class of a symbol
defines the way it is laid out, including spacing around it, and how its
scripts are attached by default. Note that the latter can always be
overridden using <a href="/docs/reference/math/attach/#functions-limits"><code>limits</code></a> and <a href="/docs/reference/math/attach/#functions-scripts"><code>scripts</code></a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> loves <span class="typ-op">=</span> math<span class="typ-punct">.</span><span class="typ-func">class</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;relation&quot;</span><span class="typ-punct">,</span>
  sym<span class="typ-punct">.</span>suit<span class="typ-punct">.</span>heart<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-math-delim">$</span>x <span class="typ-pol">loves</span> y <span class="typ-pol">and</span> y <span class="typ-pol">loves</span> 5<span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/8d1ab5c391b0e05d144ec528cc9ffb55.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"class",details:"<p>The class to apply to the content.</p>",example:null,types:["str"],strings:[{string:"normal",details:"<p>The default class for non-special things.</p>"},{string:"punctuation",details:"<p>Punctuation, e.g. a comma.</p>"},{string:"opening",details:"<p>An opening delimiter, e.g. <code>(</code>.</p>"},{string:"closing",details:"<p>A closing delimiter, e.g. <code>)</code>.</p>"},{string:"fence",details:"<p>A delimiter that is the same on both sides, e.g. <code>|</code>.</p>"},{string:"large",details:"<p>A large operator like <code>sum</code>.</p>"},{string:"relation",details:"<p>A relation like <code>=</code> or <code>prec</code>.</p>"},{string:"unary",details:"<p>A unary operator like <code>not</code>.</p>"},{string:"binary",details:"<p>A binary operator like <code>times</code>.</p>"},{string:"vary",details:"<p>An operator that can be both unary or binary like <code>+</code>.</p>"}],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"body",details:"<p>The content to which the class is applied.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/equation/",title:"Equation",description:"Documentation for the `equation` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-block",name:"block",children:[]},{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-number-align",name:"number-align",children:[]},{id:"parameters-supplement",name:"supplement",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"equation",title:"Equation",keywords:[],oneliner:"A mathematical equation.",element:!0,contextual:!1,details:`<p>A mathematical equation.</p>
<p>Can be displayed inline with text or as a separate block.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;New Computer Modern&quot;</span><span class="typ-punct">)</span>

Let <span class="typ-math-delim">$</span>a<span class="typ-math-delim">$</span>, <span class="typ-math-delim">$</span>b<span class="typ-math-delim">$</span>, and <span class="typ-math-delim">$</span>c<span class="typ-math-delim">$</span> be the side
lengths of right-angled triangle.
Then, we know that:
<span class="typ-math-delim">$</span> a<span class="typ-math-op">^</span>2 + b<span class="typ-math-op">^</span>2 = c<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>

Prove by induction:
<span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>k=1<span class="typ-punct">)</span><span class="typ-math-op">^</span>n k = <span class="typ-punct">(</span>n(n+1)<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/f85420994deef90142c523d1079448f5.png" alt="Preview" /></div></div>
<p>By default, block-level equations will not break across pages. This can be
changed through <code><span class="typ-key">show</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>breakable<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code>.</p>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: Write mathematical markup within
dollar signs to create an equation. Starting and ending the equation with at
least one space lifts it into a separate block that is centered
horizontally. For more details about math syntax, see the
<a href="/docs/reference/math/">main math page</a>.</p>`,example:null,self:!1,params:[{name:"block",details:"<p>Whether the equation is displayed as a separate block.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"numbering",details:'<p>How to <a href="/docs/reference/model/numbering/">number</a> block-level equations.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">)</span>

We define:
<span class="typ-math-delim">$</span> <span class="typ-pol">phi</span><span class="typ-punct">.</span><span class="typ-pol">alt</span> <span class="typ-escape">:=</span> <span class="typ-punct">(</span>1 + <span class="typ-func">sqrt</span><span class="typ-punct">(</span>5<span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2 <span class="typ-math-delim">$</span> <span class="typ-label">&lt;ratio&gt;</span>

With <span class="typ-ref">@ratio</span>, we get:
<span class="typ-math-delim">$</span> F<span class="typ-math-op">_</span>n = <span class="typ-func">floor</span><span class="typ-punct">(</span>1 <span class="typ-math-op">/</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>5<span class="typ-punct">)</span> <span class="typ-pol">phi</span><span class="typ-punct">.</span><span class="typ-pol">alt</span><span class="typ-math-op">^</span>n<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/f50ca3e9392b864c2664842fa34772a0.png" alt="Preview" /></div></div>`,types:["none","str","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-align",details:`<p>The alignment of the equation numbering.</p>
<p>By default, the alignment is <code>end <span class="typ-op">+</span> horizon</code>. For the horizontal
component, you can use <code>right</code>, <code>left</code>, or <code>start</code> and <code>end</code>
of the text direction; for the vertical component, you can use
<code>top</code>, <code>horizon</code>, or <code>bottom</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">,</span> number-align<span class="typ-punct">:</span> bottom<span class="typ-punct">)</span>

We can calculate:
<span class="typ-math-delim">$</span> E <span class="typ-math-op">&amp;</span>= <span class="typ-func">sqrt</span><span class="typ-punct">(</span>m<span class="typ-math-op">_</span>0<span class="typ-math-op">^</span>2 + p<span class="typ-math-op">^</span>2<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
    <span class="typ-math-op">&amp;</span><span class="typ-pol">approx</span> 125 <span class="typ-str">&quot;GeV&quot;</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/bf7b8a2fa9ef0bb1f24d92750abbd4d6.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>end <span class="typ-op">+</span> horizon</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"supplement",details:`<p>A supplement for the equation.</p>
<p>For references to equations, this is added before the referenced number.</p>
<p>If a function is specified, it is passed the referenced equation and
should return content.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(1)&quot;</span><span class="typ-punct">,</span> supplement<span class="typ-punct">:</span> <span class="typ-punct">[</span>Eq.<span class="typ-punct">]</span><span class="typ-punct">)</span>

We define:
<span class="typ-math-delim">$</span> <span class="typ-pol">phi</span><span class="typ-punct">.</span><span class="typ-pol">alt</span> <span class="typ-escape">:=</span> <span class="typ-punct">(</span>1 + <span class="typ-func">sqrt</span><span class="typ-punct">(</span>5<span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2 <span class="typ-math-delim">$</span> <span class="typ-label">&lt;ratio&gt;</span>

With <span class="typ-ref">@ratio</span>, we get:
<span class="typ-math-delim">$</span> F<span class="typ-math-op">_</span>n = <span class="typ-func">floor</span><span class="typ-punct">(</span>1 <span class="typ-math-op">/</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>5<span class="typ-punct">)</span> <span class="typ-pol">phi</span><span class="typ-punct">.</span><span class="typ-pol">alt</span><span class="typ-math-op">^</span>n<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/6d8dddbb4d7f29223086bace8e3525c.png" alt="Preview" /></div></div>`,types:["none","auto","content","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The contents of the equation.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/frac/",title:"Fraction",description:"Documentation for the `frac` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-num",name:"num",children:[]},{id:"parameters-denom",name:"denom",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"frac",title:"Fraction",keywords:[],oneliner:"A mathematical fraction.",element:!0,contextual:!1,details:`<p>A mathematical fraction.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> 1<span class="typ-math-op">/</span>2 &lt; <span class="typ-punct">(</span>x+1<span class="typ-punct">)</span><span class="typ-math-op">/</span>2 <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-punct">(</span>(x+1)<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2 = <span class="typ-func">frac</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span> b<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/9e495df9d3d787e668001890af87706e.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function also has dedicated syntax: Use a slash to turn neighbouring
expressions into a fraction. Multiple atoms can be grouped into a single
expression using round grouping parenthesis. Such parentheses are removed
from the output, but you can nest multiple to force them.</p>`,example:null,self:!1,params:[{name:"num",details:"<p>The fraction's numerator.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"denom",details:"<p>The fraction's denominator.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/lr",title:"Left/Right",description:"Documentation for the lr functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-lr",name:"Left/Right",children:[{id:"functions-lr-size",name:"size",children:[]},{id:"functions-lr-body",name:"body",children:[]}]},{id:"functions-mid",name:"Mid",children:[{id:"functions-mid-body",name:"body",children:[]}]},{id:"functions-abs",name:"Abs",children:[{id:"functions-abs-size",name:"size",children:[]},{id:"functions-abs-body",name:"body",children:[]}]},{id:"functions-norm",name:"Norm",children:[{id:"functions-norm-size",name:"size",children:[]},{id:"functions-norm-body",name:"body",children:[]}]},{id:"functions-floor",name:"Floor",children:[{id:"functions-floor-size",name:"size",children:[]},{id:"functions-floor-body",name:"body",children:[]}]},{id:"functions-ceil",name:"Ceil",children:[{id:"functions-ceil-size",name:"size",children:[]},{id:"functions-ceil-body",name:"body",children:[]}]},{id:"functions-round",name:"Round",children:[{id:"functions-round-size",name:"size",children:[]},{id:"functions-round-body",name:"body",children:[]}]}]}],body:{kind:"group",content:{name:"lr",title:"Left/Right",details:`<p>Delimiter matching.</p>
<p>The <code>lr</code> function allows you to match two delimiters and scale them with the
content they contain. While this also happens automatically for delimiters
that match syntactically, <code>lr</code> allows you to match two arbitrary delimiters
and control their size exactly. Apart from the <code>lr</code> function, Typst provides
a few more functions that create delimiter pairings for absolute, ceiled,
and floored values as well as norms.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> [a, b<span class="typ-math-op">/</span>2] <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">lr</span><span class="typ-punct">(</span>]<span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>x=1<span class="typ-punct">)</span><span class="typ-math-op">^</span>n]<span class="typ-punct">,</span> size<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">50%</span><span class="typ-punct">)</span> x <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">abs</span><span class="typ-punct">(</span><span class="typ-punct">(</span>x + y<span class="typ-punct">)</span> <span class="typ-math-op">/</span> 2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/8aa9825443628aeb1d4171ee97bab6cd.png" alt="Preview" /></div></div>`,functions:[{path:["math"],name:"lr",title:"Left/Right",keywords:[],oneliner:"Scales delimiters.",element:!0,contextual:!1,details:`<p>Scales delimiters.</p>
<p>While matched delimiters scale by default, this can be used to scale
unmatched delimiters and to control the delimiter scaling more precisely.</p>`,example:null,self:!1,params:[{name:"size",details:"<p>The size of the brackets, relative to the height of the wrapped content.</p>",example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The delimited content, including the delimiters.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"mid",title:"Mid",keywords:[],oneliner:"Scales delimiters vertically to the nearest surrounding `{lr()}` group.",element:!0,contextual:!1,details:'<p>Scales delimiters vertically to the nearest surrounding <code><span class="typ-func">lr</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> group.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> { x <span class="typ-func">mid</span><span class="typ-punct">(</span>|<span class="typ-punct">)</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>i=1<span class="typ-punct">)</span><span class="typ-math-op">^</span>n w<span class="typ-math-op">_</span>i|f<span class="typ-math-op">_</span>i (x)| &lt; 1 } <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/70e46814c063dbb7b575d31abe852da8.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to be scaled.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"abs",title:"Abs",keywords:[],oneliner:"Takes the absolute value of an expression.",element:!1,contextual:!1,details:"<p>Takes the absolute value of an expression.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">abs</span><span class="typ-punct">(</span>x<span class="typ-math-op">/</span>2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/452b56cb9268fc89205416249c95a065.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"size",details:"<p>The size of the brackets, relative to the height of the wrapped content.</p>",example:null,types:["auto","relative"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"body",details:"<p>The expression to take the absolute value of.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"norm",title:"Norm",keywords:[],oneliner:"Takes the norm of an expression.",element:!1,contextual:!1,details:"<p>Takes the norm of an expression.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">norm</span><span class="typ-punct">(</span>x<span class="typ-math-op">/</span>2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/359b09d5b247171184b13d0dc21d0e25.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"size",details:"<p>The size of the brackets, relative to the height of the wrapped content.</p>",example:null,types:["auto","relative"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"body",details:"<p>The expression to take the norm of.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"floor",title:"Floor",keywords:[],oneliner:"Floors an expression.",element:!1,contextual:!1,details:"<p>Floors an expression.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">floor</span><span class="typ-punct">(</span>x<span class="typ-math-op">/</span>2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/4ee43ced39aeaf87f1785d162a21caae.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"size",details:"<p>The size of the brackets, relative to the height of the wrapped content.</p>",example:null,types:["auto","relative"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"body",details:"<p>The expression to floor.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"ceil",title:"Ceil",keywords:[],oneliner:"Ceils an expression.",element:!1,contextual:!1,details:"<p>Ceils an expression.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">ceil</span><span class="typ-punct">(</span>x<span class="typ-math-op">/</span>2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/7367fdc3d646145b60dd3f16ca4fef42.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"size",details:"<p>The size of the brackets, relative to the height of the wrapped content.</p>",example:null,types:["auto","relative"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"body",details:"<p>The expression to ceil.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"round",title:"Round",keywords:[],oneliner:"Rounds an expression.",element:!1,contextual:!1,details:"<p>Rounds an expression.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">round</span><span class="typ-punct">(</span>x<span class="typ-math-op">/</span>2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/f97a1eedc09d32b90418507d4a36af48.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"size",details:"<p>The size of the brackets, relative to the height of the wrapped content.</p>",example:null,types:["auto","relative"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"body",details:"<p>The expression to round.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/mat/",title:"Matrix",description:"Documentation for the `mat` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-delim",name:"delim",children:[]},{id:"parameters-align",name:"align",children:[]},{id:"parameters-augment",name:"augment",children:[]},{id:"parameters-gap",name:"gap",children:[]},{id:"parameters-row-gap",name:"row-gap",children:[]},{id:"parameters-column-gap",name:"column-gap",children:[]},{id:"parameters-rows",name:"rows",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"mat",title:"Matrix",keywords:[],oneliner:"A matrix.",element:!0,contextual:!1,details:`<p>A matrix.</p>
<p>The elements of a row should be separated by commas, while the rows
themselves should be separated by semicolons. The semicolon syntax merges
preceding arguments separated by commas into an array. You can also use this
special syntax of math function calls to define custom functions that take
2D data.</p>
<p>Content in cells can be aligned with the <a href="/docs/reference/math/mat/#parameters-align"><code>align</code></a>
parameter, or content in cells that are in the same row can be aligned with
the <code>&amp;</code> symbol.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>
  1<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
  2<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
  <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">down</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">;</span>
  10<span class="typ-punct">,</span> 10<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/e74d575aa2545eeb15ec59ff988d0e05.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"delim",details:`<p>The delimiter to use.</p>
<p>Can be a single character specifying the left delimiter, in which case
the right delimiter is inferred. Otherwise, can be an array containing a
left and a right delimiter.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/390ee28bba09d17d8813c75c05a112ad.png" alt="Preview" /></div></div>`,types:["none","str","array","symbol"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-str">&quot;(&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;)&quot;</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:"<p>The horizontal alignment that each cell should have.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> right<span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span><span class="typ-escape">-</span>1<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> 1<span class="typ-punct">,</span> <span class="typ-escape">-</span>1<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> 1<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> <span class="typ-escape">-</span>1<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/5e9babffc123e1f2df033822e4989d1a.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:"<code>center</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"augment",details:`<p>Draws augmentation lines in a matrix.</p>
<ul>
<li><code><span class="typ-key">none</span></code>: No lines are drawn.</li>
<li>A single number: A vertical augmentation line is drawn
after the specified column number. Negative numbers start from the end.</li>
<li>A dictionary: With a dictionary, multiple augmentation lines can be
drawn both horizontally and vertically. Additionally, the style of the
lines can be set. The dictionary can contain the following keys:
<ul>
<li><code>hline</code>: The offsets at which horizontal lines should be drawn.
For example, an offset of <code>2</code> would result in a horizontal line
being drawn after the second row of the matrix. Accepts either an
integer for a single line, or an array of integers
for multiple lines. Like for a single number, negative numbers start from the end.</li>
<li><code>vline</code>: The offsets at which vertical lines should be drawn.
For example, an offset of <code>2</code> would result in a vertical line being
drawn after the second column of the matrix. Accepts either an
integer for a single line, or an array of integers
for multiple lines. Like for a single number, negative numbers start from the end.</li>
<li><code>stroke</code>: How to <a href="/docs/reference/visualize/stroke/">stroke</a> the line. If set to <code><span class="typ-key">auto</span></code>,
takes on a thickness of 0.05em and square line caps.</li>
</ul>
</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> augment<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">2</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-comment">// Equivalent to:</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> 0<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> augment<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/276deb255459319afd7a13f7c6d62251.png" alt="Preview" /></div></div><div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>0<span class="typ-punct">,</span> 0<span class="typ-punct">,</span> 0<span class="typ-punct">;</span> 1<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 1<span class="typ-punct">;</span> augment<span class="typ-punct">:</span> <span class="typ-punct">#</span><span class="typ-punct">(</span>hline<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> green<span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d444e90cc4f92f196661ff60fd104dc2.png" alt="Preview" /></div></div>`,types:["none","int","dictionary"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gap",details:`<p>The gap between rows and columns.</p>
<p>This is a shorthand to set <code>row-gap</code> and <code>column-gap</code> to the same value.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/576cf65f40ce5ae66b32d06f538d412d.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"row-gap",details:"<p>The gap between rows.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>row-gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/3605a91de9bb7d31fb87d712e42d6ba3.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0.2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"column-gap",details:"<p>The gap between columns.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>column-gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/c0778bed9e814c3619d88ac62b84369.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0.5em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"rows",details:"<p>An array of arrays with the rows of the matrix.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> data <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">,</span> <span class="typ-num">5</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> matrix <span class="typ-op">=</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span><span class="typ-op">..</span>data<span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> v <span class="typ-escape">:=</span> <span class="typ-pol">matrix</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/9d12fc1b238a0eeed13df9fdc46ee8f3.png" alt="Preview" /></div></div>`,types:["array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/primes/",title:"Primes",description:"Documentation for the `primes` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"syntax",name:"Syntax",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-count",name:"count",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"primes",title:"Primes",keywords:[],oneliner:"Grouped primes.",element:!0,contextual:!1,details:`<p>Grouped primes.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> a<span class="typ-math-op">&#39;</span><span class="typ-math-op">&#39;</span><span class="typ-math-op">&#39;</span><span class="typ-math-op">_</span>b = a<span class="typ-math-op">^</span><span class="typ-math-op">&#39;</span><span class="typ-math-op">&#39;</span><span class="typ-math-op">&#39;</span><span class="typ-math-op">_</span>b <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/bdf7efe8dc599962a494862cafeacf1f.png" alt="Preview" /></div></div>
<h2 id="syntax">Syntax</h2>
<p>This function has dedicated syntax: use apostrophes instead of primes. They
will automatically attach to the previous element, moving superscripts to
the next level.</p>`,example:null,self:!1,params:[{name:"count",details:"<p>The number of grouped primes.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/roots",title:"Roots",description:"Documentation for the roots functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-root",name:"Root",children:[{id:"functions-root-index",name:"index",children:[]},{id:"functions-root-radicand",name:"radicand",children:[]}]},{id:"functions-sqrt",name:"Square Root",children:[{id:"functions-sqrt-radicand",name:"radicand",children:[]}]}]}],body:{kind:"group",content:{name:"roots",title:"Roots",details:`<p>Square and non-square roots.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>3 <span class="typ-escape">-</span> 2 <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span><span class="typ-punct">)</span> = <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span> <span class="typ-escape">-</span> 1 <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">root</span><span class="typ-punct">(</span>3<span class="typ-punct">,</span> x<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/8f551005c3817a0a21ccdd9bb01aef51.png" alt="Preview" /></div></div>`,functions:[{path:["math"],name:"root",title:"Root",keywords:[],oneliner:"A general root.",element:!0,contextual:!1,details:"<p>A general root.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">root</span><span class="typ-punct">(</span>3<span class="typ-punct">,</span> x<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/25500d6f45885cf65c0b0ef3222955af.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"index",details:"<p>Which root of the radicand to take.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"radicand",details:"<p>The expression to take the root of.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"sqrt",title:"Square Root",keywords:[],oneliner:"A square root.",element:!1,contextual:!1,details:"<p>A square root.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">sqrt</span><span class="typ-punct">(</span>3 <span class="typ-escape">-</span> 2 <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span><span class="typ-punct">)</span> = <span class="typ-func">sqrt</span><span class="typ-punct">(</span>2<span class="typ-punct">)</span> <span class="typ-escape">-</span> 1 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/19ccffe42623b482ad12c0823fb25891.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"radicand",details:"<p>The expression to take the square root of.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/sizes",title:"Sizes",description:"Documentation for the sizes functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-display",name:"Display Size",children:[{id:"functions-display-body",name:"body",children:[]},{id:"functions-display-cramped",name:"cramped",children:[]}]},{id:"functions-inline",name:"Inline Size",children:[{id:"functions-inline-body",name:"body",children:[]},{id:"functions-inline-cramped",name:"cramped",children:[]}]},{id:"functions-script",name:"Script Size",children:[{id:"functions-script-body",name:"body",children:[]},{id:"functions-script-cramped",name:"cramped",children:[]}]},{id:"functions-sscript",name:"Script-Script Size",children:[{id:"functions-sscript-body",name:"body",children:[]},{id:"functions-sscript-cramped",name:"cramped",children:[]}]}]}],body:{kind:"group",content:{name:"sizes",title:"Sizes",details:`<p>Forced size styles for expressions within formulas.</p>
<p>These functions allow manual configuration of the size of equation elements
to make them look as in a display/inline equation or as if used in a root or
sub/superscripts.</p>`,functions:[{path:["math"],name:"display",title:"Display Size",keywords:["displaystyle"],oneliner:"Forced display style in math.",element:!1,contextual:!1,details:`<p>Forced display style in math.</p>
<p>This is the normal size for block equations.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2 = <span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2<span class="typ-punct">)</span><span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/85a8c8b0362de798b6e472e353a684e3.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to size.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"cramped",details:`<p>Whether to impose a height restriction for exponents, like regular sub-
and superscripts do.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"inline",title:"Inline Size",keywords:["textstyle"],oneliner:"Forced inline (text) style in math.",element:!1,contextual:!1,details:`<p>Forced inline (text) style in math.</p>
<p>This is the normal size for inline equations.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2
    = <span class="typ-func">inline</span><span class="typ-punct">(</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/e0524066078d3bcdffd4e78d50eeffef.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to size.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"cramped",details:`<p>Whether to impose a height restriction for exponents, like regular sub-
and superscripts do.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"script",title:"Script Size",keywords:["scriptstyle"],oneliner:"Forced script style in math.",element:!1,contextual:!1,details:`<p>Forced script style in math.</p>
<p>This is the smaller size used in powers or sub- or superscripts.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2 = <span class="typ-func">script</span><span class="typ-punct">(</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2<span class="typ-punct">)</span><span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/9c1f14fabf44b54bdfc1ebfe9e487b95.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to size.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"cramped",details:`<p>Whether to impose a height restriction for exponents, like regular sub-
and superscripts do.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"sscript",title:"Script-Script Size",keywords:["scriptscriptstyle"],oneliner:"Forced second script style in math.",element:!1,contextual:!1,details:`<p>Forced second script style in math.</p>
<p>This is the smallest size, used in second-level sub- and superscripts
(script of the script).</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2 = <span class="typ-func">sscript</span><span class="typ-punct">(</span><span class="typ-pol">sum</span><span class="typ-math-op">_</span>i x<span class="typ-math-op">_</span>i<span class="typ-math-op">/</span>2<span class="typ-punct">)</span><span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/519f8ffe0fe634a4e1dacfe6f37850c.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to size.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"cramped",details:`<p>Whether to impose a height restriction for exponents, like regular sub-
and superscripts do.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/stretch/",title:"Stretch",description:"Documentation for the `stretch` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]},{id:"parameters-size",name:"size",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"stretch",title:"Stretch",keywords:[],oneliner:"Stretches a glyph.",element:!0,contextual:!1,details:`<p>Stretches a glyph.</p>
<p>This function can also be used to automatically stretch the base of an
attachment, so that it fits the top and bottom attachments.</p>
<p>Note that only some glyphs can be stretched, and which ones can depend on
the math font being used. However, most math fonts are the same in this
regard.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> H <span class="typ-func">stretch</span><span class="typ-punct">(</span>=<span class="typ-punct">)</span><span class="typ-math-op">^</span><span class="typ-str">&quot;define&quot;</span> U + p V <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> f : X <span class="typ-func">stretch</span><span class="typ-punct">(</span><span class="typ-escape">-&gt;&gt;</span><span class="typ-punct">,</span> size<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">150%</span><span class="typ-punct">)</span><span class="typ-math-op">_</span><span class="typ-str">&quot;surjective&quot;</span> Y <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> x <span class="typ-func">stretch</span><span class="typ-punct">(</span><span class="typ-pol">harpoons</span><span class="typ-punct">.</span><span class="typ-pol">ltrb</span><span class="typ-punct">,</span> size<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">3em</span><span class="typ-punct">)</span> y
    <span class="typ-func">stretch</span><span class="typ-punct">(</span><span class="typ-escape">\\[</span><span class="typ-punct">,</span> size<span class="typ-punct">:</span> <span class="typ-num">#</span><span class="typ-num">150%</span><span class="typ-punct">)</span> z <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/6aab0442ecd710411ea2074f0912efa7.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"body",details:"<p>The glyph to stretch.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"size",details:`<p>The size to stretch to, relative to the maximum size of the glyph and
its attachments.</p>`,example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/styles",title:"Styles",description:"Documentation for the styles functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-upright",name:"Upright",children:[{id:"functions-upright-body",name:"body",children:[]}]},{id:"functions-italic",name:"Italic",children:[{id:"functions-italic-body",name:"body",children:[]}]},{id:"functions-bold",name:"Bold",children:[{id:"functions-bold-body",name:"body",children:[]}]}]}],body:{kind:"group",content:{name:"styles",title:"Styles",details:'<p>Alternate letterforms within formulas.</p>\n<p>These functions are distinct from the <a href="/docs/reference/text/text/" title="`text`"><code>text</code></a> function because math fonts\ncontain multiple variants of each letter.</p>',functions:[{path:["math"],name:"upright",title:"Upright",keywords:["mathup"],oneliner:"Upright (non-italic) font style in math.",element:!1,contextual:!1,details:"<p>Upright (non-italic) font style in math.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">upright</span><span class="typ-punct">(</span>A<span class="typ-punct">)</span> <span class="typ-escape">!=</span> A <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/8e44eb0e28ab1d00a9b2e83377f7eb06.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"italic",title:"Italic",keywords:["mathit"],oneliner:"Italic font style in math.",element:!1,contextual:!1,details:`<p>Italic font style in math.</p>
<p>For roman letters and greek lowercase letters, this is already the default.</p>`,example:null,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"bold",title:"Bold",keywords:["mathbf"],oneliner:"Bold font style in math.",element:!1,contextual:!1,details:"<p>Bold font style in math.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">bold</span><span class="typ-punct">(</span>A<span class="typ-punct">)</span> <span class="typ-escape">:=</span> B<span class="typ-math-op">^</span>+ <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/5857cac780625d932453ca2e4a8aebc7.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/op/",title:"Text Operator",description:"Documentation for the `op` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"predefined",name:"Predefined",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-text",name:"text",children:[]},{id:"parameters-limits",name:"limits",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"op",title:"Text Operator",keywords:[],oneliner:"A text operator in an equation.",element:!0,contextual:!1,details:`<p>A text operator in an equation.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-pol">tan</span> x = <span class="typ-punct">(</span><span class="typ-pol">sin</span> x<span class="typ-punct">)</span><span class="typ-math-op">/</span><span class="typ-punct">(</span><span class="typ-pol">cos</span> x<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">op</span><span class="typ-punct">(</span><span class="typ-str">&quot;custom&quot;</span><span class="typ-punct">,</span>
     limits<span class="typ-punct">:</span> <span class="typ-key">#</span><span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>n<span class="typ-escape">-&gt;</span><span class="typ-pol">oo</span><span class="typ-punct">)</span> n <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/6fc9334dca8cecdd2c0b619d7ae48ee7.png" alt="Preview" /></div></div>
<h2 id="predefined">Predefined Operators</h2>
<p>Typst predefines the operators <code>arccos</code>, <code>arcsin</code>, <code>arctan</code>, <code>arg</code>, <code>cos</code>,
<code>cosh</code>, <code>cot</code>, <code>coth</code>, <code>csc</code>, <code>csch</code>, <code>ctg</code>, <code>deg</code>, <code>det</code>, <code>dim</code>, <code>exp</code>,
<code>gcd</code>, <code>hom</code>, <code>id</code>, <code>im</code>, <code>inf</code>, <code>ker</code>, <code>lg</code>, <code>lim</code>, <code>liminf</code>, <code>limsup</code>,
<code>ln</code>, <code>log</code>, <code>max</code>, <code>min</code>, <code>mod</code>, <code>Pr</code>, <code>sec</code>, <code>sech</code>, <code>sin</code>, <code>sinc</code>,
<code>sinh</code>, <code>sup</code>, <code>tan</code>, <code>tanh</code>, <code>tg</code> and <code>tr</code>.</p>`,example:null,self:!1,params:[{name:"text",details:"<p>The operator's text.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"limits",details:"<p>Whether the operator should show attachments as limits in display mode.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/math/underover",title:"Under/Over",description:"Documentation for the underover functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-underline",name:"Underline",children:[{id:"functions-underline-body",name:"body",children:[]}]},{id:"functions-overline",name:"Overline",children:[{id:"functions-overline-body",name:"body",children:[]}]},{id:"functions-underbrace",name:"Underbrace",children:[{id:"functions-underbrace-body",name:"body",children:[]},{id:"functions-underbrace-annotation",name:"annotation",children:[]}]},{id:"functions-overbrace",name:"Overbrace",children:[{id:"functions-overbrace-body",name:"body",children:[]},{id:"functions-overbrace-annotation",name:"annotation",children:[]}]},{id:"functions-underbracket",name:"Underbracket",children:[{id:"functions-underbracket-body",name:"body",children:[]},{id:"functions-underbracket-annotation",name:"annotation",children:[]}]},{id:"functions-overbracket",name:"Overbracket",children:[{id:"functions-overbracket-body",name:"body",children:[]},{id:"functions-overbracket-annotation",name:"annotation",children:[]}]},{id:"functions-underparen",name:"Underparen",children:[{id:"functions-underparen-body",name:"body",children:[]},{id:"functions-underparen-annotation",name:"annotation",children:[]}]},{id:"functions-overparen",name:"Overparen",children:[{id:"functions-overparen-body",name:"body",children:[]},{id:"functions-overparen-annotation",name:"annotation",children:[]}]},{id:"functions-undershell",name:"Undershell",children:[{id:"functions-undershell-body",name:"body",children:[]},{id:"functions-undershell-annotation",name:"annotation",children:[]}]},{id:"functions-overshell",name:"Overshell",children:[{id:"functions-overshell-body",name:"body",children:[]},{id:"functions-overshell-annotation",name:"annotation",children:[]}]}]}],body:{kind:"group",content:{name:"underover",title:"Under/Over",details:`<p>Delimiters above or below parts of an equation.</p>
<p>The braces and brackets further allow you to add an optional annotation
below or above themselves.</p>`,functions:[{path:["math"],name:"underline",title:"Underline",keywords:[],oneliner:"A horizontal line under content.",element:!0,contextual:!1,details:"<p>A horizontal line under content.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">underline</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/cf851369b5248b2c7425430514adfcbe.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content above the line.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"overline",title:"Overline",keywords:[],oneliner:"A horizontal line over content.",element:!0,contextual:!1,details:"<p>A horizontal line over content.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">overline</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/8f02ff4760c10dd1eb5218712c66e063.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content below the line.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"underbrace",title:"Underbrace",keywords:[],oneliner:"A horizontal brace under content, with an optional annotation below.",element:!0,contextual:!1,details:"<p>A horizontal brace under content, with an optional annotation below.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">underbrace</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/3107f98ddee411e0c072e6462474a2f8.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content above the brace.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content below the brace.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"overbrace",title:"Overbrace",keywords:[],oneliner:"A horizontal brace over content, with an optional annotation above.",element:!0,contextual:!1,details:"<p>A horizontal brace over content, with an optional annotation above.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">overbrace</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/87c55ac6e44aa2ed3e2b20d2b9f4204b.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content below the brace.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content above the brace.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"underbracket",title:"Underbracket",keywords:[],oneliner:"A horizontal bracket under content, with an optional annotation below.",element:!0,contextual:!1,details:"<p>A horizontal bracket under content, with an optional annotation below.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">underbracket</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d2360a12df0211c9c6363c3091fd2530.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content above the bracket.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content below the bracket.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"overbracket",title:"Overbracket",keywords:[],oneliner:"A horizontal bracket over content, with an optional annotation above.",element:!0,contextual:!1,details:"<p>A horizontal bracket over content, with an optional annotation above.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">overbracket</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/3511f7d0e0c889a8a49d762a6f51e7c5.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content below the bracket.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content above the bracket.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"underparen",title:"Underparen",keywords:[],oneliner:"A horizontal parenthesis under content, with an optional annotation below.",element:!0,contextual:!1,details:"<p>A horizontal parenthesis under content, with an optional annotation below.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">underparen</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/c547422bfb4de64d22f2e0118cdae900.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content above the parenthesis.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content below the parenthesis.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"overparen",title:"Overparen",keywords:[],oneliner:"A horizontal parenthesis over content, with an optional annotation above.",element:!0,contextual:!1,details:"<p>A horizontal parenthesis over content, with an optional annotation above.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">overparen</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d879f12a41df31e91f68511fee32cf2b.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content below the parenthesis.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content above the parenthesis.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"undershell",title:"Undershell",keywords:[],oneliner:"A horizontal tortoise shell bracket under content, with an optional annotation below.",element:!0,contextual:!1,details:"<p>A horizontal tortoise shell bracket under content, with an optional annotation below.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">undershell</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/aa6d4a44ae683f129d543a4e8b5d5b8c.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content above the tortoise shell bracket.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content below the tortoise shell bracket.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["math"],name:"overshell",title:"Overshell",keywords:[],oneliner:"A horizontal tortoise shell bracket over content, with an optional annotation above.",element:!0,contextual:!1,details:"<p>A horizontal tortoise shell bracket over content, with an optional annotation above.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">overshell</span><span class="typ-punct">(</span>1 + 2 + <span class="typ-escape">...</span> + 5<span class="typ-punct">,</span> <span class="typ-str">&quot;numbers&quot;</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/571363167df28d24cac9d2bffabb8916.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content below the tortoise shell bracket.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"annotation",details:"<p>The optional content above the tortoise shell bracket.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/variants",title:"Variants",description:"Documentation for the variants functions.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"functions",name:"Functions",children:[{id:"functions-serif",name:"Serif",children:[{id:"functions-serif-body",name:"body",children:[]}]},{id:"functions-sans",name:"Sans Serif",children:[{id:"functions-sans-body",name:"body",children:[]}]},{id:"functions-frak",name:"Fraktur",children:[{id:"functions-frak-body",name:"body",children:[]}]},{id:"functions-mono",name:"Monospace",children:[{id:"functions-mono-body",name:"body",children:[]}]},{id:"functions-bb",name:"Blackboard Bold",children:[{id:"functions-bb-body",name:"body",children:[]}]},{id:"functions-cal",name:"Calligraphic",children:[{id:"functions-cal-body",name:"body",children:[]}]}]}],body:{kind:"group",content:{name:"variants",title:"Variants",details:'<p>Alternate typefaces within formulas.</p>\n<p>These functions are distinct from the <a href="/docs/reference/text/text/" title="`text`"><code>text</code></a> function because math fonts\ncontain multiple variants of each letter.</p>',functions:[{path:["math"],name:"serif",title:"Serif",keywords:["mathrm"],oneliner:"Serif (roman) font style in math.",element:!1,contextual:!1,details:`<p>Serif (roman) font style in math.</p>
<p>This is already the default.</p>`,example:null,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"sans",title:"Sans Serif",keywords:["mathsf"],oneliner:"Sans-serif font style in math.",element:!1,contextual:!1,details:"<p>Sans-serif font style in math.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">sans</span><span class="typ-punct">(</span>A B C<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/90d0f0a60e9a0a2b045eeae0e807893a.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"frak",title:"Fraktur",keywords:["mathfrak"],oneliner:"Fraktur font style in math.",element:!1,contextual:!1,details:"<p>Fraktur font style in math.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">frak</span><span class="typ-punct">(</span>P<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/7f8ce7590d2735c214c90ef60c27ad37.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"mono",title:"Monospace",keywords:["mathtt"],oneliner:"Monospace font style in math.",element:!1,contextual:!1,details:"<p>Monospace font style in math.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mono</span><span class="typ-punct">(</span>x + y = z<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/b66746902b168a0785bfe51f636df84e.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"bb",title:"Blackboard Bold",keywords:["mathbb"],oneliner:"Blackboard bold (double-struck) font style in math.",element:!1,contextual:!1,details:`<p>Blackboard bold (double-struck) font style in math.</p>
<p>For uppercase latin letters, blackboard bold is additionally available
through <a href="/docs/reference/symbols/sym/">symbols</a> of the form <code>NN</code> and <code>RR</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">bb</span><span class="typ-punct">(</span>b<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> <span class="typ-func">bb</span><span class="typ-punct">(</span>N<span class="typ-punct">)</span> = <span class="typ-pol">NN</span> <span class="typ-math-delim">$</span>
<span class="typ-math-delim">$</span> f: <span class="typ-pol">NN</span> <span class="typ-escape">-&gt;</span> <span class="typ-pol">RR</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d1ecf2c542d9194d44d783034e359321.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["math"],name:"cal",title:"Calligraphic",keywords:["mathcal","mathscr"],oneliner:"Calligraphic font style in math.",element:!1,contextual:!1,details:"<p>Calligraphic font style in math.</p>",example:`<div class="previewed-code"><pre><code>Let <span class="typ-math-delim">$</span><span class="typ-func">cal</span><span class="typ-punct">(</span>P<span class="typ-punct">)</span><span class="typ-math-delim">$</span> be the set of <span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/94270dc8a39cdbb81ac09fea9be81d49.png" alt="Preview" /></div></div>
<p>This corresponds both to LaTeX's <code>\\mathcal</code> and <code>\\mathscr</code> as both of these
styles share the same Unicode codepoints. Switching between the styles is
thus only possible if supported by the font via
<a href="/docs/reference/text/text/#parameters-features">font features</a>.</p>
<p>For the default math font, the roundhand style is available through the
<code>ss01</code> feature. Therefore, you could define your own version of <code>\\mathscr</code>
like this:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">scr</span><span class="typ-punct">(</span>it<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  features<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;ss01&quot;</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-math-delim">$</span><span class="typ-func">cal</span><span class="typ-punct">(</span><span class="typ-pol">it</span><span class="typ-punct">)</span><span class="typ-math-delim">$</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

We establish <span class="typ-math-delim">$</span><span class="typ-func">cal</span><span class="typ-punct">(</span>P<span class="typ-punct">)</span> <span class="typ-escape">!=</span> <span class="typ-func">scr</span><span class="typ-punct">(</span>P<span class="typ-punct">)</span><span class="typ-math-delim">$</span>.
</code></pre><div class="preview"><img src="/docs/assets/93f457dfed580308aca4c11365ac8d08.png" alt="Preview" /></div></div>
<p>(The box is not conceptually necessary, but unfortunately currently needed
due to limitations in Typst's text style handling in math.)</p>`,self:!1,params:[{name:"body",details:"<p>The content to style.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/math/vec/",title:"Vector",description:"Documentation for the `vec` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-delim",name:"delim",children:[]},{id:"parameters-align",name:"align",children:[]},{id:"parameters-gap",name:"gap",children:[]},{id:"parameters-children",name:"children",children:[]}]}],body:{kind:"func",content:{path:["math"],name:"vec",title:"Vector",keywords:[],oneliner:"A column vector.",element:!0,contextual:!1,details:`<p>A column vector.</p>
<p>Content in the vector's elements can be aligned with the
<a href="/docs/reference/math/vec/#parameters-align"><code>align</code></a> parameter, or the <code>&amp;</code> symbol.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">vec</span><span class="typ-punct">(</span>a<span class="typ-punct">,</span> b<span class="typ-punct">,</span> c<span class="typ-punct">)</span> <span class="typ-pol">dot</span> <span class="typ-func">vec</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> 3<span class="typ-punct">)</span>
    = a + 2b + 3c <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/438ea4d131c3115769c614cb7717508a.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"delim",details:`<p>The delimiter to use.</p>
<p>Can be a single character specifying the left delimiter, in which case
the right delimiter is inferred. Otherwise, can be an array containing a
left and a right delimiter.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">vec</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">vec</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/190e9c58da8d1ca6ad422ed4056edf5b.png" alt="Preview" /></div></div>`,types:["none","str","array","symbol"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-str">&quot;(&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;)&quot;</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:"<p>The horizontal alignment that each element should have.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">vec</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> right<span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">vec</span><span class="typ-punct">(</span><span class="typ-escape">-</span>1<span class="typ-punct">,</span> 1<span class="typ-punct">,</span> <span class="typ-escape">-</span>1<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d0959d39f93e4cbd340d4120092e7ff5.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:"<code>center</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gap",details:"<p>The gap between elements.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">vec</span><span class="typ-punct">(</span>gap<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> <span class="typ-func">vec</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/2bd573024324800d976475bcae7c328b.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0.2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The elements of the vector.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}},children:[]}]},{route:"/docs/reference/symbols/",title:"Symbols",description:"Documentation for functions related to Symbols in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]},{id:"shorthands",name:"Shorthands",children:[]}],body:{kind:"category",content:{name:"symbols",title:"Symbols",details:`<p>These two modules give names to symbols and emoji to make them easy to
insert with a normal keyboard. Alternatively, you can also always directly
enter Unicode symbols into your text and formulas. In addition to the
symbols listed below, math mode defines <code>dif</code> and <code>Dif</code>. These are not
normal symbol values because they also affect spacing and font style.</p>`,items:[{name:"sym",route:"/docs/reference/symbols/sym/",oneliner:"These two modules give names to symbols and emoji to make them easy to",code:!0},{name:"emoji",route:"/docs/reference/symbols/emoji/",oneliner:"These two modules give names to symbols and emoji to make them easy to",code:!0},{name:"symbol",route:"/docs/reference/symbols/symbol/",oneliner:"A Unicode symbol.",code:!0}],shorthands:{markup:[{name:"space.nobreak",codepoint:160,accent:!1,alternates:["space","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:"~",mathShorthand:null},{name:"dash.en",codepoint:8211,accent:!1,alternates:["dash.em","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:"--",mathShorthand:null},{name:"dash.em",codepoint:8212,accent:!1,alternates:["dash.en","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:"---",mathShorthand:null},{name:"hyph.soft",codepoint:173,accent:!1,alternates:["hyph","hyph.minus","hyph.nobreak","hyph.point"],markupShorthand:"-?",mathShorthand:null},{name:"dots.h",codepoint:8230,accent:!1,alternates:["dots.h.c","dots.v","dots.down","dots.up"],markupShorthand:"...",mathShorthand:"..."},{name:"minus",codepoint:8722,accent:!0,alternates:["minus.circle","minus.dot","minus.plus","minus.square","minus.tilde","minus.triangle"],markupShorthand:"-",mathShorthand:"-"}],math:[{name:"bracket.l.double",codepoint:10214,accent:!1,alternates:["bracket.l","bracket.r","bracket.r.double","bracket.t","bracket.b"],markupShorthand:null,mathShorthand:"[|"},{name:"bracket.r.double",codepoint:10215,accent:!1,alternates:["bracket.l","bracket.l.double","bracket.r","bracket.t","bracket.b"],markupShorthand:null,mathShorthand:"|]"},{name:"bar.v.double",codepoint:8214,accent:!1,alternates:["bar.v","bar.v.triple","bar.v.broken","bar.v.circle","bar.h"],markupShorthand:null,mathShorthand:"||"},{name:"ast.op",codepoint:8727,accent:!1,alternates:["ast.basic","ast.low","ast.double","ast.triple","ast.small","ast.circle","ast.square"],markupShorthand:null,mathShorthand:"*"},{name:"colon.eq",codepoint:8788,accent:!1,alternates:["colon","colon.double","colon.double.eq"],markupShorthand:null,mathShorthand:":="},{name:"colon.double.eq",codepoint:10868,accent:!1,alternates:["colon","colon.double","colon.eq"],markupShorthand:null,mathShorthand:"::="},{name:"dots.h",codepoint:8230,accent:!1,alternates:["dots.h.c","dots.v","dots.down","dots.up"],markupShorthand:"...",mathShorthand:"..."},{name:"tilde.op",codepoint:8764,accent:!0,alternates:["tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:"~"},{name:"prime",codepoint:8242,accent:!1,alternates:["prime.rev","prime.double","prime.double.rev","prime.triple","prime.triple.rev","prime.quad"],markupShorthand:null,mathShorthand:"'"},{name:"minus",codepoint:8722,accent:!0,alternates:["minus.circle","minus.dot","minus.plus","minus.square","minus.tilde","minus.triangle"],markupShorthand:"-",mathShorthand:"-"},{name:"eq.colon",codepoint:8789,accent:!1,alternates:["eq","eq.star","eq.circle","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:"=:"},{name:"eq.not",codepoint:8800,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:"!="},{name:"gt.double",codepoint:8811,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:">>"},{name:"gt.eq",codepoint:8805,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:">="},{name:"gt.triple",codepoint:8921,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple.nested"],markupShorthand:null,mathShorthand:">>>"},{name:"lt.double",codepoint:8810,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:"<<"},{name:"lt.eq",codepoint:8804,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:"<="},{name:"lt.triple",codepoint:8920,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple.nested"],markupShorthand:null,mathShorthand:"<<<"},{name:"convolve",codepoint:8727,accent:!1,alternates:[],markupShorthand:null,mathShorthand:"*"},{name:"arrow.r",codepoint:8594,accent:!0,alternates:["arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"->"},{name:"arrow.r.bar",codepoint:8614,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"|->"},{name:"arrow.r.double",codepoint:8658,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"=>"},{name:"arrow.r.double.bar",codepoint:10503,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"|=>"},{name:"arrow.r.double.long",codepoint:10233,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"==>"},{name:"arrow.r.long",codepoint:10230,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"-->"},{name:"arrow.r.long.squiggly",codepoint:10239,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"~~>"},{name:"arrow.r.squiggly",codepoint:8669,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"~>"},{name:"arrow.r.tail",codepoint:8611,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:">->"},{name:"arrow.r.twohead",codepoint:8608,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"->>"},{name:"arrow.l",codepoint:8592,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<-"},{name:"arrow.l.double.long",codepoint:10232,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<=="},{name:"arrow.l.long",codepoint:10229,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<--"},{name:"arrow.l.long.squiggly",codepoint:11059,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<~~"},{name:"arrow.l.squiggly",codepoint:8668,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<~"},{name:"arrow.l.tail",codepoint:8610,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<-<"},{name:"arrow.l.twohead",codepoint:8606,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<<-"},{name:"arrow.l.r",codepoint:8596,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<->"},{name:"arrow.l.r.double",codepoint:8660,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<=>"},{name:"arrow.l.r.double.long",codepoint:10234,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<==>"},{name:"arrow.l.r.long",codepoint:10231,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<-->"},{name:"arrow.l.r",codepoint:8596,accent:!0,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:"<->"}]}}},children:[{route:"/docs/reference/symbols/sym/",title:"General",description:"Documentation for the `sym` module.",part:null,outline:[],body:{kind:"symbols",content:{name:"sym",title:"General",details:`<p>Named general symbols.</p>
<p>For example, <code>#sym.arrow</code> produces the → symbol. Within
<a href="/docs/reference/math/">formulas</a>, these symbols can be used without the <code>#sym.</code>
prefix.</p>
<p>The <code>d</code> in an integral's <code>dx</code> can be written as <code><span class="typ-math-delim">$</span><span class="typ-pol">dif</span> x<span class="typ-math-delim">$</span></code>.
Outside math formulas, <code>dif</code> can be accessed as <code>math.dif</code>.</p>`,list:[{name:"wj",codepoint:8288,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zwj",codepoint:8205,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zwnj",codepoint:8204,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zws",codepoint:8203,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lrm",codepoint:8206,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rlm",codepoint:8207,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"space",codepoint:32,accent:!1,alternates:["space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.nobreak",codepoint:160,accent:!1,alternates:["space","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:"~",mathShorthand:null},{name:"space.nobreak.narrow",codepoint:8239,accent:!1,alternates:["space","space.nobreak","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.en",codepoint:8194,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.quad",codepoint:8195,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.third",codepoint:8196,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.quarter",codepoint:8197,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.sixth","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.sixth",codepoint:8198,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.med","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.med",codepoint:8287,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.fig","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.fig",codepoint:8199,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.punct","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.punct",codepoint:8200,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.thin","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.thin",codepoint:8201,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.hair"],markupShorthand:null,mathShorthand:null},{name:"space.hair",codepoint:8202,accent:!1,alternates:["space","space.nobreak","space.nobreak.narrow","space.en","space.quad","space.third","space.quarter","space.sixth","space.med","space.fig","space.punct","space.thin"],markupShorthand:null,mathShorthand:null},{name:"paren.l",codepoint:40,accent:!1,alternates:["paren.l.double","paren.r","paren.r.double","paren.t","paren.b"],markupShorthand:null,mathShorthand:null},{name:"paren.l.double",codepoint:10629,accent:!1,alternates:["paren.l","paren.r","paren.r.double","paren.t","paren.b"],markupShorthand:null,mathShorthand:null},{name:"paren.r",codepoint:41,accent:!1,alternates:["paren.l","paren.l.double","paren.r.double","paren.t","paren.b"],markupShorthand:null,mathShorthand:null},{name:"paren.r.double",codepoint:10630,accent:!1,alternates:["paren.l","paren.l.double","paren.r","paren.t","paren.b"],markupShorthand:null,mathShorthand:null},{name:"paren.t",codepoint:9180,accent:!1,alternates:["paren.l","paren.l.double","paren.r","paren.r.double","paren.b"],markupShorthand:null,mathShorthand:null},{name:"paren.b",codepoint:9181,accent:!1,alternates:["paren.l","paren.l.double","paren.r","paren.r.double","paren.t"],markupShorthand:null,mathShorthand:null},{name:"brace.l",codepoint:123,accent:!1,alternates:["brace.l.double","brace.r","brace.r.double","brace.t","brace.b"],markupShorthand:null,mathShorthand:null},{name:"brace.l.double",codepoint:10627,accent:!1,alternates:["brace.l","brace.r","brace.r.double","brace.t","brace.b"],markupShorthand:null,mathShorthand:null},{name:"brace.r",codepoint:125,accent:!1,alternates:["brace.l","brace.l.double","brace.r.double","brace.t","brace.b"],markupShorthand:null,mathShorthand:null},{name:"brace.r.double",codepoint:10628,accent:!1,alternates:["brace.l","brace.l.double","brace.r","brace.t","brace.b"],markupShorthand:null,mathShorthand:null},{name:"brace.t",codepoint:9182,accent:!1,alternates:["brace.l","brace.l.double","brace.r","brace.r.double","brace.b"],markupShorthand:null,mathShorthand:null},{name:"brace.b",codepoint:9183,accent:!1,alternates:["brace.l","brace.l.double","brace.r","brace.r.double","brace.t"],markupShorthand:null,mathShorthand:null},{name:"bracket.l",codepoint:91,accent:!1,alternates:["bracket.l.double","bracket.r","bracket.r.double","bracket.t","bracket.b"],markupShorthand:null,mathShorthand:null},{name:"bracket.l.double",codepoint:10214,accent:!1,alternates:["bracket.l","bracket.r","bracket.r.double","bracket.t","bracket.b"],markupShorthand:null,mathShorthand:"[|"},{name:"bracket.r",codepoint:93,accent:!1,alternates:["bracket.l","bracket.l.double","bracket.r.double","bracket.t","bracket.b"],markupShorthand:null,mathShorthand:null},{name:"bracket.r.double",codepoint:10215,accent:!1,alternates:["bracket.l","bracket.l.double","bracket.r","bracket.t","bracket.b"],markupShorthand:null,mathShorthand:"|]"},{name:"bracket.t",codepoint:9140,accent:!1,alternates:["bracket.l","bracket.l.double","bracket.r","bracket.r.double","bracket.b"],markupShorthand:null,mathShorthand:null},{name:"bracket.b",codepoint:9141,accent:!1,alternates:["bracket.l","bracket.l.double","bracket.r","bracket.r.double","bracket.t"],markupShorthand:null,mathShorthand:null},{name:"shell.l",codepoint:10098,accent:!1,alternates:["shell.l.double","shell.r","shell.r.double","shell.t","shell.b"],markupShorthand:null,mathShorthand:null},{name:"shell.l.double",codepoint:10220,accent:!1,alternates:["shell.l","shell.r","shell.r.double","shell.t","shell.b"],markupShorthand:null,mathShorthand:null},{name:"shell.r",codepoint:10099,accent:!1,alternates:["shell.l","shell.l.double","shell.r.double","shell.t","shell.b"],markupShorthand:null,mathShorthand:null},{name:"shell.r.double",codepoint:10221,accent:!1,alternates:["shell.l","shell.l.double","shell.r","shell.t","shell.b"],markupShorthand:null,mathShorthand:null},{name:"shell.t",codepoint:9184,accent:!1,alternates:["shell.l","shell.l.double","shell.r","shell.r.double","shell.b"],markupShorthand:null,mathShorthand:null},{name:"shell.b",codepoint:9185,accent:!1,alternates:["shell.l","shell.l.double","shell.r","shell.r.double","shell.t"],markupShorthand:null,mathShorthand:null},{name:"bar.v",codepoint:124,accent:!1,alternates:["bar.v.double","bar.v.triple","bar.v.broken","bar.v.circle","bar.h"],markupShorthand:null,mathShorthand:null},{name:"bar.v.double",codepoint:8214,accent:!1,alternates:["bar.v","bar.v.triple","bar.v.broken","bar.v.circle","bar.h"],markupShorthand:null,mathShorthand:"||"},{name:"bar.v.triple",codepoint:10624,accent:!1,alternates:["bar.v","bar.v.double","bar.v.broken","bar.v.circle","bar.h"],markupShorthand:null,mathShorthand:null},{name:"bar.v.broken",codepoint:166,accent:!1,alternates:["bar.v","bar.v.double","bar.v.triple","bar.v.circle","bar.h"],markupShorthand:null,mathShorthand:null},{name:"bar.v.circle",codepoint:10678,accent:!1,alternates:["bar.v","bar.v.double","bar.v.triple","bar.v.broken","bar.h"],markupShorthand:null,mathShorthand:null},{name:"bar.h",codepoint:8213,accent:!1,alternates:["bar.v","bar.v.double","bar.v.triple","bar.v.broken","bar.v.circle"],markupShorthand:null,mathShorthand:null},{name:"fence.l",codepoint:10712,accent:!1,alternates:["fence.l.double","fence.r","fence.r.double","fence.dotted"],markupShorthand:null,mathShorthand:null},{name:"fence.l.double",codepoint:10714,accent:!1,alternates:["fence.l","fence.r","fence.r.double","fence.dotted"],markupShorthand:null,mathShorthand:null},{name:"fence.r",codepoint:10713,accent:!1,alternates:["fence.l","fence.l.double","fence.r.double","fence.dotted"],markupShorthand:null,mathShorthand:null},{name:"fence.r.double",codepoint:10715,accent:!1,alternates:["fence.l","fence.l.double","fence.r","fence.dotted"],markupShorthand:null,mathShorthand:null},{name:"fence.dotted",codepoint:10649,accent:!1,alternates:["fence.l","fence.l.double","fence.r","fence.r.double"],markupShorthand:null,mathShorthand:null},{name:"angle",codepoint:8736,accent:!1,alternates:["angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.l",codepoint:10216,accent:!1,alternates:["angle","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.l.curly",codepoint:10748,accent:!1,alternates:["angle","angle.l","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.l.dot",codepoint:10641,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.l.double",codepoint:12298,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.r",codepoint:10217,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.r.curly",codepoint:10749,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.r.dot",codepoint:10642,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.r.double",codepoint:12299,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.acute",codepoint:10655,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.arc",codepoint:8737,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.arc.rev",codepoint:10651,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.oblique",codepoint:10662,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.rev",codepoint:10659,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.right",codepoint:8735,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.right.rev",codepoint:11262,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.right.arc",codepoint:8894,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.right.dot",codepoint:10653,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.right.sq",codepoint:10652,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.s","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.s",codepoint:10654,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.spatial","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.spatial",codepoint:10176,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spheric","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.spheric",codepoint:8738,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric.rev","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.spheric.rev",codepoint:10656,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.top"],markupShorthand:null,mathShorthand:null},{name:"angle.spheric.top",codepoint:10657,accent:!1,alternates:["angle","angle.l","angle.l.curly","angle.l.dot","angle.l.double","angle.r","angle.r.curly","angle.r.dot","angle.r.double","angle.acute","angle.arc","angle.arc.rev","angle.oblique","angle.rev","angle.right","angle.right.rev","angle.right.arc","angle.right.dot","angle.right.sq","angle.s","angle.spatial","angle.spheric","angle.spheric.rev"],markupShorthand:null,mathShorthand:null},{name:"ceil.l",codepoint:8968,accent:!1,alternates:["ceil.r"],markupShorthand:null,mathShorthand:null},{name:"ceil.r",codepoint:8969,accent:!1,alternates:["ceil.l"],markupShorthand:null,mathShorthand:null},{name:"floor.l",codepoint:8970,accent:!1,alternates:["floor.r"],markupShorthand:null,mathShorthand:null},{name:"floor.r",codepoint:8971,accent:!1,alternates:["floor.l"],markupShorthand:null,mathShorthand:null},{name:"amp",codepoint:38,accent:!1,alternates:["amp.inv"],markupShorthand:null,mathShorthand:null},{name:"amp.inv",codepoint:8523,accent:!1,alternates:["amp"],markupShorthand:null,mathShorthand:null},{name:"ast.op",codepoint:8727,accent:!1,alternates:["ast.basic","ast.low","ast.double","ast.triple","ast.small","ast.circle","ast.square"],markupShorthand:null,mathShorthand:"*"},{name:"ast.basic",codepoint:42,accent:!1,alternates:["ast.op","ast.low","ast.double","ast.triple","ast.small","ast.circle","ast.square"],markupShorthand:null,mathShorthand:null},{name:"ast.low",codepoint:8270,accent:!1,alternates:["ast.op","ast.basic","ast.double","ast.triple","ast.small","ast.circle","ast.square"],markupShorthand:null,mathShorthand:null},{name:"ast.double",codepoint:8273,accent:!1,alternates:["ast.op","ast.basic","ast.low","ast.triple","ast.small","ast.circle","ast.square"],markupShorthand:null,mathShorthand:null},{name:"ast.triple",codepoint:8258,accent:!1,alternates:["ast.op","ast.basic","ast.low","ast.double","ast.small","ast.circle","ast.square"],markupShorthand:null,mathShorthand:null},{name:"ast.small",codepoint:65121,accent:!1,alternates:["ast.op","ast.basic","ast.low","ast.double","ast.triple","ast.circle","ast.square"],markupShorthand:null,mathShorthand:null},{name:"ast.circle",codepoint:8859,accent:!1,alternates:["ast.op","ast.basic","ast.low","ast.double","ast.triple","ast.small","ast.square"],markupShorthand:null,mathShorthand:null},{name:"ast.square",codepoint:10694,accent:!1,alternates:["ast.op","ast.basic","ast.low","ast.double","ast.triple","ast.small","ast.circle"],markupShorthand:null,mathShorthand:null},{name:"at",codepoint:64,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"backslash",codepoint:92,accent:!1,alternates:["backslash.circle","backslash.not"],markupShorthand:null,mathShorthand:null},{name:"backslash.circle",codepoint:10680,accent:!1,alternates:["backslash","backslash.not"],markupShorthand:null,mathShorthand:null},{name:"backslash.not",codepoint:10743,accent:!1,alternates:["backslash","backslash.circle"],markupShorthand:null,mathShorthand:null},{name:"co",codepoint:8453,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"colon",codepoint:58,accent:!1,alternates:["colon.double","colon.eq","colon.double.eq"],markupShorthand:null,mathShorthand:null},{name:"colon.double",codepoint:8759,accent:!1,alternates:["colon","colon.eq","colon.double.eq"],markupShorthand:null,mathShorthand:null},{name:"colon.eq",codepoint:8788,accent:!1,alternates:["colon","colon.double","colon.double.eq"],markupShorthand:null,mathShorthand:":="},{name:"colon.double.eq",codepoint:10868,accent:!1,alternates:["colon","colon.double","colon.eq"],markupShorthand:null,mathShorthand:"::="},{name:"comma",codepoint:44,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dagger",codepoint:8224,accent:!1,alternates:["dagger.double"],markupShorthand:null,mathShorthand:null},{name:"dagger.double",codepoint:8225,accent:!1,alternates:["dagger"],markupShorthand:null,mathShorthand:null},{name:"dash.en",codepoint:8211,accent:!1,alternates:["dash.em","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:"--",mathShorthand:null},{name:"dash.em",codepoint:8212,accent:!1,alternates:["dash.en","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:"---",mathShorthand:null},{name:"dash.em.two",codepoint:11834,accent:!1,alternates:["dash.en","dash.em","dash.em.three","dash.fig","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:null,mathShorthand:null},{name:"dash.em.three",codepoint:11835,accent:!1,alternates:["dash.en","dash.em","dash.em.two","dash.fig","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:null,mathShorthand:null},{name:"dash.fig",codepoint:8210,accent:!1,alternates:["dash.en","dash.em","dash.em.two","dash.em.three","dash.wave","dash.colon","dash.circle","dash.wave.double"],markupShorthand:null,mathShorthand:null},{name:"dash.wave",codepoint:12316,accent:!1,alternates:["dash.en","dash.em","dash.em.two","dash.em.three","dash.fig","dash.colon","dash.circle","dash.wave.double"],markupShorthand:null,mathShorthand:null},{name:"dash.colon",codepoint:8761,accent:!1,alternates:["dash.en","dash.em","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.circle","dash.wave.double"],markupShorthand:null,mathShorthand:null},{name:"dash.circle",codepoint:8861,accent:!1,alternates:["dash.en","dash.em","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.colon","dash.wave.double"],markupShorthand:null,mathShorthand:null},{name:"dash.wave.double",codepoint:12336,accent:!1,alternates:["dash.en","dash.em","dash.em.two","dash.em.three","dash.fig","dash.wave","dash.colon","dash.circle"],markupShorthand:null,mathShorthand:null},{name:"dot.op",codepoint:8901,accent:!0,alternates:["dot.basic","dot.c","dot.circle","dot.circle.big","dot.square","dot.double","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.basic",codepoint:46,accent:!0,alternates:["dot.op","dot.c","dot.circle","dot.circle.big","dot.square","dot.double","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.c",codepoint:183,accent:!1,alternates:["dot.op","dot.basic","dot.circle","dot.circle.big","dot.square","dot.double","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.circle",codepoint:8857,accent:!1,alternates:["dot.op","dot.basic","dot.c","dot.circle.big","dot.square","dot.double","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.circle.big",codepoint:10752,accent:!1,alternates:["dot.op","dot.basic","dot.c","dot.circle","dot.square","dot.double","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.square",codepoint:8865,accent:!1,alternates:["dot.op","dot.basic","dot.c","dot.circle","dot.circle.big","dot.double","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.double",codepoint:168,accent:!0,alternates:["dot.op","dot.basic","dot.c","dot.circle","dot.circle.big","dot.square","dot.triple","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.triple",codepoint:8411,accent:!0,alternates:["dot.op","dot.basic","dot.c","dot.circle","dot.circle.big","dot.square","dot.double","dot.quad"],markupShorthand:null,mathShorthand:null},{name:"dot.quad",codepoint:8412,accent:!0,alternates:["dot.op","dot.basic","dot.c","dot.circle","dot.circle.big","dot.square","dot.double","dot.triple"],markupShorthand:null,mathShorthand:null},{name:"excl",codepoint:33,accent:!1,alternates:["excl.double","excl.inv","excl.quest"],markupShorthand:null,mathShorthand:null},{name:"excl.double",codepoint:8252,accent:!1,alternates:["excl","excl.inv","excl.quest"],markupShorthand:null,mathShorthand:null},{name:"excl.inv",codepoint:161,accent:!1,alternates:["excl","excl.double","excl.quest"],markupShorthand:null,mathShorthand:null},{name:"excl.quest",codepoint:8265,accent:!1,alternates:["excl","excl.double","excl.inv"],markupShorthand:null,mathShorthand:null},{name:"quest",codepoint:63,accent:!1,alternates:["quest.double","quest.excl","quest.inv"],markupShorthand:null,mathShorthand:null},{name:"quest.double",codepoint:8263,accent:!1,alternates:["quest","quest.excl","quest.inv"],markupShorthand:null,mathShorthand:null},{name:"quest.excl",codepoint:8264,accent:!1,alternates:["quest","quest.double","quest.inv"],markupShorthand:null,mathShorthand:null},{name:"quest.inv",codepoint:191,accent:!1,alternates:["quest","quest.double","quest.excl"],markupShorthand:null,mathShorthand:null},{name:"interrobang",codepoint:8253,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hash",codepoint:35,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hyph",codepoint:8208,accent:!1,alternates:["hyph.minus","hyph.nobreak","hyph.point","hyph.soft"],markupShorthand:null,mathShorthand:null},{name:"hyph.minus",codepoint:45,accent:!0,alternates:["hyph","hyph.nobreak","hyph.point","hyph.soft"],markupShorthand:null,mathShorthand:null},{name:"hyph.nobreak",codepoint:8209,accent:!1,alternates:["hyph","hyph.minus","hyph.point","hyph.soft"],markupShorthand:null,mathShorthand:null},{name:"hyph.point",codepoint:8231,accent:!1,alternates:["hyph","hyph.minus","hyph.nobreak","hyph.soft"],markupShorthand:null,mathShorthand:null},{name:"hyph.soft",codepoint:173,accent:!1,alternates:["hyph","hyph.minus","hyph.nobreak","hyph.point"],markupShorthand:"-?",mathShorthand:null},{name:"percent",codepoint:37,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"permille",codepoint:8240,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pilcrow",codepoint:182,accent:!1,alternates:["pilcrow.rev"],markupShorthand:null,mathShorthand:null},{name:"pilcrow.rev",codepoint:8267,accent:!1,alternates:["pilcrow"],markupShorthand:null,mathShorthand:null},{name:"section",codepoint:167,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"semi",codepoint:59,accent:!1,alternates:["semi.rev"],markupShorthand:null,mathShorthand:null},{name:"semi.rev",codepoint:8271,accent:!1,alternates:["semi"],markupShorthand:null,mathShorthand:null},{name:"slash",codepoint:47,accent:!1,alternates:["slash.double","slash.triple","slash.big"],markupShorthand:null,mathShorthand:null},{name:"slash.double",codepoint:11005,accent:!1,alternates:["slash","slash.triple","slash.big"],markupShorthand:null,mathShorthand:null},{name:"slash.triple",codepoint:11003,accent:!1,alternates:["slash","slash.double","slash.big"],markupShorthand:null,mathShorthand:null},{name:"slash.big",codepoint:10744,accent:!1,alternates:["slash","slash.double","slash.triple"],markupShorthand:null,mathShorthand:null},{name:"dots.h.c",codepoint:8943,accent:!1,alternates:["dots.h","dots.v","dots.down","dots.up"],markupShorthand:null,mathShorthand:null},{name:"dots.h",codepoint:8230,accent:!1,alternates:["dots.h.c","dots.v","dots.down","dots.up"],markupShorthand:"...",mathShorthand:"..."},{name:"dots.v",codepoint:8942,accent:!1,alternates:["dots.h.c","dots.h","dots.down","dots.up"],markupShorthand:null,mathShorthand:null},{name:"dots.down",codepoint:8945,accent:!1,alternates:["dots.h.c","dots.h","dots.v","dots.up"],markupShorthand:null,mathShorthand:null},{name:"dots.up",codepoint:8944,accent:!1,alternates:["dots.h.c","dots.h","dots.v","dots.down"],markupShorthand:null,mathShorthand:null},{name:"tilde.op",codepoint:8764,accent:!0,alternates:["tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:"~"},{name:"tilde.basic",codepoint:126,accent:!0,alternates:["tilde.op","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.dot",codepoint:10858,accent:!1,alternates:["tilde.op","tilde.basic","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.eq",codepoint:8771,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.eq.not",codepoint:8772,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.eq.rev",codepoint:8909,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.equiv",codepoint:8773,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.equiv.not",codepoint:8775,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.nequiv",codepoint:8774,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.not","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.not",codepoint:8769,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.rev","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.rev",codepoint:8765,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev.equiv","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.rev.equiv",codepoint:8780,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.triple"],markupShorthand:null,mathShorthand:null},{name:"tilde.triple",codepoint:8779,accent:!1,alternates:["tilde.op","tilde.basic","tilde.dot","tilde.eq","tilde.eq.not","tilde.eq.rev","tilde.equiv","tilde.equiv.not","tilde.nequiv","tilde.not","tilde.rev","tilde.rev.equiv"],markupShorthand:null,mathShorthand:null},{name:"acute",codepoint:180,accent:!0,alternates:["acute.double"],markupShorthand:null,mathShorthand:null},{name:"acute.double",codepoint:733,accent:!0,alternates:["acute"],markupShorthand:null,mathShorthand:null},{name:"breve",codepoint:728,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"caret",codepoint:8248,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"caron",codepoint:711,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hat",codepoint:94,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"diaer",codepoint:168,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"grave",codepoint:96,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"macron",codepoint:175,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"quote.double",codepoint:34,accent:!1,alternates:["quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.single",codepoint:39,accent:!1,alternates:["quote.double","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.l.double",codepoint:8220,accent:!1,alternates:["quote.double","quote.single","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.l.single",codepoint:8216,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.r.double",codepoint:8221,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.r.single",codepoint:8217,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.angle.l.double",codepoint:171,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.angle.l.single",codepoint:8249,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.angle.r.double",codepoint:187,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.angle.r.single",codepoint:8250,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.high.double","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.high.double",codepoint:8223,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.single","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.high.single",codepoint:8219,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.low.double","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.low.double",codepoint:8222,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.single"],markupShorthand:null,mathShorthand:null},{name:"quote.low.single",codepoint:8218,accent:!1,alternates:["quote.double","quote.single","quote.l.double","quote.l.single","quote.r.double","quote.r.single","quote.angle.l.double","quote.angle.l.single","quote.angle.r.double","quote.angle.r.single","quote.high.double","quote.high.single","quote.low.double"],markupShorthand:null,mathShorthand:null},{name:"prime",codepoint:8242,accent:!1,alternates:["prime.rev","prime.double","prime.double.rev","prime.triple","prime.triple.rev","prime.quad"],markupShorthand:null,mathShorthand:"'"},{name:"prime.rev",codepoint:8245,accent:!1,alternates:["prime","prime.double","prime.double.rev","prime.triple","prime.triple.rev","prime.quad"],markupShorthand:null,mathShorthand:null},{name:"prime.double",codepoint:8243,accent:!1,alternates:["prime","prime.rev","prime.double.rev","prime.triple","prime.triple.rev","prime.quad"],markupShorthand:null,mathShorthand:null},{name:"prime.double.rev",codepoint:8246,accent:!1,alternates:["prime","prime.rev","prime.double","prime.triple","prime.triple.rev","prime.quad"],markupShorthand:null,mathShorthand:null},{name:"prime.triple",codepoint:8244,accent:!1,alternates:["prime","prime.rev","prime.double","prime.double.rev","prime.triple.rev","prime.quad"],markupShorthand:null,mathShorthand:null},{name:"prime.triple.rev",codepoint:8247,accent:!1,alternates:["prime","prime.rev","prime.double","prime.double.rev","prime.triple","prime.quad"],markupShorthand:null,mathShorthand:null},{name:"prime.quad",codepoint:8279,accent:!1,alternates:["prime","prime.rev","prime.double","prime.double.rev","prime.triple","prime.triple.rev"],markupShorthand:null,mathShorthand:null},{name:"plus",codepoint:43,accent:!1,alternates:["plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.minus","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.circle",codepoint:8853,accent:!1,alternates:["plus","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.minus","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.circle.arrow",codepoint:10228,accent:!1,alternates:["plus","plus.circle","plus.circle.big","plus.dot","plus.double","plus.minus","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.circle.big",codepoint:10753,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.dot","plus.double","plus.minus","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.dot",codepoint:8724,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.double","plus.minus","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.double",codepoint:10746,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.minus","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.minus",codepoint:177,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.small","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.small",codepoint:65122,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.minus","plus.square","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.square",codepoint:8862,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.minus","plus.small","plus.triangle","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.triangle",codepoint:10809,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.minus","plus.small","plus.square","plus.triple"],markupShorthand:null,mathShorthand:null},{name:"plus.triple",codepoint:10747,accent:!1,alternates:["plus","plus.circle","plus.circle.arrow","plus.circle.big","plus.dot","plus.double","plus.minus","plus.small","plus.square","plus.triangle"],markupShorthand:null,mathShorthand:null},{name:"minus",codepoint:8722,accent:!0,alternates:["minus.circle","minus.dot","minus.plus","minus.square","minus.tilde","minus.triangle"],markupShorthand:"-",mathShorthand:"-"},{name:"minus.circle",codepoint:8854,accent:!1,alternates:["minus","minus.dot","minus.plus","minus.square","minus.tilde","minus.triangle"],markupShorthand:null,mathShorthand:null},{name:"minus.dot",codepoint:8760,accent:!1,alternates:["minus","minus.circle","minus.plus","minus.square","minus.tilde","minus.triangle"],markupShorthand:null,mathShorthand:null},{name:"minus.plus",codepoint:8723,accent:!1,alternates:["minus","minus.circle","minus.dot","minus.square","minus.tilde","minus.triangle"],markupShorthand:null,mathShorthand:null},{name:"minus.square",codepoint:8863,accent:!1,alternates:["minus","minus.circle","minus.dot","minus.plus","minus.tilde","minus.triangle"],markupShorthand:null,mathShorthand:null},{name:"minus.tilde",codepoint:8770,accent:!1,alternates:["minus","minus.circle","minus.dot","minus.plus","minus.square","minus.triangle"],markupShorthand:null,mathShorthand:null},{name:"minus.triangle",codepoint:10810,accent:!1,alternates:["minus","minus.circle","minus.dot","minus.plus","minus.square","minus.tilde"],markupShorthand:null,mathShorthand:null},{name:"div",codepoint:247,accent:!1,alternates:["div.circle"],markupShorthand:null,mathShorthand:null},{name:"div.circle",codepoint:10808,accent:!1,alternates:["div"],markupShorthand:null,mathShorthand:null},{name:"times",codepoint:215,accent:!1,alternates:["times.big","times.circle","times.circle.big","times.div","times.three.l","times.three.r","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.big",codepoint:10761,accent:!1,alternates:["times","times.circle","times.circle.big","times.div","times.three.l","times.three.r","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.circle",codepoint:8855,accent:!1,alternates:["times","times.big","times.circle.big","times.div","times.three.l","times.three.r","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.circle.big",codepoint:10754,accent:!1,alternates:["times","times.big","times.circle","times.div","times.three.l","times.three.r","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.div",codepoint:8903,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.three.l","times.three.r","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.three.l",codepoint:8907,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.div","times.three.r","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.three.r",codepoint:8908,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.div","times.three.l","times.l","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.l",codepoint:8905,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.div","times.three.l","times.three.r","times.r","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.r",codepoint:8906,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.div","times.three.l","times.three.r","times.l","times.square","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.square",codepoint:8864,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.div","times.three.l","times.three.r","times.l","times.r","times.triangle"],markupShorthand:null,mathShorthand:null},{name:"times.triangle",codepoint:10811,accent:!1,alternates:["times","times.big","times.circle","times.circle.big","times.div","times.three.l","times.three.r","times.l","times.r","times.square"],markupShorthand:null,mathShorthand:null},{name:"ratio",codepoint:8758,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"eq",codepoint:61,accent:!1,alternates:["eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.star",codepoint:8795,accent:!1,alternates:["eq","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.circle",codepoint:8860,accent:!1,alternates:["eq","eq.star","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.colon",codepoint:8789,accent:!1,alternates:["eq","eq.star","eq.circle","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:"=:"},{name:"eq.def",codepoint:8797,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.delta",codepoint:8796,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.equi",codepoint:8794,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.est",codepoint:8793,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.gt",codepoint:8925,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.lt",codepoint:8924,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.m",codepoint:8798,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.not",codepoint:8800,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.prec","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:"!="},{name:"eq.prec",codepoint:8926,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.quest","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.quest",codepoint:8799,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.small","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.small",codepoint:65126,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.succ","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.succ",codepoint:8927,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.triple","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.triple",codepoint:8801,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.quad"],markupShorthand:null,mathShorthand:null},{name:"eq.quad",codepoint:8803,accent:!1,alternates:["eq","eq.star","eq.circle","eq.colon","eq.def","eq.delta","eq.equi","eq.est","eq.gt","eq.lt","eq.m","eq.not","eq.prec","eq.quest","eq.small","eq.succ","eq.triple"],markupShorthand:null,mathShorthand:null},{name:"gt",codepoint:62,accent:!1,alternates:["gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.circle",codepoint:10689,accent:!1,alternates:["gt","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.dot",codepoint:8919,accent:!1,alternates:["gt","gt.circle","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.approx",codepoint:10886,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.double",codepoint:8811,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:">>"},{name:"gt.eq",codepoint:8805,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:">="},{name:"gt.eq.slant",codepoint:10878,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.eq.lt",codepoint:8923,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.eq.not",codepoint:8817,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.equiv",codepoint:8807,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.lt",codepoint:8823,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.lt.not",codepoint:8825,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.neq",codepoint:10888,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.napprox",codepoint:10890,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.nequiv",codepoint:8809,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.not",codepoint:8815,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.ntilde",codepoint:8935,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.small",codepoint:65125,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.tilde",codepoint:8819,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.tilde.not",codepoint:8821,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.tri",codepoint:8883,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.tri.eq",codepoint:8885,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq.not","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.tri.eq.not",codepoint:8941,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.tri.not",codepoint:8939,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.triple","gt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"gt.triple",codepoint:8921,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple.nested"],markupShorthand:null,mathShorthand:">>>"},{name:"gt.triple.nested",codepoint:11e3,accent:!1,alternates:["gt","gt.circle","gt.dot","gt.approx","gt.double","gt.eq","gt.eq.slant","gt.eq.lt","gt.eq.not","gt.equiv","gt.lt","gt.lt.not","gt.neq","gt.napprox","gt.nequiv","gt.not","gt.ntilde","gt.small","gt.tilde","gt.tilde.not","gt.tri","gt.tri.eq","gt.tri.eq.not","gt.tri.not","gt.triple"],markupShorthand:null,mathShorthand:null},{name:"lt",codepoint:60,accent:!1,alternates:["lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.circle",codepoint:10688,accent:!1,alternates:["lt","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.dot",codepoint:8918,accent:!1,alternates:["lt","lt.circle","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.approx",codepoint:10885,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.double",codepoint:8810,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:"<<"},{name:"lt.eq",codepoint:8804,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:"<="},{name:"lt.eq.slant",codepoint:10877,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.eq.gt",codepoint:8922,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.eq.not",codepoint:8816,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.equiv",codepoint:8806,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.gt",codepoint:8822,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.gt.not",codepoint:8824,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.neq",codepoint:10887,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.napprox",codepoint:10889,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.nequiv",codepoint:8808,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.not",codepoint:8814,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.ntilde",codepoint:8934,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.small",codepoint:65124,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.tilde",codepoint:8818,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.tilde.not",codepoint:8820,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.tri",codepoint:8882,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.tri.eq",codepoint:8884,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq.not","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.tri.eq.not",codepoint:8940,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.tri.not",codepoint:8938,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.triple","lt.triple.nested"],markupShorthand:null,mathShorthand:null},{name:"lt.triple",codepoint:8920,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple.nested"],markupShorthand:null,mathShorthand:"<<<"},{name:"lt.triple.nested",codepoint:10999,accent:!1,alternates:["lt","lt.circle","lt.dot","lt.approx","lt.double","lt.eq","lt.eq.slant","lt.eq.gt","lt.eq.not","lt.equiv","lt.gt","lt.gt.not","lt.neq","lt.napprox","lt.nequiv","lt.not","lt.ntilde","lt.small","lt.tilde","lt.tilde.not","lt.tri","lt.tri.eq","lt.tri.eq.not","lt.tri.not","lt.triple"],markupShorthand:null,mathShorthand:null},{name:"approx",codepoint:8776,accent:!1,alternates:["approx.eq","approx.not"],markupShorthand:null,mathShorthand:null},{name:"approx.eq",codepoint:8778,accent:!1,alternates:["approx","approx.not"],markupShorthand:null,mathShorthand:null},{name:"approx.not",codepoint:8777,accent:!1,alternates:["approx","approx.eq"],markupShorthand:null,mathShorthand:null},{name:"prec",codepoint:8826,accent:!1,alternates:["prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.approx",codepoint:10935,accent:!1,alternates:["prec","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.curly.eq",codepoint:8828,accent:!1,alternates:["prec","prec.approx","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.curly.eq.not",codepoint:8928,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.double",codepoint:10939,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.eq",codepoint:10927,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.equiv",codepoint:10931,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.napprox",codepoint:10937,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.neq","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.neq",codepoint:10929,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.nequiv","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.nequiv",codepoint:10933,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.not","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.not",codepoint:8832,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.ntilde","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.ntilde",codepoint:8936,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.tilde"],markupShorthand:null,mathShorthand:null},{name:"prec.tilde",codepoint:8830,accent:!1,alternates:["prec","prec.approx","prec.curly.eq","prec.curly.eq.not","prec.double","prec.eq","prec.equiv","prec.napprox","prec.neq","prec.nequiv","prec.not","prec.ntilde"],markupShorthand:null,mathShorthand:null},{name:"succ",codepoint:8827,accent:!1,alternates:["succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.approx",codepoint:10936,accent:!1,alternates:["succ","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.curly.eq",codepoint:8829,accent:!1,alternates:["succ","succ.approx","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.curly.eq.not",codepoint:8929,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.double",codepoint:10940,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.eq",codepoint:10928,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.equiv",codepoint:10932,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.napprox",codepoint:10938,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.neq","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.neq",codepoint:10930,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.nequiv","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.nequiv",codepoint:10934,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.not","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.not",codepoint:8833,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.ntilde","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.ntilde",codepoint:8937,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.tilde"],markupShorthand:null,mathShorthand:null},{name:"succ.tilde",codepoint:8831,accent:!1,alternates:["succ","succ.approx","succ.curly.eq","succ.curly.eq.not","succ.double","succ.eq","succ.equiv","succ.napprox","succ.neq","succ.nequiv","succ.not","succ.ntilde"],markupShorthand:null,mathShorthand:null},{name:"equiv",codepoint:8801,accent:!1,alternates:["equiv.not"],markupShorthand:null,mathShorthand:null},{name:"equiv.not",codepoint:8802,accent:!1,alternates:["equiv"],markupShorthand:null,mathShorthand:null},{name:"prop",codepoint:8733,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"original",codepoint:8886,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"image",codepoint:8887,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"emptyset",codepoint:8709,accent:!1,alternates:["emptyset.arrow.r","emptyset.arrow.l","emptyset.bar","emptyset.circle","emptyset.rev"],markupShorthand:null,mathShorthand:null},{name:"emptyset.arrow.r",codepoint:10675,accent:!1,alternates:["emptyset","emptyset.arrow.l","emptyset.bar","emptyset.circle","emptyset.rev"],markupShorthand:null,mathShorthand:null},{name:"emptyset.arrow.l",codepoint:10676,accent:!1,alternates:["emptyset","emptyset.arrow.r","emptyset.bar","emptyset.circle","emptyset.rev"],markupShorthand:null,mathShorthand:null},{name:"emptyset.bar",codepoint:10673,accent:!1,alternates:["emptyset","emptyset.arrow.r","emptyset.arrow.l","emptyset.circle","emptyset.rev"],markupShorthand:null,mathShorthand:null},{name:"emptyset.circle",codepoint:10674,accent:!1,alternates:["emptyset","emptyset.arrow.r","emptyset.arrow.l","emptyset.bar","emptyset.rev"],markupShorthand:null,mathShorthand:null},{name:"emptyset.rev",codepoint:10672,accent:!1,alternates:["emptyset","emptyset.arrow.r","emptyset.arrow.l","emptyset.bar","emptyset.circle"],markupShorthand:null,mathShorthand:null},{name:"nothing",codepoint:8709,accent:!1,alternates:["nothing.arrow.r","nothing.arrow.l","nothing.bar","nothing.circle","nothing.rev"],markupShorthand:null,mathShorthand:null},{name:"nothing.arrow.r",codepoint:10675,accent:!1,alternates:["nothing","nothing.arrow.l","nothing.bar","nothing.circle","nothing.rev"],markupShorthand:null,mathShorthand:null},{name:"nothing.arrow.l",codepoint:10676,accent:!1,alternates:["nothing","nothing.arrow.r","nothing.bar","nothing.circle","nothing.rev"],markupShorthand:null,mathShorthand:null},{name:"nothing.bar",codepoint:10673,accent:!1,alternates:["nothing","nothing.arrow.r","nothing.arrow.l","nothing.circle","nothing.rev"],markupShorthand:null,mathShorthand:null},{name:"nothing.circle",codepoint:10674,accent:!1,alternates:["nothing","nothing.arrow.r","nothing.arrow.l","nothing.bar","nothing.rev"],markupShorthand:null,mathShorthand:null},{name:"nothing.rev",codepoint:10672,accent:!1,alternates:["nothing","nothing.arrow.r","nothing.arrow.l","nothing.bar","nothing.circle"],markupShorthand:null,mathShorthand:null},{name:"without",codepoint:8726,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"complement",codepoint:8705,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"in",codepoint:8712,accent:!1,alternates:["in.not","in.rev","in.rev.not","in.rev.small","in.small"],markupShorthand:null,mathShorthand:null},{name:"in.not",codepoint:8713,accent:!1,alternates:["in","in.rev","in.rev.not","in.rev.small","in.small"],markupShorthand:null,mathShorthand:null},{name:"in.rev",codepoint:8715,accent:!1,alternates:["in","in.not","in.rev.not","in.rev.small","in.small"],markupShorthand:null,mathShorthand:null},{name:"in.rev.not",codepoint:8716,accent:!1,alternates:["in","in.not","in.rev","in.rev.small","in.small"],markupShorthand:null,mathShorthand:null},{name:"in.rev.small",codepoint:8717,accent:!1,alternates:["in","in.not","in.rev","in.rev.not","in.small"],markupShorthand:null,mathShorthand:null},{name:"in.small",codepoint:8714,accent:!1,alternates:["in","in.not","in.rev","in.rev.not","in.rev.small"],markupShorthand:null,mathShorthand:null},{name:"subset",codepoint:8834,accent:!1,alternates:["subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.dot",codepoint:10941,accent:!1,alternates:["subset","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.double",codepoint:8912,accent:!1,alternates:["subset","subset.dot","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.eq",codepoint:8838,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.eq.not",codepoint:8840,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.eq.sq",codepoint:8849,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq.not","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.eq.sq.not",codepoint:8930,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.neq","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.neq",codepoint:8842,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.not","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.not",codepoint:8836,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.sq","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.sq",codepoint:8847,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"subset.sq.neq",codepoint:8932,accent:!1,alternates:["subset","subset.dot","subset.double","subset.eq","subset.eq.not","subset.eq.sq","subset.eq.sq.not","subset.neq","subset.not","subset.sq"],markupShorthand:null,mathShorthand:null},{name:"supset",codepoint:8835,accent:!1,alternates:["supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.dot",codepoint:10942,accent:!1,alternates:["supset","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.double",codepoint:8913,accent:!1,alternates:["supset","supset.dot","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.eq",codepoint:8839,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.eq.not",codepoint:8841,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.eq.sq",codepoint:8850,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq.not","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.eq.sq.not",codepoint:8931,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.neq","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.neq",codepoint:8843,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.not","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.not",codepoint:8837,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.sq","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.sq",codepoint:8848,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq.neq"],markupShorthand:null,mathShorthand:null},{name:"supset.sq.neq",codepoint:8933,accent:!1,alternates:["supset","supset.dot","supset.double","supset.eq","supset.eq.not","supset.eq.sq","supset.eq.sq.not","supset.neq","supset.not","supset.sq"],markupShorthand:null,mathShorthand:null},{name:"union",codepoint:8746,accent:!1,alternates:["union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.arrow",codepoint:8844,accent:!1,alternates:["union","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.big",codepoint:8899,accent:!1,alternates:["union","union.arrow","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.dot",codepoint:8845,accent:!1,alternates:["union","union.arrow","union.big","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.dot.big",codepoint:10755,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.double",codepoint:8915,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.minus",codepoint:10817,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.or","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.or",codepoint:10821,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.plus","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.plus",codepoint:8846,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus.big","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.plus.big",codepoint:10756,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.sq","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.sq",codepoint:8852,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq.big","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.sq.big",codepoint:10758,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.double"],markupShorthand:null,mathShorthand:null},{name:"union.sq.double",codepoint:10831,accent:!1,alternates:["union","union.arrow","union.big","union.dot","union.dot.big","union.double","union.minus","union.or","union.plus","union.plus.big","union.sq","union.sq.big"],markupShorthand:null,mathShorthand:null},{name:"sect",codepoint:8745,accent:!1,alternates:["sect.and","sect.big","sect.dot","sect.double","sect.sq","sect.sq.big","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.and",codepoint:10820,accent:!1,alternates:["sect","sect.big","sect.dot","sect.double","sect.sq","sect.sq.big","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.big",codepoint:8898,accent:!1,alternates:["sect","sect.and","sect.dot","sect.double","sect.sq","sect.sq.big","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.dot",codepoint:10816,accent:!1,alternates:["sect","sect.and","sect.big","sect.double","sect.sq","sect.sq.big","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.double",codepoint:8914,accent:!1,alternates:["sect","sect.and","sect.big","sect.dot","sect.sq","sect.sq.big","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.sq",codepoint:8851,accent:!1,alternates:["sect","sect.and","sect.big","sect.dot","sect.double","sect.sq.big","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.sq.big",codepoint:10757,accent:!1,alternates:["sect","sect.and","sect.big","sect.dot","sect.double","sect.sq","sect.sq.double"],markupShorthand:null,mathShorthand:null},{name:"sect.sq.double",codepoint:10830,accent:!1,alternates:["sect","sect.and","sect.big","sect.dot","sect.double","sect.sq","sect.sq.big"],markupShorthand:null,mathShorthand:null},{name:"infinity",codepoint:8734,accent:!1,alternates:["infinity.bar","infinity.incomplete","infinity.tie"],markupShorthand:null,mathShorthand:null},{name:"infinity.bar",codepoint:10718,accent:!1,alternates:["infinity","infinity.incomplete","infinity.tie"],markupShorthand:null,mathShorthand:null},{name:"infinity.incomplete",codepoint:10716,accent:!1,alternates:["infinity","infinity.bar","infinity.tie"],markupShorthand:null,mathShorthand:null},{name:"infinity.tie",codepoint:10717,accent:!1,alternates:["infinity","infinity.bar","infinity.incomplete"],markupShorthand:null,mathShorthand:null},{name:"oo",codepoint:8734,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"diff",codepoint:8706,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"partial",codepoint:8706,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gradient",codepoint:8711,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"nabla",codepoint:8711,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sum",codepoint:8721,accent:!1,alternates:["sum.integral"],markupShorthand:null,mathShorthand:null},{name:"sum.integral",codepoint:10763,accent:!1,alternates:["sum"],markupShorthand:null,mathShorthand:null},{name:"product",codepoint:8719,accent:!1,alternates:["product.co"],markupShorthand:null,mathShorthand:null},{name:"product.co",codepoint:8720,accent:!1,alternates:["product"],markupShorthand:null,mathShorthand:null},{name:"integral",codepoint:8747,accent:!1,alternates:["integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.arrow.hook",codepoint:10775,accent:!1,alternates:["integral","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.ccw",codepoint:10769,accent:!1,alternates:["integral","integral.arrow.hook","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.cont",codepoint:8750,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.cont.ccw",codepoint:8755,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.cont.cw",codepoint:8754,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.cw",codepoint:8753,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.dash",codepoint:10765,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.dash.double",codepoint:10766,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.double",codepoint:8748,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.quad",codepoint:10764,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.sect",codepoint:10777,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.slash",codepoint:10767,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.square","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.square",codepoint:10774,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.surf","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.surf",codepoint:8751,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.times","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.times",codepoint:10776,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.triple","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.triple",codepoint:8749,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.union","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.union",codepoint:10778,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.vol"],markupShorthand:null,mathShorthand:null},{name:"integral.vol",codepoint:8752,accent:!1,alternates:["integral","integral.arrow.hook","integral.ccw","integral.cont","integral.cont.ccw","integral.cont.cw","integral.cw","integral.dash","integral.dash.double","integral.double","integral.quad","integral.sect","integral.slash","integral.square","integral.surf","integral.times","integral.triple","integral.union"],markupShorthand:null,mathShorthand:null},{name:"laplace",codepoint:8710,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"forall",codepoint:8704,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"exists",codepoint:8707,accent:!1,alternates:["exists.not"],markupShorthand:null,mathShorthand:null},{name:"exists.not",codepoint:8708,accent:!1,alternates:["exists"],markupShorthand:null,mathShorthand:null},{name:"top",codepoint:8868,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bot",codepoint:8869,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"not",codepoint:172,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"and",codepoint:8743,accent:!1,alternates:["and.big","and.curly","and.dot","and.double"],markupShorthand:null,mathShorthand:null},{name:"and.big",codepoint:8896,accent:!1,alternates:["and","and.curly","and.dot","and.double"],markupShorthand:null,mathShorthand:null},{name:"and.curly",codepoint:8911,accent:!1,alternates:["and","and.big","and.dot","and.double"],markupShorthand:null,mathShorthand:null},{name:"and.dot",codepoint:10193,accent:!1,alternates:["and","and.big","and.curly","and.double"],markupShorthand:null,mathShorthand:null},{name:"and.double",codepoint:10835,accent:!1,alternates:["and","and.big","and.curly","and.dot"],markupShorthand:null,mathShorthand:null},{name:"or",codepoint:8744,accent:!1,alternates:["or.big","or.curly","or.dot","or.double"],markupShorthand:null,mathShorthand:null},{name:"or.big",codepoint:8897,accent:!1,alternates:["or","or.curly","or.dot","or.double"],markupShorthand:null,mathShorthand:null},{name:"or.curly",codepoint:8910,accent:!1,alternates:["or","or.big","or.dot","or.double"],markupShorthand:null,mathShorthand:null},{name:"or.dot",codepoint:10183,accent:!1,alternates:["or","or.big","or.curly","or.double"],markupShorthand:null,mathShorthand:null},{name:"or.double",codepoint:10836,accent:!1,alternates:["or","or.big","or.curly","or.dot"],markupShorthand:null,mathShorthand:null},{name:"xor",codepoint:8853,accent:!1,alternates:["xor.big"],markupShorthand:null,mathShorthand:null},{name:"xor.big",codepoint:10753,accent:!1,alternates:["xor"],markupShorthand:null,mathShorthand:null},{name:"models",codepoint:8871,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"forces",codepoint:8873,accent:!1,alternates:["forces.not"],markupShorthand:null,mathShorthand:null},{name:"forces.not",codepoint:8878,accent:!1,alternates:["forces"],markupShorthand:null,mathShorthand:null},{name:"therefore",codepoint:8756,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"because",codepoint:8757,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"qed",codepoint:8718,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"compose",codepoint:8728,accent:!0,alternates:[],markupShorthand:null,mathShorthand:null},{name:"convolve",codepoint:8727,accent:!1,alternates:[],markupShorthand:null,mathShorthand:"*"},{name:"multimap",codepoint:8888,accent:!1,alternates:["multimap.double"],markupShorthand:null,mathShorthand:null},{name:"multimap.double",codepoint:10719,accent:!1,alternates:["multimap"],markupShorthand:null,mathShorthand:null},{name:"tiny",codepoint:10750,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"miny",codepoint:10751,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"divides",codepoint:8739,accent:!1,alternates:["divides.not"],markupShorthand:null,mathShorthand:null},{name:"divides.not",codepoint:8740,accent:!1,alternates:["divides"],markupShorthand:null,mathShorthand:null},{name:"wreath",codepoint:8768,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"parallel",codepoint:8741,accent:!1,alternates:["parallel.struck","parallel.circle","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.struck",codepoint:10994,accent:!1,alternates:["parallel","parallel.circle","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.circle",codepoint:10679,accent:!1,alternates:["parallel","parallel.struck","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.eq",codepoint:8917,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.equiv",codepoint:10856,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.eq","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.not",codepoint:8742,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.eq","parallel.equiv","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.slanted.eq",codepoint:10723,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq.tilde","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.slanted.eq.tilde",codepoint:10724,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.equiv","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.slanted.equiv",codepoint:10725,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.tilde"],markupShorthand:null,mathShorthand:null},{name:"parallel.tilde",codepoint:10995,accent:!1,alternates:["parallel","parallel.struck","parallel.circle","parallel.eq","parallel.equiv","parallel.not","parallel.slanted.eq","parallel.slanted.eq.tilde","parallel.slanted.equiv"],markupShorthand:null,mathShorthand:null},{name:"perp",codepoint:10178,accent:!1,alternates:["perp.circle"],markupShorthand:null,mathShorthand:null},{name:"perp.circle",codepoint:10681,accent:!1,alternates:["perp"],markupShorthand:null,mathShorthand:null},{name:"diameter",codepoint:8960,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"join",codepoint:10781,accent:!1,alternates:["join.r","join.l","join.l.r"],markupShorthand:null,mathShorthand:null},{name:"join.r",codepoint:10198,accent:!1,alternates:["join","join.l","join.l.r"],markupShorthand:null,mathShorthand:null},{name:"join.l",codepoint:10197,accent:!1,alternates:["join","join.r","join.l.r"],markupShorthand:null,mathShorthand:null},{name:"join.l.r",codepoint:10199,accent:!1,alternates:["join","join.r","join.l"],markupShorthand:null,mathShorthand:null},{name:"degree",codepoint:176,accent:!1,alternates:["degree.c","degree.f"],markupShorthand:null,mathShorthand:null},{name:"degree.c",codepoint:8451,accent:!1,alternates:["degree","degree.f"],markupShorthand:null,mathShorthand:null},{name:"degree.f",codepoint:8457,accent:!1,alternates:["degree","degree.c"],markupShorthand:null,mathShorthand:null},{name:"smash",codepoint:10803,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bitcoin",codepoint:8383,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dollar",codepoint:36,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"euro",codepoint:8364,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"franc",codepoint:8355,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lira",codepoint:8378,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"peso",codepoint:8369,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pound",codepoint:163,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ruble",codepoint:8381,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rupee",codepoint:8377,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"won",codepoint:8361,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"yen",codepoint:165,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ballot",codepoint:9744,accent:!1,alternates:["ballot.cross","ballot.check","ballot.check.heavy"],markupShorthand:null,mathShorthand:null},{name:"ballot.cross",codepoint:9746,accent:!1,alternates:["ballot","ballot.check","ballot.check.heavy"],markupShorthand:null,mathShorthand:null},{name:"ballot.check",codepoint:9745,accent:!1,alternates:["ballot","ballot.cross","ballot.check.heavy"],markupShorthand:null,mathShorthand:null},{name:"ballot.check.heavy",codepoint:128505,accent:!1,alternates:["ballot","ballot.cross","ballot.check"],markupShorthand:null,mathShorthand:null},{name:"checkmark",codepoint:10003,accent:!1,alternates:["checkmark.light","checkmark.heavy"],markupShorthand:null,mathShorthand:null},{name:"checkmark.light",codepoint:128504,accent:!1,alternates:["checkmark","checkmark.heavy"],markupShorthand:null,mathShorthand:null},{name:"checkmark.heavy",codepoint:10004,accent:!1,alternates:["checkmark","checkmark.light"],markupShorthand:null,mathShorthand:null},{name:"crossmark",codepoint:10007,accent:!1,alternates:["crossmark.heavy"],markupShorthand:null,mathShorthand:null},{name:"crossmark.heavy",codepoint:10008,accent:!1,alternates:["crossmark"],markupShorthand:null,mathShorthand:null},{name:"floral",codepoint:10086,accent:!1,alternates:["floral.l","floral.r"],markupShorthand:null,mathShorthand:null},{name:"floral.l",codepoint:9753,accent:!1,alternates:["floral","floral.r"],markupShorthand:null,mathShorthand:null},{name:"floral.r",codepoint:10087,accent:!1,alternates:["floral","floral.l"],markupShorthand:null,mathShorthand:null},{name:"refmark",codepoint:8251,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"copyright",codepoint:169,accent:!1,alternates:["copyright.sound"],markupShorthand:null,mathShorthand:null},{name:"copyright.sound",codepoint:8471,accent:!1,alternates:["copyright"],markupShorthand:null,mathShorthand:null},{name:"copyleft",codepoint:127279,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"trademark",codepoint:8482,accent:!1,alternates:["trademark.registered","trademark.service"],markupShorthand:null,mathShorthand:null},{name:"trademark.registered",codepoint:174,accent:!1,alternates:["trademark","trademark.service"],markupShorthand:null,mathShorthand:null},{name:"trademark.service",codepoint:8480,accent:!1,alternates:["trademark","trademark.registered"],markupShorthand:null,mathShorthand:null},{name:"maltese",codepoint:10016,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"suit.club.filled",codepoint:9827,accent:!1,alternates:["suit.club.stroked","suit.diamond.filled","suit.diamond.stroked","suit.heart.filled","suit.heart.stroked","suit.spade.filled","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.club.stroked",codepoint:9831,accent:!1,alternates:["suit.club.filled","suit.diamond.filled","suit.diamond.stroked","suit.heart.filled","suit.heart.stroked","suit.spade.filled","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.diamond.filled",codepoint:9830,accent:!1,alternates:["suit.club.filled","suit.club.stroked","suit.diamond.stroked","suit.heart.filled","suit.heart.stroked","suit.spade.filled","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.diamond.stroked",codepoint:9826,accent:!1,alternates:["suit.club.filled","suit.club.stroked","suit.diamond.filled","suit.heart.filled","suit.heart.stroked","suit.spade.filled","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.heart.filled",codepoint:9829,accent:!1,alternates:["suit.club.filled","suit.club.stroked","suit.diamond.filled","suit.diamond.stroked","suit.heart.stroked","suit.spade.filled","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.heart.stroked",codepoint:9825,accent:!1,alternates:["suit.club.filled","suit.club.stroked","suit.diamond.filled","suit.diamond.stroked","suit.heart.filled","suit.spade.filled","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.spade.filled",codepoint:9824,accent:!1,alternates:["suit.club.filled","suit.club.stroked","suit.diamond.filled","suit.diamond.stroked","suit.heart.filled","suit.heart.stroked","suit.spade.stroked"],markupShorthand:null,mathShorthand:null},{name:"suit.spade.stroked",codepoint:9828,accent:!1,alternates:["suit.club.filled","suit.club.stroked","suit.diamond.filled","suit.diamond.stroked","suit.heart.filled","suit.heart.stroked","suit.spade.filled"],markupShorthand:null,mathShorthand:null},{name:"note.up",codepoint:127900,accent:!1,alternates:["note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.down",codepoint:127901,accent:!1,alternates:["note.up","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.whole",codepoint:119133,accent:!1,alternates:["note.up","note.down","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.half",codepoint:119134,accent:!1,alternates:["note.up","note.down","note.whole","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.quarter",codepoint:119135,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.quarter.alt",codepoint:9833,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.eighth",codepoint:119136,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.eighth.alt",codepoint:9834,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.eighth.beamed",codepoint:9835,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.sixteenth","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.sixteenth",codepoint:119137,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth.beamed","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.sixteenth.beamed",codepoint:9836,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.grace","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.grace",codepoint:119189,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace.slash"],markupShorthand:null,mathShorthand:null},{name:"note.grace.slash",codepoint:119188,accent:!1,alternates:["note.up","note.down","note.whole","note.half","note.quarter","note.quarter.alt","note.eighth","note.eighth.alt","note.eighth.beamed","note.sixteenth","note.sixteenth.beamed","note.grace"],markupShorthand:null,mathShorthand:null},{name:"rest.whole",codepoint:119099,accent:!1,alternates:["rest.multiple","rest.multiple.measure","rest.half","rest.quarter","rest.eighth","rest.sixteenth"],markupShorthand:null,mathShorthand:null},{name:"rest.multiple",codepoint:119098,accent:!1,alternates:["rest.whole","rest.multiple.measure","rest.half","rest.quarter","rest.eighth","rest.sixteenth"],markupShorthand:null,mathShorthand:null},{name:"rest.multiple.measure",codepoint:119081,accent:!1,alternates:["rest.whole","rest.multiple","rest.half","rest.quarter","rest.eighth","rest.sixteenth"],markupShorthand:null,mathShorthand:null},{name:"rest.half",codepoint:119100,accent:!1,alternates:["rest.whole","rest.multiple","rest.multiple.measure","rest.quarter","rest.eighth","rest.sixteenth"],markupShorthand:null,mathShorthand:null},{name:"rest.quarter",codepoint:119101,accent:!1,alternates:["rest.whole","rest.multiple","rest.multiple.measure","rest.half","rest.eighth","rest.sixteenth"],markupShorthand:null,mathShorthand:null},{name:"rest.eighth",codepoint:119102,accent:!1,alternates:["rest.whole","rest.multiple","rest.multiple.measure","rest.half","rest.quarter","rest.sixteenth"],markupShorthand:null,mathShorthand:null},{name:"rest.sixteenth",codepoint:119103,accent:!1,alternates:["rest.whole","rest.multiple","rest.multiple.measure","rest.half","rest.quarter","rest.eighth"],markupShorthand:null,mathShorthand:null},{name:"natural",codepoint:9838,accent:!1,alternates:["natural.t","natural.b"],markupShorthand:null,mathShorthand:null},{name:"natural.t",codepoint:119086,accent:!1,alternates:["natural","natural.b"],markupShorthand:null,mathShorthand:null},{name:"natural.b",codepoint:119087,accent:!1,alternates:["natural","natural.t"],markupShorthand:null,mathShorthand:null},{name:"flat",codepoint:9837,accent:!1,alternates:["flat.t","flat.b","flat.double","flat.quarter"],markupShorthand:null,mathShorthand:null},{name:"flat.t",codepoint:119084,accent:!1,alternates:["flat","flat.b","flat.double","flat.quarter"],markupShorthand:null,mathShorthand:null},{name:"flat.b",codepoint:119085,accent:!1,alternates:["flat","flat.t","flat.double","flat.quarter"],markupShorthand:null,mathShorthand:null},{name:"flat.double",codepoint:119083,accent:!1,alternates:["flat","flat.t","flat.b","flat.quarter"],markupShorthand:null,mathShorthand:null},{name:"flat.quarter",codepoint:119091,accent:!1,alternates:["flat","flat.t","flat.b","flat.double"],markupShorthand:null,mathShorthand:null},{name:"sharp",codepoint:9839,accent:!1,alternates:["sharp.t","sharp.b","sharp.double","sharp.quarter"],markupShorthand:null,mathShorthand:null},{name:"sharp.t",codepoint:119088,accent:!1,alternates:["sharp","sharp.b","sharp.double","sharp.quarter"],markupShorthand:null,mathShorthand:null},{name:"sharp.b",codepoint:119089,accent:!1,alternates:["sharp","sharp.t","sharp.double","sharp.quarter"],markupShorthand:null,mathShorthand:null},{name:"sharp.double",codepoint:119082,accent:!1,alternates:["sharp","sharp.t","sharp.b","sharp.quarter"],markupShorthand:null,mathShorthand:null},{name:"sharp.quarter",codepoint:119090,accent:!1,alternates:["sharp","sharp.t","sharp.b","sharp.double"],markupShorthand:null,mathShorthand:null},{name:"bullet",codepoint:8226,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"circle.stroked",codepoint:9675,accent:!0,alternates:["circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.stroked.tiny",codepoint:8728,accent:!0,alternates:["circle.stroked","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.stroked.small",codepoint:9900,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.stroked.big",codepoint:9711,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.filled","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.filled",codepoint:9679,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.filled.tiny",codepoint:10625,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.small","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.filled.small",codepoint:8729,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.big","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.filled.big",codepoint:11044,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.small","circle.dotted","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.dotted",codepoint:9676,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.nested"],markupShorthand:null,mathShorthand:null},{name:"circle.nested",codepoint:8858,accent:!1,alternates:["circle.stroked","circle.stroked.tiny","circle.stroked.small","circle.stroked.big","circle.filled","circle.filled.tiny","circle.filled.small","circle.filled.big","circle.dotted"],markupShorthand:null,mathShorthand:null},{name:"ellipse.stroked.h",codepoint:11053,accent:!1,alternates:["ellipse.stroked.v","ellipse.filled.h","ellipse.filled.v"],markupShorthand:null,mathShorthand:null},{name:"ellipse.stroked.v",codepoint:11055,accent:!1,alternates:["ellipse.stroked.h","ellipse.filled.h","ellipse.filled.v"],markupShorthand:null,mathShorthand:null},{name:"ellipse.filled.h",codepoint:11052,accent:!1,alternates:["ellipse.stroked.h","ellipse.stroked.v","ellipse.filled.v"],markupShorthand:null,mathShorthand:null},{name:"ellipse.filled.v",codepoint:11054,accent:!1,alternates:["ellipse.stroked.h","ellipse.stroked.v","ellipse.filled.h"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.t",codepoint:9651,accent:!1,alternates:["triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.b",codepoint:9661,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.r",codepoint:9655,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.l",codepoint:9665,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.bl",codepoint:9722,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.br",codepoint:9727,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.tl",codepoint:9720,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.tr",codepoint:9721,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.small.t",codepoint:9653,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.small.b",codepoint:9663,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.small.r",codepoint:9657,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.small.l",codepoint:9667,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.rounded",codepoint:128710,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.nested",codepoint:10177,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.stroked.dot",codepoint:9708,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.t",codepoint:9650,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.b",codepoint:9660,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.r",codepoint:9654,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.l",codepoint:9664,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.bl",codepoint:9699,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.br",codepoint:9698,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.tl",codepoint:9700,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.tr",codepoint:9701,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.small.t",codepoint:9652,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.b","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.small.b",codepoint:9662,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.r","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.small.r",codepoint:9656,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.l"],markupShorthand:null,mathShorthand:null},{name:"triangle.filled.small.l",codepoint:9666,accent:!1,alternates:["triangle.stroked.t","triangle.stroked.b","triangle.stroked.r","triangle.stroked.l","triangle.stroked.bl","triangle.stroked.br","triangle.stroked.tl","triangle.stroked.tr","triangle.stroked.small.t","triangle.stroked.small.b","triangle.stroked.small.r","triangle.stroked.small.l","triangle.stroked.rounded","triangle.stroked.nested","triangle.stroked.dot","triangle.filled.t","triangle.filled.b","triangle.filled.r","triangle.filled.l","triangle.filled.bl","triangle.filled.br","triangle.filled.tl","triangle.filled.tr","triangle.filled.small.t","triangle.filled.small.b","triangle.filled.small.r"],markupShorthand:null,mathShorthand:null},{name:"square.stroked",codepoint:9633,accent:!1,alternates:["square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.stroked.tiny",codepoint:9643,accent:!1,alternates:["square.stroked","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.stroked.small",codepoint:9725,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.stroked.medium",codepoint:9723,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.stroked.big",codepoint:11036,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.stroked.dotted",codepoint:11034,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.stroked.rounded",codepoint:9634,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.filled","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.filled",codepoint:9632,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled.tiny","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.filled.tiny",codepoint:9642,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.small","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.filled.small",codepoint:9726,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.medium","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.filled.medium",codepoint:9724,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.big"],markupShorthand:null,mathShorthand:null},{name:"square.filled.big",codepoint:11035,accent:!1,alternates:["square.stroked","square.stroked.tiny","square.stroked.small","square.stroked.medium","square.stroked.big","square.stroked.dotted","square.stroked.rounded","square.filled","square.filled.tiny","square.filled.small","square.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"rect.stroked.h",codepoint:9645,accent:!1,alternates:["rect.stroked.v","rect.filled.h","rect.filled.v"],markupShorthand:null,mathShorthand:null},{name:"rect.stroked.v",codepoint:9647,accent:!1,alternates:["rect.stroked.h","rect.filled.h","rect.filled.v"],markupShorthand:null,mathShorthand:null},{name:"rect.filled.h",codepoint:9644,accent:!1,alternates:["rect.stroked.h","rect.stroked.v","rect.filled.v"],markupShorthand:null,mathShorthand:null},{name:"rect.filled.v",codepoint:9646,accent:!1,alternates:["rect.stroked.h","rect.stroked.v","rect.filled.h"],markupShorthand:null,mathShorthand:null},{name:"penta.stroked",codepoint:11040,accent:!1,alternates:["penta.filled"],markupShorthand:null,mathShorthand:null},{name:"penta.filled",codepoint:11039,accent:!1,alternates:["penta.stroked"],markupShorthand:null,mathShorthand:null},{name:"hexa.stroked",codepoint:11041,accent:!1,alternates:["hexa.filled"],markupShorthand:null,mathShorthand:null},{name:"hexa.filled",codepoint:11042,accent:!1,alternates:["hexa.stroked"],markupShorthand:null,mathShorthand:null},{name:"diamond.stroked",codepoint:9671,accent:!1,alternates:["diamond.stroked.small","diamond.stroked.medium","diamond.stroked.dot","diamond.filled","diamond.filled.medium","diamond.filled.small"],markupShorthand:null,mathShorthand:null},{name:"diamond.stroked.small",codepoint:8900,accent:!1,alternates:["diamond.stroked","diamond.stroked.medium","diamond.stroked.dot","diamond.filled","diamond.filled.medium","diamond.filled.small"],markupShorthand:null,mathShorthand:null},{name:"diamond.stroked.medium",codepoint:11046,accent:!1,alternates:["diamond.stroked","diamond.stroked.small","diamond.stroked.dot","diamond.filled","diamond.filled.medium","diamond.filled.small"],markupShorthand:null,mathShorthand:null},{name:"diamond.stroked.dot",codepoint:10192,accent:!1,alternates:["diamond.stroked","diamond.stroked.small","diamond.stroked.medium","diamond.filled","diamond.filled.medium","diamond.filled.small"],markupShorthand:null,mathShorthand:null},{name:"diamond.filled",codepoint:9670,accent:!1,alternates:["diamond.stroked","diamond.stroked.small","diamond.stroked.medium","diamond.stroked.dot","diamond.filled.medium","diamond.filled.small"],markupShorthand:null,mathShorthand:null},{name:"diamond.filled.medium",codepoint:11045,accent:!1,alternates:["diamond.stroked","diamond.stroked.small","diamond.stroked.medium","diamond.stroked.dot","diamond.filled","diamond.filled.small"],markupShorthand:null,mathShorthand:null},{name:"diamond.filled.small",codepoint:11049,accent:!1,alternates:["diamond.stroked","diamond.stroked.small","diamond.stroked.medium","diamond.stroked.dot","diamond.filled","diamond.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"lozenge.stroked",codepoint:9674,accent:!1,alternates:["lozenge.stroked.small","lozenge.stroked.medium","lozenge.filled","lozenge.filled.small","lozenge.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"lozenge.stroked.small",codepoint:11051,accent:!1,alternates:["lozenge.stroked","lozenge.stroked.medium","lozenge.filled","lozenge.filled.small","lozenge.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"lozenge.stroked.medium",codepoint:11048,accent:!1,alternates:["lozenge.stroked","lozenge.stroked.small","lozenge.filled","lozenge.filled.small","lozenge.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"lozenge.filled",codepoint:10731,accent:!1,alternates:["lozenge.stroked","lozenge.stroked.small","lozenge.stroked.medium","lozenge.filled.small","lozenge.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"lozenge.filled.small",codepoint:11050,accent:!1,alternates:["lozenge.stroked","lozenge.stroked.small","lozenge.stroked.medium","lozenge.filled","lozenge.filled.medium"],markupShorthand:null,mathShorthand:null},{name:"lozenge.filled.medium",codepoint:11047,accent:!1,alternates:["lozenge.stroked","lozenge.stroked.small","lozenge.stroked.medium","lozenge.filled","lozenge.filled.small"],markupShorthand:null,mathShorthand:null},{name:"parallelogram.stroked",codepoint:9649,accent:!1,alternates:["parallelogram.filled"],markupShorthand:null,mathShorthand:null},{name:"parallelogram.filled",codepoint:9648,accent:!1,alternates:["parallelogram.stroked"],markupShorthand:null,mathShorthand:null},{name:"star.op",codepoint:8902,accent:!1,alternates:["star.stroked","star.filled"],markupShorthand:null,mathShorthand:null},{name:"star.stroked",codepoint:9734,accent:!1,alternates:["star.op","star.filled"],markupShorthand:null,mathShorthand:null},{name:"star.filled",codepoint:9733,accent:!1,alternates:["star.op","star.stroked"],markupShorthand:null,mathShorthand:null},{name:"arrow.r",codepoint:8594,accent:!0,alternates:["arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"->"},{name:"arrow.r.long.bar",codepoint:10236,accent:!1,alternates:["arrow.r","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.bar",codepoint:8614,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"|->"},{name:"arrow.r.curve",codepoint:10551,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.turn",codepoint:11150,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.dashed",codepoint:8674,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.dotted",codepoint:10513,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.double",codepoint:8658,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"=>"},{name:"arrow.r.double.bar",codepoint:10503,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"|=>"},{name:"arrow.r.double.long",codepoint:10233,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"==>"},{name:"arrow.r.double.long.bar",codepoint:10238,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.double.not",codepoint:8655,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.filled",codepoint:10145,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.hook",codepoint:8618,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.long",codepoint:10230,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"-->"},{name:"arrow.r.long.squiggly",codepoint:10239,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"~~>"},{name:"arrow.r.loop",codepoint:8620,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.not",codepoint:8603,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.quad",codepoint:11078,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.squiggly",codepoint:8669,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"~>"},{name:"arrow.r.stop",codepoint:8677,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.stroked",codepoint:8680,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.tail",codepoint:8611,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:">->"},{name:"arrow.r.tilde",codepoint:10610,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.triple",codepoint:8667,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.twohead.bar",codepoint:10501,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.twohead",codepoint:8608,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"->>"},{name:"arrow.r.wave",codepoint:8605,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l",codepoint:8592,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<-"},{name:"arrow.l.bar",codepoint:8612,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.curve",codepoint:10550,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.turn",codepoint:11148,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.dashed",codepoint:8672,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.dotted",codepoint:11064,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.double",codepoint:8656,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.double.bar",codepoint:10502,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.double.long",codepoint:10232,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<=="},{name:"arrow.l.double.long.bar",codepoint:10237,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.double.not",codepoint:8653,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.filled",codepoint:11013,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.hook",codepoint:8617,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.long",codepoint:10229,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<--"},{name:"arrow.l.long.bar",codepoint:10235,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.long.squiggly",codepoint:11059,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<~~"},{name:"arrow.l.loop",codepoint:8619,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.not",codepoint:8602,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.quad",codepoint:11077,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.squiggly",codepoint:8668,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<~"},{name:"arrow.l.stop",codepoint:8676,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.stroked",codepoint:8678,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.tail",codepoint:8610,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<-<"},{name:"arrow.l.tilde",codepoint:11081,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.triple",codepoint:8666,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.twohead.bar",codepoint:11062,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.twohead",codepoint:8606,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<<-"},{name:"arrow.l.wave",codepoint:8604,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t",codepoint:8593,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.bar",codepoint:8613,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.curve",codepoint:10548,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.turn",codepoint:11149,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.dashed",codepoint:8673,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.double",codepoint:8657,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.filled",codepoint:11014,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.quad",codepoint:10224,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.stop",codepoint:10514,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.stroked",codepoint:8679,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.triple",codepoint:10506,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.twohead",codepoint:8607,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b",codepoint:8595,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.bar",codepoint:8615,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.curve",codepoint:10549,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.turn",codepoint:11151,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.dashed",codepoint:8675,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.double",codepoint:8659,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.filled",codepoint:11015,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.quad",codepoint:10225,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.stop",codepoint:10515,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.stroked",codepoint:8681,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.triple",codepoint:10507,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.twohead",codepoint:8609,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.r",codepoint:8596,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<->"},{name:"arrow.l.r.double",codepoint:8660,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<=>"},{name:"arrow.l.r.double.long",codepoint:10234,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<==>"},{name:"arrow.l.r.double.not",codepoint:8654,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.r.filled",codepoint:11020,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.r.long",codepoint:10231,accent:!0,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:"<-->"},{name:"arrow.l.r.not",codepoint:8622,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.r.stroked",codepoint:11012,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.r.wave",codepoint:8621,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.b",codepoint:8597,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.b.double",codepoint:8661,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.b.filled",codepoint:11021,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.b.stroked",codepoint:8691,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr",codepoint:8599,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr.double",codepoint:8663,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr.filled",codepoint:11016,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr.hook",codepoint:10532,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr.stroked",codepoint:11008,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.br",codepoint:8600,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.br.double",codepoint:8664,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.br.filled",codepoint:11018,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.br.hook",codepoint:10533,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.br.stroked",codepoint:11010,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl",codepoint:8598,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl.double",codepoint:8662,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl.filled",codepoint:11017,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl.hook",codepoint:10531,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl.stroked",codepoint:11009,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.bl",codepoint:8601,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.bl.double",codepoint:8665,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.bl.filled",codepoint:11019,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.bl.hook",codepoint:10534,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.bl.stroked",codepoint:11011,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl.br",codepoint:10529,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr.bl",codepoint:10530,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.ccw",codepoint:8634,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw.half","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.ccw.half",codepoint:8630,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.cw","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.cw",codepoint:8635,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw.half","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.cw.half",codepoint:8631,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.zigzag"],markupShorthand:null,mathShorthand:null},{name:"arrow.zigzag",codepoint:8623,accent:!1,alternates:["arrow.r","arrow.r.long.bar","arrow.r.bar","arrow.r.curve","arrow.r.turn","arrow.r.dashed","arrow.r.dotted","arrow.r.double","arrow.r.double.bar","arrow.r.double.long","arrow.r.double.long.bar","arrow.r.double.not","arrow.r.filled","arrow.r.hook","arrow.r.long","arrow.r.long.squiggly","arrow.r.loop","arrow.r.not","arrow.r.quad","arrow.r.squiggly","arrow.r.stop","arrow.r.stroked","arrow.r.tail","arrow.r.tilde","arrow.r.triple","arrow.r.twohead.bar","arrow.r.twohead","arrow.r.wave","arrow.l","arrow.l.bar","arrow.l.curve","arrow.l.turn","arrow.l.dashed","arrow.l.dotted","arrow.l.double","arrow.l.double.bar","arrow.l.double.long","arrow.l.double.long.bar","arrow.l.double.not","arrow.l.filled","arrow.l.hook","arrow.l.long","arrow.l.long.bar","arrow.l.long.squiggly","arrow.l.loop","arrow.l.not","arrow.l.quad","arrow.l.squiggly","arrow.l.stop","arrow.l.stroked","arrow.l.tail","arrow.l.tilde","arrow.l.triple","arrow.l.twohead.bar","arrow.l.twohead","arrow.l.wave","arrow.t","arrow.t.bar","arrow.t.curve","arrow.t.turn","arrow.t.dashed","arrow.t.double","arrow.t.filled","arrow.t.quad","arrow.t.stop","arrow.t.stroked","arrow.t.triple","arrow.t.twohead","arrow.b","arrow.b.bar","arrow.b.curve","arrow.b.turn","arrow.b.dashed","arrow.b.double","arrow.b.filled","arrow.b.quad","arrow.b.stop","arrow.b.stroked","arrow.b.triple","arrow.b.twohead","arrow.l.r","arrow.l.r.double","arrow.l.r.double.long","arrow.l.r.double.not","arrow.l.r.filled","arrow.l.r.long","arrow.l.r.not","arrow.l.r.stroked","arrow.l.r.wave","arrow.t.b","arrow.t.b.double","arrow.t.b.filled","arrow.t.b.stroked","arrow.tr","arrow.tr.double","arrow.tr.filled","arrow.tr.hook","arrow.tr.stroked","arrow.br","arrow.br.double","arrow.br.filled","arrow.br.hook","arrow.br.stroked","arrow.tl","arrow.tl.double","arrow.tl.filled","arrow.tl.hook","arrow.tl.stroked","arrow.bl","arrow.bl.double","arrow.bl.filled","arrow.bl.hook","arrow.bl.stroked","arrow.tl.br","arrow.tr.bl","arrow.ccw","arrow.ccw.half","arrow.cw","arrow.cw.half"],markupShorthand:null,mathShorthand:null},{name:"arrows.rr",codepoint:8649,accent:!1,alternates:["arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.ll",codepoint:8647,accent:!1,alternates:["arrows.rr","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.tt",codepoint:8648,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.bb",codepoint:8650,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.lr",codepoint:8646,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.lr.stop",codepoint:8633,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.rl","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.rl",codepoint:8644,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.tb","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.tb",codepoint:8645,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.bt","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.bt",codepoint:8693,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.rrr","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.rrr",codepoint:8694,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.lll"],markupShorthand:null,mathShorthand:null},{name:"arrows.lll",codepoint:11057,accent:!1,alternates:["arrows.rr","arrows.ll","arrows.tt","arrows.bb","arrows.lr","arrows.lr.stop","arrows.rl","arrows.tb","arrows.bt","arrows.rrr"],markupShorthand:null,mathShorthand:null},{name:"arrowhead.t",codepoint:8963,accent:!1,alternates:["arrowhead.b"],markupShorthand:null,mathShorthand:null},{name:"arrowhead.b",codepoint:8964,accent:!1,alternates:["arrowhead.t"],markupShorthand:null,mathShorthand:null},{name:"harpoon.rt",codepoint:8640,accent:!0,alternates:["harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.rt.bar",codepoint:10587,accent:!1,alternates:["harpoon.rt","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.rt.stop",codepoint:10579,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.rb",codepoint:8641,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.rb.bar",codepoint:10591,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.rb.stop",codepoint:10583,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lt",codepoint:8636,accent:!0,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lt.bar",codepoint:10586,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lt.stop",codepoint:10578,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lb",codepoint:8637,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lb.bar",codepoint:10590,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lb.stop",codepoint:10582,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tl",codepoint:8639,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tl.bar",codepoint:10592,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tl.stop",codepoint:10584,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tr",codepoint:8638,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tr.bar",codepoint:10588,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tr.stop",codepoint:10580,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.bl",codepoint:8643,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.bl.bar",codepoint:10593,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.bl.stop",codepoint:10585,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.br",codepoint:8642,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.br.bar",codepoint:10589,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.br.stop",codepoint:10581,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lt.rt",codepoint:10574,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lb.rb",codepoint:10576,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lb.rt",codepoint:10571,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.lt.rb",codepoint:10570,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tl.bl",codepoint:10577,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tr.br","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tr.br",codepoint:10575,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tl.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tl.br",codepoint:10573,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tr.bl"],markupShorthand:null,mathShorthand:null},{name:"harpoon.tr.bl",codepoint:10572,accent:!1,alternates:["harpoon.rt","harpoon.rt.bar","harpoon.rt.stop","harpoon.rb","harpoon.rb.bar","harpoon.rb.stop","harpoon.lt","harpoon.lt.bar","harpoon.lt.stop","harpoon.lb","harpoon.lb.bar","harpoon.lb.stop","harpoon.tl","harpoon.tl.bar","harpoon.tl.stop","harpoon.tr","harpoon.tr.bar","harpoon.tr.stop","harpoon.bl","harpoon.bl.bar","harpoon.bl.stop","harpoon.br","harpoon.br.bar","harpoon.br.stop","harpoon.lt.rt","harpoon.lb.rb","harpoon.lb.rt","harpoon.lt.rb","harpoon.tl.bl","harpoon.tr.br","harpoon.tl.br"],markupShorthand:null,mathShorthand:null},{name:"harpoons.rtrb",codepoint:10596,accent:!1,alternates:["harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.blbr",codepoint:10597,accent:!1,alternates:["harpoons.rtrb","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.bltr",codepoint:10607,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.lbrb",codepoint:10599,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.ltlb",codepoint:10594,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.ltrb",codepoint:8651,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.ltrt",codepoint:10598,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.rblb",codepoint:10601,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.rtlb",codepoint:8652,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlt","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.rtlt",codepoint:10600,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.tlbr","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.tlbr",codepoint:10606,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tltr"],markupShorthand:null,mathShorthand:null},{name:"harpoons.tltr",codepoint:10595,accent:!1,alternates:["harpoons.rtrb","harpoons.blbr","harpoons.bltr","harpoons.lbrb","harpoons.ltlb","harpoons.ltrb","harpoons.ltrt","harpoons.rblb","harpoons.rtlb","harpoons.rtlt","harpoons.tlbr"],markupShorthand:null,mathShorthand:null},{name:"tack.r",codepoint:8866,accent:!1,alternates:["tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.r.not",codepoint:8876,accent:!1,alternates:["tack.r","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.r.long",codepoint:10205,accent:!1,alternates:["tack.r","tack.r.not","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.r.short",codepoint:8870,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.r.double",codepoint:8872,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.r.double.not",codepoint:8877,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.l",codepoint:8867,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.l.long",codepoint:10206,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.l.short",codepoint:10974,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.l.double",codepoint:10980,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.t",codepoint:8869,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.t.big",codepoint:10200,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.t.double",codepoint:10987,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.t.short",codepoint:10976,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.b","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.b",codepoint:8868,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b.big","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.b.big",codepoint:10201,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.double","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.b.double",codepoint:10986,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.short","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.b.short",codepoint:10975,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.l.r"],markupShorthand:null,mathShorthand:null},{name:"tack.l.r",codepoint:10203,accent:!1,alternates:["tack.r","tack.r.not","tack.r.long","tack.r.short","tack.r.double","tack.r.double.not","tack.l","tack.l.long","tack.l.short","tack.l.double","tack.t","tack.t.big","tack.t.double","tack.t.short","tack.b","tack.b.big","tack.b.double","tack.b.short"],markupShorthand:null,mathShorthand:null},{name:"alpha",codepoint:945,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"beta",codepoint:946,accent:!1,alternates:["beta.alt"],markupShorthand:null,mathShorthand:null},{name:"beta.alt",codepoint:976,accent:!1,alternates:["beta"],markupShorthand:null,mathShorthand:null},{name:"chi",codepoint:967,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"delta",codepoint:948,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"epsilon",codepoint:949,accent:!1,alternates:["epsilon.alt"],markupShorthand:null,mathShorthand:null},{name:"epsilon.alt",codepoint:1013,accent:!1,alternates:["epsilon"],markupShorthand:null,mathShorthand:null},{name:"eta",codepoint:951,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gamma",codepoint:947,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"iota",codepoint:953,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kai",codepoint:983,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kappa",codepoint:954,accent:!1,alternates:["kappa.alt"],markupShorthand:null,mathShorthand:null},{name:"kappa.alt",codepoint:1008,accent:!1,alternates:["kappa"],markupShorthand:null,mathShorthand:null},{name:"lambda",codepoint:955,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mu",codepoint:956,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"nu",codepoint:957,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ohm",codepoint:8486,accent:!1,alternates:["ohm.inv"],markupShorthand:null,mathShorthand:null},{name:"ohm.inv",codepoint:8487,accent:!1,alternates:["ohm"],markupShorthand:null,mathShorthand:null},{name:"omega",codepoint:969,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"omicron",codepoint:959,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"phi",codepoint:966,accent:!1,alternates:["phi.alt"],markupShorthand:null,mathShorthand:null},{name:"phi.alt",codepoint:981,accent:!1,alternates:["phi"],markupShorthand:null,mathShorthand:null},{name:"pi",codepoint:960,accent:!1,alternates:["pi.alt"],markupShorthand:null,mathShorthand:null},{name:"pi.alt",codepoint:982,accent:!1,alternates:["pi"],markupShorthand:null,mathShorthand:null},{name:"psi",codepoint:968,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rho",codepoint:961,accent:!1,alternates:["rho.alt"],markupShorthand:null,mathShorthand:null},{name:"rho.alt",codepoint:1009,accent:!1,alternates:["rho"],markupShorthand:null,mathShorthand:null},{name:"sigma",codepoint:963,accent:!1,alternates:["sigma.alt"],markupShorthand:null,mathShorthand:null},{name:"sigma.alt",codepoint:962,accent:!1,alternates:["sigma"],markupShorthand:null,mathShorthand:null},{name:"tau",codepoint:964,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"theta",codepoint:952,accent:!1,alternates:["theta.alt"],markupShorthand:null,mathShorthand:null},{name:"theta.alt",codepoint:977,accent:!1,alternates:["theta"],markupShorthand:null,mathShorthand:null},{name:"upsilon",codepoint:965,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"xi",codepoint:958,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zeta",codepoint:950,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Alpha",codepoint:913,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Beta",codepoint:914,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Chi",codepoint:935,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Delta",codepoint:916,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Epsilon",codepoint:917,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Eta",codepoint:919,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Gamma",codepoint:915,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Iota",codepoint:921,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Kai",codepoint:975,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Kappa",codepoint:922,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Lambda",codepoint:923,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Mu",codepoint:924,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Nu",codepoint:925,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Omega",codepoint:937,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Omicron",codepoint:927,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Phi",codepoint:934,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Pi",codepoint:928,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Psi",codepoint:936,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Rho",codepoint:929,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Sigma",codepoint:931,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Tau",codepoint:932,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Theta",codepoint:920,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Upsilon",codepoint:933,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Xi",codepoint:926,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Zeta",codepoint:918,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"aleph",codepoint:1488,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"alef",codepoint:1488,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"beth",codepoint:1489,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bet",codepoint:1489,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gimmel",codepoint:1490,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gimel",codepoint:1490,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"daleth",codepoint:1491,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dalet",codepoint:1491,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shin",codepoint:1513,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"AA",codepoint:120120,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"BB",codepoint:120121,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"CC",codepoint:8450,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"DD",codepoint:120123,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"EE",codepoint:120124,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"FF",codepoint:120125,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"GG",codepoint:120126,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"HH",codepoint:8461,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"II",codepoint:120128,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"JJ",codepoint:120129,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"KK",codepoint:120130,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"LL",codepoint:120131,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"MM",codepoint:120132,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"NN",codepoint:8469,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"OO",codepoint:120134,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"PP",codepoint:8473,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"QQ",codepoint:8474,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"RR",codepoint:8477,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"SS",codepoint:120138,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"TT",codepoint:120139,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"UU",codepoint:120140,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"VV",codepoint:120141,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"WW",codepoint:120142,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"XX",codepoint:120143,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"YY",codepoint:120144,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ZZ",codepoint:8484,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ell",codepoint:8467,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"planck",codepoint:8462,accent:!1,alternates:["planck.reduce"],markupShorthand:null,mathShorthand:null},{name:"planck.reduce",codepoint:8463,accent:!1,alternates:["planck"],markupShorthand:null,mathShorthand:null},{name:"angstrom",codepoint:8491,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kelvin",codepoint:8490,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Re",codepoint:8476,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"Im",codepoint:8465,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dotless.i",codepoint:120484,accent:!1,alternates:["dotless.j"],markupShorthand:null,mathShorthand:null},{name:"dotless.j",codepoint:120485,accent:!1,alternates:["dotless.i"],markupShorthand:null,mathShorthand:null}]}},children:[]},{route:"/docs/reference/symbols/emoji/",title:"Emoji",description:"Documentation for the `emoji` module.",part:null,outline:[],body:{kind:"symbols",content:{name:"emoji",title:"Emoji",details:`<p>Named emoji.</p>
<p>For example, <code>#emoji.face</code> produces the 😀 emoji. If you frequently use
certain emojis, you can also import them from the <code>emoji</code> module (<code><span class="typ-key">#</span><span class="typ-key">import</span> emoji<span class="typ-punct">:</span> face</code>) to use them without the <code>#emoji.</code> prefix.</p>`,list:[{name:"abacus",codepoint:129518,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"abc",codepoint:128292,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"abcd",codepoint:128289,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ABCD",codepoint:128288,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"accordion",codepoint:129687,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"aesculapius",codepoint:9877,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"airplane",codepoint:9992,accent:!1,alternates:["airplane.landing","airplane.small","airplane.takeoff"],markupShorthand:null,mathShorthand:null},{name:"airplane.landing",codepoint:128748,accent:!1,alternates:["airplane","airplane.small","airplane.takeoff"],markupShorthand:null,mathShorthand:null},{name:"airplane.small",codepoint:128745,accent:!1,alternates:["airplane","airplane.landing","airplane.takeoff"],markupShorthand:null,mathShorthand:null},{name:"airplane.takeoff",codepoint:128747,accent:!1,alternates:["airplane","airplane.landing","airplane.small"],markupShorthand:null,mathShorthand:null},{name:"alembic",codepoint:9879,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"alien",codepoint:128125,accent:!1,alternates:["alien.monster"],markupShorthand:null,mathShorthand:null},{name:"alien.monster",codepoint:128126,accent:!1,alternates:["alien"],markupShorthand:null,mathShorthand:null},{name:"ambulance",codepoint:128657,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"amphora",codepoint:127994,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"anchor",codepoint:9875,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"anger",codepoint:128162,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ant",codepoint:128028,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"apple.green",codepoint:127823,accent:!1,alternates:["apple.red"],markupShorthand:null,mathShorthand:null},{name:"apple.red",codepoint:127822,accent:!1,alternates:["apple.green"],markupShorthand:null,mathShorthand:null},{name:"arm.mech",codepoint:129470,accent:!1,alternates:["arm.muscle","arm.selfie"],markupShorthand:null,mathShorthand:null},{name:"arm.muscle",codepoint:128170,accent:!1,alternates:["arm.mech","arm.selfie"],markupShorthand:null,mathShorthand:null},{name:"arm.selfie",codepoint:129331,accent:!1,alternates:["arm.mech","arm.muscle"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.filled",codepoint:10145,accent:!1,alternates:["arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.hook",codepoint:8618,accent:!1,alternates:["arrow.r.filled","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.r.soon",codepoint:128284,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.filled",codepoint:11013,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.hook",codepoint:8617,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.back",codepoint:128281,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.end",codepoint:128282,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.filled",codepoint:11014,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.curve",codepoint:10548,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.top",codepoint:128285,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.filled",codepoint:11015,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.b.curve",codepoint:10549,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.l.r",codepoint:8596,accent:!0,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:"<->"},{name:"arrow.l.r.on",codepoint:128283,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.t.b","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.t.b",codepoint:8597,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.bl","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.bl",codepoint:8601,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.br","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.br",codepoint:8600,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.tl","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.tl",codepoint:8598,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tr"],markupShorthand:null,mathShorthand:null},{name:"arrow.tr",codepoint:8599,accent:!1,alternates:["arrow.r.filled","arrow.r.hook","arrow.r.soon","arrow.l.filled","arrow.l.hook","arrow.l.back","arrow.l.end","arrow.t.filled","arrow.t.curve","arrow.t.top","arrow.b.filled","arrow.b.curve","arrow.l.r","arrow.l.r.on","arrow.t.b","arrow.bl","arrow.br","arrow.tl"],markupShorthand:null,mathShorthand:null},{name:"arrows.cycle",codepoint:128260,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ast",codepoint:42,accent:!1,alternates:["ast.box"],markupShorthand:null,mathShorthand:null},{name:"ast.box",codepoint:10035,accent:!1,alternates:["ast"],markupShorthand:null,mathShorthand:null},{name:"atm",codepoint:127975,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"atom",codepoint:9883,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"aubergine",codepoint:127814,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"avocado",codepoint:129361,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"axe",codepoint:129683,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"baby",codepoint:128118,accent:!1,alternates:["baby.angel","baby.box"],markupShorthand:null,mathShorthand:null},{name:"baby.angel",codepoint:128124,accent:!1,alternates:["baby","baby.box"],markupShorthand:null,mathShorthand:null},{name:"baby.box",codepoint:128700,accent:!1,alternates:["baby","baby.angel"],markupShorthand:null,mathShorthand:null},{name:"babybottle",codepoint:127868,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"backpack",codepoint:127890,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bacon",codepoint:129363,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"badger",codepoint:129441,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"badminton",codepoint:127992,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bagel",codepoint:129391,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"baggageclaim",codepoint:128708,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"baguette",codepoint:129366,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"balloon",codepoint:127880,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ballot.check",codepoint:9745,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ballotbox",codepoint:128499,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"banana",codepoint:127820,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"banjo",codepoint:129685,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bank",codepoint:127974,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"barberpole",codepoint:128136,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"baseball",codepoint:9918,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"basecap",codepoint:129506,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"basket",codepoint:129530,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"basketball",codepoint:9977,accent:!1,alternates:["basketball.ball"],markupShorthand:null,mathShorthand:null},{name:"basketball.ball",codepoint:127936,accent:!1,alternates:["basketball"],markupShorthand:null,mathShorthand:null},{name:"bat",codepoint:129415,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bathtub",codepoint:128704,accent:!1,alternates:["bathtub.foam"],markupShorthand:null,mathShorthand:null},{name:"bathtub.foam",codepoint:128705,accent:!1,alternates:["bathtub"],markupShorthand:null,mathShorthand:null},{name:"battery",codepoint:128267,accent:!1,alternates:["battery.low"],markupShorthand:null,mathShorthand:null},{name:"battery.low",codepoint:129707,accent:!1,alternates:["battery"],markupShorthand:null,mathShorthand:null},{name:"beach.palm",codepoint:127965,accent:!1,alternates:["beach.umbrella"],markupShorthand:null,mathShorthand:null},{name:"beach.umbrella",codepoint:127958,accent:!1,alternates:["beach.palm"],markupShorthand:null,mathShorthand:null},{name:"beads",codepoint:128255,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"beans",codepoint:129752,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bear",codepoint:128059,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"beaver",codepoint:129451,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bed",codepoint:128719,accent:!1,alternates:["bed.person"],markupShorthand:null,mathShorthand:null},{name:"bed.person",codepoint:128716,accent:!1,alternates:["bed"],markupShorthand:null,mathShorthand:null},{name:"bee",codepoint:128029,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"beer",codepoint:127866,accent:!1,alternates:["beer.clink"],markupShorthand:null,mathShorthand:null},{name:"beer.clink",codepoint:127867,accent:!1,alternates:["beer"],markupShorthand:null,mathShorthand:null},{name:"beet",codepoint:129756,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"beetle",codepoint:129714,accent:!1,alternates:["beetle.lady"],markupShorthand:null,mathShorthand:null},{name:"beetle.lady",codepoint:128030,accent:!1,alternates:["beetle"],markupShorthand:null,mathShorthand:null},{name:"bell",codepoint:128276,accent:!1,alternates:["bell.ding","bell.not"],markupShorthand:null,mathShorthand:null},{name:"bell.ding",codepoint:128718,accent:!1,alternates:["bell","bell.not"],markupShorthand:null,mathShorthand:null},{name:"bell.not",codepoint:128277,accent:!1,alternates:["bell","bell.ding"],markupShorthand:null,mathShorthand:null},{name:"bento",codepoint:127857,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bicyclist",codepoint:128692,accent:!1,alternates:["bicyclist.mountain"],markupShorthand:null,mathShorthand:null},{name:"bicyclist.mountain",codepoint:128693,accent:!1,alternates:["bicyclist"],markupShorthand:null,mathShorthand:null},{name:"bike",codepoint:128690,accent:!1,alternates:["bike.not"],markupShorthand:null,mathShorthand:null},{name:"bike.not",codepoint:128691,accent:!1,alternates:["bike"],markupShorthand:null,mathShorthand:null},{name:"bikini",codepoint:128089,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"billiards",codepoint:127921,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bin",codepoint:128465,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"biohazard",codepoint:9763,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bird",codepoint:128038,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bison",codepoint:129452,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"blood",codepoint:129656,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"blouse",codepoint:128090,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"blowfish",codepoint:128033,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"blueberries",codepoint:129744,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"boar",codepoint:128023,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"boat.sail",codepoint:9973,accent:!1,alternates:["boat.row","boat.motor","boat.speed","boat.canoe"],markupShorthand:null,mathShorthand:null},{name:"boat.row",codepoint:128675,accent:!1,alternates:["boat.sail","boat.motor","boat.speed","boat.canoe"],markupShorthand:null,mathShorthand:null},{name:"boat.motor",codepoint:128741,accent:!1,alternates:["boat.sail","boat.row","boat.speed","boat.canoe"],markupShorthand:null,mathShorthand:null},{name:"boat.speed",codepoint:128676,accent:!1,alternates:["boat.sail","boat.row","boat.motor","boat.canoe"],markupShorthand:null,mathShorthand:null},{name:"boat.canoe",codepoint:128758,accent:!1,alternates:["boat.sail","boat.row","boat.motor","boat.speed"],markupShorthand:null,mathShorthand:null},{name:"bolt",codepoint:128297,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bomb",codepoint:128163,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bone",codepoint:129460,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"book.red",codepoint:128213,accent:!1,alternates:["book.blue","book.green","book.orange","book.spiral","book.open"],markupShorthand:null,mathShorthand:null},{name:"book.blue",codepoint:128216,accent:!1,alternates:["book.red","book.green","book.orange","book.spiral","book.open"],markupShorthand:null,mathShorthand:null},{name:"book.green",codepoint:128215,accent:!1,alternates:["book.red","book.blue","book.orange","book.spiral","book.open"],markupShorthand:null,mathShorthand:null},{name:"book.orange",codepoint:128217,accent:!1,alternates:["book.red","book.blue","book.green","book.spiral","book.open"],markupShorthand:null,mathShorthand:null},{name:"book.spiral",codepoint:128210,accent:!1,alternates:["book.red","book.blue","book.green","book.orange","book.open"],markupShorthand:null,mathShorthand:null},{name:"book.open",codepoint:128214,accent:!1,alternates:["book.red","book.blue","book.green","book.orange","book.spiral"],markupShorthand:null,mathShorthand:null},{name:"bookmark",codepoint:128278,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"books",codepoint:128218,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"boomerang",codepoint:129667,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bordercontrol",codepoint:128706,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bouquet",codepoint:128144,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bow",codepoint:127993,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bowl.spoon",codepoint:129379,accent:!1,alternates:["bowl.steam"],markupShorthand:null,mathShorthand:null},{name:"bowl.steam",codepoint:127836,accent:!1,alternates:["bowl.spoon"],markupShorthand:null,mathShorthand:null},{name:"bowling",codepoint:127923,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"boxing",codepoint:129354,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"boy",codepoint:128102,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"brain",codepoint:129504,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bread",codepoint:127838,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"brick",codepoint:129521,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bride",codepoint:128112,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bridge.fog",codepoint:127745,accent:!1,alternates:["bridge.night"],markupShorthand:null,mathShorthand:null},{name:"bridge.night",codepoint:127753,accent:!1,alternates:["bridge.fog"],markupShorthand:null,mathShorthand:null},{name:"briefcase",codepoint:128188,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"briefs",codepoint:129650,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"brightness.high",codepoint:128262,accent:!1,alternates:["brightness.low"],markupShorthand:null,mathShorthand:null},{name:"brightness.low",codepoint:128261,accent:!1,alternates:["brightness.high"],markupShorthand:null,mathShorthand:null},{name:"broccoli",codepoint:129382,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"broom",codepoint:129529,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"brush",codepoint:128396,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bubble.speech.r",codepoint:128172,accent:!1,alternates:["bubble.speech.l","bubble.thought","bubble.anger.r"],markupShorthand:null,mathShorthand:null},{name:"bubble.speech.l",codepoint:128488,accent:!1,alternates:["bubble.speech.r","bubble.thought","bubble.anger.r"],markupShorthand:null,mathShorthand:null},{name:"bubble.thought",codepoint:128173,accent:!1,alternates:["bubble.speech.r","bubble.speech.l","bubble.anger.r"],markupShorthand:null,mathShorthand:null},{name:"bubble.anger.r",codepoint:128495,accent:!1,alternates:["bubble.speech.r","bubble.speech.l","bubble.thought"],markupShorthand:null,mathShorthand:null},{name:"bubbles",codepoint:129767,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bubbletea",codepoint:129483,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bucket",codepoint:129699,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"buffalo.water",codepoint:128003,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bug",codepoint:128027,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"builder",codepoint:128119,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"burger",codepoint:127828,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"burrito",codepoint:127791,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"bus",codepoint:128652,accent:!1,alternates:["bus.front","bus.small","bus.stop","bus.trolley"],markupShorthand:null,mathShorthand:null},{name:"bus.front",codepoint:128653,accent:!1,alternates:["bus","bus.small","bus.stop","bus.trolley"],markupShorthand:null,mathShorthand:null},{name:"bus.small",codepoint:128656,accent:!1,alternates:["bus","bus.front","bus.stop","bus.trolley"],markupShorthand:null,mathShorthand:null},{name:"bus.stop",codepoint:128655,accent:!1,alternates:["bus","bus.front","bus.small","bus.trolley"],markupShorthand:null,mathShorthand:null},{name:"bus.trolley",codepoint:128654,accent:!1,alternates:["bus","bus.front","bus.small","bus.stop"],markupShorthand:null,mathShorthand:null},{name:"butter",codepoint:129480,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"butterfly",codepoint:129419,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"button",codepoint:128306,accent:!1,alternates:["button.alt","button.radio"],markupShorthand:null,mathShorthand:null},{name:"button.alt",codepoint:128307,accent:!1,alternates:["button","button.radio"],markupShorthand:null,mathShorthand:null},{name:"button.radio",codepoint:128280,accent:!1,alternates:["button","button.alt"],markupShorthand:null,mathShorthand:null},{name:"cabinet.file",codepoint:128452,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cablecar",codepoint:128672,accent:!1,alternates:["cablecar.small"],markupShorthand:null,mathShorthand:null},{name:"cablecar.small",codepoint:128673,accent:!1,alternates:["cablecar"],markupShorthand:null,mathShorthand:null},{name:"cactus",codepoint:127797,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cake",codepoint:127874,accent:!1,alternates:["cake.fish","cake.moon","cake.slice"],markupShorthand:null,mathShorthand:null},{name:"cake.fish",codepoint:127845,accent:!1,alternates:["cake","cake.moon","cake.slice"],markupShorthand:null,mathShorthand:null},{name:"cake.moon",codepoint:129390,accent:!1,alternates:["cake","cake.fish","cake.slice"],markupShorthand:null,mathShorthand:null},{name:"cake.slice",codepoint:127856,accent:!1,alternates:["cake","cake.fish","cake.moon"],markupShorthand:null,mathShorthand:null},{name:"calendar",codepoint:128197,accent:!1,alternates:["calendar.spiral","calendar.tearoff"],markupShorthand:null,mathShorthand:null},{name:"calendar.spiral",codepoint:128467,accent:!1,alternates:["calendar","calendar.tearoff"],markupShorthand:null,mathShorthand:null},{name:"calendar.tearoff",codepoint:128198,accent:!1,alternates:["calendar","calendar.spiral"],markupShorthand:null,mathShorthand:null},{name:"camel",codepoint:128043,accent:!1,alternates:["camel.dromedar"],markupShorthand:null,mathShorthand:null},{name:"camel.dromedar",codepoint:128042,accent:!1,alternates:["camel"],markupShorthand:null,mathShorthand:null},{name:"camera",codepoint:128247,accent:!1,alternates:["camera.flash","camera.movie","camera.movie.box","camera.video"],markupShorthand:null,mathShorthand:null},{name:"camera.flash",codepoint:128248,accent:!1,alternates:["camera","camera.movie","camera.movie.box","camera.video"],markupShorthand:null,mathShorthand:null},{name:"camera.movie",codepoint:127909,accent:!1,alternates:["camera","camera.flash","camera.movie.box","camera.video"],markupShorthand:null,mathShorthand:null},{name:"camera.movie.box",codepoint:127910,accent:!1,alternates:["camera","camera.flash","camera.movie","camera.video"],markupShorthand:null,mathShorthand:null},{name:"camera.video",codepoint:128249,accent:!1,alternates:["camera","camera.flash","camera.movie","camera.movie.box"],markupShorthand:null,mathShorthand:null},{name:"camping",codepoint:127957,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"can",codepoint:129387,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"candle",codepoint:128367,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"candy",codepoint:127852,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cane",codepoint:129455,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"car",codepoint:128663,accent:!1,alternates:["car.front","car.pickup","car.police","car.police.front","car.racing","car.rickshaw","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.front",codepoint:128664,accent:!1,alternates:["car","car.pickup","car.police","car.police.front","car.racing","car.rickshaw","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.pickup",codepoint:128763,accent:!1,alternates:["car","car.front","car.police","car.police.front","car.racing","car.rickshaw","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.police",codepoint:128659,accent:!1,alternates:["car","car.front","car.pickup","car.police.front","car.racing","car.rickshaw","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.police.front",codepoint:128660,accent:!1,alternates:["car","car.front","car.pickup","car.police","car.racing","car.rickshaw","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.racing",codepoint:127950,accent:!1,alternates:["car","car.front","car.pickup","car.police","car.police.front","car.rickshaw","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.rickshaw",codepoint:128762,accent:!1,alternates:["car","car.front","car.pickup","car.police","car.police.front","car.racing","car.suv"],markupShorthand:null,mathShorthand:null},{name:"car.suv",codepoint:128665,accent:!1,alternates:["car","car.front","car.pickup","car.police","car.police.front","car.racing","car.rickshaw"],markupShorthand:null,mathShorthand:null},{name:"card.credit",codepoint:128179,accent:!1,alternates:["card.id"],markupShorthand:null,mathShorthand:null},{name:"card.id",codepoint:129706,accent:!1,alternates:["card.credit"],markupShorthand:null,mathShorthand:null},{name:"cardindex",codepoint:128199,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"carrot",codepoint:129365,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cart",codepoint:128722,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cassette",codepoint:128252,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"castle.eu",codepoint:127984,accent:!1,alternates:["castle.jp"],markupShorthand:null,mathShorthand:null},{name:"castle.jp",codepoint:127983,accent:!1,alternates:["castle.eu"],markupShorthand:null,mathShorthand:null},{name:"cat",codepoint:128008,accent:!1,alternates:["cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face",codepoint:128049,accent:!1,alternates:["cat","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.angry",codepoint:128574,accent:!1,alternates:["cat","cat.face","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.cry",codepoint:128575,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.heart",codepoint:128571,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.joy",codepoint:128569,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.kiss",codepoint:128573,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.laugh","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.laugh",codepoint:128568,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.shock","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.shock",codepoint:128576,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.smile","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.smile",codepoint:128570,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smirk"],markupShorthand:null,mathShorthand:null},{name:"cat.face.smirk",codepoint:128572,accent:!1,alternates:["cat","cat.face","cat.face.angry","cat.face.cry","cat.face.heart","cat.face.joy","cat.face.kiss","cat.face.laugh","cat.face.shock","cat.face.smile"],markupShorthand:null,mathShorthand:null},{name:"chain",codepoint:128279,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chains",codepoint:9939,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chair",codepoint:129681,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"champagne",codepoint:127870,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chart.bar",codepoint:128202,accent:!1,alternates:["chart.up","chart.down","chart.yen.up"],markupShorthand:null,mathShorthand:null},{name:"chart.up",codepoint:128200,accent:!1,alternates:["chart.bar","chart.down","chart.yen.up"],markupShorthand:null,mathShorthand:null},{name:"chart.down",codepoint:128201,accent:!1,alternates:["chart.bar","chart.up","chart.yen.up"],markupShorthand:null,mathShorthand:null},{name:"chart.yen.up",codepoint:128185,accent:!1,alternates:["chart.bar","chart.up","chart.down"],markupShorthand:null,mathShorthand:null},{name:"checkmark.heavy",codepoint:10004,accent:!1,alternates:["checkmark.box"],markupShorthand:null,mathShorthand:null},{name:"checkmark.box",codepoint:9989,accent:!1,alternates:["checkmark.heavy"],markupShorthand:null,mathShorthand:null},{name:"cheese",codepoint:129472,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cherries",codepoint:127826,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chess",codepoint:9823,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chestnut",codepoint:127792,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chicken",codepoint:128020,accent:!1,alternates:["chicken.baby","chicken.baby.egg","chicken.baby.head","chicken.leg","chicken.male"],markupShorthand:null,mathShorthand:null},{name:"chicken.baby",codepoint:128037,accent:!1,alternates:["chicken","chicken.baby.egg","chicken.baby.head","chicken.leg","chicken.male"],markupShorthand:null,mathShorthand:null},{name:"chicken.baby.egg",codepoint:128035,accent:!1,alternates:["chicken","chicken.baby","chicken.baby.head","chicken.leg","chicken.male"],markupShorthand:null,mathShorthand:null},{name:"chicken.baby.head",codepoint:128036,accent:!1,alternates:["chicken","chicken.baby","chicken.baby.egg","chicken.leg","chicken.male"],markupShorthand:null,mathShorthand:null},{name:"chicken.leg",codepoint:127831,accent:!1,alternates:["chicken","chicken.baby","chicken.baby.egg","chicken.baby.head","chicken.male"],markupShorthand:null,mathShorthand:null},{name:"chicken.male",codepoint:128019,accent:!1,alternates:["chicken","chicken.baby","chicken.baby.egg","chicken.baby.head","chicken.leg"],markupShorthand:null,mathShorthand:null},{name:"child",codepoint:129490,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chipmunk",codepoint:128063,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chocolate",codepoint:127851,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"chopsticks",codepoint:129378,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"church",codepoint:9962,accent:!1,alternates:["church.love"],markupShorthand:null,mathShorthand:null},{name:"church.love",codepoint:128146,accent:!1,alternates:["church"],markupShorthand:null,mathShorthand:null},{name:"cigarette",codepoint:128684,accent:!1,alternates:["cigarette.not"],markupShorthand:null,mathShorthand:null},{name:"cigarette.not",codepoint:128685,accent:!1,alternates:["cigarette"],markupShorthand:null,mathShorthand:null},{name:"circle.black",codepoint:9899,accent:!1,alternates:["circle.blue","circle.brown","circle.green","circle.orange","circle.purple","circle.white","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.blue",codepoint:128309,accent:!1,alternates:["circle.black","circle.brown","circle.green","circle.orange","circle.purple","circle.white","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.brown",codepoint:128996,accent:!1,alternates:["circle.black","circle.blue","circle.green","circle.orange","circle.purple","circle.white","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.green",codepoint:128994,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.orange","circle.purple","circle.white","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.orange",codepoint:128992,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.green","circle.purple","circle.white","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.purple",codepoint:128995,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.green","circle.orange","circle.white","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.white",codepoint:9898,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.green","circle.orange","circle.purple","circle.red","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.red",codepoint:128308,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.green","circle.orange","circle.purple","circle.white","circle.yellow","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.yellow",codepoint:128993,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.green","circle.orange","circle.purple","circle.white","circle.red","circle.stroked"],markupShorthand:null,mathShorthand:null},{name:"circle.stroked",codepoint:11093,accent:!1,alternates:["circle.black","circle.blue","circle.brown","circle.green","circle.orange","circle.purple","circle.white","circle.red","circle.yellow"],markupShorthand:null,mathShorthand:null},{name:"circus",codepoint:127914,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"city",codepoint:127961,accent:!1,alternates:["city.dusk","city.night","city.sunset"],markupShorthand:null,mathShorthand:null},{name:"city.dusk",codepoint:127750,accent:!1,alternates:["city","city.night","city.sunset"],markupShorthand:null,mathShorthand:null},{name:"city.night",codepoint:127747,accent:!1,alternates:["city","city.dusk","city.sunset"],markupShorthand:null,mathShorthand:null},{name:"city.sunset",codepoint:127751,accent:!1,alternates:["city","city.dusk","city.night"],markupShorthand:null,mathShorthand:null},{name:"clamp",codepoint:128476,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"clapperboard",codepoint:127916,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"climbing",codepoint:129495,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"clip",codepoint:128206,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"clipboard",codepoint:128203,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"clips",codepoint:128391,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"clock.one",codepoint:128336,accent:!1,alternates:["clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.one.thirty",codepoint:128348,accent:!1,alternates:["clock.one","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.two",codepoint:128337,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.two.thirty",codepoint:128349,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.three",codepoint:128338,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.three.thirty",codepoint:128350,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.four",codepoint:128339,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.four.thirty",codepoint:128351,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.five",codepoint:128340,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.five.thirty",codepoint:128352,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.six",codepoint:128341,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.six.thirty",codepoint:128353,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.seven",codepoint:128342,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.seven.thirty",codepoint:128354,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.eight",codepoint:128343,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.eight.thirty",codepoint:128355,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.nine",codepoint:128344,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.nine.thirty",codepoint:128356,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.ten",codepoint:128345,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.ten.thirty",codepoint:128357,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.eleven",codepoint:128346,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.eleven.thirty",codepoint:128358,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.twelve",codepoint:128347,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve.thirty","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.twelve.thirty",codepoint:128359,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.alarm","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.alarm",codepoint:9200,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.old","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.old",codepoint:128368,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.timer"],markupShorthand:null,mathShorthand:null},{name:"clock.timer",codepoint:9202,accent:!1,alternates:["clock.one","clock.one.thirty","clock.two","clock.two.thirty","clock.three","clock.three.thirty","clock.four","clock.four.thirty","clock.five","clock.five.thirty","clock.six","clock.six.thirty","clock.seven","clock.seven.thirty","clock.eight","clock.eight.thirty","clock.nine","clock.nine.thirty","clock.ten","clock.ten.thirty","clock.eleven","clock.eleven.thirty","clock.twelve","clock.twelve.thirty","clock.alarm","clock.old"],markupShorthand:null,mathShorthand:null},{name:"cloud",codepoint:9729,accent:!1,alternates:["cloud.dust","cloud.rain","cloud.snow","cloud.storm","cloud.sun","cloud.sun.hidden","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.dust",codepoint:128168,accent:!1,alternates:["cloud","cloud.rain","cloud.snow","cloud.storm","cloud.sun","cloud.sun.hidden","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.rain",codepoint:127783,accent:!1,alternates:["cloud","cloud.dust","cloud.snow","cloud.storm","cloud.sun","cloud.sun.hidden","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.snow",codepoint:127784,accent:!1,alternates:["cloud","cloud.dust","cloud.rain","cloud.storm","cloud.sun","cloud.sun.hidden","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.storm",codepoint:9928,accent:!1,alternates:["cloud","cloud.dust","cloud.rain","cloud.snow","cloud.sun","cloud.sun.hidden","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.sun",codepoint:9925,accent:!1,alternates:["cloud","cloud.dust","cloud.rain","cloud.snow","cloud.storm","cloud.sun.hidden","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.sun.hidden",codepoint:127781,accent:!1,alternates:["cloud","cloud.dust","cloud.rain","cloud.snow","cloud.storm","cloud.sun","cloud.sun.rain","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.sun.rain",codepoint:127782,accent:!1,alternates:["cloud","cloud.dust","cloud.rain","cloud.snow","cloud.storm","cloud.sun","cloud.sun.hidden","cloud.thunder"],markupShorthand:null,mathShorthand:null},{name:"cloud.thunder",codepoint:127785,accent:!1,alternates:["cloud","cloud.dust","cloud.rain","cloud.snow","cloud.storm","cloud.sun","cloud.sun.hidden","cloud.sun.rain"],markupShorthand:null,mathShorthand:null},{name:"coat",codepoint:129509,accent:!1,alternates:["coat.lab"],markupShorthand:null,mathShorthand:null},{name:"coat.lab",codepoint:129404,accent:!1,alternates:["coat"],markupShorthand:null,mathShorthand:null},{name:"cockroach",codepoint:129715,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cocktail.martini",codepoint:127864,accent:!1,alternates:["cocktail.tropical"],markupShorthand:null,mathShorthand:null},{name:"cocktail.tropical",codepoint:127865,accent:!1,alternates:["cocktail.martini"],markupShorthand:null,mathShorthand:null},{name:"coconut",codepoint:129381,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"coffee",codepoint:9749,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"coffin",codepoint:9904,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"coin",codepoint:129689,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"comet",codepoint:9732,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"compass",codepoint:129517,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"computer",codepoint:128421,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"computermouse",codepoint:128433,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"confetti",codepoint:127882,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"construction",codepoint:128679,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"controller",codepoint:127918,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cookie",codepoint:127850,accent:!1,alternates:["cookie.fortune"],markupShorthand:null,mathShorthand:null},{name:"cookie.fortune",codepoint:129376,accent:!1,alternates:["cookie"],markupShorthand:null,mathShorthand:null},{name:"cooking",codepoint:127859,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cool",codepoint:127378,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"copyright",codepoint:169,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"coral",codepoint:129720,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"corn",codepoint:127805,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"couch",codepoint:128715,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"couple",codepoint:128145,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cow",codepoint:128004,accent:!1,alternates:["cow.face"],markupShorthand:null,mathShorthand:null},{name:"cow.face",codepoint:128046,accent:!1,alternates:["cow"],markupShorthand:null,mathShorthand:null},{name:"crab",codepoint:129408,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"crane",codepoint:127959,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"crayon",codepoint:128397,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cricket",codepoint:129431,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cricketbat",codepoint:127951,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"crocodile",codepoint:128010,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"croissant",codepoint:129360,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"crossmark",codepoint:10060,accent:!1,alternates:["crossmark.box"],markupShorthand:null,mathShorthand:null},{name:"crossmark.box",codepoint:10062,accent:!1,alternates:["crossmark"],markupShorthand:null,mathShorthand:null},{name:"crown",codepoint:128081,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"crutch",codepoint:129660,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"crystal",codepoint:128302,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cucumber",codepoint:129362,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cup.straw",codepoint:129380,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cupcake",codepoint:129473,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"curling",codepoint:129356,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"curry",codepoint:127835,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"custard",codepoint:127854,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"customs",codepoint:128707,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cutlery",codepoint:127860,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cyclone",codepoint:127744,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dancing.man",codepoint:128378,accent:!1,alternates:["dancing.woman","dancing.women.bunny"],markupShorthand:null,mathShorthand:null},{name:"dancing.woman",codepoint:128131,accent:!1,alternates:["dancing.man","dancing.women.bunny"],markupShorthand:null,mathShorthand:null},{name:"dancing.women.bunny",codepoint:128111,accent:!1,alternates:["dancing.man","dancing.woman"],markupShorthand:null,mathShorthand:null},{name:"darts",codepoint:127919,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dash.wave.double",codepoint:12336,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"deer",codepoint:129420,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"desert",codepoint:127964,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"detective",codepoint:128373,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"diamond.blue",codepoint:128311,accent:!1,alternates:["diamond.blue.small","diamond.orange","diamond.orange.small","diamond.dot"],markupShorthand:null,mathShorthand:null},{name:"diamond.blue.small",codepoint:128313,accent:!1,alternates:["diamond.blue","diamond.orange","diamond.orange.small","diamond.dot"],markupShorthand:null,mathShorthand:null},{name:"diamond.orange",codepoint:128310,accent:!1,alternates:["diamond.blue","diamond.blue.small","diamond.orange.small","diamond.dot"],markupShorthand:null,mathShorthand:null},{name:"diamond.orange.small",codepoint:128312,accent:!1,alternates:["diamond.blue","diamond.blue.small","diamond.orange","diamond.dot"],markupShorthand:null,mathShorthand:null},{name:"diamond.dot",codepoint:128160,accent:!1,alternates:["diamond.blue","diamond.blue.small","diamond.orange","diamond.orange.small"],markupShorthand:null,mathShorthand:null},{name:"die",codepoint:127922,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dino.pod",codepoint:129429,accent:!1,alternates:["dino.rex"],markupShorthand:null,mathShorthand:null},{name:"dino.rex",codepoint:129430,accent:!1,alternates:["dino.pod"],markupShorthand:null,mathShorthand:null},{name:"disc.cd",codepoint:128191,accent:!1,alternates:["disc.dvd","disc.mini"],markupShorthand:null,mathShorthand:null},{name:"disc.dvd",codepoint:128192,accent:!1,alternates:["disc.cd","disc.mini"],markupShorthand:null,mathShorthand:null},{name:"disc.mini",codepoint:128189,accent:!1,alternates:["disc.cd","disc.dvd"],markupShorthand:null,mathShorthand:null},{name:"discoball",codepoint:129705,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"diving",codepoint:129343,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dodo",codepoint:129444,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dog",codepoint:128021,accent:!1,alternates:["dog.face","dog.guide","dog.poodle"],markupShorthand:null,mathShorthand:null},{name:"dog.face",codepoint:128054,accent:!1,alternates:["dog","dog.guide","dog.poodle"],markupShorthand:null,mathShorthand:null},{name:"dog.guide",codepoint:129454,accent:!1,alternates:["dog","dog.face","dog.poodle"],markupShorthand:null,mathShorthand:null},{name:"dog.poodle",codepoint:128041,accent:!1,alternates:["dog","dog.face","dog.guide"],markupShorthand:null,mathShorthand:null},{name:"dollar",codepoint:128178,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dolphin",codepoint:128044,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"donut",codepoint:127849,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"door",codepoint:128682,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dove.peace",codepoint:128330,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dragon",codepoint:128009,accent:!1,alternates:["dragon.face"],markupShorthand:null,mathShorthand:null},{name:"dragon.face",codepoint:128050,accent:!1,alternates:["dragon"],markupShorthand:null,mathShorthand:null},{name:"dress",codepoint:128087,accent:!1,alternates:["dress.kimono","dress.sari"],markupShorthand:null,mathShorthand:null},{name:"dress.kimono",codepoint:128088,accent:!1,alternates:["dress","dress.sari"],markupShorthand:null,mathShorthand:null},{name:"dress.sari",codepoint:129403,accent:!1,alternates:["dress","dress.kimono"],markupShorthand:null,mathShorthand:null},{name:"drop",codepoint:128167,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"drops",codepoint:128166,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"drum",codepoint:129345,accent:!1,alternates:["drum.big"],markupShorthand:null,mathShorthand:null},{name:"drum.big",codepoint:129688,accent:!1,alternates:["drum"],markupShorthand:null,mathShorthand:null},{name:"duck",codepoint:129414,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"dumpling",codepoint:129375,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"eagle",codepoint:129413,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ear",codepoint:128066,accent:!1,alternates:["ear.aid"],markupShorthand:null,mathShorthand:null},{name:"ear.aid",codepoint:129467,accent:!1,alternates:["ear"],markupShorthand:null,mathShorthand:null},{name:"egg",codepoint:129370,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"eighteen.not",codepoint:128286,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"elephant",codepoint:128024,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"elevator",codepoint:128727,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"elf",codepoint:129501,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"email",codepoint:128231,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"excl",codepoint:10071,accent:!1,alternates:["excl.white","excl.double","excl.quest"],markupShorthand:null,mathShorthand:null},{name:"excl.white",codepoint:10069,accent:!1,alternates:["excl","excl.double","excl.quest"],markupShorthand:null,mathShorthand:null},{name:"excl.double",codepoint:8252,accent:!1,alternates:["excl","excl.white","excl.quest"],markupShorthand:null,mathShorthand:null},{name:"excl.quest",codepoint:8265,accent:!1,alternates:["excl","excl.white","excl.double"],markupShorthand:null,mathShorthand:null},{name:"explosion",codepoint:128165,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"extinguisher",codepoint:129519,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"eye",codepoint:128065,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"eyes",codepoint:128064,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"face.grin",codepoint:128512,accent:!1,alternates:["face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.angry",codepoint:128544,accent:!1,alternates:["face.grin","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.angry.red",codepoint:128545,accent:!1,alternates:["face.grin","face.angry","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.anguish",codepoint:128551,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.astonish",codepoint:128562,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.bandage",codepoint:129301,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.beam",codepoint:128513,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.blank",codepoint:128566,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.clown",codepoint:129313,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.cold",codepoint:129398,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.concern",codepoint:128550,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.cool",codepoint:128526,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.cover",codepoint:129325,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.cowboy",codepoint:129312,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.cry",codepoint:128557,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.devil.smile",codepoint:128520,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.devil.frown",codepoint:128127,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.diagonal",codepoint:129764,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.disguise",codepoint:129400,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.distress",codepoint:128555,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.dizzy",codepoint:128565,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.dotted",codepoint:129765,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.down",codepoint:128542,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.down.sweat",codepoint:128531,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.drool",codepoint:129316,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.explode",codepoint:129327,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.eyeroll",codepoint:128580,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.friendly",codepoint:9786,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.fear",codepoint:128552,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.fear.sweat",codepoint:128560,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.fever",codepoint:129298,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.flush",codepoint:128563,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.frown",codepoint:9785,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.frown.slight",codepoint:128577,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.frust",codepoint:128547,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.goofy",codepoint:129322,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.halo",codepoint:128519,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.happy",codepoint:128522,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.heart",codepoint:128525,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.hearts",codepoint:129392,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.heat",codepoint:129397,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.hug",codepoint:129303,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.inv",codepoint:128579,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.joy",codepoint:128514,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.kiss",codepoint:128535,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.kiss.smile",codepoint:128537,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.kiss.heart",codepoint:128536,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.kiss.blush",codepoint:128538,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.lick",codepoint:128523,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.lie",codepoint:129317,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.mask",codepoint:128567,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.meh",codepoint:128530,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.melt",codepoint:129760,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.money",codepoint:129297,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.monocle",codepoint:129488,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.nausea",codepoint:129314,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.nerd",codepoint:129299,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.neutral",codepoint:128528,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.open",codepoint:128515,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.party",codepoint:129395,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.peek",codepoint:129763,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.plead",codepoint:129402,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.relief",codepoint:128524,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.rofl",codepoint:129315,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.sad",codepoint:128532,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.salute",codepoint:129761,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.shock",codepoint:128561,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.shush",codepoint:129323,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.skeptic",codepoint:129320,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.sleep",codepoint:128564,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.sleepy",codepoint:128554,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.smile",codepoint:128516,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.smile.slight",codepoint:128578,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.smile.sweat",codepoint:128517,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.smile.tear",codepoint:129394,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.smirk",codepoint:128527,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.sneeze",codepoint:129319,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.speak.not",codepoint:129762,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.squint",codepoint:128518,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.stars",codepoint:129321,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.straight",codepoint:128529,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.suffer",codepoint:128534,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.surprise",codepoint:128559,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.symbols",codepoint:129324,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tear",codepoint:128546,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tear.relief",codepoint:128549,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tear.withheld",codepoint:129401,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.teeth",codepoint:128556,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.think",codepoint:129300,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tired",codepoint:129769,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tongue",codepoint:128539,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tongue.squint",codepoint:128541,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.tongue.wink",codepoint:128540,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.triumph",codepoint:128548,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.unhappy",codepoint:128533,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.vomit",codepoint:129326,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.weary",codepoint:128553,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.wink","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.wink",codepoint:128521,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.woozy","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.woozy",codepoint:129396,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.worry","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.worry",codepoint:128543,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.wow","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.wow",codepoint:128558,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.yawn","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.yawn",codepoint:129393,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.zip"],markupShorthand:null,mathShorthand:null},{name:"face.zip",codepoint:129296,accent:!1,alternates:["face.grin","face.angry","face.angry.red","face.anguish","face.astonish","face.bandage","face.beam","face.blank","face.clown","face.cold","face.concern","face.cool","face.cover","face.cowboy","face.cry","face.devil.smile","face.devil.frown","face.diagonal","face.disguise","face.distress","face.dizzy","face.dotted","face.down","face.down.sweat","face.drool","face.explode","face.eyeroll","face.friendly","face.fear","face.fear.sweat","face.fever","face.flush","face.frown","face.frown.slight","face.frust","face.goofy","face.halo","face.happy","face.heart","face.hearts","face.heat","face.hug","face.inv","face.joy","face.kiss","face.kiss.smile","face.kiss.heart","face.kiss.blush","face.lick","face.lie","face.mask","face.meh","face.melt","face.money","face.monocle","face.nausea","face.nerd","face.neutral","face.open","face.party","face.peek","face.plead","face.relief","face.rofl","face.sad","face.salute","face.shock","face.shush","face.skeptic","face.sleep","face.sleepy","face.smile","face.smile.slight","face.smile.sweat","face.smile.tear","face.smirk","face.sneeze","face.speak.not","face.squint","face.stars","face.straight","face.suffer","face.surprise","face.symbols","face.tear","face.tear.relief","face.tear.withheld","face.teeth","face.think","face.tired","face.tongue","face.tongue.squint","face.tongue.wink","face.triumph","face.unhappy","face.vomit","face.weary","face.wink","face.woozy","face.worry","face.wow","face.yawn"],markupShorthand:null,mathShorthand:null},{name:"factory",codepoint:127981,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fairy",codepoint:129498,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"faith.christ",codepoint:10013,accent:!1,alternates:["faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.dharma",codepoint:9784,accent:!1,alternates:["faith.christ","faith.islam","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.islam",codepoint:9770,accent:!1,alternates:["faith.christ","faith.dharma","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.judaism",codepoint:10017,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.menorah",codepoint:128334,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.om",codepoint:128329,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.orthodox","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.orthodox",codepoint:9766,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.om","faith.peace","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.peace",codepoint:9774,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.star.dot","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.star.dot",codepoint:128303,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.worship","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.worship",codepoint:128720,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.yinyang"],markupShorthand:null,mathShorthand:null},{name:"faith.yinyang",codepoint:9775,accent:!1,alternates:["faith.christ","faith.dharma","faith.islam","faith.judaism","faith.menorah","faith.om","faith.orthodox","faith.peace","faith.star.dot","faith.worship"],markupShorthand:null,mathShorthand:null},{name:"falafel",codepoint:129478,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"family",codepoint:128106,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fax",codepoint:128224,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"feather",codepoint:129718,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"feeding.breast",codepoint:129329,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fencing",codepoint:129338,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ferriswheel",codepoint:127905,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"filebox",codepoint:128451,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"filedividers",codepoint:128450,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"film",codepoint:127902,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"finger.r",codepoint:128073,accent:!1,alternates:["finger.l","finger.t","finger.t.alt","finger.b","finger.front","finger.m"],markupShorthand:null,mathShorthand:null},{name:"finger.l",codepoint:128072,accent:!1,alternates:["finger.r","finger.t","finger.t.alt","finger.b","finger.front","finger.m"],markupShorthand:null,mathShorthand:null},{name:"finger.t",codepoint:128070,accent:!1,alternates:["finger.r","finger.l","finger.t.alt","finger.b","finger.front","finger.m"],markupShorthand:null,mathShorthand:null},{name:"finger.t.alt",codepoint:9757,accent:!1,alternates:["finger.r","finger.l","finger.t","finger.b","finger.front","finger.m"],markupShorthand:null,mathShorthand:null},{name:"finger.b",codepoint:128071,accent:!1,alternates:["finger.r","finger.l","finger.t","finger.t.alt","finger.front","finger.m"],markupShorthand:null,mathShorthand:null},{name:"finger.front",codepoint:129781,accent:!1,alternates:["finger.r","finger.l","finger.t","finger.t.alt","finger.b","finger.m"],markupShorthand:null,mathShorthand:null},{name:"finger.m",codepoint:128405,accent:!1,alternates:["finger.r","finger.l","finger.t","finger.t.alt","finger.b","finger.front"],markupShorthand:null,mathShorthand:null},{name:"fingerprint",codepoint:129734,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fingers.cross",codepoint:129310,accent:!1,alternates:["fingers.pinch","fingers.snap"],markupShorthand:null,mathShorthand:null},{name:"fingers.pinch",codepoint:129292,accent:!1,alternates:["fingers.cross","fingers.snap"],markupShorthand:null,mathShorthand:null},{name:"fingers.snap",codepoint:129776,accent:!1,alternates:["fingers.cross","fingers.pinch"],markupShorthand:null,mathShorthand:null},{name:"fire",codepoint:128293,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"firecracker",codepoint:129512,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fireengine",codepoint:128658,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fireworks",codepoint:127878,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fish",codepoint:128031,accent:!1,alternates:["fish.tropical"],markupShorthand:null,mathShorthand:null},{name:"fish.tropical",codepoint:128032,accent:!1,alternates:["fish"],markupShorthand:null,mathShorthand:null},{name:"fishing",codepoint:127907,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fist.front",codepoint:128074,accent:!1,alternates:["fist.r","fist.l","fist.raised"],markupShorthand:null,mathShorthand:null},{name:"fist.r",codepoint:129308,accent:!1,alternates:["fist.front","fist.l","fist.raised"],markupShorthand:null,mathShorthand:null},{name:"fist.l",codepoint:129307,accent:!1,alternates:["fist.front","fist.r","fist.raised"],markupShorthand:null,mathShorthand:null},{name:"fist.raised",codepoint:9994,accent:!1,alternates:["fist.front","fist.r","fist.l"],markupShorthand:null,mathShorthand:null},{name:"flag.black",codepoint:127988,accent:!1,alternates:["flag.white","flag.goal","flag.golf","flag.red"],markupShorthand:null,mathShorthand:null},{name:"flag.white",codepoint:127987,accent:!1,alternates:["flag.black","flag.goal","flag.golf","flag.red"],markupShorthand:null,mathShorthand:null},{name:"flag.goal",codepoint:127937,accent:!1,alternates:["flag.black","flag.white","flag.golf","flag.red"],markupShorthand:null,mathShorthand:null},{name:"flag.golf",codepoint:9971,accent:!1,alternates:["flag.black","flag.white","flag.goal","flag.red"],markupShorthand:null,mathShorthand:null},{name:"flag.red",codepoint:128681,accent:!1,alternates:["flag.black","flag.white","flag.goal","flag.golf"],markupShorthand:null,mathShorthand:null},{name:"flags.jp.crossed",codepoint:127884,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"flamingo",codepoint:129449,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"flashlight",codepoint:128294,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"flatbread",codepoint:129747,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fleur",codepoint:9884,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"floppy",codepoint:128190,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"flower.hibiscus",codepoint:127802,accent:!1,alternates:["flower.lotus","flower.pink","flower.rose","flower.sun","flower.tulip","flower.white","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.lotus",codepoint:129719,accent:!1,alternates:["flower.hibiscus","flower.pink","flower.rose","flower.sun","flower.tulip","flower.white","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.pink",codepoint:127800,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.rose","flower.sun","flower.tulip","flower.white","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.rose",codepoint:127801,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.pink","flower.sun","flower.tulip","flower.white","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.sun",codepoint:127803,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.pink","flower.rose","flower.tulip","flower.white","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.tulip",codepoint:127799,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.pink","flower.rose","flower.sun","flower.white","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.white",codepoint:128174,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.pink","flower.rose","flower.sun","flower.tulip","flower.wilted","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.wilted",codepoint:129344,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.pink","flower.rose","flower.sun","flower.tulip","flower.white","flower.yellow"],markupShorthand:null,mathShorthand:null},{name:"flower.yellow",codepoint:127804,accent:!1,alternates:["flower.hibiscus","flower.lotus","flower.pink","flower.rose","flower.sun","flower.tulip","flower.white","flower.wilted"],markupShorthand:null,mathShorthand:null},{name:"fly",codepoint:129712,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fog",codepoint:127787,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"folder",codepoint:128193,accent:!1,alternates:["folder.open"],markupShorthand:null,mathShorthand:null},{name:"folder.open",codepoint:128194,accent:!1,alternates:["folder"],markupShorthand:null,mathShorthand:null},{name:"fondue",codepoint:129749,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"foot",codepoint:129462,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"football",codepoint:9917,accent:!1,alternates:["football.am"],markupShorthand:null,mathShorthand:null},{name:"football.am",codepoint:127944,accent:!1,alternates:["football"],markupShorthand:null,mathShorthand:null},{name:"forex",codepoint:128177,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fountain",codepoint:9970,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fox",codepoint:129418,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"free",codepoint:127379,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fries",codepoint:127839,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"frisbee",codepoint:129359,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"frog.face",codepoint:128056,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"fuelpump",codepoint:9981,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"garlic",codepoint:129476,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gear",codepoint:9881,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gem",codepoint:128142,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"genie",codepoint:129502,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ghost",codepoint:128123,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"giraffe",codepoint:129426,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"girl",codepoint:128103,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"glass.clink",codepoint:129346,accent:!1,alternates:["glass.milk","glass.pour","glass.tumbler"],markupShorthand:null,mathShorthand:null},{name:"glass.milk",codepoint:129371,accent:!1,alternates:["glass.clink","glass.pour","glass.tumbler"],markupShorthand:null,mathShorthand:null},{name:"glass.pour",codepoint:129751,accent:!1,alternates:["glass.clink","glass.milk","glass.tumbler"],markupShorthand:null,mathShorthand:null},{name:"glass.tumbler",codepoint:129347,accent:!1,alternates:["glass.clink","glass.milk","glass.pour"],markupShorthand:null,mathShorthand:null},{name:"glasses",codepoint:128083,accent:!1,alternates:["glasses.sun"],markupShorthand:null,mathShorthand:null},{name:"glasses.sun",codepoint:128374,accent:!1,alternates:["glasses"],markupShorthand:null,mathShorthand:null},{name:"globe.am",codepoint:127758,accent:!1,alternates:["globe.as.au","globe.eu.af","globe.meridian"],markupShorthand:null,mathShorthand:null},{name:"globe.as.au",codepoint:127759,accent:!1,alternates:["globe.am","globe.eu.af","globe.meridian"],markupShorthand:null,mathShorthand:null},{name:"globe.eu.af",codepoint:127757,accent:!1,alternates:["globe.am","globe.as.au","globe.meridian"],markupShorthand:null,mathShorthand:null},{name:"globe.meridian",codepoint:127760,accent:!1,alternates:["globe.am","globe.as.au","globe.eu.af"],markupShorthand:null,mathShorthand:null},{name:"gloves",codepoint:129508,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"goal",codepoint:129349,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"goat",codepoint:128016,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"goggles",codepoint:129405,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"golfing",codepoint:127948,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gorilla",codepoint:129421,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"grapes",codepoint:127815,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"guard.man",codepoint:128130,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"guitar",codepoint:127928,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gymnastics",codepoint:129336,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"haircut",codepoint:128135,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hammer",codepoint:128296,accent:!1,alternates:["hammer.pick","hammer.wrench"],markupShorthand:null,mathShorthand:null},{name:"hammer.pick",codepoint:9874,accent:!1,alternates:["hammer","hammer.wrench"],markupShorthand:null,mathShorthand:null},{name:"hammer.wrench",codepoint:128736,accent:!1,alternates:["hammer","hammer.pick"],markupShorthand:null,mathShorthand:null},{name:"hamsa",codepoint:129708,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hamster.face",codepoint:128057,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hand.raised",codepoint:9995,accent:!1,alternates:["hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.raised.alt",codepoint:129306,accent:!1,alternates:["hand.raised","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.r",codepoint:129777,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.l",codepoint:129778,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.t",codepoint:129780,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.b",codepoint:129779,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.ok",codepoint:128076,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.call",codepoint:129305,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.love",codepoint:129311,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.part",codepoint:128406,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.peace",codepoint:9996,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.pinch","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.pinch",codepoint:129295,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.rock","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.rock",codepoint:129304,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.splay","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.splay",codepoint:128400,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.wave","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.wave",codepoint:128075,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.write"],markupShorthand:null,mathShorthand:null},{name:"hand.write",codepoint:9997,accent:!1,alternates:["hand.raised","hand.raised.alt","hand.r","hand.l","hand.t","hand.b","hand.ok","hand.call","hand.love","hand.part","hand.peace","hand.pinch","hand.rock","hand.splay","hand.wave"],markupShorthand:null,mathShorthand:null},{name:"handbag",codepoint:128092,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"handball",codepoint:129342,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"handholding.man.man",codepoint:128108,accent:!1,alternates:["handholding.woman.man","handholding.woman.woman"],markupShorthand:null,mathShorthand:null},{name:"handholding.woman.man",codepoint:128107,accent:!1,alternates:["handholding.man.man","handholding.woman.woman"],markupShorthand:null,mathShorthand:null},{name:"handholding.woman.woman",codepoint:128109,accent:!1,alternates:["handholding.man.man","handholding.woman.man"],markupShorthand:null,mathShorthand:null},{name:"hands.folded",codepoint:128591,accent:!1,alternates:["hands.palms","hands.clap","hands.heart","hands.open","hands.raised","hands.shake"],markupShorthand:null,mathShorthand:null},{name:"hands.palms",codepoint:129330,accent:!1,alternates:["hands.folded","hands.clap","hands.heart","hands.open","hands.raised","hands.shake"],markupShorthand:null,mathShorthand:null},{name:"hands.clap",codepoint:128079,accent:!1,alternates:["hands.folded","hands.palms","hands.heart","hands.open","hands.raised","hands.shake"],markupShorthand:null,mathShorthand:null},{name:"hands.heart",codepoint:129782,accent:!1,alternates:["hands.folded","hands.palms","hands.clap","hands.open","hands.raised","hands.shake"],markupShorthand:null,mathShorthand:null},{name:"hands.open",codepoint:128080,accent:!1,alternates:["hands.folded","hands.palms","hands.clap","hands.heart","hands.raised","hands.shake"],markupShorthand:null,mathShorthand:null},{name:"hands.raised",codepoint:128588,accent:!1,alternates:["hands.folded","hands.palms","hands.clap","hands.heart","hands.open","hands.shake"],markupShorthand:null,mathShorthand:null},{name:"hands.shake",codepoint:129309,accent:!1,alternates:["hands.folded","hands.palms","hands.clap","hands.heart","hands.open","hands.raised"],markupShorthand:null,mathShorthand:null},{name:"harp",codepoint:129673,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hash",codepoint:35,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hat.ribbon",codepoint:128082,accent:!1,alternates:["hat.top"],markupShorthand:null,mathShorthand:null},{name:"hat.top",codepoint:127913,accent:!1,alternates:["hat.ribbon"],markupShorthand:null,mathShorthand:null},{name:"headphone",codepoint:127911,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"heart",codepoint:10084,accent:!1,alternates:["heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.arrow",codepoint:128152,accent:!1,alternates:["heart","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.beat",codepoint:128147,accent:!1,alternates:["heart","heart.arrow","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.black",codepoint:128420,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.blue",codepoint:128153,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.box",codepoint:128159,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.broken",codepoint:128148,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.brown",codepoint:129294,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.double",codepoint:128149,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.excl",codepoint:10083,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.green",codepoint:128154,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.grow",codepoint:128151,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.orange",codepoint:129505,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.purple",codepoint:128156,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.real",codepoint:129728,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.revolve","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.revolve",codepoint:128158,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.ribbon","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.ribbon",codepoint:128157,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.spark","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.spark",codepoint:128150,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.white","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.white",codepoint:129293,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.yellow"],markupShorthand:null,mathShorthand:null},{name:"heart.yellow",codepoint:128155,accent:!1,alternates:["heart","heart.arrow","heart.beat","heart.black","heart.blue","heart.box","heart.broken","heart.brown","heart.double","heart.excl","heart.green","heart.grow","heart.orange","heart.purple","heart.real","heart.revolve","heart.ribbon","heart.spark","heart.white"],markupShorthand:null,mathShorthand:null},{name:"hedgehog",codepoint:129428,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"helicopter",codepoint:128641,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"helix",codepoint:129516,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"helmet.cross",codepoint:9937,accent:!1,alternates:["helmet.military"],markupShorthand:null,mathShorthand:null},{name:"helmet.military",codepoint:129686,accent:!1,alternates:["helmet.cross"],markupShorthand:null,mathShorthand:null},{name:"hippo",codepoint:129435,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hockey",codepoint:127953,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hole",codepoint:128371,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"honey",codepoint:127855,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hongbao",codepoint:129511,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hook",codepoint:129693,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"horn.postal",codepoint:128239,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"horse",codepoint:128014,accent:!1,alternates:["horse.carousel","horse.face","horse.race"],markupShorthand:null,mathShorthand:null},{name:"horse.carousel",codepoint:127904,accent:!1,alternates:["horse","horse.face","horse.race"],markupShorthand:null,mathShorthand:null},{name:"horse.face",codepoint:128052,accent:!1,alternates:["horse","horse.carousel","horse.race"],markupShorthand:null,mathShorthand:null},{name:"horse.race",codepoint:127943,accent:!1,alternates:["horse","horse.carousel","horse.face"],markupShorthand:null,mathShorthand:null},{name:"hospital",codepoint:127973,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hotdog",codepoint:127789,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hotel",codepoint:127976,accent:!1,alternates:["hotel.love"],markupShorthand:null,mathShorthand:null},{name:"hotel.love",codepoint:127977,accent:!1,alternates:["hotel"],markupShorthand:null,mathShorthand:null},{name:"hotspring",codepoint:9832,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hourglass",codepoint:8987,accent:!1,alternates:["hourglass.flow"],markupShorthand:null,mathShorthand:null},{name:"hourglass.flow",codepoint:9203,accent:!1,alternates:["hourglass"],markupShorthand:null,mathShorthand:null},{name:"house",codepoint:127968,accent:!1,alternates:["house.derelict","house.garden","house.multiple"],markupShorthand:null,mathShorthand:null},{name:"house.derelict",codepoint:127962,accent:!1,alternates:["house","house.garden","house.multiple"],markupShorthand:null,mathShorthand:null},{name:"house.garden",codepoint:127969,accent:!1,alternates:["house","house.derelict","house.multiple"],markupShorthand:null,mathShorthand:null},{name:"house.multiple",codepoint:127960,accent:!1,alternates:["house","house.derelict","house.garden"],markupShorthand:null,mathShorthand:null},{name:"hundred",codepoint:128175,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hut",codepoint:128726,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ice",codepoint:129482,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"icecream",codepoint:127848,accent:!1,alternates:["icecream.shaved","icecream.soft"],markupShorthand:null,mathShorthand:null},{name:"icecream.shaved",codepoint:127847,accent:!1,alternates:["icecream","icecream.soft"],markupShorthand:null,mathShorthand:null},{name:"icecream.soft",codepoint:127846,accent:!1,alternates:["icecream","icecream.shaved"],markupShorthand:null,mathShorthand:null},{name:"icehockey",codepoint:127954,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"id",codepoint:127380,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"info",codepoint:8505,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"izakaya",codepoint:127982,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"jar",codepoint:129753,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"jeans",codepoint:128086,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"jigsaw",codepoint:129513,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"joystick",codepoint:128377,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"juggling",codepoint:129337,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"juice",codepoint:129475,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kaaba",codepoint:128331,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kadomatsu",codepoint:127885,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kangaroo",codepoint:129432,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"gachi",codepoint:127543,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"go",codepoint:127540,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"hi",codepoint:12953,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ka",codepoint:127569,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kachi",codepoint:127545,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kara",codepoint:127539,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kon",codepoint:127538,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"man",codepoint:128104,accent:!1,alternates:["man.box","man.crown","man.guapimao","man.levitate","man.old","man.pregnant","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.box",codepoint:128697,accent:!1,alternates:["man","man.crown","man.guapimao","man.levitate","man.old","man.pregnant","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.crown",codepoint:129332,accent:!1,alternates:["man","man.box","man.guapimao","man.levitate","man.old","man.pregnant","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.guapimao",codepoint:128114,accent:!1,alternates:["man","man.box","man.crown","man.levitate","man.old","man.pregnant","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.levitate",codepoint:128372,accent:!1,alternates:["man","man.box","man.crown","man.guapimao","man.old","man.pregnant","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.old",codepoint:128116,accent:!1,alternates:["man","man.box","man.crown","man.guapimao","man.levitate","man.pregnant","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.pregnant",codepoint:129731,accent:!1,alternates:["man","man.box","man.crown","man.guapimao","man.levitate","man.old","man.turban","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.turban",codepoint:128115,accent:!1,alternates:["man","man.box","man.crown","man.guapimao","man.levitate","man.old","man.pregnant","man.tuxedo"],markupShorthand:null,mathShorthand:null},{name:"man.tuxedo",codepoint:129333,accent:!1,alternates:["man","man.box","man.crown","man.guapimao","man.levitate","man.old","man.pregnant","man.turban"],markupShorthand:null,mathShorthand:null},{name:"muryo",codepoint:127514,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shin",codepoint:127544,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shuku",codepoint:12951,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"toku",codepoint:127568,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"yo",codepoint:127546,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"yubi",codepoint:127535,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"yuryo",codepoint:127542,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"koko",codepoint:127489,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sa",codepoint:127490,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kebab",codepoint:129369,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"key",codepoint:128273,accent:!1,alternates:["key.old"],markupShorthand:null,mathShorthand:null},{name:"key.old",codepoint:128477,accent:!1,alternates:["key"],markupShorthand:null,mathShorthand:null},{name:"keyboard",codepoint:9e3,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kiss",codepoint:128143,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kissmark",codepoint:128139,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kite",codepoint:129665,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"kiwi",codepoint:129373,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"knife",codepoint:128298,accent:!1,alternates:["knife.dagger"],markupShorthand:null,mathShorthand:null},{name:"knife.dagger",codepoint:128481,accent:!1,alternates:["knife"],markupShorthand:null,mathShorthand:null},{name:"knot",codepoint:129698,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"koala",codepoint:128040,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"koinobori",codepoint:127887,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"label",codepoint:127991,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lacrosse",codepoint:129357,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ladder",codepoint:129692,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lamp.diya",codepoint:129684,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"laptop",codepoint:128187,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"a",codepoint:127344,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ab",codepoint:127374,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"b",codepoint:127345,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"cl",codepoint:127377,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"o",codepoint:127358,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"leaf.clover.three",codepoint:9752,accent:!1,alternates:["leaf.clover.four","leaf.fall","leaf.herb","leaf.maple","leaf.wind"],markupShorthand:null,mathShorthand:null},{name:"leaf.clover.four",codepoint:127808,accent:!1,alternates:["leaf.clover.three","leaf.fall","leaf.herb","leaf.maple","leaf.wind"],markupShorthand:null,mathShorthand:null},{name:"leaf.fall",codepoint:127810,accent:!1,alternates:["leaf.clover.three","leaf.clover.four","leaf.herb","leaf.maple","leaf.wind"],markupShorthand:null,mathShorthand:null},{name:"leaf.herb",codepoint:127807,accent:!1,alternates:["leaf.clover.three","leaf.clover.four","leaf.fall","leaf.maple","leaf.wind"],markupShorthand:null,mathShorthand:null},{name:"leaf.maple",codepoint:127809,accent:!1,alternates:["leaf.clover.three","leaf.clover.four","leaf.fall","leaf.herb","leaf.wind"],markupShorthand:null,mathShorthand:null},{name:"leaf.wind",codepoint:127811,accent:!1,alternates:["leaf.clover.three","leaf.clover.four","leaf.fall","leaf.herb","leaf.maple"],markupShorthand:null,mathShorthand:null},{name:"leftluggage",codepoint:128709,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"leg",codepoint:129461,accent:!1,alternates:["leg.mech"],markupShorthand:null,mathShorthand:null},{name:"leg.mech",codepoint:129471,accent:!1,alternates:["leg"],markupShorthand:null,mathShorthand:null},{name:"lemon",codepoint:127819,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"leopard",codepoint:128006,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"letter.love",codepoint:128140,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"liberty",codepoint:128509,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lightbulb",codepoint:128161,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lightning",codepoint:9889,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lion",codepoint:129409,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lipstick",codepoint:128132,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"litter",codepoint:128686,accent:!1,alternates:["litter.not"],markupShorthand:null,mathShorthand:null},{name:"litter.not",codepoint:128687,accent:!1,alternates:["litter"],markupShorthand:null,mathShorthand:null},{name:"lizard",codepoint:129422,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"llama",codepoint:129433,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lobster",codepoint:129438,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lock",codepoint:128274,accent:!1,alternates:["lock.key","lock.open","lock.pen"],markupShorthand:null,mathShorthand:null},{name:"lock.key",codepoint:128272,accent:!1,alternates:["lock","lock.open","lock.pen"],markupShorthand:null,mathShorthand:null},{name:"lock.open",codepoint:128275,accent:!1,alternates:["lock","lock.key","lock.pen"],markupShorthand:null,mathShorthand:null},{name:"lock.pen",codepoint:128271,accent:!1,alternates:["lock","lock.key","lock.open"],markupShorthand:null,mathShorthand:null},{name:"lollipop",codepoint:127853,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lotion",codepoint:129524,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"luggage",codepoint:129523,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"lungs",codepoint:129729,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mage",codepoint:129497,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"magnet",codepoint:129522,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"magnify.r",codepoint:128270,accent:!1,alternates:["magnify.l"],markupShorthand:null,mathShorthand:null},{name:"magnify.l",codepoint:128269,accent:!1,alternates:["magnify.r"],markupShorthand:null,mathShorthand:null},{name:"mahjong.dragon.red",codepoint:126980,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mail",codepoint:9993,accent:!1,alternates:["mail.arrow"],markupShorthand:null,mathShorthand:null},{name:"mail.arrow",codepoint:128233,accent:!1,alternates:["mail"],markupShorthand:null,mathShorthand:null},{name:"mailbox.closed.empty",codepoint:128234,accent:!1,alternates:["mailbox.closed.full","mailbox.open.empty","mailbox.open.full"],markupShorthand:null,mathShorthand:null},{name:"mailbox.closed.full",codepoint:128235,accent:!1,alternates:["mailbox.closed.empty","mailbox.open.empty","mailbox.open.full"],markupShorthand:null,mathShorthand:null},{name:"mailbox.open.empty",codepoint:128237,accent:!1,alternates:["mailbox.closed.empty","mailbox.closed.full","mailbox.open.full"],markupShorthand:null,mathShorthand:null},{name:"mailbox.open.full",codepoint:128236,accent:!1,alternates:["mailbox.closed.empty","mailbox.closed.full","mailbox.open.empty"],markupShorthand:null,mathShorthand:null},{name:"mammoth",codepoint:129443,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mango",codepoint:129389,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"map.world",codepoint:128506,accent:!1,alternates:["map.jp"],markupShorthand:null,mathShorthand:null},{name:"map.jp",codepoint:128510,accent:!1,alternates:["map.world"],markupShorthand:null,mathShorthand:null},{name:"martialarts",codepoint:129355,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"masks",codepoint:127917,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mate",codepoint:129481,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"matryoshka",codepoint:129670,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"meat",codepoint:129385,accent:!1,alternates:["meat.bone"],markupShorthand:null,mathShorthand:null},{name:"meat.bone",codepoint:127830,accent:!1,alternates:["meat"],markupShorthand:null,mathShorthand:null},{name:"medal.first",codepoint:129351,accent:!1,alternates:["medal.second","medal.third","medal.sports","medal.military"],markupShorthand:null,mathShorthand:null},{name:"medal.second",codepoint:129352,accent:!1,alternates:["medal.first","medal.third","medal.sports","medal.military"],markupShorthand:null,mathShorthand:null},{name:"medal.third",codepoint:129353,accent:!1,alternates:["medal.first","medal.second","medal.sports","medal.military"],markupShorthand:null,mathShorthand:null},{name:"medal.sports",codepoint:127941,accent:!1,alternates:["medal.first","medal.second","medal.third","medal.military"],markupShorthand:null,mathShorthand:null},{name:"medal.military",codepoint:127894,accent:!1,alternates:["medal.first","medal.second","medal.third","medal.sports"],markupShorthand:null,mathShorthand:null},{name:"megaphone",codepoint:128226,accent:!1,alternates:["megaphone.simple"],markupShorthand:null,mathShorthand:null},{name:"megaphone.simple",codepoint:128227,accent:!1,alternates:["megaphone"],markupShorthand:null,mathShorthand:null},{name:"melon",codepoint:127816,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"merperson",codepoint:129500,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"metro",codepoint:9410,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"microbe",codepoint:129440,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"microphone",codepoint:127908,accent:!1,alternates:["microphone.studio"],markupShorthand:null,mathShorthand:null},{name:"microphone.studio",codepoint:127897,accent:!1,alternates:["microphone"],markupShorthand:null,mathShorthand:null},{name:"microscope",codepoint:128300,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"milkyway",codepoint:127756,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mirror",codepoint:129694,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mixer",codepoint:127899,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"money.bag",codepoint:128176,accent:!1,alternates:["money.dollar","money.euro","money.pound","money.yen","money.wings"],markupShorthand:null,mathShorthand:null},{name:"money.dollar",codepoint:128181,accent:!1,alternates:["money.bag","money.euro","money.pound","money.yen","money.wings"],markupShorthand:null,mathShorthand:null},{name:"money.euro",codepoint:128182,accent:!1,alternates:["money.bag","money.dollar","money.pound","money.yen","money.wings"],markupShorthand:null,mathShorthand:null},{name:"money.pound",codepoint:128183,accent:!1,alternates:["money.bag","money.dollar","money.euro","money.yen","money.wings"],markupShorthand:null,mathShorthand:null},{name:"money.yen",codepoint:128180,accent:!1,alternates:["money.bag","money.dollar","money.euro","money.pound","money.wings"],markupShorthand:null,mathShorthand:null},{name:"money.wings",codepoint:128184,accent:!1,alternates:["money.bag","money.dollar","money.euro","money.pound","money.yen"],markupShorthand:null,mathShorthand:null},{name:"monkey",codepoint:128018,accent:!1,alternates:["monkey.face","monkey.hear.not","monkey.see.not","monkey.speak.not"],markupShorthand:null,mathShorthand:null},{name:"monkey.face",codepoint:128053,accent:!1,alternates:["monkey","monkey.hear.not","monkey.see.not","monkey.speak.not"],markupShorthand:null,mathShorthand:null},{name:"monkey.hear.not",codepoint:128585,accent:!1,alternates:["monkey","monkey.face","monkey.see.not","monkey.speak.not"],markupShorthand:null,mathShorthand:null},{name:"monkey.see.not",codepoint:128584,accent:!1,alternates:["monkey","monkey.face","monkey.hear.not","monkey.speak.not"],markupShorthand:null,mathShorthand:null},{name:"monkey.speak.not",codepoint:128586,accent:!1,alternates:["monkey","monkey.face","monkey.hear.not","monkey.see.not"],markupShorthand:null,mathShorthand:null},{name:"moon.crescent",codepoint:127769,accent:!1,alternates:["moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.full",codepoint:127765,accent:!1,alternates:["moon.crescent","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.full.face",codepoint:127773,accent:!1,alternates:["moon.crescent","moon.full","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.new",codepoint:127761,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.new.face",codepoint:127770,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wane.one",codepoint:127766,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wane.two",codepoint:127767,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wane.three.face",codepoint:127772,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wane.three",codepoint:127768,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wax.one","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wax.one",codepoint:127762,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.two","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wax.two",codepoint:127763,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two.face","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wax.two.face",codepoint:127771,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.three"],markupShorthand:null,mathShorthand:null},{name:"moon.wax.three",codepoint:127764,accent:!1,alternates:["moon.crescent","moon.full","moon.full.face","moon.new","moon.new.face","moon.wane.one","moon.wane.two","moon.wane.three.face","moon.wane.three","moon.wax.one","moon.wax.two","moon.wax.two.face"],markupShorthand:null,mathShorthand:null},{name:"mortarboard",codepoint:127891,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mosque",codepoint:128332,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mosquito",codepoint:129439,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"motorcycle",codepoint:127949,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"motorway",codepoint:128739,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mountain",codepoint:9968,accent:!1,alternates:["mountain.fuji","mountain.snow","mountain.sunrise"],markupShorthand:null,mathShorthand:null},{name:"mountain.fuji",codepoint:128507,accent:!1,alternates:["mountain","mountain.snow","mountain.sunrise"],markupShorthand:null,mathShorthand:null},{name:"mountain.snow",codepoint:127956,accent:!1,alternates:["mountain","mountain.fuji","mountain.sunrise"],markupShorthand:null,mathShorthand:null},{name:"mountain.sunrise",codepoint:127748,accent:!1,alternates:["mountain","mountain.fuji","mountain.snow"],markupShorthand:null,mathShorthand:null},{name:"mouse",codepoint:128001,accent:!1,alternates:["mouse.face"],markupShorthand:null,mathShorthand:null},{name:"mouse.face",codepoint:128045,accent:!1,alternates:["mouse"],markupShorthand:null,mathShorthand:null},{name:"mousetrap",codepoint:129700,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mouth",codepoint:128068,accent:!1,alternates:["mouth.bite"],markupShorthand:null,mathShorthand:null},{name:"mouth.bite",codepoint:129766,accent:!1,alternates:["mouth"],markupShorthand:null,mathShorthand:null},{name:"moyai",codepoint:128511,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"museum",codepoint:127963,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"mushroom",codepoint:127812,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"musicalscore",codepoint:127932,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"nails.polish",codepoint:128133,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"namebadge",codepoint:128219,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"nazar",codepoint:129535,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"necktie",codepoint:128084,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"needle",codepoint:129697,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"nest.empty",codepoint:129721,accent:!1,alternates:["nest.eggs"],markupShorthand:null,mathShorthand:null},{name:"nest.eggs",codepoint:129722,accent:!1,alternates:["nest.empty"],markupShorthand:null,mathShorthand:null},{name:"new",codepoint:127381,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"newspaper",codepoint:128240,accent:!1,alternates:["newspaper.rolled"],markupShorthand:null,mathShorthand:null},{name:"newspaper.rolled",codepoint:128478,accent:!1,alternates:["newspaper"],markupShorthand:null,mathShorthand:null},{name:"ng",codepoint:127382,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ningyo",codepoint:127886,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ninja",codepoint:129399,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"noentry",codepoint:9940,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"nose",codepoint:128067,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"notebook",codepoint:128211,accent:!1,alternates:["notebook.deco"],markupShorthand:null,mathShorthand:null},{name:"notebook.deco",codepoint:128212,accent:!1,alternates:["notebook"],markupShorthand:null,mathShorthand:null},{name:"notepad",codepoint:128466,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"notes",codepoint:127925,accent:!1,alternates:["notes.triple"],markupShorthand:null,mathShorthand:null},{name:"notes.triple",codepoint:127926,accent:!1,alternates:["notes"],markupShorthand:null,mathShorthand:null},{name:"numbers",codepoint:128290,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"octopus",codepoint:128025,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"office",codepoint:127970,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"oil",codepoint:128738,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ok",codepoint:127383,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"olive",codepoint:129746,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"oni",codepoint:128121,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"onion",codepoint:129477,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"orangutan",codepoint:129447,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"otter",codepoint:129446,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"owl",codepoint:129417,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ox",codepoint:128002,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"oyster",codepoint:129450,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"package",codepoint:128230,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"paella",codepoint:129368,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"page",codepoint:128196,accent:!1,alternates:["page.curl","page.pencil"],markupShorthand:null,mathShorthand:null},{name:"page.curl",codepoint:128195,accent:!1,alternates:["page","page.pencil"],markupShorthand:null,mathShorthand:null},{name:"page.pencil",codepoint:128221,accent:!1,alternates:["page","page.curl"],markupShorthand:null,mathShorthand:null},{name:"pager",codepoint:128223,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pages.tabs",codepoint:128209,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"painting",codepoint:128444,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"palette",codepoint:127912,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pancakes",codepoint:129374,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"panda",codepoint:128060,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"parachute",codepoint:129666,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"park",codepoint:127966,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"parking",codepoint:127359,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"parrot",codepoint:129436,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"partalteration",codepoint:12349,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"party",codepoint:127881,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"peach",codepoint:127825,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"peacock",codepoint:129434,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"peanuts",codepoint:129372,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pear",codepoint:127824,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pedestrian",codepoint:128694,accent:!1,alternates:["pedestrian.not"],markupShorthand:null,mathShorthand:null},{name:"pedestrian.not",codepoint:128695,accent:!1,alternates:["pedestrian"],markupShorthand:null,mathShorthand:null},{name:"pen.ball",codepoint:128394,accent:!1,alternates:["pen.fountain"],markupShorthand:null,mathShorthand:null},{name:"pen.fountain",codepoint:128395,accent:!1,alternates:["pen.ball"],markupShorthand:null,mathShorthand:null},{name:"pencil",codepoint:9999,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"penguin",codepoint:128039,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pepper",codepoint:129745,accent:!1,alternates:["pepper.hot"],markupShorthand:null,mathShorthand:null},{name:"pepper.hot",codepoint:127798,accent:!1,alternates:["pepper"],markupShorthand:null,mathShorthand:null},{name:"person",codepoint:129489,accent:!1,alternates:["person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.angry",codepoint:128590,accent:!1,alternates:["person","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.beard",codepoint:129492,accent:!1,alternates:["person","person.angry","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.blonde",codepoint:128113,accent:!1,alternates:["person","person.angry","person.beard","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.bow",codepoint:128583,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.crown",codepoint:129733,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.deaf",codepoint:129487,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.facepalm",codepoint:129318,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.frown",codepoint:128589,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.hijab",codepoint:129493,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.kneel",codepoint:129486,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.lotus",codepoint:129496,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.massage",codepoint:128134,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.no",codepoint:128581,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.ok",codepoint:128582,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.old",codepoint:129491,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.pregnant","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.pregnant",codepoint:129732,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.raise","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.raise",codepoint:128587,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.sassy","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.sassy",codepoint:128129,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.shrug","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.shrug",codepoint:129335,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.stand","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.stand",codepoint:129485,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.steam"],markupShorthand:null,mathShorthand:null},{name:"person.steam",codepoint:129494,accent:!1,alternates:["person","person.angry","person.beard","person.blonde","person.bow","person.crown","person.deaf","person.facepalm","person.frown","person.hijab","person.kneel","person.lotus","person.massage","person.no","person.ok","person.old","person.pregnant","person.raise","person.sassy","person.shrug","person.stand"],markupShorthand:null,mathShorthand:null},{name:"petri",codepoint:129515,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"phone",codepoint:128241,accent:!1,alternates:["phone.arrow","phone.classic","phone.not","phone.off","phone.receiver","phone.signal","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.arrow",codepoint:128242,accent:!1,alternates:["phone","phone.classic","phone.not","phone.off","phone.receiver","phone.signal","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.classic",codepoint:9742,accent:!1,alternates:["phone","phone.arrow","phone.not","phone.off","phone.receiver","phone.signal","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.not",codepoint:128245,accent:!1,alternates:["phone","phone.arrow","phone.classic","phone.off","phone.receiver","phone.signal","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.off",codepoint:128244,accent:!1,alternates:["phone","phone.arrow","phone.classic","phone.not","phone.receiver","phone.signal","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.receiver",codepoint:128222,accent:!1,alternates:["phone","phone.arrow","phone.classic","phone.not","phone.off","phone.signal","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.signal",codepoint:128246,accent:!1,alternates:["phone","phone.arrow","phone.classic","phone.not","phone.off","phone.receiver","phone.vibrate"],markupShorthand:null,mathShorthand:null},{name:"phone.vibrate",codepoint:128243,accent:!1,alternates:["phone","phone.arrow","phone.classic","phone.not","phone.off","phone.receiver","phone.signal"],markupShorthand:null,mathShorthand:null},{name:"piano",codepoint:127929,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pick",codepoint:9935,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pie",codepoint:129383,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pig",codepoint:128022,accent:!1,alternates:["pig.face","pig.nose"],markupShorthand:null,mathShorthand:null},{name:"pig.face",codepoint:128055,accent:!1,alternates:["pig","pig.nose"],markupShorthand:null,mathShorthand:null},{name:"pig.nose",codepoint:128061,accent:!1,alternates:["pig","pig.face"],markupShorthand:null,mathShorthand:null},{name:"pill",codepoint:128138,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pin",codepoint:128204,accent:!1,alternates:["pin.round"],markupShorthand:null,mathShorthand:null},{name:"pin.round",codepoint:128205,accent:!1,alternates:["pin"],markupShorthand:null,mathShorthand:null},{name:"pinata",codepoint:129669,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pineapple",codepoint:127821,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pingpong",codepoint:127955,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pistol",codepoint:128299,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pizza",codepoint:127829,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"placard",codepoint:129703,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"planet",codepoint:129680,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"plant",codepoint:129716,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"plaster",codepoint:129657,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"plate.cutlery",codepoint:127869,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"playback.down",codepoint:9196,accent:!1,alternates:["playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.eject",codepoint:9167,accent:!1,alternates:["playback.down","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.forward",codepoint:9193,accent:!1,alternates:["playback.down","playback.eject","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.pause",codepoint:9208,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.record",codepoint:9210,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.repeat",codepoint:128257,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.repeat.once",codepoint:128258,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.repeat.v",codepoint:128259,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.restart",codepoint:9198,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.rewind",codepoint:9194,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.shuffle","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.shuffle",codepoint:128256,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.skip","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.skip",codepoint:9197,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.stop","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.stop",codepoint:9209,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.toggle","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.toggle",codepoint:9199,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.up"],markupShorthand:null,mathShorthand:null},{name:"playback.up",codepoint:9195,accent:!1,alternates:["playback.down","playback.eject","playback.forward","playback.pause","playback.record","playback.repeat","playback.repeat.once","playback.repeat.v","playback.restart","playback.rewind","playback.shuffle","playback.skip","playback.stop","playback.toggle"],markupShorthand:null,mathShorthand:null},{name:"playingcard.flower",codepoint:127924,accent:!1,alternates:["playingcard.joker"],markupShorthand:null,mathShorthand:null},{name:"playingcard.joker",codepoint:127183,accent:!1,alternates:["playingcard.flower"],markupShorthand:null,mathShorthand:null},{name:"plunger",codepoint:129696,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"policeofficer",codepoint:128110,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"poo",codepoint:128169,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"popcorn",codepoint:127871,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"post.eu",codepoint:127972,accent:!1,alternates:["post.jp"],markupShorthand:null,mathShorthand:null},{name:"post.jp",codepoint:127971,accent:!1,alternates:["post.eu"],markupShorthand:null,mathShorthand:null},{name:"postbox",codepoint:128238,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"potato",codepoint:129364,accent:!1,alternates:["potato.sweet"],markupShorthand:null,mathShorthand:null},{name:"potato.sweet",codepoint:127840,accent:!1,alternates:["potato"],markupShorthand:null,mathShorthand:null},{name:"pouch",codepoint:128093,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"powerplug",codepoint:128268,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"present",codepoint:127873,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pretzel",codepoint:129384,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"printer",codepoint:128424,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"prints.foot",codepoint:128099,accent:!1,alternates:["prints.paw"],markupShorthand:null,mathShorthand:null},{name:"prints.paw",codepoint:128062,accent:!1,alternates:["prints.foot"],markupShorthand:null,mathShorthand:null},{name:"prohibited",codepoint:128683,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"projector",codepoint:128253,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"pumpkin.lantern",codepoint:127875,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"purse",codepoint:128091,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"quest",codepoint:10067,accent:!1,alternates:["quest.white"],markupShorthand:null,mathShorthand:null},{name:"quest.white",codepoint:10068,accent:!1,alternates:["quest"],markupShorthand:null,mathShorthand:null},{name:"rabbit",codepoint:128007,accent:!1,alternates:["rabbit.face"],markupShorthand:null,mathShorthand:null},{name:"rabbit.face",codepoint:128048,accent:!1,alternates:["rabbit"],markupShorthand:null,mathShorthand:null},{name:"raccoon",codepoint:129437,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"radio",codepoint:128251,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"radioactive",codepoint:9762,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"railway",codepoint:128740,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rainbow",codepoint:127752,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ram",codepoint:128015,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rat",codepoint:128e3,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"razor",codepoint:129682,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"receipt",codepoint:129534,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"recycling",codepoint:9851,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"reg",codepoint:174,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"restroom",codepoint:128699,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rhino",codepoint:129423,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ribbon",codepoint:127872,accent:!1,alternates:["ribbon.remind"],markupShorthand:null,mathShorthand:null},{name:"ribbon.remind",codepoint:127895,accent:!1,alternates:["ribbon"],markupShorthand:null,mathShorthand:null},{name:"rice",codepoint:127834,accent:!1,alternates:["rice.cracker","rice.ear","rice.onigiri"],markupShorthand:null,mathShorthand:null},{name:"rice.cracker",codepoint:127832,accent:!1,alternates:["rice","rice.ear","rice.onigiri"],markupShorthand:null,mathShorthand:null},{name:"rice.ear",codepoint:127806,accent:!1,alternates:["rice","rice.cracker","rice.onigiri"],markupShorthand:null,mathShorthand:null},{name:"rice.onigiri",codepoint:127833,accent:!1,alternates:["rice","rice.cracker","rice.ear"],markupShorthand:null,mathShorthand:null},{name:"ring",codepoint:128141,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ringbuoy",codepoint:128735,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"robot",codepoint:129302,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rock",codepoint:129704,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rocket",codepoint:128640,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rollercoaster",codepoint:127906,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rosette",codepoint:127989,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"rugby",codepoint:127945,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ruler",codepoint:128207,accent:!1,alternates:["ruler.triangle"],markupShorthand:null,mathShorthand:null},{name:"ruler.triangle",codepoint:128208,accent:!1,alternates:["ruler"],markupShorthand:null,mathShorthand:null},{name:"running",codepoint:127939,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"safetypin",codepoint:129527,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"safetyvest",codepoint:129466,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sake",codepoint:127862,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"salad",codepoint:129367,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"salt",codepoint:129474,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sandwich",codepoint:129386,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"santa.man",codepoint:127877,accent:!1,alternates:["santa.woman"],markupShorthand:null,mathShorthand:null},{name:"santa.woman",codepoint:129334,accent:!1,alternates:["santa.man"],markupShorthand:null,mathShorthand:null},{name:"satdish",codepoint:128225,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"satellite",codepoint:128752,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"saw",codepoint:129690,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"saxophone",codepoint:127927,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"scales",codepoint:9878,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"scarf",codepoint:129507,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"school",codepoint:127979,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"scissors",codepoint:9986,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"scooter",codepoint:128756,accent:!1,alternates:["scooter.motor"],markupShorthand:null,mathShorthand:null},{name:"scooter.motor",codepoint:128757,accent:!1,alternates:["scooter"],markupShorthand:null,mathShorthand:null},{name:"scorpion",codepoint:129410,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"screwdriver",codepoint:129691,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"scroll",codepoint:128220,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"seal",codepoint:129453,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"seat",codepoint:128186,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"seedling",codepoint:127793,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shark",codepoint:129416,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sheep",codepoint:128017,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shell.spiral",codepoint:128026,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shield",codepoint:128737,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ship",codepoint:128674,accent:!1,alternates:["ship.cruise","ship.ferry"],markupShorthand:null,mathShorthand:null},{name:"ship.cruise",codepoint:128755,accent:!1,alternates:["ship","ship.ferry"],markupShorthand:null,mathShorthand:null},{name:"ship.ferry",codepoint:9972,accent:!1,alternates:["ship","ship.cruise"],markupShorthand:null,mathShorthand:null},{name:"shirt.sports",codepoint:127933,accent:!1,alternates:["shirt.t"],markupShorthand:null,mathShorthand:null},{name:"shirt.t",codepoint:128085,accent:!1,alternates:["shirt.sports"],markupShorthand:null,mathShorthand:null},{name:"shoe",codepoint:128094,accent:!1,alternates:["shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.ballet",codepoint:129648,accent:!1,alternates:["shoe","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.flat",codepoint:129407,accent:!1,alternates:["shoe","shoe.ballet","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.heel",codepoint:128096,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.hike",codepoint:129406,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.ice",codepoint:9976,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.roller",codepoint:128764,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.sandal.heel",codepoint:128097,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.ski","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.ski",codepoint:127935,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.sneaker","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.sneaker",codepoint:128095,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.tall","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.tall",codepoint:128098,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.thong"],markupShorthand:null,mathShorthand:null},{name:"shoe.thong",codepoint:129652,accent:!1,alternates:["shoe","shoe.ballet","shoe.flat","shoe.heel","shoe.hike","shoe.ice","shoe.roller","shoe.sandal.heel","shoe.ski","shoe.sneaker","shoe.tall"],markupShorthand:null,mathShorthand:null},{name:"shopping",codepoint:128717,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shorts",codepoint:129651,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shoshinsha",codepoint:128304,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shovel",codepoint:129679,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shower",codepoint:128703,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"shrimp",codepoint:129424,accent:!1,alternates:["shrimp.fried"],markupShorthand:null,mathShorthand:null},{name:"shrimp.fried",codepoint:127844,accent:!1,alternates:["shrimp"],markupShorthand:null,mathShorthand:null},{name:"shrine",codepoint:9961,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sign.crossing",codepoint:128696,accent:!1,alternates:["sign.stop"],markupShorthand:null,mathShorthand:null},{name:"sign.stop",codepoint:128721,accent:!1,alternates:["sign.crossing"],markupShorthand:null,mathShorthand:null},{name:"silhouette",codepoint:128100,accent:!1,alternates:["silhouette.double","silhouette.hug","silhouette.speak"],markupShorthand:null,mathShorthand:null},{name:"silhouette.double",codepoint:128101,accent:!1,alternates:["silhouette","silhouette.hug","silhouette.speak"],markupShorthand:null,mathShorthand:null},{name:"silhouette.hug",codepoint:129730,accent:!1,alternates:["silhouette","silhouette.double","silhouette.speak"],markupShorthand:null,mathShorthand:null},{name:"silhouette.speak",codepoint:128483,accent:!1,alternates:["silhouette","silhouette.double","silhouette.hug"],markupShorthand:null,mathShorthand:null},{name:"siren",codepoint:128680,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"skateboard",codepoint:128761,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"skewer.dango",codepoint:127841,accent:!1,alternates:["skewer.oden"],markupShorthand:null,mathShorthand:null},{name:"skewer.oden",codepoint:127842,accent:!1,alternates:["skewer.dango"],markupShorthand:null,mathShorthand:null},{name:"skiing",codepoint:9975,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"skull",codepoint:128128,accent:!1,alternates:["skull.bones"],markupShorthand:null,mathShorthand:null},{name:"skull.bones",codepoint:9760,accent:!1,alternates:["skull"],markupShorthand:null,mathShorthand:null},{name:"skunk",codepoint:129448,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sled",codepoint:128759,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"slide",codepoint:128733,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"slider",codepoint:127898,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sloth",codepoint:129445,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"slots",codepoint:127920,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"snail",codepoint:128012,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"snake",codepoint:128013,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"snowboarding",codepoint:127938,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"snowflake",codepoint:10052,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"snowman",codepoint:9924,accent:!1,alternates:["snowman.snow"],markupShorthand:null,mathShorthand:null},{name:"snowman.snow",codepoint:9731,accent:!1,alternates:["snowman"],markupShorthand:null,mathShorthand:null},{name:"soap",codepoint:129532,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"socks",codepoint:129510,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"softball",codepoint:129358,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sos",codepoint:127384,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"soup",codepoint:127858,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"spaghetti",codepoint:127837,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sparkle.box",codepoint:10055,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sparkler",codepoint:127879,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sparkles",codepoint:10024,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"speaker",codepoint:128264,accent:!1,alternates:["speaker.not","speaker.wave","speaker.waves"],markupShorthand:null,mathShorthand:null},{name:"speaker.not",codepoint:128263,accent:!1,alternates:["speaker","speaker.wave","speaker.waves"],markupShorthand:null,mathShorthand:null},{name:"speaker.wave",codepoint:128265,accent:!1,alternates:["speaker","speaker.not","speaker.waves"],markupShorthand:null,mathShorthand:null},{name:"speaker.waves",codepoint:128266,accent:!1,alternates:["speaker","speaker.not","speaker.wave"],markupShorthand:null,mathShorthand:null},{name:"spider",codepoint:128375,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"spiderweb",codepoint:128376,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"spinach",codepoint:129388,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"splatter",codepoint:129759,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sponge",codepoint:129533,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"spoon",codepoint:129348,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"square.black",codepoint:11035,accent:!1,alternates:["square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.black.tiny",codepoint:9642,accent:!1,alternates:["square.black","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.black.small",codepoint:9726,accent:!1,alternates:["square.black","square.black.tiny","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.black.medium",codepoint:9724,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.white",codepoint:11036,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.white.tiny",codepoint:9643,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.white.small",codepoint:9725,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.white.medium",codepoint:9723,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.blue","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.blue",codepoint:128998,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.brown","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.brown",codepoint:129003,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.green","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.green",codepoint:129001,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.orange","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.orange",codepoint:128999,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.purple","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.purple",codepoint:129002,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.red","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.red",codepoint:128997,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.yellow"],markupShorthand:null,mathShorthand:null},{name:"square.yellow",codepoint:129e3,accent:!1,alternates:["square.black","square.black.tiny","square.black.small","square.black.medium","square.white","square.white.tiny","square.white.small","square.white.medium","square.blue","square.brown","square.green","square.orange","square.purple","square.red"],markupShorthand:null,mathShorthand:null},{name:"squid",codepoint:129425,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"stadium",codepoint:127967,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"star",codepoint:11088,accent:!1,alternates:["star.arc","star.box","star.glow","star.shoot"],markupShorthand:null,mathShorthand:null},{name:"star.arc",codepoint:128171,accent:!1,alternates:["star","star.box","star.glow","star.shoot"],markupShorthand:null,mathShorthand:null},{name:"star.box",codepoint:10036,accent:!1,alternates:["star","star.arc","star.glow","star.shoot"],markupShorthand:null,mathShorthand:null},{name:"star.glow",codepoint:127775,accent:!1,alternates:["star","star.arc","star.box","star.shoot"],markupShorthand:null,mathShorthand:null},{name:"star.shoot",codepoint:127776,accent:!1,alternates:["star","star.arc","star.box","star.glow"],markupShorthand:null,mathShorthand:null},{name:"stethoscope",codepoint:129658,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"store.big",codepoint:127980,accent:!1,alternates:["store.small"],markupShorthand:null,mathShorthand:null},{name:"store.small",codepoint:127978,accent:!1,alternates:["store.big"],markupShorthand:null,mathShorthand:null},{name:"strawberry",codepoint:127827,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"suit.club",codepoint:9827,accent:!1,alternates:["suit.diamond","suit.heart","suit.spade"],markupShorthand:null,mathShorthand:null},{name:"suit.diamond",codepoint:9830,accent:!1,alternates:["suit.club","suit.heart","suit.spade"],markupShorthand:null,mathShorthand:null},{name:"suit.heart",codepoint:9829,accent:!1,alternates:["suit.club","suit.diamond","suit.spade"],markupShorthand:null,mathShorthand:null},{name:"suit.spade",codepoint:9824,accent:!1,alternates:["suit.club","suit.diamond","suit.heart"],markupShorthand:null,mathShorthand:null},{name:"sun",codepoint:9728,accent:!1,alternates:["sun.cloud","sun.face"],markupShorthand:null,mathShorthand:null},{name:"sun.cloud",codepoint:127780,accent:!1,alternates:["sun","sun.face"],markupShorthand:null,mathShorthand:null},{name:"sun.face",codepoint:127774,accent:!1,alternates:["sun","sun.cloud"],markupShorthand:null,mathShorthand:null},{name:"sunrise",codepoint:127749,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"superhero",codepoint:129464,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"supervillain",codepoint:129465,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"surfing",codepoint:127940,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"sushi",codepoint:127843,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"swan",codepoint:129442,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"swimming",codepoint:127946,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"swimsuit",codepoint:129649,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"swords",codepoint:9876,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"symbols",codepoint:128291,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"synagogue",codepoint:128333,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"syringe",codepoint:128137,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"taco",codepoint:127790,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"takeout",codepoint:129377,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tamale",codepoint:129748,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tanabata",codepoint:127883,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tangerine",codepoint:127818,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tap",codepoint:128688,accent:!1,alternates:["tap.not"],markupShorthand:null,mathShorthand:null},{name:"tap.not",codepoint:128689,accent:!1,alternates:["tap"],markupShorthand:null,mathShorthand:null},{name:"taxi",codepoint:128661,accent:!1,alternates:["taxi.front"],markupShorthand:null,mathShorthand:null},{name:"taxi.front",codepoint:128662,accent:!1,alternates:["taxi"],markupShorthand:null,mathShorthand:null},{name:"teacup",codepoint:127861,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"teapot",codepoint:129750,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"teddy",codepoint:129528,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"telescope",codepoint:128301,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"temple",codepoint:128725,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ten",codepoint:128287,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tengu",codepoint:128122,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tennis",codepoint:127934,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tent",codepoint:9978,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"testtube",codepoint:129514,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"thermometer",codepoint:127777,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"thread",codepoint:129525,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"thumb.up",codepoint:128077,accent:!1,alternates:["thumb.down"],markupShorthand:null,mathShorthand:null},{name:"thumb.down",codepoint:128078,accent:!1,alternates:["thumb.up"],markupShorthand:null,mathShorthand:null},{name:"ticket.event",codepoint:127903,accent:!1,alternates:["ticket.travel"],markupShorthand:null,mathShorthand:null},{name:"ticket.travel",codepoint:127915,accent:!1,alternates:["ticket.event"],markupShorthand:null,mathShorthand:null},{name:"tiger",codepoint:128005,accent:!1,alternates:["tiger.face"],markupShorthand:null,mathShorthand:null},{name:"tiger.face",codepoint:128047,accent:!1,alternates:["tiger"],markupShorthand:null,mathShorthand:null},{name:"tm",codepoint:8482,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"toilet",codepoint:128701,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"toiletpaper",codepoint:129531,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tomato",codepoint:127813,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tombstone",codepoint:129702,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tongue",codepoint:128069,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"toolbox",codepoint:129520,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tooth",codepoint:129463,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"toothbrush",codepoint:129701,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tornado",codepoint:127786,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tower.tokyo",codepoint:128508,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"trackball",codepoint:128434,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tractor",codepoint:128668,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"trafficlight.v",codepoint:128678,accent:!1,alternates:["trafficlight.h"],markupShorthand:null,mathShorthand:null},{name:"trafficlight.h",codepoint:128677,accent:!1,alternates:["trafficlight.v"],markupShorthand:null,mathShorthand:null},{name:"train",codepoint:128646,accent:!1,alternates:["train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.car",codepoint:128643,accent:!1,alternates:["train","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.light",codepoint:128648,accent:!1,alternates:["train","train.car","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.metro",codepoint:128647,accent:!1,alternates:["train","train.car","train.light","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.mono",codepoint:128669,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.mountain",codepoint:128670,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.speed",codepoint:128644,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.speed.bullet",codepoint:128645,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.steam","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.steam",codepoint:128642,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.stop","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.stop",codepoint:128649,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.suspend","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.suspend",codepoint:128671,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.tram","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.tram",codepoint:128650,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram.car"],markupShorthand:null,mathShorthand:null},{name:"train.tram.car",codepoint:128651,accent:!1,alternates:["train","train.car","train.light","train.metro","train.mono","train.mountain","train.speed","train.speed.bullet","train.steam","train.stop","train.suspend","train.tram"],markupShorthand:null,mathShorthand:null},{name:"transgender",codepoint:9895,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tray.inbox",codepoint:128229,accent:!1,alternates:["tray.mail","tray.outbox"],markupShorthand:null,mathShorthand:null},{name:"tray.mail",codepoint:128232,accent:!1,alternates:["tray.inbox","tray.outbox"],markupShorthand:null,mathShorthand:null},{name:"tray.outbox",codepoint:128228,accent:!1,alternates:["tray.inbox","tray.mail"],markupShorthand:null,mathShorthand:null},{name:"tree.deciduous",codepoint:127795,accent:!1,alternates:["tree.evergreen","tree.leafless","tree.palm","tree.xmas"],markupShorthand:null,mathShorthand:null},{name:"tree.evergreen",codepoint:127794,accent:!1,alternates:["tree.deciduous","tree.leafless","tree.palm","tree.xmas"],markupShorthand:null,mathShorthand:null},{name:"tree.leafless",codepoint:129726,accent:!1,alternates:["tree.deciduous","tree.evergreen","tree.palm","tree.xmas"],markupShorthand:null,mathShorthand:null},{name:"tree.palm",codepoint:127796,accent:!1,alternates:["tree.deciduous","tree.evergreen","tree.leafless","tree.xmas"],markupShorthand:null,mathShorthand:null},{name:"tree.xmas",codepoint:127876,accent:!1,alternates:["tree.deciduous","tree.evergreen","tree.leafless","tree.palm"],markupShorthand:null,mathShorthand:null},{name:"triangle.r",codepoint:9654,accent:!1,alternates:["triangle.l","triangle.t","triangle.b","triangle.t.red","triangle.b.red"],markupShorthand:null,mathShorthand:null},{name:"triangle.l",codepoint:9664,accent:!1,alternates:["triangle.r","triangle.t","triangle.b","triangle.t.red","triangle.b.red"],markupShorthand:null,mathShorthand:null},{name:"triangle.t",codepoint:128316,accent:!1,alternates:["triangle.r","triangle.l","triangle.b","triangle.t.red","triangle.b.red"],markupShorthand:null,mathShorthand:null},{name:"triangle.b",codepoint:128317,accent:!1,alternates:["triangle.r","triangle.l","triangle.t","triangle.t.red","triangle.b.red"],markupShorthand:null,mathShorthand:null},{name:"triangle.t.red",codepoint:128314,accent:!1,alternates:["triangle.r","triangle.l","triangle.t","triangle.b","triangle.b.red"],markupShorthand:null,mathShorthand:null},{name:"triangle.b.red",codepoint:128315,accent:!1,alternates:["triangle.r","triangle.l","triangle.t","triangle.b","triangle.t.red"],markupShorthand:null,mathShorthand:null},{name:"trident",codepoint:128305,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"troll",codepoint:129484,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"trophy",codepoint:127942,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"truck",codepoint:128666,accent:!1,alternates:["truck.trailer"],markupShorthand:null,mathShorthand:null},{name:"truck.trailer",codepoint:128667,accent:!1,alternates:["truck"],markupShorthand:null,mathShorthand:null},{name:"trumpet",codepoint:127930,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tsukimi",codepoint:127889,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"turkey",codepoint:129411,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"turtle",codepoint:128034,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"tv",codepoint:128250,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"ufo",codepoint:128760,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"umbrella.open",codepoint:9730,accent:!1,alternates:["umbrella.closed","umbrella.rain","umbrella.sun"],markupShorthand:null,mathShorthand:null},{name:"umbrella.closed",codepoint:127746,accent:!1,alternates:["umbrella.open","umbrella.rain","umbrella.sun"],markupShorthand:null,mathShorthand:null},{name:"umbrella.rain",codepoint:9748,accent:!1,alternates:["umbrella.open","umbrella.closed","umbrella.sun"],markupShorthand:null,mathShorthand:null},{name:"umbrella.sun",codepoint:9969,accent:!1,alternates:["umbrella.open","umbrella.closed","umbrella.rain"],markupShorthand:null,mathShorthand:null},{name:"unicorn",codepoint:129412,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"unknown",codepoint:129459,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"up",codepoint:127385,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"urn",codepoint:9905,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"vampire",codepoint:129499,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"violin",codepoint:127931,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"volcano",codepoint:127755,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"volleyball",codepoint:127952,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"vs",codepoint:127386,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"waffle",codepoint:129479,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wand",codepoint:129668,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"warning",codepoint:9888,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"watch",codepoint:8986,accent:!1,alternates:["watch.stop"],markupShorthand:null,mathShorthand:null},{name:"watch.stop",codepoint:9201,accent:!1,alternates:["watch"],markupShorthand:null,mathShorthand:null},{name:"watermelon",codepoint:127817,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"waterpolo",codepoint:129341,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wave",codepoint:127754,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wc",codepoint:128702,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"weightlifting",codepoint:127947,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"whale",codepoint:128011,accent:!1,alternates:["whale.spout"],markupShorthand:null,mathShorthand:null},{name:"whale.spout",codepoint:128051,accent:!1,alternates:["whale"],markupShorthand:null,mathShorthand:null},{name:"wheel",codepoint:128734,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wheelchair",codepoint:129469,accent:!1,alternates:["wheelchair.box","wheelchair.motor"],markupShorthand:null,mathShorthand:null},{name:"wheelchair.box",codepoint:9855,accent:!1,alternates:["wheelchair","wheelchair.motor"],markupShorthand:null,mathShorthand:null},{name:"wheelchair.motor",codepoint:129468,accent:!1,alternates:["wheelchair","wheelchair.box"],markupShorthand:null,mathShorthand:null},{name:"wind",codepoint:127788,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"windchime",codepoint:127888,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"window",codepoint:129695,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wine",codepoint:127863,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wolf",codepoint:128058,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"woman",codepoint:128105,accent:!1,alternates:["woman.box","woman.crown","woman.old","woman.pregnant"],markupShorthand:null,mathShorthand:null},{name:"woman.box",codepoint:128698,accent:!1,alternates:["woman","woman.crown","woman.old","woman.pregnant"],markupShorthand:null,mathShorthand:null},{name:"woman.crown",codepoint:128120,accent:!1,alternates:["woman","woman.box","woman.old","woman.pregnant"],markupShorthand:null,mathShorthand:null},{name:"woman.old",codepoint:128117,accent:!1,alternates:["woman","woman.box","woman.crown","woman.pregnant"],markupShorthand:null,mathShorthand:null},{name:"woman.pregnant",codepoint:129328,accent:!1,alternates:["woman","woman.box","woman.crown","woman.old"],markupShorthand:null,mathShorthand:null},{name:"wood",codepoint:129717,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"worm",codepoint:129713,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wrench",codepoint:128295,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"wrestling",codepoint:129340,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"xray",codepoint:129659,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"yarn",codepoint:129526,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"yoyo",codepoint:129664,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zebra",codepoint:129427,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zodiac.aquarius",codepoint:9810,accent:!1,alternates:["zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.aries",codepoint:9800,accent:!1,alternates:["zodiac.aquarius","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.cancer",codepoint:9803,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.capri",codepoint:9809,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.gemini",codepoint:9802,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.leo",codepoint:9804,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.libra",codepoint:9806,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.ophi",codepoint:9934,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.pisces",codepoint:9811,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.sagit","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.sagit",codepoint:9808,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.scorpio","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.scorpio",codepoint:9807,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.taurus","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.taurus",codepoint:9801,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.virgo"],markupShorthand:null,mathShorthand:null},{name:"zodiac.virgo",codepoint:9805,accent:!1,alternates:["zodiac.aquarius","zodiac.aries","zodiac.cancer","zodiac.capri","zodiac.gemini","zodiac.leo","zodiac.libra","zodiac.ophi","zodiac.pisces","zodiac.sagit","zodiac.scorpio","zodiac.taurus"],markupShorthand:null,mathShorthand:null},{name:"zombie",codepoint:129503,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null},{name:"zzz",codepoint:128164,accent:!1,alternates:[],markupShorthand:null,mathShorthand:null}]}},children:[]},{route:"/docs/reference/symbols/symbol/",title:"Symbol",description:"Documentation for the Symbol type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-variants",name:"variants",children:[]}]}],body:{kind:"type",content:{name:"symbol",title:"Symbol",keywords:[],oneliner:"A Unicode symbol.",details:`<p>A Unicode symbol.</p>
<p>Typst defines common symbols so that they can easily be written with
standard keyboards. The symbols are defined in modules, from which they can
be accessed using <a href="/docs/reference/scripting/#fields">field access notation</a>:</p>
<ul>
<li>General symbols are defined in the <a href="/docs/reference/symbols/sym/"><code>sym</code> module</a></li>
<li>Emoji are defined in the <a href="/docs/reference/symbols/emoji/"><code>emoji</code> module</a></li>
</ul>
<p>Moreover, you can define custom symbols with this type's constructor
function.</p>
<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">sym</span><span class="typ-punct">.</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">r</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">sym</span><span class="typ-punct">.</span><span class="typ-pol">gt</span><span class="typ-punct">.</span><span class="typ-pol">eq</span><span class="typ-punct">.</span><span class="typ-pol">not</span> <span class="typ-escape">\\</span>
<span class="typ-math-delim">$</span><span class="typ-pol">gt</span><span class="typ-punct">.</span><span class="typ-pol">eq</span><span class="typ-punct">.</span><span class="typ-pol">not</span><span class="typ-math-delim">$</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">emoji</span><span class="typ-punct">.</span><span class="typ-pol">face</span><span class="typ-punct">.</span><span class="typ-pol">halo</span>
</code></pre><div class="preview"><img src="/docs/assets/b551014c08cecfef55d018c7533251cc.png" alt="Preview" /></div></div>
<p>Many symbols have different variants, which can be selected by appending the
modifiers with dot notation. The order of the modifiers is not relevant.
Visit the documentation pages of the symbol modules and click on a symbol to
see its available variants.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">l</span><span class="typ-math-delim">$</span> <span class="typ-escape">\\</span>
<span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">r</span><span class="typ-math-delim">$</span> <span class="typ-escape">\\</span>
<span class="typ-math-delim">$</span><span class="typ-pol">arrow</span><span class="typ-punct">.</span><span class="typ-pol">t</span><span class="typ-punct">.</span><span class="typ-pol">quad</span><span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/d630449319d2cff87d197296e288bd4c.png" alt="Preview" /></div></div>`,constructor:{path:[],name:"symbol",title:"Construct",keywords:[],oneliner:"Create a custom symbol with modifiers.",element:!1,contextual:!1,details:"<p>Create a custom symbol with modifiers.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> envelope <span class="typ-op">=</span> <span class="typ-func">symbol</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;🖂&quot;</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;stamped&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;🖃&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;stamped.pen&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;🖆&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;lightning&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;🖄&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-str">&quot;fly&quot;</span><span class="typ-punct">,</span> <span class="typ-str">&quot;🖅&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">envelope</span>
<span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">stamped</span>
<span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">stamped</span><span class="typ-punct">.</span><span class="typ-pol">pen</span>
<span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">lightning</span>
<span class="typ-pol">#</span><span class="typ-pol">envelope</span><span class="typ-punct">.</span><span class="typ-pol">fly</span>
</code></pre><div class="preview"><img src="/docs/assets/1d7a578c8a3903169bc7a137944dd3f5.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"variants",details:`<p>The variants of the symbol.</p>
<p>Can be a just a string consisting of a single character for the
modifierless variant or an array with two strings specifying the modifiers
and the symbol. Individual modifiers should be separated by dots. When
displaying a symbol, Typst selects the first from the variants that have
all attached modifiers and the minimum number of other modifiers.</p>`,example:null,types:["str","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["symbol"],scope:[]},scope:[]}},children:[]}]},{route:"/docs/reference/layout/",title:"Layout",description:"Documentation for functions related to Layout in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"layout",title:"Layout",details:`<p>Arranging elements on the page in different ways.</p>
<p>By combining layout functions, you can create complex and automatic layouts.</p>`,items:[{name:"align",route:"/docs/reference/layout/align/",oneliner:"Aligns content horizontally and vertically.",code:!0},{name:"alignment",route:"/docs/reference/layout/alignment/",oneliner:"Where to [align] something along an axis.",code:!0},{name:"angle",route:"/docs/reference/layout/angle/",oneliner:"An angle describing a rotation.",code:!0},{name:"block",route:"/docs/reference/layout/block/",oneliner:"A block-level container.",code:!0},{name:"box",route:"/docs/reference/layout/box/",oneliner:"An inline-level container that sizes content.",code:!0},{name:"colbreak",route:"/docs/reference/layout/colbreak/",oneliner:"Forces a column break.",code:!0},{name:"columns",route:"/docs/reference/layout/columns/",oneliner:"Separates a region into multiple equally sized columns.",code:!0},{name:"direction",route:"/docs/reference/layout/direction/",oneliner:"The four directions into which content can be laid out.",code:!0},{name:"fraction",route:"/docs/reference/layout/fraction/",oneliner:"Defines how the remaining space in a layout is distributed.",code:!0},{name:"grid",route:"/docs/reference/layout/grid/",oneliner:"Arranges content in a grid.",code:!0},{name:"h",route:"/docs/reference/layout/h/",oneliner:"Inserts horizontal spacing into a paragraph.",code:!0},{name:"hide",route:"/docs/reference/layout/hide/",oneliner:"Hides content without affecting layout.",code:!0},{name:"layout",route:"/docs/reference/layout/layout/",oneliner:"Provides access to the current outer container's (or page's, if none)",code:!0},{name:"length",route:"/docs/reference/layout/length/",oneliner:"A size or distance, possibly expressed with contextual units.",code:!0},{name:"measure",route:"/docs/reference/layout/measure/",oneliner:"Measures the layouted size of content.",code:!0},{name:"move",route:"/docs/reference/layout/move/",oneliner:"Moves content without affecting layout.",code:!0},{name:"pad",route:"/docs/reference/layout/pad/",oneliner:"Adds spacing around content.",code:!0},{name:"page",route:"/docs/reference/layout/page/",oneliner:"Layouts its child onto one or multiple pages.",code:!0},{name:"pagebreak",route:"/docs/reference/layout/pagebreak/",oneliner:"A manual page break.",code:!0},{name:"place",route:"/docs/reference/layout/place/",oneliner:"Places content relatively to its parent container.",code:!0},{name:"ratio",route:"/docs/reference/layout/ratio/",oneliner:"A ratio of a whole.",code:!0},{name:"relative",route:"/docs/reference/layout/relative/",oneliner:"A length in relation to some known length.",code:!0},{name:"repeat",route:"/docs/reference/layout/repeat/",oneliner:"Repeats content to the available space.",code:!0},{name:"rotate",route:"/docs/reference/layout/rotate/",oneliner:"Rotates content without affecting layout.",code:!0},{name:"scale",route:"/docs/reference/layout/scale/",oneliner:"Scales content without affecting layout.",code:!0},{name:"skew",route:"/docs/reference/layout/skew/",oneliner:"Skews content.",code:!0},{name:"stack",route:"/docs/reference/layout/stack/",oneliner:"Arranges content and spacing horizontally or vertically.",code:!0},{name:"v",route:"/docs/reference/layout/v/",oneliner:"Inserts vertical spacing into a flow of blocks.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/layout/align/",title:"Align",description:"Documentation for the `align` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"combining-alignments",name:"Combining Alignments",children:[]},{id:"nested-alignment",name:"Nested Alignment",children:[]},{id:"alignment-within-the-same-line",name:"Alignment Within The Same Line",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-alignment",name:"alignment",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"align",title:"Align",keywords:[],oneliner:"Aligns content horizontally and vertically.",element:!0,contextual:!1,details:`<p>Aligns content horizontally and vertically.</p>
<h2 id="example">Example</h2>
<p>Let's start with centering our content horizontally:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">120pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>

Centered text, a sight to see <span class="typ-escape">\\</span>
In perfect balance, visually <span class="typ-escape">\\</span>
Not left nor right, it stands alone <span class="typ-escape">\\</span>
A work of art, a visual throne
</code></pre><div class="preview"><img src="/docs/assets/823d1a56c8b2fb7d2d3af66ec6b1ee8a.png" alt="Preview" /></div></div>
<p>To center something vertically, use <em>horizon</em> alignment:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">120pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>horizon<span class="typ-punct">)</span>

Vertically centered, <span class="typ-escape">\\</span>
the stage had entered, <span class="typ-escape">\\</span>
a new paragraph.
</code></pre><div class="preview"><img src="/docs/assets/1897f9cba8b165fddf75488783c2c6.png" alt="Preview" /></div></div>
<h2 id="combining-alignments">Combining alignments</h2>
<p>You can combine two alignments with the <code>+</code> operator. Let's also only apply
this to one piece of content by using the function form instead of a set
rule:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">120pt</span><span class="typ-punct">)</span>
Though left in the beginning <span class="typ-escape">...</span>

<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>right <span class="typ-op">+</span> bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-escape">...</span> they were right in the end, <span class="typ-escape">\\</span>
  and with addition had gotten, <span class="typ-escape">\\</span>
  the paragraph to the bottom!
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/4a1a29cf19b2ff503a6ea08588bc9949.png" alt="Preview" /></div></div>
<h2 id="nested-alignment">Nested alignment</h2>
<p>You can use varying alignments for layout containers and the elements within
them. This way, you can create intricate layouts:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">,</span> <span class="typ-func">block</span><span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>left<span class="typ-punct">)</span>
  Though centered together <span class="typ-escape">\\</span>
  alone <span class="typ-escape">\\</span>
  we <span class="typ-escape">\\</span>
  are <span class="typ-escape">\\</span>
  left.
<span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4568ae96ef438c47a915eb94a0422d37.png" alt="Preview" /></div></div>
<h2 id="alignment-within-the-same-line">Alignment within the same line</h2>
<p>The <code>align</code> function performs block-level alignment and thus always
interrupts the current paragraph. To have different alignment for parts
of the same line, you should use <a href="/docs/reference/layout/h/">fractional spacing</a> instead:</p>
<div class="previewed-code"><pre><code>Start <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> End
</code></pre><div class="preview"><img src="/docs/assets/93685977d74566ba92a2a6ff7b6c61ec.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"alignment",details:'<p>The <a href="/docs/reference/layout/alignment/" title="alignment">alignment</a> along both axes.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">6cm</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;ar&quot;</span><span class="typ-punct">)</span>

مثال
<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>
  end <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">12pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>ركن<span class="typ-punct">]</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4d61059436cfee770fc2294d35917d08.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>start <span class="typ-op">+</span> top</code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to align.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/alignment/",title:"Alignment",description:"Documentation for the Alignment type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"2d-alignments",name:"2d Alignments",children:[]},{id:"fields",name:"Fields",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-axis",name:"Axis",children:[]},{id:"definitions-inv",name:"Inverse",children:[]}]}],body:{kind:"type",content:{name:"alignment",title:"Alignment",keywords:[],oneliner:"Where to [align] something along an axis.",details:`<p>Where to <a href="/docs/reference/layout/align/" title="align">align</a> something along an axis.</p>
<p>Possible values are:</p>
<ul>
<li><code>start</code>: Aligns at the <a href="/docs/reference/layout/direction/#definitions-start">start</a> of the <a href="/docs/reference/text/text/#parameters-dir">text
direction</a>.</li>
<li><code>end</code>: Aligns at the <a href="/docs/reference/layout/direction/#definitions-end">end</a> of the <a href="/docs/reference/text/text/#parameters-dir">text
direction</a>.</li>
<li><code>left</code>: Align at the left.</li>
<li><code>center</code>: Aligns in the middle, horizontally.</li>
<li><code>right</code>: Aligns at the right.</li>
<li><code>top</code>: Aligns at the top.</li>
<li><code>horizon</code>: Aligns in the middle, vertically.</li>
<li><code>bottom</code>: Align at the bottom.</li>
</ul>
<p>These values are available globally and also in the alignment type's scope,
so you can write either of the following two:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>alignment<span class="typ-punct">.</span>center<span class="typ-punct">)</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/59576a84025345abd03c421c369d63d1.png" alt="Preview" /></div></div>
<h2 id="2d-alignments">2D alignments</h2>
<p>To align along both axes at the same time, add the two alignments using the
<code>+</code> operator. For example, <code>top + right</code> aligns the content to the top right
corner.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>center <span class="typ-op">+</span> bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>Hi<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/e97755cd1ecdbeeafc585fb4cceb4404.png" alt="Preview" /></div></div>
<h2 id="fields">Fields</h2>
<p>The <code>x</code> and <code>y</code> fields hold the alignment's horizontal and vertical
components, respectively (as yet another <code>alignment</code>). They may be <code><span class="typ-key">none</span></code>.</p>
<div class="previewed-code"><pre><code><span class="typ-punct">#</span><span class="typ-punct">(</span>top <span class="typ-op">+</span> right<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">x</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-pol">x</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-pol">y</span> (none)
</code></pre><div class="preview"><img src="/docs/assets/135bac21198e3083abcf3a2c754d164d.png" alt="Preview" /></div></div>`,constructor:null,scope:[{path:["alignment"],name:"axis",title:"Axis",keywords:[],oneliner:"The axis this alignment belongs to.",element:!1,contextual:!1,details:`<p>The axis this alignment belongs to.</p>
<ul>
<li><code><span class="typ-str">&quot;horizontal&quot;</span></code> for <code>start</code>, <code>left</code>, <code>center</code>, <code>right</code>, and <code>end</code></li>
<li><code><span class="typ-str">&quot;vertical&quot;</span></code> for <code>top</code>, <code>horizon</code>, and <code>bottom</code></li>
<li><code><span class="typ-key">none</span></code> for 2-dimensional alignments</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">bottom</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/dfa945db861a3f1be74644312789b6e3.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:[],scope:[]},{path:["alignment"],name:"inv",title:"Inverse",keywords:[],oneliner:"The inverse alignment.",element:!1,contextual:!1,details:"<p>The inverse alignment.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">top</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">left</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">center</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span>left <span class="typ-op">+</span> bottom<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/791dcff48cc298e3afc75f356757bd6.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["alignment"],scope:[]}]}},children:[]},{route:"/docs/reference/layout/angle/",title:"Angle",description:"Documentation for the Angle type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-rad",name:"Radians",children:[]},{id:"definitions-deg",name:"Degrees",children:[]}]}],body:{kind:"type",content:{name:"angle",title:"Angle",keywords:[],oneliner:"An angle describing a rotation.",details:`<p>An angle describing a rotation.</p>
<p>Typst supports the following angular units:</p>
<ul>
<li>Degrees: <code><span class="typ-num">180deg</span></code></li>
<li>Radians: <code><span class="typ-num">3.14rad</span></code></li>
</ul>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">10deg</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Hello there!<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/41cd3180fb78aa66363d2a7d87dcfeed.png" alt="Preview" /></div></div>`,constructor:null,scope:[{path:["angle"],name:"rad",title:"Radians",keywords:[],oneliner:"Converts this angle to radians.",element:!1,contextual:!1,details:"<p>Converts this angle to radians.</p>",example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["angle"],name:"deg",title:"Degrees",keywords:[],oneliner:"Converts this angle to degrees.",element:!1,contextual:!1,details:"<p>Converts this angle to degrees.</p>",example:null,self:!0,params:[],returns:["float"],scope:[]}]}},children:[]},{route:"/docs/reference/layout/block/",title:"Block",description:"Documentation for the `block` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-breakable",name:"breakable",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-radius",name:"radius",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-outset",name:"outset",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-above",name:"above",children:[]},{id:"parameters-below",name:"below",children:[]},{id:"parameters-clip",name:"clip",children:[]},{id:"parameters-sticky",name:"sticky",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"block",title:"Block",keywords:[],oneliner:"A block-level container.",element:!0,contextual:!1,details:`<p>A block-level container.</p>
<p>Such a container can be used to separate content, size it, and give it a
background or border.</p>
<h2 id="examples">Examples</h2>
<p>With a block, you can give a background to content while still allowing it
to break across multiple pages.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">230</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
  <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/db3f0f2d325624133852ef9e27668023.png" alt="Preview" /></div></div>
<p>Blocks are also useful to force elements that would otherwise be inline to
become block-level, especially when writing show rules.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> it<span class="typ-punct">.</span>body
<span class="typ-heading">= Blockless</span>
More text.

<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-func">block</span><span class="typ-punct">(</span>it<span class="typ-punct">.</span>body<span class="typ-punct">)</span>
<span class="typ-heading">= Blocky</span>
More text.
</code></pre><div class="preview"><img src="/docs/assets/9d2fb114c9ad3ab50baec78da44918a.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"width",details:"<p>The block's width.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">60%</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> silver<span class="typ-punct">,</span>
  <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2e340461b33b3cbf6c48ae36e43517c4.png" alt="Preview" /></div></div>`,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:`<p>The block's height. When the height is larger than the remaining space
on a page and <a href="/docs/reference/layout/block/#parameters-breakable"><code>breakable</code></a> is <code><span class="typ-key">true</span></code>, the
block will continue on the next page with the remaining height.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">80pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">80%</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">150%</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> aqua<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/cd4c29ed36687da10f7b149266e7f153.png" alt="Preview" /></div></div>`,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"breakable",details:"<p>Whether the block can be broken and continue on the next page.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">80pt</span><span class="typ-punct">)</span>
The following block will
jump to its own page.
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
  breakable<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">,</span>
  <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4c9c2d0c50466e335e08e505bee10a98.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>The block's background color. See the
<a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The block's border color. See the
<a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"radius",details:`<p>How much to round the block's corners. See the
<a href="/docs/reference/visualize/rect/#parameters-radius">rectangle's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the block's content. See the
<a href="/docs/reference/layout/box/#parameters-inset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outset",details:`<p>How much to expand the block's size without affecting the layout. See
the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:`<p>The spacing around the block. When <code><span class="typ-key">auto</span></code>, inherits the paragraph
<a href="/docs/reference/model/par/#parameters-spacing"><code>spacing</code></a>.</p>
<p>For two adjacent blocks, the larger of the first block's <code>above</code> and the
second block's <code>below</code> spacing wins. Moreover, block spacing takes
precedence over paragraph <a href="/docs/reference/model/par/#parameters-spacing"><code>spacing</code></a>.</p>
<p>Note that this is only a shorthand to set <code>above</code> and <code>below</code> to the
same value. Since the values for <code>above</code> and <code>below</code> might differ, a
<a href="/docs/reference/context/" title="context">context</a> block only provides access to <code>block<span class="typ-punct">.</span>above</code> and
<code>block<span class="typ-punct">.</span>below</code>, not to <code>block<span class="typ-punct">.</span>spacing</code> directly.</p>
<p>This property can be used in combination with a show rule to adjust the
spacing around arbitrary block-level elements.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>above<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span> below<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">)</span>

This sum of <span class="typ-math-delim">$</span>x<span class="typ-math-delim">$</span> and <span class="typ-math-delim">$</span>y<span class="typ-math-delim">$</span>:
<span class="typ-math-delim">$</span> x + y = z <span class="typ-math-delim">$</span>
A second paragraph.
</code></pre><div class="preview"><img src="/docs/assets/7d7cf1c581bef5b9699e7c048ad3dc30.png" alt="Preview" /></div></div>`,types:["relative","fraction"],strings:[],default:'<code><span class="typ-num">1.2em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"above",details:"<p>The spacing between this block and its predecessor.</p>",example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"below",details:"<p>The spacing between this block and its successor.</p>",example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"clip",details:`<p>Whether to clip the content inside the block.</p>
<p>Clipping is useful when the block's content is larger than the block itself,
as any content that exceeds the block's bounds will be hidden.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">50pt</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">50pt</span><span class="typ-punct">,</span>
  clip<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7eeb3a38f9b16b71272dd7ade94bd5c.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"sticky",details:`<p>Whether this block must stick to the following one, with no break in
between.</p>
<p>This is, by default, set on heading blocks to prevent orphaned headings
at the bottom of the page.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-comment">// Disable stickiness of headings.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>sticky<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">20</span><span class="typ-punct">)</span>

<span class="typ-heading">= Chapter</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3ab2dceb149247401e06fe2d23e41aec.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The contents of the block.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/box/",title:"Box",description:"Documentation for the `box` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-baseline",name:"baseline",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-radius",name:"radius",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-outset",name:"outset",children:[]},{id:"parameters-clip",name:"clip",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"box",title:"Box",keywords:[],oneliner:"An inline-level container that sizes content.",element:!0,contextual:!1,details:`<p>An inline-level container that sizes content.</p>
<p>All elements except inline math, text, and boxes are block-level and cannot
occur inside of a paragraph. The box function can be used to integrate such
elements into a paragraph. Boxes take the size of their contents by default
but can also be sized explicitly.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Refer to the docs
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>
  height<span class="typ-punct">:</span> <span class="typ-num">9pt</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;docs.svg&quot;</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
for more information.
</code></pre><div class="preview"><img src="/docs/assets/a749bf75f92d9c2d5d2265e311426018.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"width",details:`<p>The width of the box.</p>
<p>Boxes can have <a href="/docs/reference/layout/fraction/">fractional</a> widths, as the example below
demonstrates.</p>
<p><em>Note:</em> Currently, only boxes and only their widths might be fractionally
sized within paragraphs. Support for fractionally sized images, shapes,
and more might be added in the future.</p>`,example:`<div class="previewed-code"><pre><code>Line in <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span> between.
</code></pre><div class="preview"><img src="/docs/assets/f65b2470bfe863e6bc1d858533dfde0b.png" alt="Preview" /></div></div>`,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:"<p>The height of the box.</p>",example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"baseline",details:"<p>An amount to shift the box's baseline by.</p>",example:`<div class="previewed-code"><pre><code>Image: <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>baseline<span class="typ-punct">:</span> <span class="typ-num">40%</span><span class="typ-punct">,</span> <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">)</span><span class="typ-punct">)</span>.
</code></pre><div class="preview"><img src="/docs/assets/1e0e14373574ddb68c9170df00bd0e34.png" alt="Preview" /></div></div>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>The box's background color. See the
<a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The box's border color. See the
<a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"radius",details:`<p>How much to round the box's corners. See the
<a href="/docs/reference/visualize/rect/#parameters-radius">rectangle's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the box's content.</p>
<p><em>Note:</em> When the box contains text, its exact size depends on the
current <a href="/docs/reference/text/text/#parameters-top-edge">text edges</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Tight<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/66cabd9d3f6a1ec4394d530bcc14336c.png" alt="Preview" /></div></div>`,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outset",details:`<p>How much to expand the box's size without affecting the layout.</p>
<p>This is useful to prevent padding from affecting line layout. For a
generalized version of the example below, see the documentation for the
<a href="/docs/reference/text/raw/#parameters-block">raw text's block parameter</a>.</p>`,example:`<div class="previewed-code"><pre><code>An inline
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">235</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  outset<span class="typ-punct">:</span> <span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">[</span>rectangle<span class="typ-punct">]</span>.
</code></pre><div class="preview"><img src="/docs/assets/74be75853b1be8d71bd5a2d0d8cd2d91.png" alt="Preview" /></div></div>`,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"clip",details:`<p>Whether to clip the content inside the box.</p>
<p>Clipping is useful when the box's content is larger than the box itself,
as any content that exceeds the box's bounds will be hidden.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">50pt</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">50pt</span><span class="typ-punct">,</span>
  clip<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/88712f8a5ca051e74509c0e760d3394d.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The contents of the box.</p>",example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/colbreak/",title:"Column Break",description:"Documentation for the `colbreak` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-weak",name:"weak",children:[]}]}],body:{kind:"func",content:{path:[],name:"colbreak",title:"Column Break",keywords:[],oneliner:"Forces a column break.",element:!0,contextual:!1,details:`<p>Forces a column break.</p>
<p>The function will behave like a <a href="/docs/reference/layout/pagebreak/">page break</a> when used in a
single column layout or the last column on a page. Otherwise, content after
the column break will be placed in the next column.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
Preliminary findings from our
ongoing research project have
revealed a hitherto unknown
phenomenon of extraordinary
significance.

<span class="typ-func">#</span><span class="typ-func">colbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
Through rigorous experimentation
and analysis, we have discovered
a hitherto uncharacterized process
that defies our current
understanding of the fundamental
laws of nature.
</code></pre><div class="preview"><img src="/docs/assets/b18370ba334c00b9cb486366d4fcc99c.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"weak",details:`<p>If <code><span class="typ-key">true</span></code>, the column break is skipped if the current column is
already empty.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/columns/",title:"Columns",description:"Documentation for the `columns` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"page-level",name:"Page Level",children:[]},{id:"breaking-out",name:"Breaking Out",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-count",name:"count",children:[]},{id:"parameters-gutter",name:"gutter",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"columns",title:"Columns",keywords:[],oneliner:"Separates a region into multiple equally sized columns.",element:!0,contextual:!1,details:`<p>Separates a region into multiple equally sized columns.</p>
<p>The <code>column</code> function lets you separate the interior of any container into
multiple columns. It will currently not balance the height of the columns.
Instead, the columns will take up the height of their container or the
remaining height on the page. Support for balanced columns is planned for
the future.</p>
<h2 id="page-level">Page-level columns</h2>
<p>If you need to insert columns across your whole document, use the <code>page</code>
function's <a href="/docs/reference/layout/page/#parameters-columns"><code>columns</code> parameter</a> instead. This will create
the columns directly at the page-level rather than wrapping all of your
content in a layout container. As a result, things like
<a href="/docs/reference/layout/pagebreak/">pagebreaks</a>, <a href="/docs/reference/model/footnote/">footnotes</a>, and <a href="/docs/reference/model/par/#definitions-line">line
numbers</a> will continue to work as expected. For more information,
also read the <a href="/docs/guides/page-setup-guide/#columns">relevant part of the page setup
guide</a>.</p>
<h2 id="breaking-out">Breaking out of columns</h2>
<p>To temporarily break out of columns (e.g. for a paper's title), use
parent-scoped floating placement:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">150pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span>
  top <span class="typ-op">+</span> center<span class="typ-punct">,</span>
  scope<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  float<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.4em</span><span class="typ-punct">,</span> weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    My document
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">40</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9ac18fdf9c67021ed4a98186a7201229.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"count",details:"<p>The number of columns.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">2</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"gutter",details:"<p>The size of the gutter space between each column.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">4%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content that should be layouted into the columns.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/direction/",title:"Direction",description:"Documentation for the Direction type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-axis",name:"Axis",children:[]},{id:"definitions-start",name:"Start",children:[]},{id:"definitions-end",name:"End",children:[]},{id:"definitions-inv",name:"Inverse",children:[]}]}],body:{kind:"type",content:{name:"direction",title:"Direction",keywords:[],oneliner:"The four directions into which content can be laid out.",details:`<p>The four directions into which content can be laid out.</p>
<p>Possible values are:</p>
<ul>
<li><code>ltr</code>: Left to right.</li>
<li><code>rtl</code>: Right to left.</li>
<li><code>ttb</code>: Top to bottom.</li>
<li><code>btt</code>: Bottom to top.</li>
</ul>
<p>These values are available globally and
also in the direction type's scope, so you can write either of the following
two:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> rtl<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">[</span>C<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>dir<span class="typ-punct">:</span> direction<span class="typ-punct">.</span>rtl<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">[</span>C<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/b0a9e5e8b21993b5a324c172bf6dff35.png" alt="Preview" /></div></div>`,constructor:null,scope:[{path:["direction"],name:"axis",title:"Axis",keywords:[],oneliner:'The axis this direction belongs to, either `{"horizontal"}` or',element:!1,contextual:!1,details:`<p>The axis this direction belongs to, either <code><span class="typ-str">&quot;horizontal&quot;</span></code> or
<code><span class="typ-str">&quot;vertical&quot;</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ede9b644c5658b20793cba1263c0b1f0.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:[],scope:[]},{path:["direction"],name:"start",title:"Start",keywords:[],oneliner:"The start point of this direction, as an alignment.",element:!1,contextual:!1,details:"<p>The start point of this direction, as an alignment.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">rtl</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">btt</span><span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/937805da0a917f5f5d997c95e88fa525.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["alignment"],scope:[]},{path:["direction"],name:"end",title:"End",keywords:[],oneliner:"The end point of this direction, as an alignment.",element:!1,contextual:!1,details:"<p>The end point of this direction, as an alignment.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">rtl</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">btt</span><span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/300b75bfaafc2925dccbab58bec54a2f.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["alignment"],scope:[]},{path:["direction"],name:"inv",title:"Inverse",keywords:[],oneliner:"The inverse direction.",element:!1,contextual:!1,details:"<p>The inverse direction.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">ltr</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">rtl</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">ttb</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">btt</span><span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/44e922df266e1c9619308b2cf2d2dfa2.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["direction"],scope:[]}]}},children:[]},{route:"/docs/reference/layout/fraction/",title:"Fraction",description:"Documentation for the Fraction type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]}],body:{kind:"type",content:{name:"fraction",title:"Fraction",keywords:[],oneliner:"Defines how the remaining space in a layout is distributed.",details:`<p>Defines how the remaining space in a layout is distributed.</p>
<p>Each fractionally sized element gets space based on the ratio of its
fraction to the sum of all fractions.</p>
<p>For more details, also see the <a href="/docs/reference/layout/h/" title="h">h</a> and <a href="/docs/reference/layout/v/" title="v">v</a> functions and the
<a href="/docs/reference/layout/grid/">grid function</a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Left <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Left-ish <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">2fr</span><span class="typ-punct">)</span> Right
</code></pre><div class="preview"><img src="/docs/assets/5092aaf9b75dde9dc426651b70aa0185.png" alt="Preview" /></div></div>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/layout/grid/",title:"Grid",description:"Documentation for the `grid` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"styling-the-grid",name:"Styling The Grid",children:[{id:"stroke-styling-precedence",name:"Stroke Styling Precedence",children:[]}]},{id:"parameters",name:"Parameters",children:[{id:"parameters-columns",name:"columns",children:[]},{id:"parameters-rows",name:"rows",children:[]},{id:"parameters-gutter",name:"gutter",children:[]},{id:"parameters-column-gutter",name:"column-gutter",children:[]},{id:"parameters-row-gutter",name:"row-gutter",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-align",name:"align",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-children",name:"children",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-cell",name:"Grid Cell",children:[{id:"definitions-cell-body",name:"body",children:[]},{id:"definitions-cell-x",name:"x",children:[]},{id:"definitions-cell-y",name:"y",children:[]},{id:"definitions-cell-colspan",name:"colspan",children:[]},{id:"definitions-cell-rowspan",name:"rowspan",children:[]},{id:"definitions-cell-fill",name:"fill",children:[]},{id:"definitions-cell-align",name:"align",children:[]},{id:"definitions-cell-inset",name:"inset",children:[]},{id:"definitions-cell-stroke",name:"stroke",children:[]},{id:"definitions-cell-breakable",name:"breakable",children:[]}]},{id:"definitions-hline",name:"Grid Horizontal Line",children:[{id:"definitions-hline-y",name:"y",children:[]},{id:"definitions-hline-start",name:"start",children:[]},{id:"definitions-hline-end",name:"end",children:[]},{id:"definitions-hline-stroke",name:"stroke",children:[]},{id:"definitions-hline-position",name:"position",children:[]}]},{id:"definitions-vline",name:"Grid Vertical Line",children:[{id:"definitions-vline-x",name:"x",children:[]},{id:"definitions-vline-start",name:"start",children:[]},{id:"definitions-vline-end",name:"end",children:[]},{id:"definitions-vline-stroke",name:"stroke",children:[]},{id:"definitions-vline-position",name:"position",children:[]}]},{id:"definitions-header",name:"Grid Header",children:[{id:"definitions-header-repeat",name:"repeat",children:[]},{id:"definitions-header-children",name:"children",children:[]}]},{id:"definitions-footer",name:"Grid Footer",children:[{id:"definitions-footer-repeat",name:"repeat",children:[]},{id:"definitions-footer-children",name:"children",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"grid",title:"Grid",keywords:[],oneliner:"Arranges content in a grid.",element:!0,contextual:!1,details:`<p>Arranges content in a grid.</p>
<p>The grid element allows you to arrange content in a grid. You can define the
number of rows and columns, as well as the size of the gutters between them.
There are multiple sizing modes for columns and rows that can be used to
create complex layouts.</p>
<p>While the grid and table elements work very similarly, they are intended for
different use cases and carry different semantics. The grid element is
intended for presentational and layout purposes, while the
<a href="/docs/reference/model/table/"><code>table</code></a> element is intended for, in broad terms, presenting
multiple related data points. In the future, Typst will annotate its output
such that screenreaders will announce content in <code>table</code> as tabular while a
grid's content will be announced no different than multiple content blocks
in the document flow. Set and show rules on one of these elements do not
affect the other.</p>
<p>A grid's sizing is determined by the track sizes specified in the arguments.
Because each of the sizing parameters accepts the same values, we will
explain them just once, here. Each sizing argument accepts an array of
individual track sizes. A track size is either:</p>
<ul>
<li>
<p><code><span class="typ-key">auto</span></code>: The track will be sized to fit its contents. It will be at most
as large as the remaining space. If there is more than one <code><span class="typ-key">auto</span></code> track
width, and together they claim more than the available space, the <code><span class="typ-key">auto</span></code>
tracks will fairly distribute the available space among themselves.</p>
</li>
<li>
<p>A fixed or relative length (e.g. <code><span class="typ-num">10pt</span></code> or <code><span class="typ-num">20%</span> <span class="typ-op">-</span> <span class="typ-num">1cm</span></code>): The track
will be exactly of this size.</p>
</li>
<li>
<p>A fractional length (e.g. <code><span class="typ-num">1fr</span></code>): Once all other tracks have been sized,
the remaining space will be divided among the fractional tracks according
to their fractions. For example, if there are two fractional tracks, each
with a fraction of <code><span class="typ-num">1fr</span></code>, they will each take up half of the remaining
space.</p>
</li>
</ul>
<p>To specify a single track, the array can be omitted in favor of a single
value. To specify multiple <code><span class="typ-key">auto</span></code> tracks, enter the number of tracks
instead of an array. For example, <code>columns:</code> <code><span class="typ-num">3</span></code> is equivalent to
<code>columns:</code> <code><span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span></code>.</p>
<h2 id="examples">Examples</h2>
<p>The example below demonstrates the different track sizing options. It also
shows how you can use <a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a> to make an individual cell
span two grid tracks.</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// We use \`rect\` to emphasize the</span>
<span class="typ-comment">// area of cells.</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;e4e5ea&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">60pt</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">2fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  rows<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">60pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  gutter<span class="typ-punct">:</span> <span class="typ-num">3pt</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>Fixed width, auto height<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>1/3 of the remains<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">[</span>2/3 of the remains<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Fixed height<span class="typ-punct">]</span><span class="typ-punct">,</span>
  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
    colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
    <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e2f7e09364e313b2afc3d7c8b20a2a35.png" alt="Preview" /></div></div>
<p>You can also <a href="/docs/reference/foundations/arguments/#spreading">spread</a> an array of strings or content
into a grid to populate its cells.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">5</span><span class="typ-punct">,</span>
  gutter<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
  <span class="typ-op">..</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">25</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>str<span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2ea00439a09d689e2d58993ec3bfee86.png" alt="Preview" /></div></div>
<h2 id="styling-the-grid">Styling the grid</h2>
<p>The grid's appearance can be customized through different parameters. These
are the most important ones:</p>
<ul>
<li><a href="/docs/reference/layout/grid/#parameters-fill"><code>fill</code></a> to give all cells a background</li>
<li><a href="/docs/reference/layout/grid/#parameters-align"><code>align</code></a> to change how cells are aligned</li>
<li><a href="/docs/reference/layout/grid/#parameters-inset"><code>inset</code></a> to optionally add internal padding to each cell</li>
<li><a href="/docs/reference/layout/grid/#parameters-stroke"><code>stroke</code></a> to optionally enable grid lines with a certain
stroke</li>
</ul>
<p>If you need to override one of the above options for a single cell, you can
use the <a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a> element. Likewise, you can override
individual grid lines with the <a href="/docs/reference/layout/grid/#definitions-hline"><code>grid.hline</code></a> and
<a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a> elements.</p>
<p>Alternatively, if you need the appearance options to depend on a cell's
position (column and row), you may specify a function to <code>fill</code> or <code>align</code>
of the form <code>(column, row) =&gt; value</code>. You may also use a show rule on
<a href="/docs/reference/layout/grid/#definitions-cell"><code>grid.cell</code></a> - see that element's examples or the examples
below for more information.</p>
<p>Locating most of your styling in set and show rules is recommended, as it
keeps the grid's or table's actual usages clean and easy to read. It also
allows you to easily change the grid's appearance in one place.</p>
<h3 id="stroke-styling-precedence">Stroke styling precedence</h3>
<p>There are three ways to set the stroke of a grid cell: through
<a href="/docs/reference/layout/grid/#definitions-cell-stroke"><code>grid<span class="typ-punct">.</span>cell</code>'s <code>stroke</code> field</a>, by using
<a href="/docs/reference/layout/grid/#definitions-hline"><code>grid<span class="typ-punct">.</span>hline</code></a> and <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid<span class="typ-punct">.</span>vline</code></a>, or by
setting the <a href="/docs/reference/layout/grid/#parameters-stroke"><code>grid</code>'s <code>stroke</code> field</a>. When multiple of
these settings are present and conflict, the <code>hline</code> and <code>vline</code> settings
take the highest precedence, followed by the <code>cell</code> settings, and finally
the <code>grid</code> settings.</p>
<p>Furthermore, strokes of a repeated grid header or footer will take
precedence over regular cell strokes.</p>`,example:null,self:!1,params:[{name:"columns",details:`<p>The column sizes.</p>
<p>Either specify a track size array or provide an integer to create a grid
with that many <code><span class="typ-key">auto</span></code>-sized columns. Note that opposed to rows and
gutters, providing a single track size will only ever create a single
column.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"rows",details:`<p>The row sizes.</p>
<p>If there are more cells than fit the defined rows, the last row is
repeated until there are no more cells.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"gutter",details:`<p>The gaps between rows and columns.</p>
<p>If there are more gutters than defined sizes, the last gutter is
repeated.</p>
<p>This is a shorthand to set <code>column-gutter</code> and <code>row-gutter</code> to the same
value.</p>`,example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"column-gutter",details:"<p>The gaps between columns.</p>",example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"row-gutter",details:"<p>The gaps between rows.</p>",example:null,types:["auto","int","relative","fraction","array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>How to fill the cells.</p>
<p>This can be a color or a function that returns a color. The function
receives the cells' column and row indices, starting from zero. This can
be used to implement striped grids.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
    <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">even</span><span class="typ-punct">(</span>x <span class="typ-op">+</span> y<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">230</span><span class="typ-punct">)</span> <span class="typ-punct">}</span>
    <span class="typ-key">else</span> <span class="typ-punct">{</span> white <span class="typ-punct">}</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> center <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>O<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1ea1117075887cd69acebb4e93044d29.png" alt="Preview" /></div></div>`,types:["none","color","gradient","array","pattern","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:`<p>How to align the cells' content.</p>
<p>This can either be a single alignment, an array of alignments
(corresponding to each column) or a function that returns an alignment.
The function receives the cells' column and row indices, starting from
zero. If set to <code><span class="typ-key">auto</span></code>, the outer alignment is used.</p>
<p>You can find an example for this argument at the
<a href="/docs/reference/model/table/#parameters-align"><code>table.align</code></a> parameter.</p>`,example:null,types:["auto","array","alignment","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/">stroke</a> the cells.</p>
<p>Grids have no strokes by default, which can be changed by setting this
option to the desired stroke.</p>
<p>If it is necessary to place lines which can cross spacing between cells
produced by the <code>gutter</code> option, or to override the stroke between
multiple specific cells, consider specifying one or more of
<a href="/docs/reference/layout/grid/#definitions-hline"><code>grid.hline</code></a> and <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a> alongside
your grid cells.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">13em</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">26em</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">cv</span><span class="typ-punct">(</span><span class="typ-op">..</span>jobs<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">grid</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
    inset<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
    stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">and</span> y <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span>
      <span class="typ-punct">(</span>right<span class="typ-punct">:</span> <span class="typ-punct">(</span>
        paint<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">180</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
        thickness<span class="typ-punct">:</span> <span class="typ-num">1.5pt</span><span class="typ-punct">,</span>
        dash<span class="typ-punct">:</span> <span class="typ-str">&quot;dotted&quot;</span>
      <span class="typ-punct">)</span><span class="typ-punct">)</span>
    <span class="typ-punct">}</span><span class="typ-punct">,</span>
    grid<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
      <span class="typ-strong">*Professional Experience*</span>
      <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> stroke<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">180</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
    <span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-op">..</span><span class="typ-punct">{</span>
      <span class="typ-key">let</span> last <span class="typ-op">=</span> <span class="typ-key">none</span>
      <span class="typ-key">for</span> job <span class="typ-key">in</span> jobs<span class="typ-punct">.</span><span class="typ-func">pos</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
        <span class="typ-punct">(</span>
          <span class="typ-key">if</span> job<span class="typ-punct">.</span>year <span class="typ-op">!=</span> last <span class="typ-punct">[</span><span class="typ-strong">*<span class="typ-pol">#</span><span class="typ-pol">job</span><span class="typ-punct">.</span><span class="typ-pol">year</span>*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
          <span class="typ-punct">[</span>
            <span class="typ-strong">*<span class="typ-pol">#</span><span class="typ-pol">job</span><span class="typ-punct">.</span><span class="typ-pol">company</span>*</span> - <span class="typ-pol">#</span><span class="typ-pol">job</span><span class="typ-punct">.</span><span class="typ-pol">role</span> <span class="typ-emph">_(<span class="typ-pol">#</span><span class="typ-pol">job</span><span class="typ-punct">.</span><span class="typ-pol">timeframe</span>)_</span> <span class="typ-escape">\\</span>
            <span class="typ-pol">#</span><span class="typ-pol">job</span><span class="typ-punct">.</span><span class="typ-pol">details</span>
          <span class="typ-punct">]</span>
        <span class="typ-punct">)</span>
        last <span class="typ-op">=</span> job<span class="typ-punct">.</span>year
      <span class="typ-punct">}</span>
    <span class="typ-punct">}</span>
  <span class="typ-punct">)</span>

  <span class="typ-func">#</span><span class="typ-func">cv</span><span class="typ-punct">(</span>
    <span class="typ-punct">(</span>
      year<span class="typ-punct">:</span> <span class="typ-num">2012</span><span class="typ-punct">,</span>
      company<span class="typ-punct">:</span> <span class="typ-punct">[</span>Pear Seed &amp; Co.<span class="typ-punct">]</span><span class="typ-punct">,</span>
      role<span class="typ-punct">:</span> <span class="typ-punct">[</span>Lead Engineer<span class="typ-punct">]</span><span class="typ-punct">,</span>
      timeframe<span class="typ-punct">:</span> <span class="typ-punct">[</span>Jul - Dec<span class="typ-punct">]</span><span class="typ-punct">,</span>
      details<span class="typ-punct">:</span> <span class="typ-punct">[</span>
        <span class="typ-marker">-</span> Raised engineers from 3x to 10x
        <span class="typ-marker">-</span> Did a great job
      <span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">(</span>
      year<span class="typ-punct">:</span> <span class="typ-num">2012</span><span class="typ-punct">,</span>
      company<span class="typ-punct">:</span> <span class="typ-punct">[</span>Mega Corp.<span class="typ-punct">]</span><span class="typ-punct">,</span>
      role<span class="typ-punct">:</span> <span class="typ-punct">[</span>VP of Sales<span class="typ-punct">]</span><span class="typ-punct">,</span>
      timeframe<span class="typ-punct">:</span> <span class="typ-punct">[</span>Mar - Jun<span class="typ-punct">]</span><span class="typ-punct">,</span>
      details<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-marker">-</span> Closed tons of customers<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">(</span>
      year<span class="typ-punct">:</span> <span class="typ-num">2013</span><span class="typ-punct">,</span>
      company<span class="typ-punct">:</span> <span class="typ-punct">[</span>Tiny Co.<span class="typ-punct">]</span><span class="typ-punct">,</span>
      role<span class="typ-punct">:</span> <span class="typ-punct">[</span>CEO<span class="typ-punct">]</span><span class="typ-punct">,</span>
      timeframe<span class="typ-punct">:</span> <span class="typ-punct">[</span>Jan - Dec<span class="typ-punct">]</span><span class="typ-punct">,</span>
      details<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-marker">-</span> Delivered 4x more shareholder value<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">(</span>
      year<span class="typ-punct">:</span> <span class="typ-num">2014</span><span class="typ-punct">,</span>
      company<span class="typ-punct">:</span> <span class="typ-punct">[</span>Glorbocorp Ltd<span class="typ-punct">]</span><span class="typ-punct">,</span>
      role<span class="typ-punct">:</span> <span class="typ-punct">[</span>CTO<span class="typ-punct">]</span><span class="typ-punct">,</span>
      timeframe<span class="typ-punct">:</span> <span class="typ-punct">[</span>Jan - Mar<span class="typ-punct">]</span><span class="typ-punct">,</span>
      details<span class="typ-punct">:</span> <span class="typ-punct">[</span><span class="typ-marker">-</span> Drove containerization forward<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/514e8f441220d14851b2984150678e0d.png" alt="Preview" /></div></div>`,types:["none","length","color","gradient","array","stroke","pattern","dictionary","function"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the cells' content.</p>
<p>You can find an example for this argument at the
<a href="/docs/reference/model/table/#parameters-inset"><code>table.inset</code></a> parameter.</p>`,example:null,types:["relative","array","dictionary","function"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:`<p>The contents of the grid cells, plus any extra grid lines specified
with the <a href="/docs/reference/layout/grid/#definitions-hline"><code>grid.hline</code></a> and <a href="/docs/reference/layout/grid/#definitions-vline"><code>grid.vline</code></a>
elements.</p>
<p>The cells are populated in row-major order.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[{path:["grid"],name:"cell",title:"Grid Cell",keywords:[],oneliner:"A cell in the grid. You can use this function in the argument list of a grid",element:!0,contextual:!1,details:`<p>A cell in the grid. You can use this function in the argument list of a grid
to override grid style properties for an individual cell or manually
positioning it within the grid. You can also use this function in show rules
to apply certain styles to multiple cells at once.</p>
<p>For example, you can override the position and stroke for a single cell:</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">15pt</span><span class="typ-punct">,</span> font<span class="typ-punct">:</span> <span class="typ-str">&quot;Noto Sans Symbols 2&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;[♚-♟︎]&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;21212A&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">regex</span><span class="typ-punct">(</span><span class="typ-str">&quot;[♔-♙]&quot;</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;111015&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span>
    <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>x <span class="typ-op">+</span> y<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-str">&quot;7F8396&quot;</span> <span class="typ-punct">}</span>
    <span class="typ-key">else</span> <span class="typ-punct">{</span> <span class="typ-str">&quot;EFF0F3&quot;</span> <span class="typ-punct">}</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1em</span><span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">*</span> <span class="typ-num">8</span><span class="typ-punct">,</span>
  rows<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> center <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>

  <span class="typ-punct">[</span>♖<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♘<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♗<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♕<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♔<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♗<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♘<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♖<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span>
  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>
    x<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
    stroke<span class="typ-punct">:</span> blue<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">60%</span><span class="typ-punct">)</span>
  <span class="typ-punct">)</span><span class="typ-punct">[</span>♙<span class="typ-punct">]</span><span class="typ-punct">,</span>

  <span class="typ-op">..</span><span class="typ-punct">(</span>grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">6</span><span class="typ-punct">)</span><span class="typ-punct">[</span>♟<span class="typ-punct">]</span><span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">*</span> <span class="typ-num">8</span><span class="typ-punct">,</span>
  <span class="typ-op">..</span><span class="typ-punct">(</span><span class="typ-punct">[</span>♜<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♞<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♝<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♛<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♚<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♝<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♞<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>♜<span class="typ-punct">]</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>grid<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">7</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/94b6e7a584d8ec9f41cb77eed709e424.png" alt="Preview" /></div></div>
<p>You may also apply a show rule on <code>grid.cell</code> to style all cells at once,
which allows you, for example, to apply styles based on a cell's position.
Refer to the examples of the <a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code></a> element to learn
more about this.</p>`,self:!1,params:[{name:"body",details:"<p>The cell's body.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"x",details:`<p>The cell's column (zero-indexed).
This field may be used in show rules to style a cell depending on its
column.</p>
<p>You may override this field to pick in which column the cell must
be placed. If no row (<code>y</code>) is chosen, the cell will be placed in the
first row (starting at row 0) with that column available (or a new row
if none). If both <code>x</code> and <code>y</code> are chosen, however, the cell will be
placed in that exact position. An error is raised if that position is
not available (thus, it is usually wise to specify cells with a custom
position before cells with automatic positions).</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">circ</span><span class="typ-punct">(</span>c<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">circle</span><span class="typ-punct">(</span>
    fill<span class="typ-punct">:</span> c<span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">5mm</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  rows<span class="typ-punct">:</span> <span class="typ-num">7mm</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-num">.5pt</span> <span class="typ-op">+</span> blue<span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> center <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">1mm</span><span class="typ-punct">,</span>

  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-func">circ</span><span class="typ-punct">(</span>aqua<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">circ</span><span class="typ-punct">(</span>yellow<span class="typ-punct">)</span><span class="typ-punct">,</span>
  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-func">circ</span><span class="typ-punct">(</span>green<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">circ</span><span class="typ-punct">(</span>black<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/53b015a6fab26a41a520d2c7ab5dfafe.png" alt="Preview" /></div></div>`,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"y",details:`<p>The cell's row (zero-indexed).
This field may be used in show rules to style a cell depending on its
row.</p>
<p>You may override this field to pick in which row the cell must be
placed. If no column (<code>x</code>) is chosen, the cell will be placed in the
first column (starting at column 0) available in the chosen row. If all
columns in the chosen row are already occupied, an error is raised.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">tri</span><span class="typ-punct">(</span>c<span class="typ-punct">)</span> <span class="typ-op">=</span> polygon<span class="typ-punct">.</span><span class="typ-func">regular</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> c<span class="typ-punct">,</span>
  size<span class="typ-punct">:</span> <span class="typ-num">5mm</span><span class="typ-punct">,</span>
  vertices<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> blue<span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">1mm</span><span class="typ-punct">,</span>

  <span class="typ-func">tri</span><span class="typ-punct">(</span>black<span class="typ-punct">)</span><span class="typ-punct">,</span>
  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-func">tri</span><span class="typ-punct">(</span>teal<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-func">tri</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  grid<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> <span class="typ-func">tri</span><span class="typ-punct">(</span>orange<span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e9b4cc2d23544185b64f452f3f1a9732.png" alt="Preview" /></div></div>`,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"colspan",details:"<p>The amount of columns spanned by this cell.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"rowspan",details:"<p>The amount of rows spanned by this cell.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>The cell's <a href="/docs/reference/layout/grid/#parameters-fill">fill</a> override.</p>`,example:null,types:["none","auto","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"align",details:`<p>The cell's <a href="/docs/reference/layout/grid/#parameters-align">alignment</a> override.</p>`,example:null,types:["auto","alignment"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>The cell's <a href="/docs/reference/layout/grid/#parameters-inset">inset</a> override.</p>`,example:null,types:["auto","relative","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The cell's <a href="/docs/reference/layout/grid/#parameters-stroke">stroke</a> override.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"breakable",details:`<p>Whether rows spanned by this cell can be placed in different pages.
When equal to <code><span class="typ-key">auto</span></code>, a cell spanning only fixed-size rows is
unbreakable, while a cell spanning at least one <code><span class="typ-key">auto</span></code>-sized row is
breakable.</p>`,example:null,types:["auto","bool"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["grid"],name:"hline",title:"Grid Horizontal Line",keywords:[],oneliner:"A horizontal line in the grid.",element:!0,contextual:!1,details:`<p>A horizontal line in the grid.</p>
<p>Overrides any per-cell stroke, including stroke specified through the grid's
<code>stroke</code> field. Can cross spacing between cells created through the grid's
<code>column-gutter</code> option.</p>
<p>An example for this function can be found at the
<a href="/docs/reference/model/table/#definitions-hline"><code>table.hline</code></a> element.</p>`,example:null,self:!1,params:[{name:"y",details:`<p>The row above which the horizontal line is placed (zero-indexed).
If the <code>position</code> field is set to <code>bottom</code>, the line is placed below
the row with the given index instead (see that field's docs for
details).</p>
<p>Specifying <code><span class="typ-key">auto</span></code> causes the line to be placed at the row below the
last automatically positioned cell (that is, cell without coordinate
overrides) before the line among the grid's children. If there is no
such cell before the line, it is placed at the top of the grid (row 0).
Note that specifying for this option exactly the total amount of rows
in the grid causes this horizontal line to override the bottom border
of the grid, while a value of 0 overrides the top border.</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"start",details:"<p>The column at which the horizontal line starts (zero-indexed, inclusive).</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"end",details:`<p>The column before which the horizontal line ends (zero-indexed,
exclusive).
Therefore, the horizontal line will be drawn up to and across column
<code>end - 1</code>.</p>
<p>A value equal to <code><span class="typ-key">none</span></code> or to the amount of columns causes it to
extend all the way towards the end of the grid.</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The line's stroke.</p>
<p>Specifying <code><span class="typ-key">none</span></code> removes any lines previously placed across this
line's range, including hlines or per-cell stroke below it.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"position",details:`<p>The position at which the line is placed, given its row (<code>y</code>) - either
<code>top</code> to draw above it or <code>bottom</code> to draw below it.</p>
<p>This setting is only relevant when row gutter is enabled (and
shouldn't be used otherwise - prefer just increasing the <code>y</code> field by
one instead), since then the position below a row becomes different
from the position above the next row due to the spacing between both.</p>`,example:null,types:["alignment"],strings:[],default:"<code>top</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["grid"],name:"vline",title:"Grid Vertical Line",keywords:[],oneliner:"A vertical line in the grid.",element:!0,contextual:!1,details:`<p>A vertical line in the grid.</p>
<p>Overrides any per-cell stroke, including stroke specified through the
grid's <code>stroke</code> field. Can cross spacing between cells created through
the grid's <code>row-gutter</code> option.</p>`,example:null,self:!1,params:[{name:"x",details:`<p>The column before which the horizontal line is placed (zero-indexed).
If the <code>position</code> field is set to <code>end</code>, the line is placed after the
column with the given index instead (see that field's docs for
details).</p>
<p>Specifying <code><span class="typ-key">auto</span></code> causes the line to be placed at the column after
the last automatically positioned cell (that is, cell without
coordinate overrides) before the line among the grid's children. If
there is no such cell before the line, it is placed before the grid's
first column (column 0).
Note that specifying for this option exactly the total amount of
columns in the grid causes this vertical line to override the end
border of the grid (right in LTR, left in RTL), while a value of 0
overrides the start border (left in LTR, right in RTL).</p>`,example:null,types:["auto","int"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"start",details:"<p>The row at which the vertical line starts (zero-indexed, inclusive).</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">0</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"end",details:`<p>The row on top of which the vertical line ends (zero-indexed,
exclusive).
Therefore, the vertical line will be drawn up to and across row
<code>end - 1</code>.</p>
<p>A value equal to <code><span class="typ-key">none</span></code> or to the amount of rows causes it to extend
all the way towards the bottom of the grid.</p>`,example:null,types:["none","int"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>The line's stroke.</p>
<p>Specifying <code><span class="typ-key">none</span></code> removes any lines previously placed across this
line's range, including vlines or per-cell stroke below it.</p>`,example:null,types:["none","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"position",details:`<p>The position at which the line is placed, given its column (<code>x</code>) -
either <code>start</code> to draw before it or <code>end</code> to draw after it.</p>
<p>The values <code>left</code> and <code>right</code> are also accepted, but discouraged as
they cause your grid to be inconsistent between left-to-right and
right-to-left documents.</p>
<p>This setting is only relevant when column gutter is enabled (and
shouldn't be used otherwise - prefer just increasing the <code>x</code> field by
one instead), since then the position after a column becomes different
from the position before the next column due to the spacing between
both.</p>`,example:null,types:["alignment"],strings:[],default:"<code>start</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]},{path:["grid"],name:"header",title:"Grid Header",keywords:[],oneliner:"A repeatable grid header.",element:!0,contextual:!1,details:`<p>A repeatable grid header.</p>
<p>If <code>repeat</code> is set to <code>true</code>, the header will be repeated across pages. For
an example, refer to the <a href="/docs/reference/model/table/#definitions-header"><code>table.header</code></a> element and the
<a href="/docs/reference/layout/grid/#parameters-stroke"><code>grid.stroke</code></a> parameter.</p>`,example:null,self:!1,params:[{name:"repeat",details:"<p>Whether this header should be repeated across pages.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The cells and lines within the header.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]},{path:["grid"],name:"footer",title:"Grid Footer",keywords:[],oneliner:"A repeatable grid footer.",element:!0,contextual:!1,details:`<p>A repeatable grid footer.</p>
<p>Just like the <a href="/docs/reference/layout/grid/#definitions-header"><code>grid.header</code></a> element, the footer can repeat
itself on every page of the table.</p>
<p>No other grid cells may be placed after the footer.</p>`,example:null,self:!1,params:[{name:"repeat",details:"<p>Whether this footer should be repeated across pages.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The cells and lines within the footer.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/layout/hide/",title:"Hide",description:"Documentation for the `hide` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"hide",title:"Hide",keywords:[],oneliner:"Hides content without affecting layout.",element:!0,contextual:!1,details:`<p>Hides content without affecting layout.</p>
<p>The <code>hide</code> function allows you to hide content while the layout still 'sees'
it. This is useful to create whitespace that is exactly as large as some
content. It may also be useful to redact content because its arguments are
not included in the output.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Hello Jane <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">hide</span><span class="typ-punct">[</span>Hello<span class="typ-punct">]</span> Joe
</code></pre><div class="preview"><img src="/docs/assets/28c4b7d208f1b306d73cacab1cd2e47b.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"body",details:"<p>The content to hide.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/layout/",title:"Layout",description:"Documentation for the `layout` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-func",name:"func",children:[]}]}],body:{kind:"func",content:{path:[],name:"layout",title:"Layout",keywords:[],oneliner:"Provides access to the current outer container's (or page's, if none)",element:!1,contextual:!1,details:`<p>Provides access to the current outer container's (or page's, if none)
dimensions (width and height).</p>
<p>Accepts a function that receives a single parameter, which is a dictionary
with keys <code>width</code> and <code>height</code>, both of type <a href="/docs/reference/layout/length/" title="\`length\`"><code>length</code></a>. The function is
provided <a href="/docs/reference/context/" title="context">context</a>, meaning you don't need to use it in combination with the
<code>context</code> keyword. This is why <a href="/docs/reference/layout/measure/" title="\`measure\`"><code>measure</code></a> can be called in the example
below.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> text <span class="typ-op">=</span> <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">layout</span><span class="typ-punct">(</span>size <span class="typ-op">=&gt;</span> <span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>height<span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">measure</span><span class="typ-punct">(</span>
    <span class="typ-func">block</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> size<span class="typ-punct">.</span>width<span class="typ-punct">,</span> text<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
  This text is <span class="typ-pol">#</span><span class="typ-pol">height</span> high with
  the current page width: <span class="typ-escape">\\</span>
  <span class="typ-pol">#</span><span class="typ-pol">text</span>
<span class="typ-punct">]</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f689fdc5848117fb8b93355d54ad8546.png" alt="Preview" /></div></div>
<p>Note that the <code>layout</code> function forces its contents into a <a href="/docs/reference/layout/block/" title="block">block</a>-level
container, so placement relative to the page or pagebreaks are not possible
within it.</p>
<p>If the <code>layout</code> call is placed inside a box with a width of <code><span class="typ-num">800pt</span></code> and a
height of <code><span class="typ-num">400pt</span></code>, then the specified function will be given the argument
<code><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">800pt</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">400pt</span><span class="typ-punct">)</span></code>. If it is placed directly into the page, it
receives the page's dimensions minus its margins. This is mostly useful in
combination with <a href="/docs/reference/layout/measure/">measurement</a>.</p>
<p>You can also use this function to resolve <a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a> to fixed lengths. This
might come in handy if you're building your own layout abstractions.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">layout</span><span class="typ-punct">(</span>size <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> half <span class="typ-op">=</span> <span class="typ-num">50%</span> <span class="typ-op">*</span> size<span class="typ-punct">.</span>width
  <span class="typ-punct">[</span>Half a page is <span class="typ-pol">#</span><span class="typ-pol">half</span> wide.<span class="typ-punct">]</span>
<span class="typ-punct">}</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4e39d16962e92466357c63ab10a1a3a3.png" alt="Preview" /></div></div>
<p>Note that the width or height provided by <code>layout</code> will be infinite if the
corresponding page dimension is set to <code><span class="typ-key">auto</span></code>.</p>`,example:null,self:!1,params:[{name:"func",details:`<p>A function to call with the outer container's size. Its return value is
displayed in the document.</p>
<p>The container's size is given as a <a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a> with the keys <code>width</code>
and <code>height</code>.</p>
<p>This function is called once for each time the content returned by
<code>layout</code> appears in the document. This makes it possible to generate
content that depends on the dimensions of its container.</p>`,example:null,types:["function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/length/",title:"Length",description:"Documentation for the Length type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"fields",name:"Fields",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-pt",name:"Points",children:[]},{id:"definitions-mm",name:"Millimeters",children:[]},{id:"definitions-cm",name:"Centimeters",children:[]},{id:"definitions-inches",name:"Inches",children:[]},{id:"definitions-to-absolute",name:"To Absolute",children:[]}]}],body:{kind:"type",content:{name:"length",title:"Length",keywords:[],oneliner:"A size or distance, possibly expressed with contextual units.",details:`<p>A size or distance, possibly expressed with contextual units.</p>
<p>Typst supports the following length units:</p>
<ul>
<li>Points: <code><span class="typ-num">72pt</span></code></li>
<li>Millimeters: <code><span class="typ-num">254mm</span></code></li>
<li>Centimeters: <code><span class="typ-num">2.54cm</span></code></li>
<li>Inches: <code><span class="typ-num">1in</span></code></li>
<li>Relative to font size: <code><span class="typ-num">2.5em</span></code></li>
</ul>
<p>You can multiply lengths with and divide them by integers and floats.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">2em</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1in</span><span class="typ-punct">)</span>

<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">3em</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">em</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">em</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">40em</span> <span class="typ-op">+</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">abs</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">5em</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">abs</span>
</code></pre><div class="preview"><img src="/docs/assets/40764ba42bc199fb9be804470033ef44.png" alt="Preview" /></div></div>
<h2 id="fields">Fields</h2>
<ul>
<li><code>abs</code>: A length with just the absolute component of the current length
(that is, excluding the <code>em</code> component).</li>
<li><code>em</code>: The amount of <code>em</code> units in this length, as a <a href="/docs/reference/foundations/float/" title="float">float</a>.</li>
</ul>`,constructor:null,scope:[{path:["length"],name:"pt",title:"Points",keywords:[],oneliner:"Converts this length to points.",element:!1,contextual:!1,details:`<p>Converts this length to points.</p>
<p>Fails with an error if this length has non-zero <code>em</code> units (such as
<code>5em + 2pt</code> instead of just <code>2pt</code>). Use the <code>abs</code> field (such as in
<code>(5em + 2pt).abs.pt()</code>) to ignore the <code>em</code> component of the length (thus
converting only its absolute component).</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["length"],name:"mm",title:"Millimeters",keywords:[],oneliner:"Converts this length to millimeters.",element:!1,contextual:!1,details:`<p>Converts this length to millimeters.</p>
<p>Fails with an error if this length has non-zero <code>em</code> units. See the
<a href="/docs/reference/layout/length/#definitions-pt"><code>pt</code></a> method for more details.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["length"],name:"cm",title:"Centimeters",keywords:[],oneliner:"Converts this length to centimeters.",element:!1,contextual:!1,details:`<p>Converts this length to centimeters.</p>
<p>Fails with an error if this length has non-zero <code>em</code> units. See the
<a href="/docs/reference/layout/length/#definitions-pt"><code>pt</code></a> method for more details.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["length"],name:"inches",title:"Inches",keywords:[],oneliner:"Converts this length to inches.",element:!1,contextual:!1,details:`<p>Converts this length to inches.</p>
<p>Fails with an error if this length has non-zero <code>em</code> units. See the
<a href="/docs/reference/layout/length/#definitions-pt"><code>pt</code></a> method for more details.</p>`,example:null,self:!0,params:[],returns:["float"],scope:[]},{path:["length"],name:"to-absolute",title:"To Absolute",keywords:[],oneliner:"Resolve this length to an absolute length.",element:!1,contextual:!1,details:"<p>Resolve this length to an absolute length.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">12pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">6pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">6pt</span> <span class="typ-op">+</span> <span class="typ-num">10em</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">10em</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">6pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">6pt</span> <span class="typ-op">+</span> <span class="typ-num">10em</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">10em</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">to-absolute</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/37098e98964eb718a48c00cc4f821365.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["length"],scope:[]}]}},children:[]},{route:"/docs/reference/layout/measure/",title:"Measure",description:"Documentation for the `measure` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-content",name:"content",children:[]},{id:"parameters-styles",name:"styles",children:[]}]}],body:{kind:"func",content:{path:[],name:"measure",title:"Measure",keywords:[],oneliner:"Measures the layouted size of content.",element:!1,contextual:!0,details:`<p>Measures the layouted size of content.</p>
<p>The <code>measure</code> function lets you determine the layouted size of content.
By default an infinite space is assumed, so the measured dimensions may
not necessarily match the final dimensions of the content.
If you want to measure in the current layout dimensions, you can combine
<code>measure</code> and <a href="/docs/reference/layout/layout/" title="\`layout\`"><code>layout</code></a>.</p>
<h2 id="example">Example</h2>
<p>The same content can have a different size depending on the <a href="/docs/reference/context/" title="context">context</a> that
it is placed into. In the example below, the <code><span class="typ-pol">#</span><span class="typ-pol">content</span></code> is of course
bigger when we increase the font size.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> content <span class="typ-op">=</span> <span class="typ-punct">[</span>Hello!<span class="typ-punct">]</span>
<span class="typ-pol">#</span><span class="typ-pol">content</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">14pt</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">content</span>
</code></pre><div class="preview"><img src="/docs/assets/9177beb3857147fe3854e4d7a594a0bf.png" alt="Preview" /></div></div>
<p>For this reason, you can only measure when context is available.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">thing</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> size <span class="typ-op">=</span> <span class="typ-func">measure</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span>
  <span class="typ-punct">[</span>Width of &quot;<span class="typ-pol">#</span><span class="typ-pol">body</span>&quot; is <span class="typ-pol">#</span><span class="typ-pol">size</span><span class="typ-punct">.</span><span class="typ-pol">width</span><span class="typ-punct">]</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">thing</span><span class="typ-punct">[</span>Hey<span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">thing</span><span class="typ-punct">[</span>Welcome<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/b8d4b8a339f32ba17282dca007fbab9d.png" alt="Preview" /></div></div>
<p>The measure function returns a dictionary with the entries <code>width</code> and
<code>height</code>, both of type <a href="/docs/reference/layout/length/" title="\`length\`"><code>length</code></a>.</p>`,example:null,self:!1,params:[{name:"width",details:`<p>The width available to layout the content.</p>
<p>Setting this to <code><span class="typ-key">auto</span></code> indicates infinite available width.</p>
<p>Note that using the <code>width</code> and <code>height</code> parameters of this function is
different from measuring a sized <a href="/docs/reference/layout/block/" title="\`block\`"><code>block</code></a> containing the content. In
the following example, the former will get the dimensions of the inner
content instead of the dimensions of the block.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">measure</span><span class="typ-punct">(</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">100</span><span class="typ-punct">)</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">400pt</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">measure</span><span class="typ-punct">(</span><span class="typ-func">block</span><span class="typ-punct">(</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">100</span><span class="typ-punct">)</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">400pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/31ba279cd7c3c9c6d25e6c11d1f1fb1.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"height",details:`<p>The height available to layout the content.</p>
<p>Setting this to <code><span class="typ-key">auto</span></code> indicates infinite available height.</p>`,example:null,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"content",details:"<p>The content whose size to measure.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"styles",details:`<p><em>Compatibility:</em> This argument is deprecated. It only exists for
compatibility with Typst 0.10 and lower and shouldn't be used anymore.</p>`,example:null,types:["none","styles"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["dictionary"],scope:[]}},children:[]},{route:"/docs/reference/layout/move/",title:"Move",description:"Documentation for the `move` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-dx",name:"dx",children:[]},{id:"parameters-dy",name:"dy",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"move",title:"Move",keywords:[],oneliner:"Moves content without affecting layout.",element:!0,contextual:!1,details:`<p>Moves content without affecting layout.</p>
<p>The <code>move</code> function allows you to move content while the layout still 'sees'
it at the original positions. Containers will still be sized as if the
content was not moved.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>inset<span class="typ-punct">:</span> <span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-func">move</span><span class="typ-punct">(</span>
  dx<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">,</span> dy<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>
    inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
    fill<span class="typ-punct">:</span> white<span class="typ-punct">,</span>
    stroke<span class="typ-punct">:</span> black<span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Abra cadabra<span class="typ-punct">]</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/837d54bddf1be4f2b41e7a5e530c6b1.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"dx",details:"<p>The horizontal displacement of the content.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"dy",details:"<p>The vertical displacement of the content.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to move.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/pad/",title:"Padding",description:"Documentation for the `pad` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-left",name:"left",children:[]},{id:"parameters-top",name:"top",children:[]},{id:"parameters-right",name:"right",children:[]},{id:"parameters-bottom",name:"bottom",children:[]},{id:"parameters-x",name:"x",children:[]},{id:"parameters-y",name:"y",children:[]},{id:"parameters-rest",name:"rest",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"pad",title:"Padding",keywords:[],oneliner:"Adds spacing around content.",element:!0,contextual:!1,details:`<p>Adds spacing around content.</p>
<p>The spacing can be specified for each side individually, or for all sides at
once by specifying a positional argument.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">pad</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">,</span> <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;typing.jpg&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-emph">_Typing speeds can be
 measured in words per minute._</span>
</code></pre><div class="preview"><img src="/docs/assets/c325237e3b090638141e73630846ef96.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"left",details:"<p>The padding at the left side.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"top",details:"<p>The padding at the top side.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"right",details:"<p>The padding at the right side.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"bottom",details:"<p>The padding at the bottom side.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"x",details:"<p>A shorthand to set <code>left</code> and <code>right</code> to the same value.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"y",details:"<p>A shorthand to set <code>top</code> and <code>bottom</code> to the same value.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"rest",details:"<p>A shorthand to set all four sides to the same value.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to pad at the sides.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/page/",title:"Page",description:"Documentation for the `page` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-paper",name:"paper",children:[]},{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-flipped",name:"flipped",children:[]},{id:"parameters-margin",name:"margin",children:[]},{id:"parameters-binding",name:"binding",children:[]},{id:"parameters-columns",name:"columns",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-numbering",name:"numbering",children:[]},{id:"parameters-number-align",name:"number-align",children:[]},{id:"parameters-header",name:"header",children:[]},{id:"parameters-header-ascent",name:"header-ascent",children:[]},{id:"parameters-footer",name:"footer",children:[]},{id:"parameters-footer-descent",name:"footer-descent",children:[]},{id:"parameters-background",name:"background",children:[]},{id:"parameters-foreground",name:"foreground",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"page",title:"Page",keywords:[],oneliner:"Layouts its child onto one or multiple pages.",element:!0,contextual:!1,details:`<p>Layouts its child onto one or multiple pages.</p>
<p>Although this function is primarily used in set rules to affect page
properties, it can also be used to explicitly render its argument onto
a set of pages of its own.</p>
<p>Pages can be set to use <code><span class="typ-key">auto</span></code> as their width or height. In this case, the
pages will grow to fit their content on the respective axis.</p>
<p>The <a href="/docs/guides/page-setup-guide/">Guide for Page Setup</a> explains how to use
this and related functions to set up a document with many examples.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-str">&quot;us-letter&quot;</span><span class="typ-punct">)</span>

There you go, US friends!
</code></pre><div class="preview"><img src="/docs/assets/cb6f08c744f16708c3077db16d7373c8.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"paper",details:`<p>A standard paper size to set width and height.</p>
<p>This is just a shorthand for setting <code>width</code> and <code>height</code> and, as such,
cannot be retrieved in a context expression.</p>`,example:null,types:["str"],strings:[{string:"a0",details:"<p>Produces a paper of the respective size.</p>"},{string:"a1",details:"<p>Produces a paper of the respective size.</p>"},{string:"a2",details:"<p>Produces a paper of the respective size.</p>"},{string:"a3",details:"<p>Produces a paper of the respective size.</p>"},{string:"a4",details:"<p>Produces a paper of the respective size.</p>"},{string:"a5",details:"<p>Produces a paper of the respective size.</p>"},{string:"a6",details:"<p>Produces a paper of the respective size.</p>"},{string:"a7",details:"<p>Produces a paper of the respective size.</p>"},{string:"a8",details:"<p>Produces a paper of the respective size.</p>"},{string:"a9",details:"<p>Produces a paper of the respective size.</p>"},{string:"a10",details:"<p>Produces a paper of the respective size.</p>"},{string:"a11",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b1",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b2",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b3",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b4",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b5",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b6",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b7",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-b8",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-c3",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-c4",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-c5",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-c6",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-c7",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-c8",details:"<p>Produces a paper of the respective size.</p>"},{string:"din-d3",details:"<p>Produces a paper of the respective size.</p>"},{string:"din-d4",details:"<p>Produces a paper of the respective size.</p>"},{string:"din-d5",details:"<p>Produces a paper of the respective size.</p>"},{string:"din-d6",details:"<p>Produces a paper of the respective size.</p>"},{string:"din-d7",details:"<p>Produces a paper of the respective size.</p>"},{string:"din-d8",details:"<p>Produces a paper of the respective size.</p>"},{string:"sis-g5",details:"<p>Produces a paper of the respective size.</p>"},{string:"sis-e5",details:"<p>Produces a paper of the respective size.</p>"},{string:"ansi-a",details:"<p>Produces a paper of the respective size.</p>"},{string:"ansi-b",details:"<p>Produces a paper of the respective size.</p>"},{string:"ansi-c",details:"<p>Produces a paper of the respective size.</p>"},{string:"ansi-d",details:"<p>Produces a paper of the respective size.</p>"},{string:"ansi-e",details:"<p>Produces a paper of the respective size.</p>"},{string:"arch-a",details:"<p>Produces a paper of the respective size.</p>"},{string:"arch-b",details:"<p>Produces a paper of the respective size.</p>"},{string:"arch-c",details:"<p>Produces a paper of the respective size.</p>"},{string:"arch-d",details:"<p>Produces a paper of the respective size.</p>"},{string:"arch-e1",details:"<p>Produces a paper of the respective size.</p>"},{string:"arch-e",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b0",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b1",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b2",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b3",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b4",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b5",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b6",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b7",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b8",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b9",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b10",details:"<p>Produces a paper of the respective size.</p>"},{string:"jis-b11",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d0",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d1",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d2",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d3",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d4",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d5",details:"<p>Produces a paper of the respective size.</p>"},{string:"sac-d6",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-id-1",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-id-2",details:"<p>Produces a paper of the respective size.</p>"},{string:"iso-id-3",details:"<p>Produces a paper of the respective size.</p>"},{string:"asia-f4",details:"<p>Produces a paper of the respective size.</p>"},{string:"jp-shiroku-ban-4",details:"<p>Produces a paper of the respective size.</p>"},{string:"jp-shiroku-ban-5",details:"<p>Produces a paper of the respective size.</p>"},{string:"jp-shiroku-ban-6",details:"<p>Produces a paper of the respective size.</p>"},{string:"jp-kiku-4",details:"<p>Produces a paper of the respective size.</p>"},{string:"jp-kiku-5",details:"<p>Produces a paper of the respective size.</p>"},{string:"jp-business-card",details:"<p>Produces a paper of the respective size.</p>"},{string:"cn-business-card",details:"<p>Produces a paper of the respective size.</p>"},{string:"eu-business-card",details:"<p>Produces a paper of the respective size.</p>"},{string:"fr-tellière",details:"<p>Produces a paper of the respective size.</p>"},{string:"fr-couronne-écriture",details:"<p>Produces a paper of the respective size.</p>"},{string:"fr-couronne-édition",details:"<p>Produces a paper of the respective size.</p>"},{string:"fr-raisin",details:"<p>Produces a paper of the respective size.</p>"},{string:"fr-carré",details:"<p>Produces a paper of the respective size.</p>"},{string:"fr-jésus",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-brief",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-draft",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-foolscap",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-quarto",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-crown",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-book-a",details:"<p>Produces a paper of the respective size.</p>"},{string:"uk-book-b",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-letter",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-legal",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-tabloid",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-executive",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-foolscap-folio",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-statement",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-ledger",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-oficio",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-gov-letter",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-gov-legal",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-business-card",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-digest",details:"<p>Produces a paper of the respective size.</p>"},{string:"us-trade",details:"<p>Produces a paper of the respective size.</p>"},{string:"newspaper-compact",details:"<p>Produces a paper of the respective size.</p>"},{string:"newspaper-berliner",details:"<p>Produces a paper of the respective size.</p>"},{string:"newspaper-broadsheet",details:"<p>Produces a paper of the respective size.</p>"},{string:"presentation-16-9",details:"<p>Produces a paper of the respective size.</p>"},{string:"presentation-4-3",details:"<p>Produces a paper of the respective size.</p>"}],default:'<code><span class="typ-str">&quot;a4&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"width",details:"<p>The width of the page.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
  margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0cm</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">for</span> i <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
  <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/45ec1e0b9cd6dc874959dd9774cd082e.png" alt="Preview" /></div></div>`,types:["auto","length"],strings:[],default:'<code><span class="typ-num">595.28pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:`<p>The height of the page.</p>
<p>If this is set to <code><span class="typ-key">auto</span></code>, page breaks can only be triggered manually
by inserting a <a href="/docs/reference/layout/pagebreak/">page break</a>. Most examples throughout this
documentation use <code><span class="typ-key">auto</span></code> for the height of the page to dynamically
grow and shrink to fit their content.</p>`,example:null,types:["auto","length"],strings:[],default:'<code><span class="typ-num">841.89pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"flipped",details:"<p>Whether the page is flipped into landscape orientation.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;us-business-card&quot;</span><span class="typ-punct">,</span>
  flipped<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;f2e5dd&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>bottom <span class="typ-op">+</span> end<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">14pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span><span class="typ-strong">*Sam H. Richards*</span><span class="typ-punct">]</span> <span class="typ-escape">\\</span>
<span class="typ-emph">_Procurement Manager_</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">)</span>
17 Main Street <span class="typ-escape">\\</span>
New York, NY 10001 <span class="typ-escape">\\</span>
+1 555 555 5555
</code></pre><div class="preview"><img src="/docs/assets/3406b55b26673af8970b6f61ef445366.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"margin",details:`<p>The page's margins.</p>
<ul>
<li><code><span class="typ-key">auto</span></code>: The margins are set automatically to 2.5/21 times the smaller
dimension of the page. This results in 2.5cm margins for an A4 page.</li>
<li>A single length: The same margin on all sides.</li>
<li>A dictionary: With a dictionary, the margins can be set individually.
The dictionary can contain the following keys in order of precedence:
<ul>
<li><code>top</code>: The top margin.</li>
<li><code>right</code>: The right margin.</li>
<li><code>bottom</code>: The bottom margin.</li>
<li><code>left</code>: The left margin.</li>
<li><code>inside</code>: The margin at the inner side of the page (where the
<a href="/docs/reference/layout/page/#parameters-binding">binding</a> is).</li>
<li><code>outside</code>: The margin at the outer side of the page (opposite to the
<a href="/docs/reference/layout/page/#parameters-binding">binding</a>).</li>
<li><code>x</code>: The horizontal margins.</li>
<li><code>y</code>: The vertical margins.</li>
<li><code>rest</code>: The margins on all sides except those for which the
dictionary explicitly sets a size.</li>
</ul>
</li>
</ul>
<p>The values for <code>left</code> and <code>right</code> are mutually exclusive with
the values for <code>inside</code> and <code>outside</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
 width<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
 height<span class="typ-punct">:</span> <span class="typ-num">4cm</span><span class="typ-punct">,</span>
 margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> aqua<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/896f1139ff99e0a2727601c188e67cea.png" alt="Preview" /></div></div>`,types:["auto","relative","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"binding",details:`<p>On which side the pages will be bound.</p>
<ul>
<li><code><span class="typ-key">auto</span></code>: Equivalent to <code>left</code> if the <a href="/docs/reference/text/text/#parameters-dir">text direction</a>
is left-to-right and <code>right</code> if it is right-to-left.</li>
<li><code>left</code>: Bound on the left side.</li>
<li><code>right</code>: Bound on the right side.</li>
</ul>
<p>This affects the meaning of the <code>inside</code> and <code>outside</code> options for
margins.</p>`,example:null,types:["auto","alignment"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"columns",details:`<p>How many columns the page has.</p>
<p>If you need to insert columns into a page or other container, you can
also use the <a href="/docs/reference/layout/columns/"><code>columns</code> function</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">4.8cm</span><span class="typ-punct">)</span>
Climate change is one of the most
pressing issues of our time, with
the potential to devastate
communities, ecosystems, and
economies around the world. It&#39;s
clear that we need to take urgent
action to reduce our carbon
emissions and mitigate the impacts
of a rapidly changing climate.
</code></pre><div class="preview"><img src="/docs/assets/a1fd61302c71718dd9b779683e37297d.png" alt="Preview" /></div></div>`,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>The page's background fill.</p>
<p>Setting this to something non-transparent instructs the printer to color
the complete page. If you are considering larger production runs, it may
be more environmentally friendly and cost-effective to source pre-dyed
pages and not set this property.</p>
<p>When set to <code><span class="typ-key">none</span></code>, the background becomes transparent. Note that PDF
pages will still appear with a (usually white) background in viewers,
but they are actually transparent. (If you print them, no color is used
for the background.)</p>
<p>The default of <code><span class="typ-key">auto</span></code> results in <code><span class="typ-key">none</span></code> for PDF output, and
<code>white</code> for PNG and SVG.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;444352&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;fdfdfd&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-strong">*Dark mode enabled.*</span>
</code></pre><div class="preview"><img src="/docs/assets/fb56b983e1188f3041c8502a6265ac8d.png" alt="Preview" /></div></div>`,types:["none","auto","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"numbering",details:`<p>How to <a href="/docs/reference/model/numbering/">number</a> the pages.</p>
<p>If an explicit <code>footer</code> (or <code>header</code> for top-aligned numbering) is
given, the numbering is ignored.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">,</span>
  margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">,</span> bottom<span class="typ-punct">:</span> <span class="typ-num">24pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1 / 1&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">48</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/124c9791b71431ec419b214328b99cc9.png" alt="Preview" /></div></div>`,types:["none","str","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"number-align",details:`<p>The alignment of the page numbering.</p>
<p>If the vertical component is <code>top</code>, the numbering is placed into the
header and if it is <code>bottom</code>, it is placed in the footer. Horizon
alignment is forbidden. If an explicit matching <code>header</code> or <code>footer</code> is
given, the numbering is ignored.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">16pt</span><span class="typ-punct">,</span> bottom<span class="typ-punct">:</span> <span class="typ-num">24pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">,</span>
  number-align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/92823400079e2e2e5d31e67b46cb5b4a.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>center <span class="typ-op">+</span> bottom</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"header",details:`<p>The page's header. Fills the top margin of each page.</p>
<ul>
<li>Content: Shows the content as the header.</li>
<li><code><span class="typ-key">auto</span></code>: Shows the page number if a <code>numbering</code> is set and
<code>number-align</code> is <code>top</code>.</li>
<li><code><span class="typ-key">none</span></code>: Suppresses the header.</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">32pt</span><span class="typ-punct">,</span> bottom<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  header<span class="typ-punct">:</span> <span class="typ-punct">[</span>
    <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
    <span class="typ-func">#</span><span class="typ-func">smallcaps</span><span class="typ-punct">[</span>Typst Academcy<span class="typ-punct">]</span>
    <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> <span class="typ-emph">_Exercise Sheet 3_</span>
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">19</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2e95426af55142872bc58322177f21a8.png" alt="Preview" /></div></div>`,types:["none","auto","content"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"header-ascent",details:"<p>The amount the header is raised into the top margin.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">30%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"footer",details:`<p>The page's footer. Fills the bottom margin of each page.</p>
<ul>
<li>Content: Shows the content as the footer.</li>
<li><code><span class="typ-key">auto</span></code>: Shows the page number if a <code>numbering</code> is set and
<code>number-align</code> is <code>bottom</code>.</li>
<li><code><span class="typ-key">none</span></code>: Suppresses the footer.</li>
</ul>
<p>For just a page number, the <code>numbering</code> property typically suffices. If
you want to create a custom footer but still display the page number,
you can directly access the <a href="/docs/reference/introspection/counter/">page counter</a>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">,</span>
  margin<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
  footer<span class="typ-punct">:</span> <span class="typ-key">context</span> <span class="typ-punct">[</span>
    <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>right<span class="typ-punct">)</span>
    <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
    <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>
      <span class="typ-str">&quot;1 of I&quot;</span><span class="typ-punct">,</span>
      both<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span>
  <span class="typ-punct">]</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">48</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6993d6d09974fa031f1489e71ea99f65.png" alt="Preview" /></div></div>`,types:["none","auto","content"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"footer-descent",details:"<p>The amount the footer is lowered into the bottom margin.</p>",example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">30%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"background",details:`<p>Content in the page's background.</p>
<p>This content will be placed behind the page's body. It can be
used to place a background image or a watermark.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>background<span class="typ-punct">:</span> <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">24deg</span><span class="typ-punct">,</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">18pt</span><span class="typ-punct">,</span> fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;FFCBC4&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    <span class="typ-strong">*CONFIDENTIAL*</span>
  <span class="typ-punct">]</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-heading">= Typst&#39;s secret plans</span>
In the year 2023, we plan to take
over the world (of typesetting).
</code></pre><div class="preview"><img src="/docs/assets/82fcbe788c4d9da35d93a44a9b5b3ed5.png" alt="Preview" /></div></div>`,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"foreground",details:`<p>Content in the page's foreground.</p>
<p>This content will overlay the page's body.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>foreground<span class="typ-punct">:</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">24pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>🥸<span class="typ-punct">]</span><span class="typ-punct">)</span>

Reviewer 2 has marked our paper
&quot;Weak Reject&quot; because they did
not understand our approach<span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/ccdc99424629b63e49080bf85f62845d.png" alt="Preview" /></div></div>`,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The contents of the page(s).</p>
<p>Multiple pages will be created if the content does not fit on a single
page. A new page with the page properties prior to the function invocation
will be created after the body has been typeset.</p>`,example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/pagebreak/",title:"Page Break",description:"Documentation for the `pagebreak` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-weak",name:"weak",children:[]},{id:"parameters-to",name:"to",children:[]}]}],body:{kind:"func",content:{path:[],name:"pagebreak",title:"Page Break",keywords:[],oneliner:"A manual page break.",element:!0,contextual:!1,details:`<p>A manual page break.</p>
<p>Must not be used inside any containers.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>The next page contains
more details on compound theory.
<span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">== Compound Theory</span>
In 1984, the first <span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/592c4c9baba33296f4b215b52f6a72d0.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"weak",details:`<p>If <code><span class="typ-key">true</span></code>, the page break is skipped if the current page is already
empty.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"to",details:`<p>If given, ensures that the next page will be an even/odd page, with an
empty page in between if necessary.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span>

First.
<span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span>to<span class="typ-punct">:</span> <span class="typ-str">&quot;odd&quot;</span><span class="typ-punct">)</span>
Third.
</code></pre><div class="preview"><img src="/docs/assets/14dba2589462ddec3ab2f0a92bf10e66.png" alt="Preview" /></div></div>`,types:["none","str"],strings:[{string:"even",details:"<p>Next page will be an even page.</p>"},{string:"odd",details:"<p>Next page will be an odd page.</p>"}],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/place/",title:"Place",description:"Documentation for the `place` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"effect-on-other-elements",name:"Effect On Other Elements",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-alignment",name:"alignment",children:[]},{id:"parameters-scope",name:"scope",children:[]},{id:"parameters-float",name:"float",children:[]},{id:"parameters-clearance",name:"clearance",children:[]},{id:"parameters-dx",name:"dx",children:[]},{id:"parameters-dy",name:"dy",children:[]},{id:"parameters-body",name:"body",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-flush",name:"Flush",children:[]}]}],body:{kind:"func",content:{path:[],name:"place",title:"Place",keywords:[],oneliner:"Places content relatively to its parent container.",element:!0,contextual:!1,details:`<p>Places content relatively to its parent container.</p>
<p>Placed content can be either overlaid (the default) or floating. Overlaid
content is aligned with the parent container according to the given
<a href="/docs/reference/layout/place/#parameters-alignment"><code>alignment</code></a>, and shown over any other content added so
far in the container. Floating content is placed at the top or bottom of
the container, displacing other content down or up respectively. In both
cases, the content position can be adjusted with <a href="/docs/reference/layout/place/#parameters-dx"><code>dx</code></a> and
<a href="/docs/reference/layout/place/#parameters-dy"><code>dy</code></a> offsets without affecting the layout.</p>
<p>The parent can be any container such as a <a href="/docs/reference/layout/block/" title="\`block\`"><code>block</code></a>, <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a>,
<a href="/docs/reference/visualize/rect/" title="\`rect\`"><code>rect</code></a>, etc. A top level <code>place</code> call will place content directly
in the text area of the current page. This can be used for absolute
positioning on the page: with a <code>top + left</code>
<a href="/docs/reference/layout/place/#parameters-alignment"><code>alignment</code></a>, the offsets <code>dx</code> and <code>dy</code> will set the
position of the element's top left corner relatively to the top left corner
of the text area. For absolute positioning on the full page including
margins, you can use <code>place</code> in <a href="/docs/reference/layout/page/#parameters-foreground"><code>page.foreground</code></a> or
<a href="/docs/reference/layout/page/#parameters-background"><code>page.background</code></a>.</p>
<h2 id="examples">Examples</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">120pt</span><span class="typ-punct">)</span>
Hello, world!

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span>
  <span class="typ-func">place</span><span class="typ-punct">(</span>horizon <span class="typ-op">+</span> right<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span>
  top <span class="typ-op">+</span> left<span class="typ-punct">,</span>
  dx<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">5pt</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span> fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a3b5d4c57d43109fac8c9bf825004346.png" alt="Preview" /></div></div>
<h2 id="effect-on-other-elements">Effect on the position of other elements</h2>
<p>Overlaid elements don't take space in the flow of content, but a <code>place</code>
call inserts an invisible block-level element in the flow. This can
affect the layout by breaking the current paragraph. To avoid this,
you can wrap the <code>place</code> call in a <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a> when the call is made
in the middle of a paragraph. The alignment and offsets will then be
relative to this zero-size box. To make sure it doesn't interfere with
spacing, the box should be attached to a word using a word joiner.</p>
<p>For example, the following defines a function for attaching an annotation
to the following word:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">annotate</span><span class="typ-punct">(</span><span class="typ-op">..</span>args<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">place</span><span class="typ-punct">(</span><span class="typ-op">..</span>args<span class="typ-punct">)</span><span class="typ-punct">)</span>
  sym<span class="typ-punct">.</span>wj
  <span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>

A placed <span class="typ-func">#</span><span class="typ-func">annotate</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span> dy<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span>
square in my text.
</code></pre><div class="preview"><img src="/docs/assets/595c04eb2edd736328b8e24c544da862.png" alt="Preview" /></div></div>
<p>The zero-width weak spacing serves to discard spaces between the function
call and the next word.</p>`,example:null,self:!1,params:[{name:"alignment",details:`<p>Relative to which position in the parent container to place the content.</p>
<ul>
<li>If <code>float</code> is <code><span class="typ-key">false</span></code>, then this can be any alignment other than <code><span class="typ-key">auto</span></code>.</li>
<li>If <code>float</code> is <code><span class="typ-key">true</span></code>, then this must be <code><span class="typ-key">auto</span></code>, <code>top</code>, or <code>bottom</code>.</li>
</ul>
<p>When <code>float</code> is <code><span class="typ-key">false</span></code> and no vertical alignment is specified, the
content is placed at the current position on the vertical axis.</p>`,example:null,types:["auto","alignment"],strings:[],default:"<code>start</code>",positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"scope",details:`<p>Relative to which containing scope something is placed.</p>
<p>The parent scope is primarily used with figures and, for
this reason, the figure function has a mirrored <a href="/docs/reference/model/figure/#parameters-scope"><code>scope</code>
parameter</a>. Nonetheless, it can also be more generally
useful to break out of the columns. A typical example would be to
<a href="/docs/guides/page-setup-guide/#columns">create a single-column title section</a>
in a two-column document.</p>
<p>Note that parent-scoped placement is currently only supported if <code>float</code>
is <code><span class="typ-key">true</span></code>. This may change in the future.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">150pt</span><span class="typ-punct">,</span> columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span>
  top <span class="typ-op">+</span> center<span class="typ-punct">,</span>
  scope<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  float<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">80%</span><span class="typ-punct">,</span> fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">25</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/139d3598e205e4cb77ec591f2aacc05a.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"column",details:"<p>Place into the current column.</p>"},{string:"parent",details:"<p>Place relative to the parent, letting the content span over all columns.</p>"}],default:'<code><span class="typ-str">&quot;column&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"float",details:`<p>Whether the placed element has floating layout.</p>
<p>Floating elements are positioned at the top or bottom of the parent
container, displacing in-flow content. They are always placed in the
in-flow order relative to each other, as well as before any content
following a later <a href="/docs/reference/layout/place/#definitions-flush" title="\`place.flush\`"><code>place.flush</code></a> element.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">150pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">note</span><span class="typ-punct">(</span>where<span class="typ-punct">,</span> body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">place</span><span class="typ-punct">(</span>
  center <span class="typ-op">+</span> where<span class="typ-punct">,</span>
  float<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  clearance<span class="typ-punct">:</span> <span class="typ-num">6pt</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">note</span><span class="typ-punct">(</span>bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>Bottom 1<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">note</span><span class="typ-punct">(</span>bottom<span class="typ-punct">)</span><span class="typ-punct">[</span>Bottom 2<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">40</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">note</span><span class="typ-punct">(</span>top<span class="typ-punct">)</span><span class="typ-punct">[</span>Top<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/39f927d684ea481e8e0d4bc6a5fdaec6.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"clearance",details:`<p>The spacing between the placed element and other elements in a floating
layout.</p>
<p>Has no effect if <code>float</code> is <code><span class="typ-key">false</span></code>.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">1.5em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"dx",details:"<p>The horizontal displacement of the placed content.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">for</span> i <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">16</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> amount <span class="typ-op">=</span> i <span class="typ-op">*</span> <span class="typ-num">4pt</span>
  <span class="typ-func">place</span><span class="typ-punct">(</span>center<span class="typ-punct">,</span> dx<span class="typ-punct">:</span> amount <span class="typ-op">-</span> <span class="typ-num">32pt</span><span class="typ-punct">,</span> dy<span class="typ-punct">:</span> amount<span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/e632de15357219d3fb3e5f6262f4e513.png" alt="Preview" /></div></div>
<p>This does not affect the layout of in-flow content.
In other words, the placed content is treated as if it
were wrapped in a <a href="/docs/reference/layout/move/" title="\`move\`"><code>move</code></a> element.</p>`,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"dy",details:`<p>The vertical displacement of the placed content.</p>
<p>This does not affect the layout of in-flow content.
In other words, the placed content is treated as if it
were wrapped in a <a href="/docs/reference/layout/move/" title="\`move\`"><code>move</code></a> element.</p>`,example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to place.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[{path:["place"],name:"flush",title:"Flush",keywords:[],oneliner:"Asks the layout algorithm to place pending floating elements before",element:!0,contextual:!1,details:`<p>Asks the layout algorithm to place pending floating elements before
continuing with the content.</p>
<p>This is useful for preventing floating figures from spilling
into the next section.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">15</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  placement<span class="typ-punct">:</span> <span class="typ-key">auto</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>A rectangle<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">place</span><span class="typ-punct">.</span><span class="typ-func">flush</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

This text appears after the figure.
</code></pre><div class="preview"><img src="/docs/assets/a606640a39c459e1a41814d9b87cffa1.png" alt="Preview" /></div></div>`,self:!1,params:[],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/layout/ratio/",title:"Ratio",description:"Documentation for the Ratio type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]}],body:{kind:"type",content:{name:"ratio",title:"Ratio",keywords:[],oneliner:"A ratio of a whole.",details:`<p>A ratio of a whole.</p>
<p>Written as a number, followed by a percent sign.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">scale</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">150%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  Scaled apart.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/96e53b364084a05f8e31b28e2a446281.png" alt="Preview" /></div></div>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/layout/relative/",title:"Relative Length",description:"Documentation for the Relative Length type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]}],body:{kind:"type",content:{name:"relative",title:"Relative Length",keywords:[],oneliner:"A length in relation to some known length.",details:`<p>A length in relation to some known length.</p>
<p>This type is a combination of a <a href="/docs/reference/layout/length/" title="length">length</a> with a <a href="/docs/reference/layout/ratio/" title="ratio">ratio</a>. It results from
addition and subtraction of a length and a ratio. Wherever a relative length
is expected, you can also use a bare length or ratio.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">100%</span> <span class="typ-op">-</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span>

<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">100%</span> <span class="typ-op">-</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">length</span> <span class="typ-escape">\\</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span><span class="typ-num">100%</span> <span class="typ-op">-</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-pol">ratio</span>
</code></pre><div class="preview"><img src="/docs/assets/55bdf1f89877b57c953562203f72d093.png" alt="Preview" /></div></div>
<p>A relative length has the following fields:</p>
<ul>
<li><code>length</code>: Its length component.</li>
<li><code>ratio</code>: Its ratio component.</li>
</ul>`,constructor:null,scope:[]}},children:[]},{route:"/docs/reference/layout/repeat/",title:"Repeat",description:"Documentation for the `repeat` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-body",name:"body",children:[]},{id:"parameters-gap",name:"gap",children:[]},{id:"parameters-justify",name:"justify",children:[]}]}],body:{kind:"func",content:{path:[],name:"repeat",title:"Repeat",keywords:[],oneliner:"Repeats content to the available space.",element:!0,contextual:!1,details:`<p>Repeats content to the available space.</p>
<p>This can be useful when implementing a custom index, reference, or outline.</p>
<p>Space may be inserted between the instances of the body parameter, so be
sure to adjust the <a href="/docs/reference/layout/repeat/#parameters-justify"><code>justify</code></a> parameter accordingly.</p>
<p>Errors if there no bounds on the available space, as it would create
infinite content.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>Sign on the dotted line:
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-func">repeat</span><span class="typ-punct">[</span>.<span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">align</span><span class="typ-punct">(</span>right<span class="typ-punct">)</span><span class="typ-punct">[</span>
  Berlin, the 22nd of December, 2022
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/d84c3e6e2b439c2bc8a404f2a8fcff9c.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"body",details:"<p>The content to repeat.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"gap",details:"<p>The gap between each instance of the body.</p>",example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"justify",details:`<p>Whether to increase the gap between instances to completely fill the
available space.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/rotate/",title:"Rotate",description:"Documentation for the `rotate` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-angle",name:"angle",children:[]},{id:"parameters-origin",name:"origin",children:[]},{id:"parameters-reflow",name:"reflow",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"rotate",title:"Rotate",keywords:[],oneliner:"Rotates content without affecting layout.",element:!0,contextual:!1,details:`<p>Rotates content without affecting layout.</p>
<p>Rotates an element by a given angle. The layout will act as if the element
was not rotated unless you specify <code>reflow: <span class="typ-key">true</span></code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-op">..</span><span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">16</span><span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>i <span class="typ-op">=&gt;</span> <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">24deg</span> <span class="typ-op">*</span> i<span class="typ-punct">)</span><span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4b51ca2bdfe9b112e25016545d36623b.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"angle",details:"<p>The amount of rotation.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">1.571rad</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Space!<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/237b4d86257e5a0519d79ebaf765b324.png" alt="Preview" /></div></div>`,types:["angle"],strings:[],default:'<code><span class="typ-num">0deg</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"origin",details:`<p>The origin of the rotation.</p>
<p>If, for instance, you wanted the bottom left corner of the rotated
element to stay aligned with the baseline, you would set it to <code>bottom + left</code> instead.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> square <span class="typ-op">=</span> square<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> center<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> top <span class="typ-op">+</span> left<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> bottom <span class="typ-op">+</span> right<span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/dc3d08f44132ba1fb1a26d77618638f6.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>center <span class="typ-op">+</span> horizon</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"reflow",details:`<p>Whether the rotation impacts the layout.</p>
<p>If set to <code><span class="typ-key">false</span></code>, the rotated content will retain the bounding box of
the original content. If set to <code><span class="typ-key">true</span></code>, the bounding box will take the
rotation of the content into account and adjust the layout accordingly.</p>`,example:`<div class="previewed-code"><pre><code>Hello <span class="typ-func">#</span><span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">90deg</span><span class="typ-punct">,</span> reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>World<span class="typ-punct">]</span>!
</code></pre><div class="preview"><img src="/docs/assets/1805e5d3bcf0bc1a4a0bc6d57d4f02d7.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to rotate.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/scale/",title:"Scale",description:"Documentation for the `scale` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-factor",name:"factor",children:[]},{id:"parameters-x",name:"x",children:[]},{id:"parameters-y",name:"y",children:[]},{id:"parameters-origin",name:"origin",children:[]},{id:"parameters-reflow",name:"reflow",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"scale",title:"Scale",keywords:[],oneliner:"Scales content without affecting layout.",element:!0,contextual:!1,details:`<p>Scales content without affecting layout.</p>
<p>Lets you mirror content by specifying a negative scale on a single axis.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">scale</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is mirrored.<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">scale</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">100%</span><span class="typ-punct">,</span> reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>This is mirrored.<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/60e4e801cf06dc261fb50826f2438e6.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"factor",details:`<p>The scaling factor for both axes, as a positional argument. This is just
an optional shorthand notation for setting <code>x</code> and <code>y</code> to the same
value.</p>`,example:null,types:["auto","length","ratio"],strings:[],default:'<code><span class="typ-num">100%</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0},{name:"x",details:`<p>The horizontal scaling factor.</p>
<p>The body will be mirrored horizontally if the parameter is negative.</p>`,example:null,types:["auto","length","ratio"],strings:[],default:'<code><span class="typ-num">100%</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"y",details:`<p>The vertical scaling factor.</p>
<p>The body will be mirrored vertically if the parameter is negative.</p>`,example:null,types:["auto","length","ratio"],strings:[],default:'<code><span class="typ-num">100%</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"origin",details:"<p>The origin of the transformation.</p>",example:`<div class="previewed-code"><pre><code>A<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">scale</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">)</span>A <span class="typ-escape">\\</span>
B<span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">scale</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> bottom <span class="typ-op">+</span> left<span class="typ-punct">)</span><span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">)</span>B
</code></pre><div class="preview"><img src="/docs/assets/68f8017a4b4d1030eb6e6f2fa4da881f.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>center <span class="typ-op">+</span> horizon</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"reflow",details:`<p>Whether the scaling impacts the layout.</p>
<p>If set to <code><span class="typ-key">false</span></code>, the scaled content will be allowed to overlap
other content. If set to <code><span class="typ-key">true</span></code>, it will compute the new size of
the scaled content and adjust the layout accordingly.</p>`,example:`<div class="previewed-code"><pre><code>Hello <span class="typ-func">#</span><span class="typ-func">scale</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">20%</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">40%</span><span class="typ-punct">,</span> reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>World<span class="typ-punct">]</span>!
</code></pre><div class="preview"><img src="/docs/assets/ad38eb1180aaefbd4c3274f2422b025e.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to scale.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/skew/",title:"Skew",description:"Documentation for the `skew` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-ax",name:"ax",children:[]},{id:"parameters-ay",name:"ay",children:[]},{id:"parameters-origin",name:"origin",children:[]},{id:"parameters-reflow",name:"reflow",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"skew",title:"Skew",keywords:[],oneliner:"Skews content.",element:!0,contextual:!1,details:`<p>Skews content.</p>
<p>Skews an element in horizontal and/or vertical direction. The layout will
act as if the element was not skewed unless you specify <code>reflow: <span class="typ-key">true</span></code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ax<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">12deg</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  This is some fake italic text.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/ce9626f948d6a61b2044adca9df8c57f.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"ax",details:"<p>The horizontal skewing angle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ax<span class="typ-punct">:</span> <span class="typ-num">30deg</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Skewed<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/4b88999e0bf3ab65ad0e517565b54e1.png" alt="Preview" /></div></div>`,types:["angle"],strings:[],default:'<code><span class="typ-num">0deg</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"ay",details:"<p>The vertical skewing angle.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ay<span class="typ-punct">:</span> <span class="typ-num">30deg</span><span class="typ-punct">)</span><span class="typ-punct">[</span>Skewed<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/1784857a9aaf8105f09ebcec23e1055.png" alt="Preview" /></div></div>`,types:["angle"],strings:[],default:'<code><span class="typ-num">0deg</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"origin",details:`<p>The origin of the skew transformation.</p>
<p>The origin will stay fixed during the operation.</p>`,example:`<div class="previewed-code"><pre><code>X <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ax<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> center <span class="typ-op">+</span> horizon<span class="typ-punct">)</span><span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">)</span> X <span class="typ-escape">\\</span>
X <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ax<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> bottom <span class="typ-op">+</span> left<span class="typ-punct">)</span><span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">)</span> X <span class="typ-escape">\\</span>
X <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ax<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> origin<span class="typ-punct">:</span> top <span class="typ-op">+</span> right<span class="typ-punct">)</span><span class="typ-punct">[</span>X<span class="typ-punct">]</span><span class="typ-punct">)</span> X
</code></pre><div class="preview"><img src="/docs/assets/299dff2c3bf272f411eb1d6565637f76.png" alt="Preview" /></div></div>`,types:["alignment"],strings:[],default:'<code>center <span class="typ-op">+</span> horizon</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"reflow",details:`<p>Whether the skew transformation impacts the layout.</p>
<p>If set to <code><span class="typ-key">false</span></code>, the skewed content will retain the bounding box of
the original content. If set to <code><span class="typ-key">true</span></code>, the bounding box will take the
transformation of the content into account and adjust the layout accordingly.</p>`,example:`<div class="previewed-code"><pre><code>Hello <span class="typ-func">#</span><span class="typ-func">skew</span><span class="typ-punct">(</span>ay<span class="typ-punct">:</span> <span class="typ-num">30deg</span><span class="typ-punct">,</span> reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span> <span class="typ-str">&quot;World&quot;</span><span class="typ-punct">)</span>!
</code></pre><div class="preview"><img src="/docs/assets/211dc52675b16eb23e55ac06c73eb60a.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:"<p>The content to skew.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/h/",title:"Spacing (H)",description:"Documentation for the `h` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"fractional-spacing",name:"Fractional Spacing",children:[]},{id:"math-spacing",name:"Math Spacing",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-amount",name:"amount",children:[]},{id:"parameters-weak",name:"weak",children:[]}]}],body:{kind:"func",content:{path:[],name:"h",title:"Spacing (H)",keywords:[],oneliner:"Inserts horizontal spacing into a paragraph.",element:!0,contextual:!1,details:`<p>Inserts horizontal spacing into a paragraph.</p>
<p>The spacing can be absolute, relative, or fractional. In the last case, the
remaining space on the line is distributed among all fractional spacings
according to their relative fractions.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1cm</span><span class="typ-punct">)</span> Second <span class="typ-escape">\\</span>
First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">30%</span><span class="typ-punct">)</span> Second
</code></pre><div class="preview"><img src="/docs/assets/7cd065b5b355d1dd35c852d3627e155d.png" alt="Preview" /></div></div>
<h2 id="fractional-spacing">Fractional spacing</h2>
<p>With fractional spacing, you can align things within a line without forcing
a paragraph break (like <a href="/docs/reference/layout/align/" title="\`align\`"><code>align</code></a> would). Each fractionally sized element
gets space based on the ratio of its fraction to the sum of all fractions.</p>
<div class="previewed-code"><pre><code>First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Second <span class="typ-escape">\\</span>
First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Second <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Third <span class="typ-escape">\\</span>
First <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">2fr</span><span class="typ-punct">)</span> Second <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> Third
</code></pre><div class="preview"><img src="/docs/assets/7df2ed72bcc59c3e48e660687b387407.png" alt="Preview" /></div></div>
<h2 id="math-spacing">Mathematical Spacing</h2>
<p>In <a href="/docs/reference/math/">mathematical formulas</a>, you can additionally use these
constants to add spacing between elements: <code>thin</code> (1/6 em), <code>med</code> (2/9 em),
<code>thick</code> (5/18 em), <code>quad</code> (1 em), <code>wide</code> (2 em).</p>`,example:null,self:!1,params:[{name:"amount",details:"<p>How much spacing to insert.</p>",example:null,types:["relative","fraction"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"weak",details:`<p>If <code><span class="typ-key">true</span></code>, the spacing collapses at the start or end of a paragraph.
Moreover, from multiple adjacent weak spacings all but the largest one
collapse.</p>
<p>Weak spacing in markup also causes all adjacent markup spaces to be
removed, regardless of the amount of spacing inserted. To force a space
next to weak spacing, you can explicitly write <code><span class="typ-str">#</span><span class="typ-str">&quot; &quot;</span></code> (for a normal
space) or <code><span class="typ-escape">~</span></code> (for a non-breaking space). The latter can be useful to
create a construct that always attaches to the preceding word with one
non-breaking space, independently of whether a markup space existed in
front or not.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1cm</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
We identified a group of <span class="typ-emph">_weak_</span>
specimens that fail to manifest
in most cases. However, when
<span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> supported
<span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">8pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> on both sides,
they do show up.

Further <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> more,
even the smallest of them swallow
adjacent markup spaces.
</code></pre><div class="preview"><img src="/docs/assets/5dbe789e681ef5d1aace59dbc2c2b23e.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/v/",title:"Spacing (V)",description:"Documentation for the `v` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-amount",name:"amount",children:[]},{id:"parameters-weak",name:"weak",children:[]}]}],body:{kind:"func",content:{path:[],name:"v",title:"Spacing (V)",keywords:[],oneliner:"Inserts vertical spacing into a flow of blocks.",element:!0,contextual:!1,details:`<p>Inserts vertical spacing into a flow of blocks.</p>
<p>The spacing can be absolute, relative, or fractional. In the last case,
the remaining space on the page is distributed among all fractional spacings
according to their relative fractions.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">grid</span><span class="typ-punct">(</span>
  rows<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">6</span><span class="typ-punct">,</span>
  gutter<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">parbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A <span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> B<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/674f11ba1b7c7d5135bff53588bfc4bf.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"amount",details:"<p>How much spacing to insert.</p>",example:null,types:["relative","fraction"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"weak",details:`<p>If <code><span class="typ-key">true</span></code>, the spacing collapses at the start or end of a flow.
Moreover, from multiple adjacent weak spacings all but the largest one
collapse. Weak spacings will always collapse adjacent paragraph spacing,
even if the paragraph spacing is larger.</p>`,example:`<div class="previewed-code"><pre><code>The following theorem is
foundational to the field:
<span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">4pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-math-delim">$</span> x<span class="typ-math-op">^</span>2 + y<span class="typ-math-op">^</span>2 = r<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
<span class="typ-func">#</span><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">4pt</span><span class="typ-punct">,</span> weak<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
The proof is simple:
</code></pre><div class="preview"><img src="/docs/assets/f90e142794702b61179e5dcb868b97bb.png" alt="Preview" /></div></div>`,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/layout/stack/",title:"Stack",description:"Documentation for the `stack` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-dir",name:"dir",children:[]},{id:"parameters-spacing",name:"spacing",children:[]},{id:"parameters-children",name:"children",children:[]}]}],body:{kind:"func",content:{path:[],name:"stack",title:"Stack",keywords:[],oneliner:"Arranges content and spacing horizontally or vertically.",element:!0,contextual:!1,details:`<p>Arranges content and spacing horizontally or vertically.</p>
<p>The stack places a list of items along an axis, with optional spacing
between each item.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ttb<span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">40pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">120pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">90pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b5c685e7738695ed113532335590ab21.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"dir",details:`<p>The direction along which the items are stacked. Possible values are:</p>
<ul>
<li><code>ltr</code>: Left to right.</li>
<li><code>rtl</code>: Right to left.</li>
<li><code>ttb</code>: Top to bottom.</li>
<li><code>btt</code>: Bottom to top.</li>
</ul>
<p>You can use the <code>start</code> and <code>end</code> methods to obtain the initial and
final points (respectively) of a direction, as <code>alignment</code>. You can also
use the <code>axis</code> method to determine whether a direction is
<code><span class="typ-str">&quot;horizontal&quot;</span></code> or <code><span class="typ-str">&quot;vertical&quot;</span></code>. The <code>inv</code> method returns a
direction's inverse direction.</p>
<p>For example, <code>ttb<span class="typ-punct">.</span><span class="typ-func">start</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is <code>top</code>, <code>ttb<span class="typ-punct">.</span><span class="typ-func">end</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is <code>bottom</code>,
<code>ttb<span class="typ-punct">.</span><span class="typ-func">axis</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is <code><span class="typ-str">&quot;vertical&quot;</span></code> and <code>ttb<span class="typ-punct">.</span><span class="typ-func">inv</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is equal to <code>btt</code>.</p>`,example:null,types:["direction"],strings:[],default:"<code>ttb</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"spacing",details:"<p>Spacing to insert between items where no explicit spacing was provided.</p>",example:null,types:["none","relative","fraction"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"children",details:"<p>The children to stack along the axis.</p>",example:null,types:["relative","fraction","content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}},children:[]}]},{route:"/docs/reference/visualize/",title:"Visualize",description:"Documentation for functions related to Visualize in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"visualize",title:"Visualize",details:`<p>Drawing and data visualization.</p>
<p>If you want to create more advanced drawings or plots, also have a look at
the <a href="https://github.com/johannes-wolf/cetz">CetZ</a> package as well as more
specialized <a href="https://typst.app/universe/">packages</a> for your use case.</p>`,items:[{name:"circle",route:"/docs/reference/visualize/circle/",oneliner:"A circle with optional content.",code:!0},{name:"color",route:"/docs/reference/visualize/color/",oneliner:"A color in a specific color space.",code:!0},{name:"ellipse",route:"/docs/reference/visualize/ellipse/",oneliner:"An ellipse with optional content.",code:!0},{name:"gradient",route:"/docs/reference/visualize/gradient/",oneliner:"A color gradient.",code:!0},{name:"image",route:"/docs/reference/visualize/image/",oneliner:"A raster or vector graphic.",code:!0},{name:"line",route:"/docs/reference/visualize/line/",oneliner:"A line from one point to another.",code:!0},{name:"path",route:"/docs/reference/visualize/path/",oneliner:"A path through a list of points, connected by Bezier curves.",code:!0},{name:"pattern",route:"/docs/reference/visualize/pattern/",oneliner:"A repeating pattern fill.",code:!0},{name:"polygon",route:"/docs/reference/visualize/polygon/",oneliner:"A closed polygon.",code:!0},{name:"rect",route:"/docs/reference/visualize/rect/",oneliner:"A rectangle with optional content.",code:!0},{name:"square",route:"/docs/reference/visualize/square/",oneliner:"A square with optional content.",code:!0},{name:"stroke",route:"/docs/reference/visualize/stroke/",oneliner:"Defines how to draw a line.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/visualize/circle/",title:"Circle",description:"Documentation for the `circle` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-radius",name:"radius",children:[]},{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-outset",name:"outset",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"circle",title:"Circle",keywords:[],oneliner:"A circle with optional content.",element:!0,contextual:!1,details:`<p>A circle with optional content.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-comment">// Without content.</span>
<span class="typ-func">#</span><span class="typ-func">circle</span><span class="typ-punct">(</span>radius<span class="typ-punct">:</span> <span class="typ-num">25pt</span><span class="typ-punct">)</span>

<span class="typ-comment">// With content.</span>
<span class="typ-func">#</span><span class="typ-func">circle</span><span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center <span class="typ-op">+</span> horizon<span class="typ-punct">)</span>
  Automatically <span class="typ-escape">\\</span>
  sized to fit.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/69c78f657d6d31995a5d49e78a822e15.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"radius",details:`<p>The circle's radius. This is mutually exclusive with <code>width</code> and
<code>height</code>.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">0pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"width",details:`<p>The circle's width. This is mutually exclusive with <code>radius</code> and
<code>height</code>.</p>
<p>In contrast to <code>radius</code>, this can be relative to the parent container's
width.</p>`,example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:`<p>The circle's height. This is mutually exclusive with <code>radius</code> and
<code>width</code>.</p>
<p>In contrast to <code>radius</code>, this can be relative to the parent container's
height.</p>`,example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>How to fill the circle. See the <a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a>
for more details.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to stroke the circle. See the
<a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the circle's content. See the
<a href="/docs/reference/layout/box/#parameters-inset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outset",details:`<p>How much to expand the circle's size without affecting the layout. See
the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The content to place into the circle. The circle expands to fit this
content, keeping the 1-1 aspect ratio.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/visualize/color/",title:"Color",description:"Documentation for the Color type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"predefined-colors",name:"Predefined Colors",children:[]},{id:"predefined-color-maps",name:"Predefined Color Maps",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-luma",name:"Luma",children:[{id:"definitions-luma-lightness",name:"lightness",children:[]},{id:"definitions-luma-alpha",name:"alpha",children:[]},{id:"definitions-luma-color",name:"color",children:[]}]},{id:"definitions-oklab",name:"Oklab",children:[{id:"definitions-oklab-lightness",name:"lightness",children:[]},{id:"definitions-oklab-a",name:"a",children:[]},{id:"definitions-oklab-b",name:"b",children:[]},{id:"definitions-oklab-alpha",name:"alpha",children:[]},{id:"definitions-oklab-color",name:"color",children:[]}]},{id:"definitions-oklch",name:"Oklch",children:[{id:"definitions-oklch-lightness",name:"lightness",children:[]},{id:"definitions-oklch-chroma",name:"chroma",children:[]},{id:"definitions-oklch-hue",name:"hue",children:[]},{id:"definitions-oklch-alpha",name:"alpha",children:[]},{id:"definitions-oklch-color",name:"color",children:[]}]},{id:"definitions-linear-rgb",name:"Linear RGB",children:[{id:"definitions-linear-rgb-red",name:"red",children:[]},{id:"definitions-linear-rgb-green",name:"green",children:[]},{id:"definitions-linear-rgb-blue",name:"blue",children:[]},{id:"definitions-linear-rgb-alpha",name:"alpha",children:[]},{id:"definitions-linear-rgb-color",name:"color",children:[]}]},{id:"definitions-rgb",name:"RGB",children:[{id:"definitions-rgb-red",name:"red",children:[]},{id:"definitions-rgb-green",name:"green",children:[]},{id:"definitions-rgb-blue",name:"blue",children:[]},{id:"definitions-rgb-alpha",name:"alpha",children:[]},{id:"definitions-rgb-hex",name:"hex",children:[]},{id:"definitions-rgb-color",name:"color",children:[]}]},{id:"definitions-cmyk",name:"CMYK",children:[{id:"definitions-cmyk-cyan",name:"cyan",children:[]},{id:"definitions-cmyk-magenta",name:"magenta",children:[]},{id:"definitions-cmyk-yellow",name:"yellow",children:[]},{id:"definitions-cmyk-key",name:"key",children:[]},{id:"definitions-cmyk-color",name:"color",children:[]}]},{id:"definitions-hsl",name:"HSL",children:[{id:"definitions-hsl-hue",name:"hue",children:[]},{id:"definitions-hsl-saturation",name:"saturation",children:[]},{id:"definitions-hsl-lightness",name:"lightness",children:[]},{id:"definitions-hsl-alpha",name:"alpha",children:[]},{id:"definitions-hsl-color",name:"color",children:[]}]},{id:"definitions-hsv",name:"HSV",children:[{id:"definitions-hsv-hue",name:"hue",children:[]},{id:"definitions-hsv-saturation",name:"saturation",children:[]},{id:"definitions-hsv-value",name:"value",children:[]},{id:"definitions-hsv-alpha",name:"alpha",children:[]},{id:"definitions-hsv-color",name:"color",children:[]}]},{id:"definitions-components",name:"Components",children:[{id:"definitions-components-alpha",name:"alpha",children:[]}]},{id:"definitions-space",name:"Space",children:[]},{id:"definitions-to-hex",name:"To Hex",children:[]},{id:"definitions-lighten",name:"Lighten",children:[{id:"definitions-lighten-factor",name:"factor",children:[]}]},{id:"definitions-darken",name:"Darken",children:[{id:"definitions-darken-factor",name:"factor",children:[]}]},{id:"definitions-saturate",name:"Saturate",children:[{id:"definitions-saturate-factor",name:"factor",children:[]}]},{id:"definitions-desaturate",name:"Desaturate",children:[{id:"definitions-desaturate-factor",name:"factor",children:[]}]},{id:"definitions-negate",name:"Negate",children:[{id:"definitions-negate-space",name:"space",children:[]}]},{id:"definitions-rotate",name:"Rotate",children:[{id:"definitions-rotate-angle",name:"angle",children:[]},{id:"definitions-rotate-space",name:"space",children:[]}]},{id:"definitions-mix",name:"Mix",children:[{id:"definitions-mix-colors",name:"colors",children:[]},{id:"definitions-mix-space",name:"space",children:[]}]},{id:"definitions-transparentize",name:"Transparentize",children:[{id:"definitions-transparentize-scale",name:"scale",children:[]}]},{id:"definitions-opacify",name:"Opacify",children:[{id:"definitions-opacify-scale",name:"scale",children:[]}]}]}],body:{kind:"type",content:{name:"color",title:"Color",keywords:[],oneliner:"A color in a specific color space.",details:`<p>A color in a specific color space.</p>
<p>Typst supports:</p>
<ul>
<li>sRGB through the <a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code> function</a></li>
<li>Device CMYK through <a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code> function</a></li>
<li>D65 Gray through the <a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code> function</a></li>
<li>Oklab through the <a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code> function</a></li>
<li>Oklch through the <a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code> function</a></li>
<li>Linear RGB through the <a href="/docs/reference/visualize/color/#definitions-linear-rgb"><code>color.linear-rgb</code> function</a></li>
<li>HSL through the <a href="/docs/reference/visualize/color/#definitions-hsl"><code>color.hsl</code> function</a></li>
<li>HSV through the <a href="/docs/reference/visualize/color/#definitions-hsv"><code>color.hsv</code> function</a></li>
</ul>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ed2dcbc7e35512fa15f404cf0e88f93.png" alt="Preview" /></div></div>
<h2 id="predefined-colors">Predefined colors</h2>
<p>Typst defines the following built-in colors:</p>
<table><thead><tr><th>Color</th><th style="text-align: left">Definition</th></tr></thead><tbody>
<tr><td><code>black</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>gray</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">170</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>silver</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">221</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>white</code></td><td style="text-align: left"><code><span class="typ-func">luma</span><span class="typ-punct">(</span><span class="typ-num">255</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>navy</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#001f3f&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>blue</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#0074d9&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>aqua</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#7fdbff&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>teal</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#39cccc&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>eastern</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#239dad&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>purple</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#b10dc9&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>fuchsia</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#f012be&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>maroon</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#85144b&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>red</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#ff4136&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>orange</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#ff851b&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>yellow</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#ffdc00&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>olive</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#3d9970&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>green</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#2ecc40&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td><code>lime</code></td><td style="text-align: left"><code><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#01ff70&quot;</span><span class="typ-punct">)</span></code></td></tr>
</tbody></table>
<p>The predefined colors and the most important color constructors are
available globally and also in the color type's scope, so you can write
either <code>color.red</code> or just <code>red</code>.</p>
<div class="preview"><img src="/docs/assets/e1dce4774e404f941ee920a73e3ed95c.png" alt="Preview" /></div>
<h2 id="predefined-color-maps">Predefined color maps</h2>
<p>Typst also includes a number of preset color maps that can be used for
<a href="/docs/reference/visualize/gradient/#definitions-linear">gradients</a>. These are simply arrays of colors defined in
the module <code>color.map</code>.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">circle</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>crest<span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/bef4598b8811704e5ec38ba5abd5d6c4.png" alt="Preview" /></div></div><table><thead><tr><th>Map</th><th style="text-align: left">Details</th></tr></thead><tbody>
<tr><td><code>turbo</code></td><td style="text-align: left">A perceptually uniform rainbow-like color map. Read <a href="https://ai.googleblog.com/2019/08/turbo-improved-rainbow-colormap-for.html">this blog post</a> for more details.</td></tr>
<tr><td><code>cividis</code></td><td style="text-align: left">A blue to gray to yellow color map. See <a href="https://bids.github.io/colormap/">this blog post</a> for more details.</td></tr>
<tr><td><code>rainbow</code></td><td style="text-align: left">Cycles through the full color spectrum. This color map is best used by setting the interpolation color space to <a href="/docs/reference/visualize/color/#definitions-hsl">HSL</a>. The rainbow gradient is <strong>not suitable</strong> for data visualization because it is not perceptually uniform, so the differences between values become unclear to your readers. It should only be used for decorative purposes.</td></tr>
<tr><td><code>spectral</code></td><td style="text-align: left">Red to yellow to blue color map.</td></tr>
<tr><td><code>viridis</code></td><td style="text-align: left">A purple to teal to yellow color map.</td></tr>
<tr><td><code>inferno</code></td><td style="text-align: left">A black to red to yellow color map.</td></tr>
<tr><td><code>magma</code></td><td style="text-align: left">A black to purple to yellow color map.</td></tr>
<tr><td><code>plasma</code></td><td style="text-align: left">A purple to pink to yellow color map.</td></tr>
<tr><td><code>rocket</code></td><td style="text-align: left">A black to red to white color map.</td></tr>
<tr><td><code>mako</code></td><td style="text-align: left">A black to teal to yellow color map.</td></tr>
<tr><td><code>vlag</code></td><td style="text-align: left">A light blue to white to red color map.</td></tr>
<tr><td><code>icefire</code></td><td style="text-align: left">A light teal to black to yellow color map.</td></tr>
<tr><td><code>flare</code></td><td style="text-align: left">A orange to purple color map that is perceptually uniform.</td></tr>
<tr><td><code>crest</code></td><td style="text-align: left">A blue to white to red color map.</td></tr>
</tbody></table>
<p>Some popular presets are not included because they are not available under a
free licence. Others, like
<a href="https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/">Jet</a>,
are not included because they are not color blind friendly. Feel free to use
or create a package with other presets that are useful to you!</p>
<div class="preview"><img src="/docs/assets/51432498e28451b0d4b1e910ebf99261.png" alt="Preview" /></div>`,constructor:null,scope:[{path:["color"],name:"luma",title:"Luma",keywords:[],oneliner:"Create a grayscale color.",element:!1,contextual:!1,details:`<p>Create a grayscale color.</p>
<p>A grayscale color is represented internally by a single <code>lightness</code>
component.</p>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">for</span> x <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">250</span><span class="typ-punct">,</span> step<span class="typ-punct">:</span> <span class="typ-num">50</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
  <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">luma</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/6fa25f70ba648e0e2eb7633beebb5a74.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"lightness",details:"<p>The lightness component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to grayscale.</p>
<p>If this is given, the <code>lightness</code> should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"oklab",title:"Oklab",keywords:[],oneliner:"Create an [Oklab](https://bottosson.github.io/posts/oklab/) color.",element:!1,contextual:!1,details:`<p>Create an <a href="https://bottosson.github.io/posts/oklab/">Oklab</a> color.</p>
<p>This color space is well suited for the following use cases:</p>
<ul>
<li>Color manipulation such as saturating while keeping perceived hue</li>
<li>Creating grayscale images with uniform perceived lightness</li>
<li>Creating smooth and uniform color transition and gradients</li>
</ul>
<p>A linear Oklab color is represented internally by an array of four
components:</p>
<ul>
<li>lightness (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>a (<a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a> or <a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>.
Ratios are relative to <code><span class="typ-num">0.4</span></code>; meaning <code><span class="typ-num">50%</span></code> is equal to <code><span class="typ-num">0.2</span></code>)</li>
<li>b (<a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a> or <a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>.
Ratios are relative to <code><span class="typ-num">0.4</span></code>; meaning <code><span class="typ-num">50%</span></code> is equal to <code><span class="typ-num">0.2</span></code>)</li>
<li>alpha (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">oklab</span><span class="typ-punct">(</span><span class="typ-num">27%</span><span class="typ-punct">,</span> <span class="typ-num">20%</span><span class="typ-punct">,</span> <span class="typ-op">-</span><span class="typ-num">3%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9e64e43f853b72c4c4fb6ef9016a576f.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"lightness",details:"<p>The lightness component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"a",details:"<p>The a (&quot;green/red&quot;) component.</p>",example:null,types:["float","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"b",details:"<p>The b (&quot;blue/yellow&quot;) component.</p>",example:null,types:["float","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to Oklab.</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"oklch",title:"Oklch",keywords:[],oneliner:"Create an [Oklch](https://bottosson.github.io/posts/oklab/) color.",element:!1,contextual:!1,details:`<p>Create an <a href="https://bottosson.github.io/posts/oklab/">Oklch</a> color.</p>
<p>This color space is well suited for the following use cases:</p>
<ul>
<li>Color manipulation involving lightness, chroma, and hue</li>
<li>Creating grayscale images with uniform perceived lightness</li>
<li>Creating smooth and uniform color transition and gradients</li>
</ul>
<p>A linear Oklch color is represented internally by an array of four
components:</p>
<ul>
<li>lightness (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>chroma (<a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a> or <a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>.
Ratios are relative to <code><span class="typ-num">0.4</span></code>; meaning <code><span class="typ-num">50%</span></code> is equal to <code><span class="typ-num">0.2</span></code>)</li>
<li>hue (<a href="/docs/reference/layout/angle/" title="\`angle\`"><code>angle</code></a>)</li>
<li>alpha (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">oklch</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">,</span> <span class="typ-num">0.2</span><span class="typ-punct">,</span> <span class="typ-num">160deg</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b69b6786ccb302edcdb407be8712be22.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"lightness",details:"<p>The lightness component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"chroma",details:"<p>The chroma component.</p>",example:null,types:["float","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"hue",details:"<p>The hue component.</p>",example:null,types:["angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to Oklch.</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"linear-rgb",title:"Linear RGB",keywords:[],oneliner:"Create an RGB(A) color with linear luma.",element:!1,contextual:!1,details:`<p>Create an RGB(A) color with linear luma.</p>
<p>This color space is similar to sRGB, but with the distinction that the
color component are not gamma corrected. This makes it easier to perform
color operations such as blending and interpolation. Although, you
should prefer to use the <a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code> function</a> for these.</p>
<p>A linear RGB(A) color is represented internally by an array of four
components:</p>
<ul>
<li>red (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>green (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>blue (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>alpha (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">linear-rgb</span><span class="typ-punct">(</span>
  <span class="typ-num">30%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">10%</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c26573235cb972e66adeb81a78dd7dee.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"red",details:"<p>The red component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"green",details:"<p>The green component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"blue",details:"<p>The blue component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to linear RGB(A).</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"rgb",title:"RGB",keywords:[],oneliner:"Create an RGB(A) color.",element:!1,contextual:!1,details:`<p>Create an RGB(A) color.</p>
<p>The color is specified in the sRGB color space.</p>
<p>An RGB(A) color is represented internally by an array of four components:</p>
<ul>
<li>red (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>green (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>blue (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>alpha (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a>
method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#b1f2eb&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-num">87</span><span class="typ-punct">,</span> <span class="typ-num">127</span><span class="typ-punct">,</span> <span class="typ-num">230</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-num">25%</span><span class="typ-punct">,</span> <span class="typ-num">13%</span><span class="typ-punct">,</span> <span class="typ-num">65%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e2b4b7e94b5e4b4f97694bd7d5c253c6.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"red",details:"<p>The red component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"green",details:"<p>The green component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"blue",details:"<p>The blue component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"hex",details:`<p>Alternatively: The color in hexadecimal notation.</p>
<p>Accepts three, four, six or eight hexadecimal digits and optionally
a leading hash.</p>
<p>If this is given, the individual components should not be given.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">16pt</span><span class="typ-punct">,</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#239dad&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-strong">*Typst*</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/cda45a5dd2a458cef3496237ddbc3c14.png" alt="Preview" /></div></div>`,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to RGB(a).</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"cmyk",title:"CMYK",keywords:[],oneliner:"Create a CMYK color.",element:!1,contextual:!1,details:`<p>Create a CMYK color.</p>
<p>This is useful if you want to target a specific printer. The conversion
to RGB for display preview might differ from how your printer reproduces
the color.</p>
<p>A CMYK color is represented internally by an array of four components:</p>
<ul>
<li>cyan (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>magenta (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>yellow (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>key (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>
<p>Note that CMYK colors are not currently supported when PDF/A output is
enabled.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-func">cmyk</span><span class="typ-punct">(</span><span class="typ-num">27%</span><span class="typ-punct">,</span> <span class="typ-num">0%</span><span class="typ-punct">,</span> <span class="typ-num">3%</span><span class="typ-punct">,</span> <span class="typ-num">5%</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/f0d345e6c89828f5cf661e5e27eff114.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"cyan",details:"<p>The cyan component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"magenta",details:"<p>The magenta component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"yellow",details:"<p>The yellow component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"key",details:"<p>The key component.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to CMYK.</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"hsl",title:"HSL",keywords:[],oneliner:"Create an HSL color.",element:!1,contextual:!1,details:`<p>Create an HSL color.</p>
<p>This color space is useful for specifying colors by hue, saturation and
lightness. It is also useful for color manipulation, such as saturating
while keeping perceived hue.</p>
<p>An HSL color is represented internally by an array of four components:</p>
<ul>
<li>hue (<a href="/docs/reference/layout/angle/" title="\`angle\`"><code>angle</code></a>)</li>
<li>saturation (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>lightness (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>alpha (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">hsl</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">60%</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d1b66cc17342e1f60422a58f20bdb0c8.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"hue",details:"<p>The hue angle.</p>",example:null,types:["angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"saturation",details:"<p>The saturation component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"lightness",details:"<p>The lightness component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to HSL.</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"hsv",title:"HSV",keywords:[],oneliner:"Create an HSV color.",element:!1,contextual:!1,details:`<p>Create an HSV color.</p>
<p>This color space is useful for specifying colors by hue, saturation and
value. It is also useful for color manipulation, such as saturating
while keeping perceived hue.</p>
<p>An HSV color is represented internally by an array of four components:</p>
<ul>
<li>hue (<a href="/docs/reference/layout/angle/" title="\`angle\`"><code>angle</code></a>)</li>
<li>saturation (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>value (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
<li>alpha (<a href="/docs/reference/layout/ratio/" title="\`ratio\`"><code>ratio</code></a>)</li>
</ul>
<p>These components are also available using the
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> method.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">hsv</span><span class="typ-punct">(</span><span class="typ-num">30deg</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">60%</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/212e168e1d793fd43d7c1618bfa67d17.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"hue",details:"<p>The hue angle.</p>",example:null,types:["angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"saturation",details:"<p>The saturation component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"value",details:"<p>The value component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"alpha",details:"<p>The alpha component.</p>",example:null,types:["int","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"color",details:`<p>Alternatively: The color to convert to HSL.</p>
<p>If this is given, the individual components should not be given.</p>`,example:null,types:["color"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"components",title:"Components",keywords:[],oneliner:"Extracts the components of this color.",element:!1,contextual:!1,details:`<p>Extracts the components of this color.</p>
<p>The size and values of this array depends on the color space. You can
obtain the color space using <a href="/docs/reference/visualize/color/#definitions-space"><code>space</code></a>. Below is a table
of the color spaces and their components:</p>
<table><thead><tr><th>Color space</th><th>C1</th><th>C2</th><th>C3</th><th>C4</th></tr></thead><tbody>
<tr><td><a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code></a></td><td>Lightness</td><td></td><td></td><td></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code></a></td><td>Lightness</td><td><code>a</code></td><td><code>b</code></td><td>Alpha</td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code></a></td><td>Lightness</td><td>Chroma</td><td>Hue</td><td>Alpha</td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-linear-rgb"><code>linear-rgb</code></a></td><td>Red</td><td>Green</td><td>Blue</td><td>Alpha</td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code></a></td><td>Red</td><td>Green</td><td>Blue</td><td>Alpha</td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code></a></td><td>Cyan</td><td>Magenta</td><td>Yellow</td><td>Key</td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-hsl"><code>hsl</code></a></td><td>Hue</td><td>Saturation</td><td>Lightness</td><td>Alpha</td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-hsv"><code>hsv</code></a></td><td>Hue</td><td>Saturation</td><td>Value</td><td>Alpha</td></tr>
</tbody></table>
<p>For the meaning and type of each individual value, see the documentation
of the corresponding color space. The alpha component is optional and
only included if the <code>alpha</code> argument is <code>true</code>. The length of the
returned array depends on the number of components and whether the alpha
component is included.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-comment">// note that the alpha component is included by default</span>
<span class="typ-func">#</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">,</span> <span class="typ-num">60%</span><span class="typ-punct">,</span> <span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">components</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1c0dd1d4467dbf3943543fad7ca3b821.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"alpha",details:"<p>Whether to include the alpha component.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]},{path:["color"],name:"space",title:"Space",keywords:[],oneliner:"Returns the constructor function for this color's space:",element:!1,contextual:!1,details:`<p>Returns the constructor function for this color's space:</p>
<ul>
<li><a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-linear-rgb"><code>linear-rgb</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-hsl"><code>hsl</code></a></li>
<li><a href="/docs/reference/visualize/color/#definitions-hsv"><code>hsv</code></a></li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> color <span class="typ-op">=</span> <span class="typ-func">cmyk</span><span class="typ-punct">(</span><span class="typ-num">1%</span><span class="typ-punct">,</span> <span class="typ-num">2%</span><span class="typ-punct">,</span> <span class="typ-num">3%</span><span class="typ-punct">,</span> <span class="typ-num">4%</span><span class="typ-punct">)</span>
<span class="typ-punct">#</span><span class="typ-punct">(</span>color<span class="typ-punct">.</span><span class="typ-func">space</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">==</span> cmyk<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/644956802d3aa041076ec271e45e0e53.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["any"],scope:[]},{path:["color"],name:"to-hex",title:"To Hex",keywords:[],oneliner:"Returns the color's RGB(A) hex representation (such as `#ffaa32` or",element:!1,contextual:!1,details:`<p>Returns the color's RGB(A) hex representation (such as <code>#ffaa32</code> or
<code>#020304fe</code>). The alpha component (last two digits in <code>#020304fe</code>) is
omitted if it is equal to <code>ff</code> (255 / 100%).</p>`,example:null,self:!0,params:[],returns:["str"],scope:[]},{path:["color"],name:"lighten",title:"Lighten",keywords:[],oneliner:"Lightens a color by a given factor.",element:!1,contextual:!1,details:"<p>Lightens a color by a given factor.</p>",example:null,self:!0,params:[{name:"factor",details:"<p>The factor to lighten the color by.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"darken",title:"Darken",keywords:[],oneliner:"Darkens a color by a given factor.",element:!1,contextual:!1,details:"<p>Darkens a color by a given factor.</p>",example:null,self:!0,params:[{name:"factor",details:"<p>The factor to darken the color by.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"saturate",title:"Saturate",keywords:[],oneliner:"Increases the saturation of a color by a given factor.",element:!1,contextual:!1,details:"<p>Increases the saturation of a color by a given factor.</p>",example:null,self:!0,params:[{name:"factor",details:"<p>The factor to saturate the color by.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"desaturate",title:"Desaturate",keywords:[],oneliner:"Decreases the saturation of a color by a given factor.",element:!1,contextual:!1,details:"<p>Decreases the saturation of a color by a given factor.</p>",example:null,self:!0,params:[{name:"factor",details:"<p>The factor to desaturate the color by.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"negate",title:"Negate",keywords:[],oneliner:"Produces the complementary color using a provided color space.",element:!1,contextual:!1,details:`<p>Produces the complementary color using a provided color space.
You can think of it as the opposite side on a color wheel.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">.</span><span class="typ-func">negate</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">.</span><span class="typ-func">negate</span><span class="typ-punct">(</span>space<span class="typ-punct">:</span> rgb<span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/bafd520df22a2bc59295a310df61ac3f.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"space",details:"<p>The color space used for the transformation. By default, a perceptual color space is used.</p>",example:null,types:["any"],strings:[],default:"<code>oklab</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"rotate",title:"Rotate",keywords:[],oneliner:"Rotates the hue of the color by a given angle.",element:!1,contextual:!1,details:"<p>Rotates the hue of the color by a given angle.</p>",example:null,self:!0,params:[{name:"angle",details:"<p>The angle to rotate the hue by.</p>",example:null,types:["angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"space",details:`<p>The color space used to rotate. By default, this happens in a perceptual
color space (<a href="/docs/reference/visualize/color/#definitions-oklch"><code>oklch</code></a>).</p>`,example:null,types:["any"],strings:[],default:"<code>oklch</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"mix",title:"Mix",keywords:[],oneliner:"Create a color by mixing two or more colors.",element:!1,contextual:!1,details:`<p>Create a color by mixing two or more colors.</p>
<p>In color spaces with a hue component (hsl, hsv, oklch), only two colors
can be mixed at once. Mixing more than two colors in such a space will
result in an error!</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span>blue<span class="typ-punct">,</span> space<span class="typ-punct">:</span> rgb<span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">,</span> white<span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> color<span class="typ-punct">.</span><span class="typ-func">mix</span><span class="typ-punct">(</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> <span class="typ-num">70%</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span>blue<span class="typ-punct">,</span> <span class="typ-num">30%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1a85cead37e916720702bdf2206152d0.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"colors",details:`<p>The colors, optionally with weights, specified as a pair (array of
length two) of color and weight (float or ratio).</p>
<p>The weights do not need to add to <code><span class="typ-num">100%</span></code>, they are relative to the
sum of all weights.</p>`,example:null,types:["color","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1},{name:"space",details:`<p>The color space to mix in. By default, this happens in a perceptual
color space (<a href="/docs/reference/visualize/color/#definitions-oklab"><code>oklab</code></a>).</p>`,example:null,types:["any"],strings:[],default:"<code>oklab</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"transparentize",title:"Transparentize",keywords:[],oneliner:"Makes a color more transparent by a given factor.",element:!1,contextual:!1,details:`<p>Makes a color more transparent by a given factor.</p>
<p>This method is relative to the existing alpha value.
If the scale is positive, calculates <code>alpha - alpha * scale</code>.
Negative scales behave like <code>color.opacify(-scale)</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">)</span><span class="typ-punct">[</span>opaque<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>half red<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>quarter red<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/ee993a875bfeeca5f79e64819d258059.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"scale",details:"<p>The factor to change the alpha value by.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["color"],name:"opacify",title:"Opacify",keywords:[],oneliner:"Makes a color more opaque by a given scale.",element:!1,contextual:!1,details:`<p>Makes a color more opaque by a given scale.</p>
<p>This method is relative to the existing alpha value.
If the scale is positive, calculates <code>alpha + scale - alpha * scale</code>.
Negative scales behave like <code>color.transparentize(-scale)</code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> half-red <span class="typ-op">=</span> red<span class="typ-punct">.</span><span class="typ-func">transparentize</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> half-red<span class="typ-punct">.</span><span class="typ-func">opacify</span><span class="typ-punct">(</span><span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>opaque<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> half-red<span class="typ-punct">.</span><span class="typ-func">opacify</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>three quarters red<span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">block</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> half-red<span class="typ-punct">.</span><span class="typ-func">opacify</span><span class="typ-punct">(</span><span class="typ-op">-</span><span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>one quarter red<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/4cd66392c6884965bd66bb98838e4f3e.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"scale",details:"<p>The scale to change the alpha value by.</p>",example:null,types:["ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]}]}},children:[]},{route:"/docs/reference/visualize/ellipse/",title:"Ellipse",description:"Documentation for the `ellipse` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-outset",name:"outset",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"ellipse",title:"Ellipse",keywords:[],oneliner:"An ellipse with optional content.",element:!0,contextual:!1,details:`<p>An ellipse with optional content.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-comment">// Without content.</span>
<span class="typ-func">#</span><span class="typ-func">ellipse</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">35%</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span>

<span class="typ-comment">// With content.</span>
<span class="typ-func">#</span><span class="typ-func">ellipse</span><span class="typ-punct">[</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span>center<span class="typ-punct">)</span>
  Automatically sized <span class="typ-escape">\\</span>
  to fit the content.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/ac9ca95d785829f7003b1e9f30aeb456.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"width",details:"<p>The ellipse's width, relative to its parent container.</p>",example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:"<p>The ellipse's height, relative to its parent container.</p>",example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>How to fill the ellipse. See the <a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a>
for more details.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to stroke the ellipse. See the
<a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the ellipse's content. See the
<a href="/docs/reference/layout/box/#parameters-inset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outset",details:`<p>How much to expand the ellipse's size without affecting the layout. See
the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The content to place into the ellipse.</p>
<p>When this is omitted, the ellipse takes on a default size of at most
<code><span class="typ-num">45pt</span></code> by <code><span class="typ-num">30pt</span></code>.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/visualize/gradient/",title:"Gradient",description:"Documentation for the Gradient type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"stops",name:"Stops",children:[]},{id:"relativeness",name:"Relativeness",children:[]},{id:"color-spaces-and-interpolation",name:"Color Spaces And Interpolation",children:[]},{id:"direction",name:"Direction",children:[]},{id:"presets",name:"Presets",children:[]},{id:"note-on-file-sizes",name:"Note On File Sizes",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-linear",name:"Linear Gradient",children:[{id:"definitions-linear-stops",name:"stops",children:[]},{id:"definitions-linear-space",name:"space",children:[]},{id:"definitions-linear-relative",name:"relative",children:[]},{id:"definitions-linear-dir",name:"dir",children:[]},{id:"definitions-linear-angle",name:"angle",children:[]}]},{id:"definitions-radial",name:"Radial",children:[{id:"definitions-radial-stops",name:"stops",children:[]},{id:"definitions-radial-space",name:"space",children:[]},{id:"definitions-radial-relative",name:"relative",children:[]},{id:"definitions-radial-center",name:"center",children:[]},{id:"definitions-radial-radius",name:"radius",children:[]},{id:"definitions-radial-focal-center",name:"focal-center",children:[]},{id:"definitions-radial-focal-radius",name:"focal-radius",children:[]}]},{id:"definitions-conic",name:"Conic",children:[{id:"definitions-conic-stops",name:"stops",children:[]},{id:"definitions-conic-angle",name:"angle",children:[]},{id:"definitions-conic-space",name:"space",children:[]},{id:"definitions-conic-relative",name:"relative",children:[]},{id:"definitions-conic-center",name:"center",children:[]}]},{id:"definitions-sharp",name:"Sharp",children:[{id:"definitions-sharp-steps",name:"steps",children:[]},{id:"definitions-sharp-smoothness",name:"smoothness",children:[]}]},{id:"definitions-repeat",name:"Repeat",children:[{id:"definitions-repeat-repetitions",name:"repetitions",children:[]},{id:"definitions-repeat-mirror",name:"mirror",children:[]}]},{id:"definitions-kind",name:"Kind",children:[]},{id:"definitions-stops",name:"Stops",children:[]},{id:"definitions-space",name:"Space",children:[]},{id:"definitions-relative",name:"Relative",children:[]},{id:"definitions-angle",name:"Angle",children:[]},{id:"definitions-sample",name:"Sample",children:[{id:"definitions-sample-t",name:"t",children:[]}]},{id:"definitions-samples",name:"Samples",children:[{id:"definitions-samples-ts",name:"ts",children:[]}]}]}],body:{kind:"type",content:{name:"gradient",title:"Gradient",keywords:[],oneliner:"A color gradient.",details:`<p>A color gradient.</p>
<p>Typst supports linear gradients through the
<a href="/docs/reference/visualize/gradient/#definitions-linear"><code>gradient.linear</code> function</a>, radial gradients through
the <a href="/docs/reference/visualize/gradient/#definitions-radial"><code>gradient.radial</code> function</a>, and conic gradients
through the <a href="/docs/reference/visualize/gradient/#definitions-conic"><code>gradient.conic</code> function</a>.</p>
<p>A gradient can be used for the following purposes:</p>
<ul>
<li>As a fill to paint the interior of a shape:
<code><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code></li>
<li>As a stroke to paint the outline of a shape:
<code><span class="typ-func">rect</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">1pt</span> <span class="typ-op">+</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code></li>
<li>As the fill of text:
<code><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code></li>
<li>As a color map you can <a href="/docs/reference/visualize/gradient/#definitions-sample">sample</a> from:
<code>gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">sample</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">)</span></code></li>
</ul>
<h2 id="examples">Examples</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">radial</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">conic</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e2eb2fe541ad3fe44e04dcb612606927.png" alt="Preview" /></div></div>
<p>Gradients are also supported on text, but only when setting the
<a href="/docs/reference/visualize/gradient/#definitions-relative">relativeness</a> to either <code><span class="typ-key">auto</span></code> (the default value) or
<code><span class="typ-str">&quot;parent&quot;</span></code>. To create word-by-word or glyph-by-glyph gradients, you can
wrap the words or characters of your text in <a href="/docs/reference/layout/box/">boxes</a> manually or
through a <a href="/docs/reference/styling/#show-rules">show rule</a>.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">rainbow</span><span class="typ-punct">(</span>content<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-func">box</span><span class="typ-punct">(</span>content<span class="typ-punct">)</span>
<span class="typ-punct">}</span>

This is a gradient on text, but with a <span class="typ-func">#</span><span class="typ-func">rainbow</span><span class="typ-punct">[</span>twist<span class="typ-punct">]</span>!
</code></pre><div class="preview"><img src="/docs/assets/ba36a8d5056862cdba1d42dad82ecbdc.png" alt="Preview" /></div></div>
<h2 id="stops">Stops</h2>
<p>A gradient is composed of a series of stops. Each of these stops has a color
and an offset. The offset is a <a href="/docs/reference/layout/ratio/">ratio</a> between <code><span class="typ-num">0%</span></code> and <code><span class="typ-num">100%</span></code> or
an angle between <code><span class="typ-num">0deg</span></code> and <code><span class="typ-num">360deg</span></code>. The offset is a relative position
that determines how far along the gradient the stop is located. The stop's
color is the color of the gradient at that position. You can choose to omit
the offsets when defining a gradient. In this case, Typst will space all
stops evenly.</p>
<h2 id="relativeness">Relativeness</h2>
<p>The location of the <code><span class="typ-num">0%</span></code> and <code><span class="typ-num">100%</span></code> stops depends on the dimensions
of a container. This container can either be the shape that it is being
painted on, or the closest surrounding container. This is controlled by the
<code>relative</code> argument of a gradient constructor. By default, gradients are
relative to the shape they are being painted on, unless the gradient is
applied on text, in which case they are relative to the closest ancestor
container.</p>
<p>Typst determines the ancestor container as follows:</p>
<ul>
<li>For shapes that are placed at the root/top level of the document, the
closest ancestor is the page itself.</li>
<li>For other shapes, the ancestor is the innermost <a href="/docs/reference/layout/block/" title="\`block\`"><code>block</code></a> or <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a> that
contains the shape. This includes the boxes and blocks that are implicitly
created by show rules and elements. For example, a <a href="/docs/reference/layout/rotate/" title="\`rotate\`"><code>rotate</code></a> will not
affect the parent of a gradient, but a <a href="/docs/reference/layout/grid/" title="\`grid\`"><code>grid</code></a> will.</li>
</ul>
<h2 id="color-spaces-and-interpolation">Color spaces and interpolation</h2>
<p>Gradients can be interpolated in any color space. By default, gradients are
interpolated in the <a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a> color space, which is a
<a href="https://programmingdesignsystems.com/color/perceptually-uniform-color-spaces/index.html">perceptually uniform</a>
color space. This means that the gradient will be perceived as having a
smooth progression of colors. This is particularly useful for data
visualization.</p>
<p>However, you can choose to interpolate the gradient in any supported color
space you want, but beware that some color spaces are not suitable for
perceptually interpolating between colors. Consult the table below when
choosing an interpolation space.</p>
<table><thead><tr><th>Color space</th><th>Perceptually uniform?</th></tr></thead><tbody>
<tr><td><a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a></td><td><em>Yes</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-oklch">Oklch</a></td><td><em>Yes</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-rgb">sRGB</a></td><td><em>No</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-linear-rgb">linear-RGB</a></td><td><em>Yes</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-cmyk">CMYK</a></td><td><em>No</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-luma">Grayscale</a></td><td><em>Yes</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-hsl">HSL</a></td><td><em>No</em></td></tr>
<tr><td><a href="/docs/reference/visualize/color/#definitions-hsv">HSV</a></td><td><em>No</em></td></tr>
</tbody></table>
<div class="preview"><img src="/docs/assets/9a3e94706d43b205fe5542364fa5e603.png" alt="Preview" /></div>
<h2 id="direction">Direction</h2>
<p>Some gradients are sensitive to direction. For example, a linear gradient
has an angle that determines its direction. Typst uses a clockwise angle,
with 0° being from left to right, 90° from top to bottom, 180° from right to
left, and 270° from bottom to top.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">0deg</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">90deg</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">180deg</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span>red<span class="typ-punct">,</span> blue<span class="typ-punct">,</span> angle<span class="typ-punct">:</span> <span class="typ-num">270deg</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e428c9e5f6f4319576d08a488aaa5cfa.png" alt="Preview" /></div></div>
<h2 id="presets">Presets</h2>
<p>Typst predefines color maps that you can use with your gradients. See the
<a href="/docs/reference/visualize/color/#predefined-color-maps"><code>color</code></a> documentation for more details.</p>
<h2 id="note-on-file-sizes">Note on file sizes</h2>
<p>Gradients can be quite large, especially if they have many stops. This is
because gradients are stored as a list of colors and offsets, which can
take up a lot of space. If you are concerned about file sizes, you should
consider the following:</p>
<ul>
<li>SVG gradients are currently inefficiently encoded. This will be improved
in the future.</li>
<li>PDF gradients in the <a href="/docs/reference/visualize/color/#definitions-oklab"><code>color.oklab</code></a>, <a href="/docs/reference/visualize/color/#definitions-hsv"><code>color.hsv</code></a>,
<a href="/docs/reference/visualize/color/#definitions-hsl"><code>color.hsl</code></a>, and <a href="/docs/reference/visualize/color/#definitions-oklch"><code>color.oklch</code></a> color spaces
are stored as a list of <a href="/docs/reference/visualize/color/#definitions-rgb"><code>color.rgb</code></a> colors with extra stops
in between. This avoids needing to encode these color spaces in your PDF
file, but it does add extra stops to your gradient, which can increase
the file size.</li>
</ul>`,constructor:null,scope:[{path:["gradient"],name:"linear",title:"Linear Gradient",keywords:[],oneliner:"Creates a new linear gradient, in which colors transition along a",element:!1,contextual:!1,details:`<p>Creates a new linear gradient, in which colors transition along a
straight line.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span>
    <span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>viridis<span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/68e8097ce2b4ea6857e0378fbfca1810.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"stops",details:'<p>The color <a href="#stops">stops</a> of the gradient.</p>',example:null,types:["color","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1},{name:"space",details:`<p>The color space in which to interpolate the gradient.</p>
<p>Defaults to a perceptually uniform color space called
<a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a>.</p>`,example:null,types:["any"],strings:[],default:"<code>oklab</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"relative",details:`<p>The <a href="#relativeness">relative placement</a> of the gradient.</p>
<p>For an element placed at the root/top level of the document, the
parent is the page itself. For other elements, the parent is the
innermost block, box, column, grid, or stack that contains the
element.</p>`,example:null,types:["auto","str"],strings:[{string:"self",details:"<p>The gradient is relative to itself (its own bounding box).</p>"},{string:"parent",details:"<p>The gradient is relative to its parent (the parent's bounding box).</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"dir",details:"<p>The direction of the gradient.</p>",example:null,types:["direction"],strings:[],default:"<code>ltr</code>",positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"angle",details:"<p>The angle of the gradient.</p>",example:null,types:["angle"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["gradient"],scope:[]},{path:["gradient"],name:"radial",title:"Radial",keywords:[],oneliner:"Creates a new radial gradient, in which colors radiate away from an",element:!1,contextual:!1,details:`<p>Creates a new radial gradient, in which colors radiate away from an
origin.</p>
<p>The gradient is defined by two circles: the focal circle and the end
circle. The focal circle is a circle with center <code>focal-center</code> and
radius <code>focal-radius</code>, that defines the points at which the gradient
starts and has the color of the first stop. The end circle is a circle
with center <code>center</code> and radius <code>radius</code>, that defines the points at
which the gradient ends and has the color of the last stop. The gradient
is then interpolated between these two circles.</p>
<p>Using these four values, also called the focal point for the starting
circle and the center and radius for the end circle, we can define a
gradient with more interesting properties than a basic radial gradient.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-func">circle</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">radial</span><span class="typ-punct">(</span>
    <span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>viridis<span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">circle</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">radial</span><span class="typ-punct">(</span>
    <span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>viridis<span class="typ-punct">,</span>
    focal-center<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">10%</span><span class="typ-punct">,</span> <span class="typ-num">40%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    focal-radius<span class="typ-punct">:</span> <span class="typ-num">5%</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6f63d7f8b404ed86ba159d81941a99df.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"stops",details:'<p>The color <a href="#stops">stops</a> of the gradient.</p>',example:null,types:["color","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1},{name:"space",details:`<p>The color space in which to interpolate the gradient.</p>
<p>Defaults to a perceptually uniform color space called
<a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a>.</p>`,example:null,types:["any"],strings:[],default:"<code>oklab</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"relative",details:`<p>The <a href="#relativeness">relative placement</a> of the gradient.</p>
<p>For an element placed at the root/top level of the document, the parent
is the page itself. For other elements, the parent is the innermost block,
box, column, grid, or stack that contains the element.</p>`,example:null,types:["auto","str"],strings:[{string:"self",details:"<p>The gradient is relative to itself (its own bounding box).</p>"},{string:"parent",details:"<p>The gradient is relative to its parent (the parent's bounding box).</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"center",details:`<p>The center of the end circle of the gradient.</p>
<p>A value of <code><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span></code> means that the end circle is
centered inside of its container.</p>`,example:null,types:["array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"radius",details:`<p>The radius of the end circle of the gradient.</p>
<p>By default, it is set to <code><span class="typ-num">50%</span></code>. The ending radius must be bigger
than the focal radius.</p>`,example:null,types:["ratio"],strings:[],default:'<code><span class="typ-num">50%</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"focal-center",details:`<p>The center of the focal circle of the gradient.</p>
<p>The focal center must be inside of the end circle.</p>
<p>A value of <code><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span></code> means that the focal circle is
centered inside of its container.</p>
<p>By default it is set to the same as the center of the last circle.</p>`,example:null,types:["auto","array"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"focal-radius",details:`<p>The radius of the focal circle of the gradient.</p>
<p>The focal center must be inside of the end circle.</p>
<p>By default, it is set to <code><span class="typ-num">0%</span></code>. The focal radius must be smaller
than the ending radius\`.</p>`,example:null,types:["ratio"],strings:[],default:'<code><span class="typ-num">0%</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["gradient"],scope:[]},{path:["gradient"],name:"conic",title:"Conic",keywords:[],oneliner:"Creates a new conic gradient, in which colors change radially around a",element:!1,contextual:!1,details:`<p>Creates a new conic gradient, in which colors change radially around a
center point.</p>
<p>You can control the center point of the gradient by using the <code>center</code>
argument. By default, the center point is the center of the shape.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-func">circle</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">conic</span><span class="typ-punct">(</span>
    <span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>viridis<span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">circle</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> gradient<span class="typ-punct">.</span><span class="typ-func">conic</span><span class="typ-punct">(</span>
    <span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>viridis<span class="typ-punct">,</span>
    center<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">20%</span><span class="typ-punct">,</span> <span class="typ-num">30%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3c68acc961fd761eda55534aee027484.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"stops",details:'<p>The color <a href="#stops">stops</a> of the gradient.</p>',example:null,types:["color","array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1},{name:"angle",details:"<p>The angle of the gradient.</p>",example:null,types:["angle"],strings:[],default:'<code><span class="typ-num">0deg</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"space",details:`<p>The color space in which to interpolate the gradient.</p>
<p>Defaults to a perceptually uniform color space called
<a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a>.</p>`,example:null,types:["any"],strings:[],default:"<code>oklab</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"relative",details:`<p>The <a href="#relativeness">relative placement</a> of the gradient.</p>
<p>For an element placed at the root/top level of the document, the parent
is the page itself. For other elements, the parent is the innermost block,
box, column, grid, or stack that contains the element.</p>`,example:null,types:["auto","str"],strings:[{string:"self",details:"<p>The gradient is relative to itself (its own bounding box).</p>"},{string:"parent",details:"<p>The gradient is relative to its parent (the parent's bounding box).</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"center",details:`<p>The center of the last circle of the gradient.</p>
<p>A value of <code><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span></code> means that the end circle is
centered inside of its container.</p>`,example:null,types:["array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["gradient"],scope:[]},{path:["gradient"],name:"sharp",title:"Sharp",keywords:[],oneliner:"Creates a sharp version of this gradient.",element:!1,contextual:!1,details:`<p>Creates a sharp version of this gradient.</p>
<p>Sharp gradients have discrete jumps between colors, instead of a
smooth transition. They are particularly useful for creating color
lists for a preset gradient.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> grad <span class="typ-op">=</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> grad<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> grad<span class="typ-punct">.</span><span class="typ-func">sharp</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> grad<span class="typ-punct">.</span><span class="typ-func">sharp</span><span class="typ-punct">(</span><span class="typ-num">5</span><span class="typ-punct">,</span> smoothness<span class="typ-punct">:</span> <span class="typ-num">20%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/5478437aa4191f8af6895e30e3c9edbd.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"steps",details:"<p>The number of stops in the gradient.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"smoothness",details:"<p>How much to smooth the gradient.</p>",example:null,types:["ratio"],strings:[],default:'<code><span class="typ-num">0%</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["gradient"],scope:[]},{path:["gradient"],name:"repeat",title:"Repeat",keywords:[],oneliner:"Repeats this gradient a given number of times, optionally mirroring it",element:!1,contextual:!1,details:`<p>Repeats this gradient a given number of times, optionally mirroring it
at each repetition.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">circle</span><span class="typ-punct">(</span>
  radius<span class="typ-punct">:</span> <span class="typ-num">40pt</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> gradient
    <span class="typ-punct">.</span><span class="typ-func">radial</span><span class="typ-punct">(</span>aqua<span class="typ-punct">,</span> white<span class="typ-punct">)</span>
    <span class="typ-punct">.</span><span class="typ-func">repeat</span><span class="typ-punct">(</span><span class="typ-num">4</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/3ae1fbfdf455ec0105575ef03ded3910.png" alt="Preview" /></div></div>`,self:!0,params:[{name:"repetitions",details:"<p>The number of times to repeat the gradient.</p>",example:null,types:["int"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"mirror",details:"<p>Whether to mirror the gradient at each repetition.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["gradient"],scope:[]},{path:["gradient"],name:"kind",title:"Kind",keywords:[],oneliner:"Returns the kind of this gradient.",element:!1,contextual:!1,details:"<p>Returns the kind of this gradient.</p>",example:null,self:!0,params:[],returns:["function"],scope:[]},{path:["gradient"],name:"stops",title:"Stops",keywords:[],oneliner:"Returns the stops of this gradient.",element:!1,contextual:!1,details:"<p>Returns the stops of this gradient.</p>",example:null,self:!0,params:[],returns:["array"],scope:[]},{path:["gradient"],name:"space",title:"Space",keywords:[],oneliner:"Returns the mixing space of this gradient.",element:!1,contextual:!1,details:"<p>Returns the mixing space of this gradient.</p>",example:null,self:!0,params:[],returns:["any"],scope:[]},{path:["gradient"],name:"relative",title:"Relative",keywords:[],oneliner:"Returns the relative placement of this gradient.",element:!1,contextual:!1,details:"<p>Returns the relative placement of this gradient.</p>",example:null,self:!0,params:[],returns:["auto"],scope:[]},{path:["gradient"],name:"angle",title:"Angle",keywords:[],oneliner:"Returns the angle of this gradient.",element:!1,contextual:!1,details:"<p>Returns the angle of this gradient.</p>",example:null,self:!0,params:[],returns:["none","angle"],scope:[]},{path:["gradient"],name:"sample",title:"Sample",keywords:[],oneliner:"Sample the gradient at a given position.",element:!1,contextual:!1,details:`<p>Sample the gradient at a given position.</p>
<p>The position is either a position along the gradient (a <a href="/docs/reference/layout/ratio/" title="ratio">ratio</a> between
<code><span class="typ-num">0%</span></code> and <code><span class="typ-num">100%</span></code>) or an <a href="/docs/reference/layout/angle/" title="angle">angle</a>. Any value outside of this range will
be clamped.</p>`,example:null,self:!0,params:[{name:"t",details:"<p>The position at which to sample the gradient.</p>",example:null,types:["angle","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["color"],scope:[]},{path:["gradient"],name:"samples",title:"Samples",keywords:[],oneliner:"Samples the gradient at multiple positions at once and returns the",element:!1,contextual:!1,details:`<p>Samples the gradient at multiple positions at once and returns the
results as an array.</p>`,example:null,self:!0,params:[{name:"ts",details:"<p>The positions at which to sample the gradient.</p>",example:null,types:["angle","ratio"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["array"],scope:[]}]}},children:[]},{route:"/docs/reference/visualize/image/",title:"Image",description:"Documentation for the `image` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]},{id:"parameters-format",name:"format",children:[]},{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-alt",name:"alt",children:[]},{id:"parameters-fit",name:"fit",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode Image",children:[{id:"definitions-decode-data",name:"data",children:[]},{id:"definitions-decode-format",name:"format",children:[]},{id:"definitions-decode-width",name:"width",children:[]},{id:"definitions-decode-height",name:"height",children:[]},{id:"definitions-decode-alt",name:"alt",children:[]},{id:"definitions-decode-fit",name:"fit",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"image",title:"Image",keywords:[],oneliner:"A raster or vector graphic.",element:!0,contextual:!1,details:`<p>A raster or vector graphic.</p>
<p>You can wrap the image in a <a href="/docs/reference/model/figure/" title="\`figure\`"><code>figure</code></a> to give it a number and caption.</p>
<p>Like most elements, images are <em>block-level</em> by default and thus do not
integrate themselves into adjacent paragraphs. To force an image to become
inline, put it into a <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;molecular.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>
    A step in the molecular testing
    pipeline of our lab.
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/64543b9e6e0a12f3b22fe24a6552ba2.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to an image file</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"format",details:`<p>The image's format. Detected automatically by default.</p>
<p>Supported formats are PNG, JPEG, GIF, and SVG. Using a PDF as an image
is <a href="https://github.com/typst/typst/issues/145">not currently supported</a>.</p>`,example:null,types:["auto","str"],strings:[{string:"png",details:"<p>Raster format for illustrations and transparent graphics.</p>"},{string:"jpg",details:"<p>Lossy raster format suitable for photos.</p>"},{string:"gif",details:"<p>Raster format that is typically used for short animated clips.</p>"},{string:"svg",details:"<p>The vector graphics format of the web.</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"width",details:"<p>The width of the image.</p>",example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:"<p>The height of the image.</p>",example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"alt",details:"<p>A text describing the image.</p>",example:null,types:["none","str"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fit",details:`<p>How the image should adjust itself to a given area (the area is defined
by the <code>width</code> and <code>height</code> fields). Note that <code>fit</code> doesn't visually
change anything if the area's aspect ratio is the same as the image's
one.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">300pt</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">50pt</span><span class="typ-punct">,</span> margin<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> fit<span class="typ-punct">:</span> <span class="typ-str">&quot;cover&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> fit<span class="typ-punct">:</span> <span class="typ-str">&quot;contain&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">image</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> fit<span class="typ-punct">:</span> <span class="typ-str">&quot;stretch&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/418920f080c4932a2ded6b3ae00c1b9d.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"cover",details:`<p>The image should completely cover the area (preserves aspect ratio by
cropping the image only horizontally or vertically). This is the
default.</p>`},{string:"contain",details:`<p>The image should be fully contained in the area (preserves aspect
ratio; doesn't crop the image; one dimension can be narrower than
specified).</p>`},{string:"stretch",details:`<p>The image should be stretched so that it exactly fills the area, even if
this means that the image will be distorted (doesn't preserve aspect
ratio and doesn't crop the image).</p>`}],default:'<code><span class="typ-str">&quot;cover&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[{path:["image"],name:"decode",title:"Decode Image",keywords:[],oneliner:"Decode a raster or vector graphic from bytes or a string.",element:!1,contextual:!1,details:"<p>Decode a raster or vector graphic from bytes or a string.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> original <span class="typ-op">=</span> <span class="typ-func">read</span><span class="typ-punct">(</span><span class="typ-str">&quot;diagram.svg&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> changed <span class="typ-op">=</span> original<span class="typ-punct">.</span><span class="typ-func">replace</span><span class="typ-punct">(</span>
  <span class="typ-str">&quot;#2B80FF&quot;</span><span class="typ-punct">,</span> <span class="typ-comment">// blue</span>
  green<span class="typ-punct">.</span><span class="typ-func">to-hex</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">image</span><span class="typ-punct">.</span><span class="typ-func">decode</span><span class="typ-punct">(</span>original<span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">image</span><span class="typ-punct">.</span><span class="typ-func">decode</span><span class="typ-punct">(</span>changed<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e4f2a9a9d16d3935eb72278ae49370e5.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"data",details:"<p>The data to decode as an image. Can be a string for SVGs.</p>",example:null,types:["str","bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"format",details:"<p>The image's format. Detected automatically by default.</p>",example:null,types:["auto","str"],strings:[{string:"png",details:"<p>Raster format for illustrations and transparent graphics.</p>"},{string:"jpg",details:"<p>Lossy raster format suitable for photos.</p>"},{string:"gif",details:"<p>Raster format that is typically used for short animated clips.</p>"},{string:"svg",details:"<p>The vector graphics format of the web.</p>"}],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"width",details:"<p>The width of the image.</p>",example:null,types:["auto","relative"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"height",details:"<p>The height of the image.</p>",example:null,types:["auto","relative","fraction"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"alt",details:"<p>A text describing the image.</p>",example:null,types:["none","str"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"fit",details:"<p>How the image should adjust itself to a given area.</p>",example:null,types:["str"],strings:[{string:"cover",details:`<p>The image should completely cover the area (preserves aspect ratio by
cropping the image only horizontally or vertically). This is the
default.</p>`},{string:"contain",details:`<p>The image should be fully contained in the area (preserves aspect
ratio; doesn't crop the image; one dimension can be narrower than
specified).</p>`},{string:"stretch",details:`<p>The image should be stretched so that it exactly fills the area, even if
this means that the image will be distorted (doesn't preserve aspect
ratio and doesn't crop the image).</p>`}],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/visualize/line/",title:"Line",description:"Documentation for the `line` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-start",name:"start",children:[]},{id:"parameters-end",name:"end",children:[]},{id:"parameters-length",name:"length",children:[]},{id:"parameters-angle",name:"angle",children:[]},{id:"parameters-stroke",name:"stroke",children:[]}]}],body:{kind:"func",content:{path:[],name:"line",title:"Line",keywords:[],oneliner:"A line from one point to another.",element:!0,contextual:!1,details:`<p>A line from one point to another.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>height<span class="typ-punct">:</span> <span class="typ-num">100pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">line</span><span class="typ-punct">(</span>end<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">50%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">line</span><span class="typ-punct">(</span>
  length<span class="typ-punct">:</span> <span class="typ-num">4cm</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> maroon<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b3a09b74147d2e64f13968d4fb4f604f.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"start",details:`<p>The start point of the line.</p>
<p>Must be an array of exactly two relative lengths.</p>`,example:null,types:["array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"end",details:"<p>The offset from <code>start</code> where the line ends.</p>",example:null,types:["none","array"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"length",details:`<p>The line's length. This is only respected if <code>end</code> is <code><span class="typ-key">none</span></code>.</p>`,example:null,types:["relative"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">30pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"angle",details:`<p>The angle at which the line points away from the origin. This is only
respected if <code>end</code> is <code><span class="typ-key">none</span></code>.</p>`,example:null,types:["angle"],strings:[],default:'<code><span class="typ-num">0deg</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:'<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the line.</p>',example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> red<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span> cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span> dash<span class="typ-punct">:</span> <span class="typ-str">&quot;dashed&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span> dash<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-str">&quot;dot&quot;</span><span class="typ-punct">,</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/55802bd98f96268392e5433cc7e5ee75.png" alt="Preview" /></div></div>`,types:["length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/visualize/path/",title:"Path",description:"Documentation for the `path` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-fill-rule",name:"fill-rule",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-closed",name:"closed",children:[]},{id:"parameters-vertices",name:"vertices",children:[]}]}],body:{kind:"func",content:{path:[],name:"path",title:"Path",keywords:[],oneliner:"A path through a list of points, connected by Bezier curves.",element:!0,contextual:!1,details:`<p>A path through a list of points, connected by Bezier curves.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">path</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> blue<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> blue<span class="typ-punct">,</span>
  closed<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">100%</span><span class="typ-punct">,</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">50%</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">40pt</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2c5e208acdd71265e0c7d933abc0cfce.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"fill",details:`<p>How to fill the path.</p>
<p>When setting a fill, the default stroke disappears. To create a
rectangle with both fill and stroke, you have to configure both.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill-rule",details:"<p>The drawing rule used to fill the path.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-comment">// We use \`.with\` to get a new</span>
<span class="typ-comment">// function that has the common</span>
<span class="typ-comment">// arguments pre-applied.</span>
<span class="typ-key">#</span><span class="typ-key">let</span> star <span class="typ-op">=</span> path<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> red<span class="typ-punct">,</span>
  closed<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">25pt</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">,</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">50pt</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">40pt</span><span class="typ-punct">,</span> <span class="typ-num">50pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">star</span><span class="typ-punct">(</span>fill-rule<span class="typ-punct">:</span> <span class="typ-str">&quot;non-zero&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">star</span><span class="typ-punct">(</span>fill-rule<span class="typ-punct">:</span> <span class="typ-str">&quot;even-odd&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/47c94a090ca740a2809ffce2ad4f2596.png" alt="Preview" /></div></div>`,types:["str"],strings:[{string:"non-zero",details:"<p>Specifies that &quot;inside&quot; is computed by a non-zero sum of signed edge crossings.</p>"},{string:"even-odd",details:"<p>Specifies that &quot;inside&quot; is computed by an odd number of edge crossings.</p>"}],default:'<code><span class="typ-str">&quot;non-zero&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the path. This can be:</p>
<p>Can be set to  <code><span class="typ-key">none</span></code> to disable the stroke or to <code><span class="typ-key">auto</span></code> for a
stroke of <code><span class="typ-num">1pt</span></code> black if and if only if no fill is given.</p>`,example:null,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"closed",details:`<p>Whether to close this path with one last bezier curve. This curve will
takes into account the adjacent control points. If you want to close
with a straight line, simply add one last point that's the same as the
start point.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"vertices",details:`<p>The vertices of the path.</p>
<p>Each vertex can be defined in 3 ways:</p>
<ul>
<li>A regular point, as given to the <a href="/docs/reference/visualize/line/" title="\`line\`"><code>line</code></a> or <a href="/docs/reference/visualize/polygon/" title="\`polygon\`"><code>polygon</code></a> function.</li>
<li>An array of two points, the first being the vertex and the second
being the control point. The control point is expressed relative to
the vertex and is mirrored to get the second control point. The given
control point is the one that affects the curve coming <em>into</em> this
vertex (even for the first point). The mirrored control point affects
the curve going out of this vertex.</li>
<li>An array of three points, the first being the vertex and the next
being the control points (control point for curves coming in and out,
respectively).</li>
</ul>`,example:null,types:["array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/visualize/pattern/",title:"Pattern",description:"Documentation for the Pattern type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"relativeness",name:"Relativeness",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-size",name:"size",children:[]},{id:"constructor-spacing",name:"spacing",children:[]},{id:"constructor-relative",name:"relative",children:[]},{id:"constructor-body",name:"body",children:[]}]}],body:{kind:"type",content:{name:"pattern",title:"Pattern",keywords:[],oneliner:"A repeating pattern fill.",details:`<p>A repeating pattern fill.</p>
<p>Typst supports the most common pattern type of tiled patterns, where a
pattern is repeated in a grid-like fashion, covering the entire area of an
element that is filled or stroked. The pattern is defined by a tile size and
a body defining the content of each cell. You can also add horizontal or
vertical spacing between the cells of the pattern.</p>
<h2 id="examples">Examples</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> pat <span class="typ-op">=</span> <span class="typ-func">pattern</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">30pt</span><span class="typ-punct">,</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span><span class="typ-func">line</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">0%</span><span class="typ-punct">,</span> <span class="typ-num">0%</span><span class="typ-punct">)</span><span class="typ-punct">,</span> end<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">100%</span><span class="typ-punct">,</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span><span class="typ-func">line</span><span class="typ-punct">(</span>start<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">0%</span><span class="typ-punct">,</span> <span class="typ-num">100%</span><span class="typ-punct">)</span><span class="typ-punct">,</span> end<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">100%</span><span class="typ-punct">,</span> <span class="typ-num">0%</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> pat<span class="typ-punct">,</span> width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">60pt</span><span class="typ-punct">,</span> stroke<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c8cde2b18c706ad46f095ee70fe1c858.png" alt="Preview" /></div></div>
<p>Patterns are also supported on text, but only when setting the
<a href="/docs/reference/visualize/pattern/#parameters-relative">relativeness</a> to either <code><span class="typ-key">auto</span></code> (the default value) or
<code><span class="typ-str">&quot;parent&quot;</span></code>. To create word-by-word or glyph-by-glyph patterns, you can
wrap the words or characters of your text in <a href="/docs/reference/layout/box/">boxes</a> manually or
through a <a href="/docs/reference/styling/#show-rules">show rule</a>.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> pat <span class="typ-op">=</span> <span class="typ-func">pattern</span><span class="typ-punct">(</span>
  size<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">30pt</span><span class="typ-punct">,</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  relative<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>
    size<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">,</span>
    fill<span class="typ-punct">:</span> gradient
      <span class="typ-punct">.</span><span class="typ-func">conic</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> pat<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9acfc3c746e5c71e357889be71bda18e.png" alt="Preview" /></div></div>
<p>You can also space the elements further or closer apart using the
<a href="/docs/reference/visualize/pattern/#parameters-spacing"><code>spacing</code></a> feature of the pattern. If the spacing
is lower than the size of the pattern, the pattern will overlap.
If it is higher, the pattern will have gaps of the same color as the
background of the pattern.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> pat <span class="typ-op">=</span> <span class="typ-func">pattern</span><span class="typ-punct">(</span>
  size<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">30pt</span><span class="typ-punct">,</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">,</span> <span class="typ-num">10pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  relative<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  <span class="typ-func">square</span><span class="typ-punct">(</span>
    size<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">,</span>
    fill<span class="typ-punct">:</span> gradient
     <span class="typ-punct">.</span><span class="typ-func">conic</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">60pt</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> pat<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/da58ea6187b6afb2e89bd1a28102c55.png" alt="Preview" /></div></div>
<h2 id="relativeness">Relativeness</h2>
<p>The location of the starting point of the pattern is dependent on the
dimensions of a container. This container can either be the shape that it is
being painted on, or the closest surrounding container. This is controlled
by the <code>relative</code> argument of a pattern constructor. By default, patterns
are relative to the shape they are being painted on, unless the pattern is
applied on text, in which case they are relative to the closest ancestor
container.</p>
<p>Typst determines the ancestor container as follows:</p>
<ul>
<li>For shapes that are placed at the root/top level of the document, the
closest ancestor is the page itself.</li>
<li>For other shapes, the ancestor is the innermost <a href="/docs/reference/layout/block/" title="\`block\`"><code>block</code></a> or <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a> that
contains the shape. This includes the boxes and blocks that are implicitly
created by show rules and elements. For example, a <a href="/docs/reference/layout/rotate/" title="\`rotate\`"><code>rotate</code></a> will not
affect the parent of a gradient, but a <a href="/docs/reference/layout/grid/" title="\`grid\`"><code>grid</code></a> will.</li>
</ul>`,constructor:{path:[],name:"pattern",title:"Construct",keywords:[],oneliner:"Construct a new pattern.",element:!1,contextual:!1,details:"<p>Construct a new pattern.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> pat <span class="typ-op">=</span> <span class="typ-func">pattern</span><span class="typ-punct">(</span>
  size<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">20pt</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  relative<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  <span class="typ-func">place</span><span class="typ-punct">(</span>
    dx<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
    dy<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
    <span class="typ-func">rotate</span><span class="typ-punct">(</span><span class="typ-num">45deg</span><span class="typ-punct">,</span> <span class="typ-func">square</span><span class="typ-punct">(</span>
      size<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
      fill<span class="typ-punct">:</span> black<span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">60pt</span><span class="typ-punct">,</span> fill<span class="typ-punct">:</span> pat<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9173d34768af9d55d4ae262d3da22540.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"size",details:"<p>The bounding box of each cell of the pattern.</p>",example:null,types:["auto","array"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"spacing",details:"<p>The spacing between cells of the pattern.</p>",example:null,types:["array"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"relative",details:`<p>The <a href="#relativeness">relative placement</a> of the pattern.</p>
<p>For an element placed at the root/top level of the document, the
parent is the page itself. For other elements, the parent is the
innermost block, box, column, grid, or stack that contains the
element.</p>`,example:null,types:["auto","str"],strings:[{string:"self",details:"<p>The gradient is relative to itself (its own bounding box).</p>"},{string:"parent",details:"<p>The gradient is relative to its parent (the parent's bounding box).</p>"}],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"body",details:"<p>The content of each cell of the pattern.</p>",example:null,types:["content"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["pattern"],scope:[]},scope:[]}},children:[]},{route:"/docs/reference/visualize/polygon/",title:"Polygon",description:"Documentation for the `polygon` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-fill-rule",name:"fill-rule",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-vertices",name:"vertices",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-regular",name:"Regular Polygon",children:[{id:"definitions-regular-fill",name:"fill",children:[]},{id:"definitions-regular-stroke",name:"stroke",children:[]},{id:"definitions-regular-size",name:"size",children:[]},{id:"definitions-regular-vertices",name:"vertices",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"polygon",title:"Polygon",keywords:[],oneliner:"A closed polygon.",element:!0,contextual:!1,details:`<p>A closed polygon.</p>
<p>The polygon is defined by its corner points and is closed automatically.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">polygon</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> blue<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> blue<span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">20%</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">60%</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">80%</span><span class="typ-punct">,</span> <span class="typ-num">2cm</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">(</span><span class="typ-num">0%</span><span class="typ-punct">,</span>  <span class="typ-num">2cm</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/508cf47b908a5dff14f71d38f85129dc.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"fill",details:`<p>How to fill the polygon.</p>
<p>When setting a fill, the default stroke disappears. To create a
rectangle with both fill and stroke, you have to configure both.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill-rule",details:`<p>The drawing rule used to fill the polygon.</p>
<p>See the <a href="/docs/reference/visualize/path/#parameters-fill-rule">path documentation</a> for an example.</p>`,example:null,types:["str"],strings:[{string:"non-zero",details:"<p>Specifies that &quot;inside&quot; is computed by a non-zero sum of signed edge crossings.</p>"},{string:"even-odd",details:"<p>Specifies that &quot;inside&quot; is computed by an odd number of edge crossings.</p>"}],default:'<code><span class="typ-str">&quot;non-zero&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a> the polygon. This can be:</p>
<p>Can be set to  <code><span class="typ-key">none</span></code> to disable the stroke or to <code><span class="typ-key">auto</span></code> for a
stroke of <code><span class="typ-num">1pt</span></code> black if and if only if no fill is given.</p>`,example:null,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"vertices",details:`<p>The vertices of the polygon. Each point is specified as an array of two
<a href="/docs/reference/layout/relative/">relative lengths</a>.</p>`,example:null,types:["array"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!0,settable:!1}],returns:["content"],scope:[{path:["polygon"],name:"regular",title:"Regular Polygon",keywords:[],oneliner:"A regular polygon, defined by its size and number of vertices.",element:!1,contextual:!1,details:"<p>A regular polygon, defined by its size and number of vertices.</p>",example:`<div class="previewed-code"><pre><code><span class="typ-pol">#</span><span class="typ-pol">polygon</span><span class="typ-punct">.</span><span class="typ-func">regular</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> blue<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">80%</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> blue<span class="typ-punct">,</span>
  size<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">,</span>
  vertices<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/1f48a017b711f55dbe857abc198b9c3f.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"fill",details:`<p>How to fill the polygon. See the general
<a href="/docs/reference/visualize/polygon/#parameters-fill">polygon's documentation</a> for more details.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"stroke",details:`<p>How to stroke the polygon. See the general
<a href="/docs/reference/visualize/polygon/#parameters-stroke">polygon's documentation</a> for more details.</p>`,example:null,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:null,positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"size",details:`<p>The diameter of the <a href="https://en.wikipedia.org/wiki/Circumcircle">circumcircle</a>
of the regular polygon.</p>`,example:null,types:["length"],strings:[],default:'<code><span class="typ-num">1em</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"vertices",details:"<p>The number of vertices in the polygon.</p>",example:null,types:["int"],strings:[],default:'<code><span class="typ-num">3</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/visualize/rect/",title:"Rectangle",description:"Documentation for the `rect` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-radius",name:"radius",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-outset",name:"outset",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"rect",title:"Rectangle",keywords:[],oneliner:"A rectangle with optional content.",element:!0,contextual:!1,details:`<p>A rectangle with optional content.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-comment">// Without content.</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">35%</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span>

<span class="typ-comment">// With content.</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">[</span>
  Automatically sized <span class="typ-escape">\\</span>
  to fit the content.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/80c1452b5f70e7f6da81d514cb60d4ed.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"width",details:"<p>The rectangle's width, relative to its parent container.</p>",example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:"<p>The rectangle's height, relative to its parent container.</p>",example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>How to fill the rectangle.</p>
<p>When setting a fill, the default stroke disappears. To create a
rectangle with both fill and stroke, you have to configure both.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> blue<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d43bedc531862888e36edb1395c92ecf.png" alt="Preview" /></div></div>`,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to stroke the rectangle. This can be:</p>
<ul>
<li><code><span class="typ-key">none</span></code> to disable stroking</li>
<li><code><span class="typ-key">auto</span></code> for a stroke of <code><span class="typ-num">1pt</span> <span class="typ-op">+</span> black</code> if and if only if no fill is
given.</li>
<li>Any kind of <a href="/docs/reference/visualize/stroke/" title="stroke">stroke</a></li>
<li>A dictionary describing the stroke for each side individually. The
dictionary can contain the following keys in order of precedence:
<ul>
<li><code>top</code>: The top stroke.</li>
<li><code>right</code>: The right stroke.</li>
<li><code>bottom</code>: The bottom stroke.</li>
<li><code>left</code>: The left stroke.</li>
<li><code>x</code>: The horizontal stroke.</li>
<li><code>y</code>: The vertical stroke.</li>
<li><code>rest</code>: The stroke on all sides except those for which the
dictionary explicitly sets a size.</li>
</ul>
</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> red<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">rect</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> red<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/123b17a22acb03508ae4ac4cd3c4df8c.png" alt="Preview" /></div></div>`,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"radius",details:`<p>How much to round the rectangle's corners, relative to the minimum of
the width and height divided by two. This can be:</p>
<ul>
<li>A relative length for a uniform corner radius.</li>
<li>A dictionary: With a dictionary, the stroke for each side can be set
individually. The dictionary can contain the following keys in order
of precedence:
<ul>
<li><code>top-left</code>: The top-left corner radius.</li>
<li><code>top-right</code>: The top-right corner radius.</li>
<li><code>bottom-right</code>: The bottom-right corner radius.</li>
<li><code>bottom-left</code>: The bottom-left corner radius.</li>
<li><code>left</code>: The top-left and bottom-left corner radii.</li>
<li><code>top</code>: The top-left and top-right corner radii.</li>
<li><code>right</code>: The top-right and bottom-right corner radii.</li>
<li><code>bottom</code>: The bottom-left and bottom-right corner radii.</li>
<li><code>rest</code>: The radii for all corners except those for which the
dictionary explicitly sets a size.</li>
</ul>
</li>
</ul>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  radius<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    left<span class="typ-punct">:</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span>
    top-right<span class="typ-punct">:</span> <span class="typ-num">20pt</span><span class="typ-punct">,</span>
    bottom-right<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    left<span class="typ-punct">:</span> red<span class="typ-punct">,</span>
    top<span class="typ-punct">:</span> yellow<span class="typ-punct">,</span>
    right<span class="typ-punct">:</span> green<span class="typ-punct">,</span>
    bottom<span class="typ-punct">:</span> blue<span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/9b44b07f99fb17ba26a9c8c2f830c69a.png" alt="Preview" /></div></div>`,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the rectangle's content.
See the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outset",details:`<p>How much to expand the rectangle's size without affecting the layout.
See the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The content to place into the rectangle.</p>
<p>When this is omitted, the rectangle takes on a default size of at most
<code><span class="typ-num">45pt</span></code> by <code><span class="typ-num">30pt</span></code>.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/visualize/square/",title:"Square",description:"Documentation for the `square` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-size",name:"size",children:[]},{id:"parameters-width",name:"width",children:[]},{id:"parameters-height",name:"height",children:[]},{id:"parameters-fill",name:"fill",children:[]},{id:"parameters-stroke",name:"stroke",children:[]},{id:"parameters-radius",name:"radius",children:[]},{id:"parameters-inset",name:"inset",children:[]},{id:"parameters-outset",name:"outset",children:[]},{id:"parameters-body",name:"body",children:[]}]}],body:{kind:"func",content:{path:[],name:"square",title:"Square",keywords:[],oneliner:"A square with optional content.",element:!0,contextual:!1,details:`<p>A square with optional content.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-comment">// Without content.</span>
<span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">(</span>size<span class="typ-punct">:</span> <span class="typ-num">40pt</span><span class="typ-punct">)</span>

<span class="typ-comment">// With content.</span>
<span class="typ-func">#</span><span class="typ-func">square</span><span class="typ-punct">[</span>
  Automatically <span class="typ-escape">\\</span>
  sized to fit.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/c755c6ba8debf8020e92a1cab52ae34d.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"size",details:`<p>The square's side length. This is mutually exclusive with <code>width</code> and
<code>height</code>.</p>`,example:null,types:["auto","length"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"width",details:`<p>The square's width. This is mutually exclusive with <code>size</code> and <code>height</code>.</p>
<p>In contrast to <code>size</code>, this can be relative to the parent container's
width.</p>`,example:null,types:["auto","relative"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"height",details:`<p>The square's height. This is mutually exclusive with <code>size</code> and <code>width</code>.</p>
<p>In contrast to <code>size</code>, this can be relative to the parent container's
height.</p>`,example:null,types:["auto","relative","fraction"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"fill",details:`<p>How to fill the square. See the <a href="/docs/reference/visualize/rect/#parameters-fill">rectangle's documentation</a>
for more details.</p>`,example:null,types:["none","color","gradient","pattern"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"stroke",details:`<p>How to stroke the square. See the
<a href="/docs/reference/visualize/rect/#parameters-stroke">rectangle's documentation</a> for more details.</p>`,example:null,types:["none","auto","length","color","gradient","stroke","pattern","dictionary"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"radius",details:`<p>How much to round the square's corners. See the
<a href="/docs/reference/visualize/rect/#parameters-radius">rectangle's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"inset",details:`<p>How much to pad the square's content. See the
<a href="/docs/reference/layout/box/#parameters-inset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-num">0%</span> <span class="typ-op">+</span> <span class="typ-num">5pt</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"outset",details:`<p>How much to expand the square's size without affecting the layout. See
the <a href="/docs/reference/layout/box/#parameters-outset">box's documentation</a> for more details.</p>`,example:null,types:["relative","dictionary"],strings:[],default:'<code><span class="typ-punct">(</span><span class="typ-punct">:</span><span class="typ-punct">)</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!0},{name:"body",details:`<p>The content to place into the square. The square expands to fit this
content, keeping the 1-1 aspect ratio.</p>
<p>When this is omitted, the square takes on a default size of at most
<code><span class="typ-num">30pt</span></code>.</p>`,example:null,types:["none","content"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!0}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/visualize/stroke/",title:"Stroke",description:"Documentation for the Stroke type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"simple-strokes",name:"Simple Strokes",children:[]},{id:"fields",name:"Fields",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-paint",name:"paint",children:[]},{id:"constructor-thickness",name:"thickness",children:[]},{id:"constructor-cap",name:"cap",children:[]},{id:"constructor-join",name:"join",children:[]},{id:"constructor-dash",name:"dash",children:[]},{id:"constructor-miter-limit",name:"miter-limit",children:[]}]}],body:{kind:"type",content:{name:"stroke",title:"Stroke",keywords:[],oneliner:"Defines how to draw a line.",details:`<p>Defines how to draw a line.</p>
<p>A stroke has a <em>paint</em> (a solid color or gradient), a <em>thickness,</em> a line
<em>cap,</em> a line <em>join,</em> a <em>miter limit,</em> and a <em>dash</em> pattern. All of these
values are optional and have sensible defaults.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> red<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span> cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>paint<span class="typ-punct">:</span> blue<span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span> dash<span class="typ-punct">:</span> <span class="typ-str">&quot;dashed&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span> <span class="typ-op">+</span> gradient<span class="typ-punct">.</span><span class="typ-func">linear</span><span class="typ-punct">(</span><span class="typ-op">..</span>color<span class="typ-punct">.</span>map<span class="typ-punct">.</span>rainbow<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/95959bcdb69b57bfe6ee1c82d368fa72.png" alt="Preview" /></div></div>
<h2 id="simple-strokes">Simple strokes</h2>
<p>You can create a simple solid stroke from a color, a thickness, or a
combination of the two. Specifically, wherever a stroke is expected you can
pass any of the following values:</p>
<ul>
<li>A length specifying the stroke's thickness. The color is inherited,
defaulting to black.</li>
<li>A color to use for the stroke. The thickness is inherited, defaulting to
<code><span class="typ-num">1pt</span></code>.</li>
<li>A stroke combined from color and thickness using the <code>+</code> operator as in
<code><span class="typ-num">2pt</span> <span class="typ-op">+</span> red</code>.</li>
</ul>
<p>For full control, you can also provide a <a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a> or a <code>stroke</code> object
to any function that expects a stroke. The dictionary's keys may include any
of the parameters for the constructor function, shown below.</p>
<h2 id="fields">Fields</h2>
<p>On a stroke object, you can access any of the fields listed in the
constructor function. For example, <code><span class="typ-punct">(</span><span class="typ-num">2pt</span> <span class="typ-op">+</span> blue<span class="typ-punct">)</span><span class="typ-punct">.</span>thickness</code> is <code><span class="typ-num">2pt</span></code>.
Meanwhile, <code><span class="typ-func">stroke</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span><span class="typ-punct">.</span>cap</code> is <code><span class="typ-key">auto</span></code> because it's unspecified. Fields
set to <code><span class="typ-key">auto</span></code> are inherited.</p>`,constructor:{path:[],name:"stroke",title:"Construct",keywords:[],oneliner:"Converts a value to a stroke or constructs a stroke with the given",element:!1,contextual:!1,details:`<p>Converts a value to a stroke or constructs a stroke with the given
parameters.</p>
<p>Note that in most cases you do not need to convert values to strokes in
order to use them, as they will be converted automatically. However,
this constructor can be useful to ensure a value has all the fields of a
stroke.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">my-func</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
    x <span class="typ-op">=</span> <span class="typ-func">stroke</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> <span class="typ-comment">// Convert to a stroke</span>
    <span class="typ-punct">[</span>Stroke has thickness <span class="typ-pol">#</span><span class="typ-pol">x</span><span class="typ-punct">.</span><span class="typ-pol">thickness</span>.<span class="typ-punct">]</span>
<span class="typ-punct">}</span>
<span class="typ-func">#</span><span class="typ-func">my-func</span><span class="typ-punct">(</span><span class="typ-num">3pt</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">my-func</span><span class="typ-punct">(</span>red<span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">my-func</span><span class="typ-punct">(</span><span class="typ-func">stroke</span><span class="typ-punct">(</span>cap<span class="typ-punct">:</span> <span class="typ-str">&quot;round&quot;</span><span class="typ-punct">,</span> thickness<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/837afaec183e74812a8fd63a693980c.png" alt="Preview" /></div></div>`,self:!1,params:[{name:"paint",details:`<p>The color or gradient to use for the stroke.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the value is inherited, defaulting to <code>black</code>.</p>`,example:null,types:["auto","color","gradient","pattern"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"thickness",details:`<p>The stroke's thickness.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the value is inherited, defaulting to <code><span class="typ-num">1pt</span></code>.</p>`,example:null,types:["auto","length"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"cap",details:`<p>How the ends of the stroke are rendered.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the value is inherited, defaulting to <code><span class="typ-str">&quot;butt&quot;</span></code>.</p>`,example:null,types:["auto","str"],strings:[{string:"butt",details:"<p>Square stroke cap with the edge at the stroke's end point.</p>"},{string:"round",details:"<p>Circular stroke cap centered at the stroke's end point.</p>"},{string:"square",details:"<p>Square stroke cap centered at the stroke's end point.</p>"}],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"join",details:`<p>How sharp turns are rendered.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the value is inherited, defaulting to <code><span class="typ-str">&quot;miter&quot;</span></code>.</p>`,example:null,types:["auto","str"],strings:[{string:"miter",details:`<p>Segments are joined with sharp edges. Sharp bends exceeding the miter
limit are bevelled instead.</p>`},{string:"round",details:"<p>Segments are joined with circular corners.</p>"},{string:"bevel",details:`<p>Segments are joined with a bevel (a straight edge connecting the butts
of the joined segments).</p>`}],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"dash",details:`<p>The dash pattern to use. This can be:</p>
<ul>
<li>One of the predefined patterns:
<ul>
<li><code><span class="typ-str">&quot;solid&quot;</span></code> or <code><span class="typ-key">none</span></code></li>
<li><code><span class="typ-str">&quot;dotted&quot;</span></code></li>
<li><code><span class="typ-str">&quot;densely-dotted&quot;</span></code></li>
<li><code><span class="typ-str">&quot;loosely-dotted&quot;</span></code></li>
<li><code><span class="typ-str">&quot;dashed&quot;</span></code></li>
<li><code><span class="typ-str">&quot;densely-dashed&quot;</span></code></li>
<li><code><span class="typ-str">&quot;loosely-dashed&quot;</span></code></li>
<li><code><span class="typ-str">&quot;dash-dotted&quot;</span></code></li>
<li><code><span class="typ-str">&quot;densely-dash-dotted&quot;</span></code></li>
<li><code><span class="typ-str">&quot;loosely-dash-dotted&quot;</span></code></li>
</ul>
</li>
<li>An <a href="/docs/reference/foundations/array/" title="array">array</a> with alternating lengths for dashes and gaps. You can
also use the string <code><span class="typ-str">&quot;dot&quot;</span></code> for a length equal to the line
thickness.</li>
<li>A <a href="/docs/reference/foundations/dictionary/" title="dictionary">dictionary</a> with the keys <code>array</code> (same as the array above),
and <code>phase</code> (of type <a href="/docs/reference/layout/length/" title="length">length</a>), which defines where in the pattern
to start drawing.</li>
</ul>
<p>If set to <code><span class="typ-key">auto</span></code>, the value is inherited, defaulting to <code><span class="typ-key">none</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">line</span><span class="typ-punct">(</span>length<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span> stroke<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
  spacing<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>dash<span class="typ-punct">:</span> <span class="typ-str">&quot;dashed&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>dash<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">,</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span> <span class="typ-str">&quot;dot&quot;</span><span class="typ-punct">,</span> <span class="typ-num">5pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-func">line</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>dash<span class="typ-punct">:</span> <span class="typ-punct">(</span>array<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">,</span> <span class="typ-num">5pt</span><span class="typ-punct">,</span> <span class="typ-str">&quot;dot&quot;</span><span class="typ-punct">,</span> <span class="typ-num">5pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span> phase<span class="typ-punct">:</span> <span class="typ-num">10pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a246130642c36eafc18b895778e32d86.png" alt="Preview" /></div></div>`,types:["none","auto","str","array","dictionary"],strings:[{string:"solid",details:""},{string:"dotted",details:""},{string:"densely-dotted",details:""},{string:"loosely-dotted",details:""},{string:"dashed",details:""},{string:"densely-dashed",details:""},{string:"loosely-dashed",details:""},{string:"dash-dotted",details:""},{string:"densely-dash-dotted",details:""},{string:"loosely-dash-dotted",details:""}],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"miter-limit",details:`<p>Number at which protruding sharp bends are rendered with a bevel
instead or a miter join. The higher the number, the sharper an angle
can be before it is bevelled. Only applicable if <code>join</code> is
<code><span class="typ-str">&quot;miter&quot;</span></code>.</p>
<p>Specifically, the miter limit is the maximum ratio between the
corner's protrusion length and the stroke's thickness.</p>
<p>If set to <code><span class="typ-key">auto</span></code>, the value is inherited, defaulting to <code><span class="typ-num">4.0</span></code>.</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> points <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">(</span><span class="typ-num">15pt</span><span class="typ-punct">,</span> <span class="typ-num">0pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">0pt</span><span class="typ-punct">,</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">30pt</span><span class="typ-punct">,</span> <span class="typ-num">30pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">,</span> <span class="typ-num">20pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">path</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">6pt</span> <span class="typ-op">+</span> blue<span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">stack</span><span class="typ-punct">(</span>
    dir<span class="typ-punct">:</span> ltr<span class="typ-punct">,</span>
    spacing<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">,</span>
    <span class="typ-func">path</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>miter-limit<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-op">..</span>points<span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-func">path</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>miter-limit<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-op">..</span>points<span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-func">path</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>miter-limit<span class="typ-punct">:</span> <span class="typ-num">5</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-op">..</span>points<span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/db6a62dc16d5784c9e864528f8428bc7.png" alt="Preview" /></div></div>`,types:["auto","float"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["stroke"],scope:[]},scope:[]}},children:[]}]},{route:"/docs/reference/introspection/",title:"Introspection",description:"Documentation for functions related to Introspection in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"introspection",title:"Introspection",details:`<p>Interactions between document parts.</p>
<p>This category is home to Typst's introspection capabilities: With the
<code>counter</code> function, you can access and manipulate page, section, figure, and
equation counters or create custom ones. Meanwhile, the <code>query</code> function
lets you search for elements in the document to construct things like a list
of figures or headers which show the current chapter title.</p>
<p>Most of the functions are <em>contextual.</em> It is recommended to read the chapter
on <a href="/docs/reference/context/" title="context">context</a> before continuing here.</p>`,items:[{name:"counter",route:"/docs/reference/introspection/counter/",oneliner:"Counts through pages, elements, and more.",code:!0},{name:"here",route:"/docs/reference/introspection/here/",oneliner:"Provides the current location in the document.",code:!0},{name:"locate",route:"/docs/reference/introspection/locate/",oneliner:"Determines the location of an element in the document.",code:!0},{name:"location",route:"/docs/reference/introspection/location/",oneliner:"Identifies an element in the document.",code:!0},{name:"metadata",route:"/docs/reference/introspection/metadata/",oneliner:"Exposes a value to the query system without producing visible content.",code:!0},{name:"query",route:"/docs/reference/introspection/query/",oneliner:"Finds elements in the document.",code:!0},{name:"state",route:"/docs/reference/introspection/state/",oneliner:"Manages stateful parts of your document.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/introspection/counter/",title:"Counter",description:"Documentation for the Counter type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"accessing",name:"Accessing",children:[]},{id:"displaying",name:"Displaying",children:[]},{id:"modifying",name:"Modifying",children:[]},{id:"page-counter",name:"Page Counter",children:[]},{id:"custom-counters",name:"Custom Counters",children:[]},{id:"how-to-step",name:"How To Step",children:[]},{id:"time-travel",name:"Time Travel",children:[]},{id:"other-state",name:"Other State",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-key",name:"key",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-get",name:"Get",children:[]},{id:"definitions-display",name:"Display",children:[{id:"definitions-display-numbering",name:"numbering",children:[]},{id:"definitions-display-both",name:"both",children:[]}]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-selector",name:"selector",children:[]}]},{id:"definitions-final",name:"Final",children:[{id:"definitions-final-location",name:"location",children:[]}]},{id:"definitions-step",name:"Step",children:[{id:"definitions-step-level",name:"level",children:[]}]},{id:"definitions-update",name:"Update",children:[{id:"definitions-update-update",name:"update",children:[]}]}]}],body:{kind:"type",content:{name:"counter",title:"Counter",keywords:[],oneliner:"Counts through pages, elements, and more.",details:`<p>Counts through pages, elements, and more.</p>
<p>With the counter function, you can access and modify counters for pages,
headings, figures, and more. Moreover, you can define custom counters for
other things you want to count.</p>
<p>Since counters change throughout the course of the document, their current
value is <em>contextual.</em> It is recommended to read the chapter on <a href="/docs/reference/context/" title="context">context</a>
before continuing here.</p>
<h2 id="accessing">Accessing a counter</h2>
<p>To access the raw value of a counter, we can use the <a href="/docs/reference/introspection/counter/#definitions-get"><code>get</code></a>
function. This function returns an <a href="/docs/reference/foundations/array/" title="array">array</a>: Counters can have multiple
levels (in the case of headings for sections, subsections, and so on), and
each item in the array corresponds to one level.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
Raw value of heading counter is
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/49952989960fbe9b8854fd0c65cc45eb.png" alt="Preview" /></div></div>
<h2 id="displaying">Displaying a counter</h2>
<p>Often, we want to display the value of a counter in a more human-readable
way. To do that, we can call the <a href="/docs/reference/introspection/counter/#definitions-display"><code>display</code></a> function on
the counter. This function retrieves the current counter value and formats
it either with a provided or with an automatically inferred <a href="/docs/reference/model/numbering/" title="numbering">numbering</a>.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
Some text here.

<span class="typ-heading">= Background</span>
The current value is: <span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>

Or in roman numerals: <span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-str">&quot;I&quot;</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/23c1f03d1a7bb36c8955ee15aac8a0a.png" alt="Preview" /></div></div>
<h2 id="modifying">Modifying a counter</h2>
<p>To modify a counter, you can use the <code>step</code> and <code>update</code> methods:</p>
<ul>
<li>
<p>The <code>step</code> method increases the value of the counter by one. Because
counters can have multiple levels , it optionally takes a <code>level</code>
argument. If given, the counter steps at the given depth.</p>
</li>
<li>
<p>The <code>update</code> method allows you to arbitrarily modify the counter. In its
basic form, you give it an integer (or an array for multiple levels). For
more flexibility, you can instead also give it a function that receives
the current value and returns a new value.</p>
</li>
</ul>
<p>The heading counter is stepped before the heading is displayed, so
<code>Analysis</code> gets the number seven even though the counter is at six after the
second update.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">= Background</span>
<span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>n <span class="typ-op">=&gt;</span> n <span class="typ-op">*</span> <span class="typ-num">2</span><span class="typ-punct">)</span>

<span class="typ-heading">= Analysis</span>
Let&#39;s skip 7.1.
<span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>

<span class="typ-heading">== Analysis</span>
Still at <span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-func">counter</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/bea82ac9985e5fca9201e2b0a7f2461a.png" alt="Preview" /></div></div>
<h2 id="page-counter">Page counter</h2>
<p>The page counter is special. It is automatically stepped at each pagebreak.
But like other counters, you can also step it manually. For example, you
could have Roman page numbers for your preface, then switch to Arabic page
numbers for your main content and reset the page counter to one.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;(i)&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Preface</span>
The preface is numbered with
roman numerals.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1 / 1&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>

<span class="typ-heading">= Main text</span>
Here, the counter is reset to one.
We also display both the current
page and total number of pages in
Arabic numbers.
</code></pre><div class="preview"><img src="/docs/assets/1d1f5c55eeef121b69e401b533089683.png" alt="Preview" /></div></div>
<h2 id="custom-counters">Custom counters</h2>
<p>To define your own counter, call the <code>counter</code> function with a string as a
key. This key identifies the counter globally.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> mine <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span><span class="typ-str">&quot;mycounter&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> mine<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> mine<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>c <span class="typ-op">=&gt;</span> c <span class="typ-op">*</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> mine<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7117f6148b583e4e27a4ca44d4f258e0.png" alt="Preview" /></div></div>
<h2 id="how-to-step">How to step</h2>
<p>When you define and use a custom counter, in general, you should first step
the counter and then display it. This way, the stepping behaviour of a
counter can depend on the element it is stepped for. If you were writing a
counter for, let's say, theorems, your theorem's definition would thus first
include the counter step and only then display the counter and the theorem's
contents.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> c <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span><span class="typ-str">&quot;theorem&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">theorem</span><span class="typ-punct">(</span>it<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">block</span><span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">c</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  <span class="typ-strong">*Theorem <span class="typ-key">#</span><span class="typ-key">context</span> c<span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span><span class="typ-punct">)</span>:*</span>
  <span class="typ-pol">#</span><span class="typ-pol">it</span>
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">theorem</span><span class="typ-punct">[</span><span class="typ-math-delim">$</span>1 = 1<span class="typ-math-delim">$</span><span class="typ-punct">]</span>
<span class="typ-func">#</span><span class="typ-func">theorem</span><span class="typ-punct">[</span><span class="typ-math-delim">$</span>2 &lt; 3<span class="typ-math-delim">$</span><span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/287e195637cdf5c18318bcba127ea49d.png" alt="Preview" /></div></div>
<p>The rationale behind this is best explained on the example of the heading
counter: An update to the heading counter depends on the heading's level. By
stepping directly before the heading, we can correctly step from <code>1</code> to
<code>1.1</code> when encountering a level 2 heading. If we were to step after the
heading, we wouldn't know what to step to.</p>
<p>Because counters should always be stepped before the elements they count,
they always start at zero. This way, they are at one for the first display
(which happens after the first step).</p>
<h2 id="time-travel">Time travel</h2>
<p>Counters can travel through time! You can find out the final value of the
counter before it is reached and even determine what the value was at any
particular location in the document.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> mine <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span><span class="typ-str">&quot;mycounter&quot;</span><span class="typ-punct">)</span>

<span class="typ-heading">= Values</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  Value here: <span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  At intro: <span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  Final value: <span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">final</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>n <span class="typ-op">=&gt;</span> n <span class="typ-op">+</span> <span class="typ-num">3</span><span class="typ-punct">)</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-pol">#</span><span class="typ-pol">mine</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e5c0670a42fffd585ba908feb2578952.png" alt="Preview" /></div></div>
<h2 id="other-state">Other kinds of state</h2>
<p>The <code>counter</code> type is closely related to <a href="/docs/reference/introspection/state/" title="state">state</a> type. Read its
documentation for more details on state management in Typst and why it
doesn't just use normal variables for counters.</p>`,constructor:{path:[],name:"counter",title:"Construct",keywords:[],oneliner:"Create a new counter identified by a key.",element:!1,contextual:!1,details:"<p>Create a new counter identified by a key.</p>",example:null,self:!1,params:[{name:"key",details:`<p>The key that identifies this counter.</p>
<ul>
<li>If it is a string, creates a custom counter that is only affected
by manual updates,</li>
<li>If it is the <a href="/docs/reference/layout/page/" title="\`page\`"><code>page</code></a> function, counts through pages,</li>
<li>If it is a <a href="/docs/reference/foundations/selector/" title="selector">selector</a>, counts through elements that matches with the
selector. For example,
<ul>
<li>provide an element function: counts elements of that type,</li>
<li>provide a <a href="/docs/reference/foundations/label/"><code><span class="typ-label">&lt;label&gt;</span></code></a>: counts elements with that label.</li>
</ul>
</li>
</ul>`,example:null,types:["str","label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["counter"],scope:[]},scope:[{path:["counter"],name:"get",title:"Get",keywords:[],oneliner:"Retrieves the value of the counter at the current location. Always",element:!1,contextual:!0,details:`<p>Retrieves the value of the counter at the current location. Always
returns an array of integers, even if the counter has just one number.</p>
<p>This is equivalent to <code>counter<span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code>.</p>`,example:null,self:!0,params:[],returns:["int","array"],scope:[]},{path:["counter"],name:"display",title:"Display",keywords:[],oneliner:"Displays the current value of the counter with a numbering and returns",element:!1,contextual:!0,details:`<p>Displays the current value of the counter with a numbering and returns
the formatted output.</p>
<p><em>Compatibility:</em> For compatibility with Typst 0.10 and lower, this
function also works without an established context. Then, it will create
opaque contextual content rather than directly returning the output of
the numbering. This behaviour will be removed in a future release.</p>`,example:null,self:!0,params:[{name:"numbering",details:`<p>A <a href="/docs/reference/model/numbering/">numbering pattern or a function</a>, which specifies how
to display the counter. If given a function, that function receives
each number of the counter as a separate argument. If the amount of
numbers varies, e.g. for the heading argument, you can use an
<a href="/docs/reference/foundations/arguments/">argument sink</a>.</p>
<p>If this is omitted or set to <code><span class="typ-key">auto</span></code>, displays the counter with the
numbering style for the counted element or with the pattern
<code><span class="typ-str">&quot;1.1&quot;</span></code> if no such style exists.</p>`,example:null,types:["auto","str","function"],strings:[],default:'<code><span class="typ-key">auto</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1},{name:"both",details:`<p>If enabled, displays the current and final top-level count together.
Both can be styled through a single numbering pattern. This is used
by the page numbering property to display the current and total
number of pages when a pattern like <code><span class="typ-str">&quot;1 / 1&quot;</span></code> is given.</p>`,example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">false</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["counter"],name:"at",title:"At",keywords:[],oneliner:"Retrieves the value of the counter at the given location. Always returns",element:!1,contextual:!0,details:`<p>Retrieves the value of the counter at the given location. Always returns
an array of integers, even if the counter has just one number.</p>
<p>The <code>selector</code> must match exactly one element in the document. The most
useful kinds of selectors for this are <a href="/docs/reference/foundations/label/">labels</a> and
<a href="/docs/reference/introspection/location/">locations</a>.</p>
<p><em>Compatibility:</em> For compatibility with Typst 0.10 and lower, this
function also works without a known context if the <code>selector</code> is a
location. This behaviour will be removed in a future release.</p>`,example:null,self:!0,params:[{name:"selector",details:"<p>The place at which the counter's value should be retrieved.</p>",example:null,types:["label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["int","array"],scope:[]},{path:["counter"],name:"final",title:"Final",keywords:[],oneliner:"Retrieves the value of the counter at the end of the document. Always",element:!1,contextual:!0,details:`<p>Retrieves the value of the counter at the end of the document. Always
returns an array of integers, even if the counter has just one number.</p>`,example:null,self:!0,params:[{name:"location",details:`<p><em>Compatibility:</em> This argument is deprecated. It only exists for
compatibility with Typst 0.10 and lower and shouldn't be used
anymore.</p>`,example:null,types:["none","location"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["int","array"],scope:[]},{path:["counter"],name:"step",title:"Step",keywords:[],oneliner:"Increases the value of the counter by one.",element:!1,contextual:!1,details:`<p>Increases the value of the counter by one.</p>
<p>The update will be in effect at the position where the returned content
is inserted into the document. If you don't put the output into the
document, nothing happens! This would be the case, for example, if you
write <code><span class="typ-key">let</span> _ <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">step</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code>. Counter updates are always
applied in layout order and in that case, Typst wouldn't know when to
step the counter.</p>`,example:null,self:!0,params:[{name:"level",details:'<p>The depth at which to step the counter. Defaults to <code><span class="typ-num">1</span></code>.</p>',example:null,types:["int"],strings:[],default:'<code><span class="typ-num">1</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["counter"],name:"update",title:"Update",keywords:[],oneliner:"Updates the value of the counter.",element:!1,contextual:!1,details:`<p>Updates the value of the counter.</p>
<p>Just like with <code>step</code>, the update only occurs if you put the resulting
content into the document.</p>`,example:null,self:!0,params:[{name:"update",details:`<p>If given an integer or array of integers, sets the counter to that
value. If given a function, that function receives the previous
counter value (with each number as a separate argument) and has to
return the new value (integer or array).</p>`,example:null,types:["int","array","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]},{route:"/docs/reference/introspection/here/",title:"Here",description:"Documentation for the `here` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]}],body:{kind:"func",content:{path:[],name:"here",title:"Here",keywords:[],oneliner:"Provides the current location in the document.",element:!1,contextual:!0,details:`<p>Provides the current location in the document.</p>
<p>You can think of <code>here</code> as a low-level building block that directly extracts
the current location from the active <a href="/docs/reference/context/" title="context">context</a>. Some other functions use it
internally: For instance, <code>counter<span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is equivalent to
<code>counter<span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code>.</p>
<p>Within show rules on <a href="/docs/reference/introspection/location/#locatable">locatable</a> elements, <code><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code>
will match the location of the shown element.</p>
<p>If you want to display the current page number, refer to the documentation
of the <a href="/docs/reference/introspection/counter/" title="\`counter\`"><code>counter</code></a> type. While <code>here</code> can be used to determine the physical
page number, typically you want the logical page number that may, for
instance, have been reset after a preface.</p>
<h2 id="examples">Examples</h2>
<p>Determining the current position in the document in combination with the
<a href="/docs/reference/introspection/location/#definitions-position"><code>position</code></a> method:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  I am located at
  <span class="typ-func">#</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">position</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/538df229c35729b4d895db10793d8d6b.png" alt="Preview" /></div></div>
<p>Running a <a href="/docs/reference/introspection/query/" title="query">query</a> for elements before the current position:</p>
<div class="previewed-code"><pre><code><span class="typ-heading">= Introduction</span>
<span class="typ-heading">= Background</span>

There are
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">query</span><span class="typ-punct">(</span>
  <span class="typ-func">selector</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">before</span><span class="typ-punct">(</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
headings before me.

<span class="typ-heading">= Conclusion</span>
</code></pre><div class="preview"><img src="/docs/assets/40d0d9e5615b9f1526f853db07beff20.png" alt="Preview" /></div></div>
<p>Refer to the <a href="/docs/reference/foundations/selector/" title="\`selector\`"><code>selector</code></a> type for more details on before/after selectors.</p>`,example:null,self:!1,params:[],returns:["location"],scope:[]}},children:[]},{route:"/docs/reference/introspection/locate/",title:"Locate",description:"Documentation for the `locate` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"examples",name:"Examples",children:[]},{id:"compatibility",name:"Compatibility",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-selector",name:"selector",children:[]}]}],body:{kind:"func",content:{path:[],name:"locate",title:"Locate",keywords:[],oneliner:"Determines the location of an element in the document.",element:!1,contextual:!0,details:`<p>Determines the location of an element in the document.</p>
<p>Takes a selector that must match exactly one element and returns that
element's <a href="/docs/reference/introspection/location/" title="\`location\`"><code>location</code></a>. This location can, in particular, be used to
retrieve the physical <a href="/docs/reference/introspection/location/#definitions-page"><code>page</code></a> number and
<a href="/docs/reference/introspection/location/#definitions-position"><code>position</code></a> (page, x, y) for that element.</p>
<h2 id="examples">Examples</h2>
<p>Locating a specific element:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  Introduction is at: <span class="typ-escape">\\</span>
  <span class="typ-func">#</span><span class="typ-func">locate</span><span class="typ-punct">(</span><span class="typ-label">&lt;intro&gt;</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">position</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span>
</code></pre><div class="preview"><img src="/docs/assets/97d6d0c1baaae8f9e89b39c53329a75b.png" alt="Preview" /></div></div>
<h2 id="compatibility">Compatibility</h2>
<p>In Typst 0.10 and lower, the <code>locate</code> function took a closure that made the
current location in the document available (like <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> does now). This
usage pattern is deprecated. Compatibility with the old way will remain for
a while to give package authors time to upgrade. To that effect, <code>locate</code>
detects whether it received a selector or a user-defined function and
adjusts its semantics accordingly. This behaviour will be removed in the
future.</p>`,example:null,self:!1,params:[{name:"selector",details:`<p>A selector that should match exactly one element. This element will be
located.</p>
<p>Especially useful in combination with</p>
<ul>
<li><a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> to locate the current context,</li>
<li>a <a href="/docs/reference/introspection/location/" title="\`location\`"><code>location</code></a> retrieved from some queried element via the
<a href="/docs/reference/foundations/content/#definitions-location"><code>location()</code></a> method on content.</li>
</ul>`,example:null,types:["label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content","location"],scope:[]}},children:[]},{route:"/docs/reference/introspection/location/",title:"Location",description:"Documentation for the Location type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"locatable",name:"Locatable",children:[]},{id:"definitions",name:"Definitions",children:[{id:"definitions-page",name:"Page",children:[]},{id:"definitions-position",name:"Position",children:[]},{id:"definitions-page-numbering",name:"Page Numbering",children:[]}]}],body:{kind:"type",content:{name:"location",title:"Location",keywords:[],oneliner:"Identifies an element in the document.",details:`<p>Identifies an element in the document.</p>
<p>A location uniquely identifies an element in the document and lets you
access its absolute position on the pages. You can retrieve the current
location with the <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> function and the location of a queried or shown
element with the <a href="/docs/reference/foundations/content/#definitions-location"><code>location()</code></a> method on content.</p>
<h2 id="locatable">Locatable elements</h2>
<p>Currently, only a subset of element functions is locatable. Aside from
headings and figures, this includes equations, references, quotes and all
elements with an explicit label. As a result, you <em>can</em> query for e.g.
<a href="/docs/reference/model/strong/" title="\`strong\`"><code>strong</code></a> elements, but you will find only those that have an explicit
label attached to them. This limitation will be resolved in the future.</p>`,constructor:null,scope:[{path:["location"],name:"page",title:"Page",keywords:[],oneliner:"Returns the page number for this location.",element:!1,contextual:!1,details:`<p>Returns the page number for this location.</p>
<p>Note that this does not return the value of the <a href="/docs/reference/introspection/counter/">page counter</a>
at this location, but the true page number (starting from one).</p>
<p>If you want to know the value of the page counter, use
<code><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>loc<span class="typ-punct">)</span></code> instead.</p>
<p>Can be used with <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> to retrieve the physical page position
of the current context:</p>`,example:`<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">[</span>
  I am located on
  page <span class="typ-func">#</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/629c4e87fd2fa6ccd00e3c3861449432.png" alt="Preview" /></div></div>`,self:!0,params:[],returns:["int"],scope:[]},{path:["location"],name:"position",title:"Position",keywords:[],oneliner:"Returns a dictionary with the page number and the x, y position for this",element:!1,contextual:!1,details:`<p>Returns a dictionary with the page number and the x, y position for this
location. The page number starts at one and the coordinates are measured
from the top-left of the page.</p>
<p>If you only need the page number, use <code>page()</code> instead as it allows
Typst to skip unnecessary work.</p>`,example:null,self:!0,params:[],returns:["dictionary"],scope:[]},{path:["location"],name:"page-numbering",title:"Page Numbering",keywords:[],oneliner:"Returns the page numbering pattern of the page at this location. This",element:!1,contextual:!1,details:`<p>Returns the page numbering pattern of the page at this location. This
can be used when displaying the page counter in order to obtain the
local numbering. This is useful if you are building custom indices or
outlines.</p>
<p>If the page numbering is set to <code><span class="typ-key">none</span></code> at that location, this function
returns <code><span class="typ-key">none</span></code>.</p>`,example:null,self:!0,params:[],returns:["none","str","function"],scope:[]}]}},children:[]},{route:"/docs/reference/introspection/metadata/",title:"Metadata",description:"Documentation for the `metadata` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-value",name:"value",children:[]}]}],body:{kind:"func",content:{path:[],name:"metadata",title:"Metadata",keywords:[],oneliner:"Exposes a value to the query system without producing visible content.",element:!0,contextual:!1,details:`<p>Exposes a value to the query system without producing visible content.</p>
<p>This element can be retrieved with the <a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a> function and from the
command line with
<a href="/docs/reference/introspection/query/#command-line-queries"><code>typst query</code></a>. Its
purpose is to expose an arbitrary value to the introspection system. To
identify a metadata value among others, you can attach a <a href="/docs/reference/foundations/label/" title="\`label\`"><code>label</code></a> to it and
query for that label.</p>
<p>The <code>metadata</code> element is especially useful for command line queries because
it allows you to expose arbitrary values to the outside world.</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// Put metadata somewhere.</span>
<span class="typ-func">#</span><span class="typ-func">metadata</span><span class="typ-punct">(</span><span class="typ-str">&quot;This is a note&quot;</span><span class="typ-punct">)</span> <span class="typ-label">&lt;note&gt;</span>

<span class="typ-comment">// And find it from anywhere else.</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-func">query</span><span class="typ-punct">(</span><span class="typ-label">&lt;note&gt;</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span>value
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/2dce9825228b312ec51cf19bbfeed97d.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"value",details:"<p>The value to embed into the document.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]}},children:[]},{route:"/docs/reference/introspection/query/",title:"Query",description:"Documentation for the `query` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"finding-elements",name:"Finding Elements",children:[]},{id:"caution",name:"Caution",children:[]},{id:"command-line-queries",name:"Command Line Queries",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-target",name:"target",children:[]},{id:"parameters-location",name:"location",children:[]}]}],body:{kind:"func",content:{path:[],name:"query",title:"Query",keywords:[],oneliner:"Finds elements in the document.",element:!1,contextual:!0,details:`<p>Finds elements in the document.</p>
<p>The <code>query</code> functions lets you search your document for elements of a
particular type or with a particular label. To use it, you first need to
ensure that <a href="/docs/reference/context/" title="context">context</a> is available.</p>
<h2 id="finding-elements">Finding elements</h2>
<p>In the example below, we manually create a table of contents instead of
using the <a href="/docs/reference/model/outline/" title="\`outline\`"><code>outline</code></a> function.</p>
<p>To do this, we first query for all headings in the document at level 1 and
where <code>outlined</code> is true. Querying only for headings at level 1 ensures
that, for the purpose of this example, sub-headings are not included in the
table of contents. The <code>outlined</code> field is used to exclude the &quot;Table of
Contents&quot; heading itself.</p>
<p>Note that we open a <code>context</code> to be able to use the <code>query</code> function.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">heading</span><span class="typ-punct">(</span>outlined<span class="typ-punct">:</span> <span class="typ-key">false</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  Table of Contents
<span class="typ-punct">]</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> chapters <span class="typ-op">=</span> <span class="typ-func">query</span><span class="typ-punct">(</span>
    heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>
      level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span>
      outlined<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span>
  <span class="typ-punct">)</span>
  <span class="typ-key">for</span> chapter <span class="typ-key">in</span> chapters <span class="typ-punct">{</span>
    <span class="typ-key">let</span> loc <span class="typ-op">=</span> chapter<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
    <span class="typ-key">let</span> nr <span class="typ-op">=</span> <span class="typ-func">numbering</span><span class="typ-punct">(</span>
      loc<span class="typ-punct">.</span><span class="typ-func">page-numbering</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
      <span class="typ-op">..</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>loc<span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span>
    <span class="typ-punct">[</span><span class="typ-pol">#</span><span class="typ-pol">chapter</span><span class="typ-punct">.</span><span class="typ-pol">body</span> <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span> <span class="typ-pol">#</span><span class="typ-pol">nr</span> <span class="typ-escape">\\</span> <span class="typ-punct">]</span>
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-heading">== Sub-Heading</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">8</span><span class="typ-punct">)</span>

<span class="typ-heading">= Discussion</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">18</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4bdd219300b712c807a416b4a73df5e2.png" alt="Preview" /></div></div>
<p>To get the page numbers, we first get the location of the elements returned
by <code>query</code> with <a href="/docs/reference/foundations/content/#definitions-location"><code>location</code></a>. We then also retrieve the
<a href="/docs/reference/introspection/location/#definitions-page-numbering">page numbering</a> and <a href="/docs/reference/introspection/counter/#page-counter">page
counter</a> at that location and apply the numbering to
the counter.</p>
<h2 id="caution">A word of caution</h2>
<p>To resolve all your queries, Typst evaluates and layouts parts of the
document multiple times. However, there is no guarantee that your queries
can actually be completely resolved. If you aren't careful a query can
affect itself—leading to a result that never stabilizes.</p>
<p>In the example below, we query for all headings in the document. We then
generate as many headings. In the beginning, there's just one heading,
titled <code>Real</code>. Thus, <code>count</code> is <code>1</code> and one <code>Fake</code> heading is generated.
Typst sees that the query's result has changed and processes it again. This
time, <code>count</code> is <code>2</code> and two <code>Fake</code> headings are generated. This goes on and
on. As we can see, the output has a finite amount of headings. This is
because Typst simply gives up after a few attempts.</p>
<p>In general, you should try not to write queries that affect themselves. The
same words of caution also apply to other introspection features like
<a href="/docs/reference/introspection/counter/">counters</a> and <a href="/docs/reference/introspection/state/" title="state">state</a>.</p>
<div class="previewed-code"><pre><code><span class="typ-heading">= Real</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> elems <span class="typ-op">=</span> <span class="typ-func">query</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span>
  <span class="typ-key">let</span> count <span class="typ-op">=</span> elems<span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  count <span class="typ-op">*</span> <span class="typ-punct">[</span><span class="typ-heading">= Fake</span><span class="typ-punct">]</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/9b71a9cd37fd95880ce42531985de881.png" alt="Preview" /></div></div>
<h2 id="command-line-queries">Command line queries</h2>
<p>You can also perform queries from the command line with the <code>typst query</code>
command. This command executes an arbitrary query on the document and
returns the resulting elements in serialized form. Consider the following
<code>example.typ</code> file which contains some invisible <a href="/docs/reference/introspection/metadata/" title="metadata">metadata</a>:</p>
<pre><code><span class="typ-func">#</span><span class="typ-func">metadata</span><span class="typ-punct">(</span><span class="typ-str">&quot;This is a note&quot;</span><span class="typ-punct">)</span> <span class="typ-label">&lt;note&gt;</span>
</code></pre>
<p>You can execute a query on it as follows using Typst's CLI:</p>
<pre style="background-color:#ffffff;">
<span style="color:#4b69c6;">$</span><span style="color:#000000;"> typst query example.typ </span><span style="color:#298e0d;">&quot;&lt;note&gt;&quot;
</span><span style="color:#4b69c6;">[
</span><span style="color:#000000;">  {
</span><span style="color:#000000;">    </span><span style="color:#298e0d;">&quot;func&quot;</span><span style="color:#4b69c6;">: </span><span style="color:#298e0d;">&quot;metadata&quot;</span><span style="color:#000000;">,
</span><span style="color:#000000;">    </span><span style="color:#298e0d;">&quot;value&quot;</span><span style="color:#4b69c6;">: </span><span style="color:#298e0d;">&quot;This is a note&quot;</span><span style="color:#000000;">,
</span><span style="color:#000000;">    </span><span style="color:#298e0d;">&quot;label&quot;</span><span style="color:#4b69c6;">: </span><span style="color:#298e0d;">&quot;&lt;note&gt;&quot;
</span><span style="color:#000000;">  }
</span><span style="color:#4b69c6;">]
</span></pre>
<p>Frequently, you're interested in only one specific field of the resulting
elements. In the case of the <code>metadata</code> element, the <code>value</code> field is the
interesting one. You can extract just this field with the <code>--field</code>
argument.</p>
<pre style="background-color:#ffffff;">
<span style="color:#4b69c6;">$</span><span style="color:#000000;"> typst query example.typ </span><span style="color:#298e0d;">&quot;&lt;note&gt;&quot;</span><span style="color:#000000;"> --field value
</span><span style="color:#4b69c6;">[</span><span style="color:#298e0d;">&quot;This is a note&quot;</span><span style="color:#4b69c6;">]
</span></pre>
<p>If you are interested in just a single element, you can use the <code>--one</code>
flag to extract just it.</p>
<pre style="background-color:#ffffff;">
<span style="color:#4b69c6;">$</span><span style="color:#000000;"> typst query example.typ </span><span style="color:#298e0d;">&quot;&lt;note&gt;&quot;</span><span style="color:#000000;"> --field value --one
</span><span style="color:#298e0d;">&quot;This is a note&quot;
</span></pre>`,example:null,self:!1,params:[{name:"target",details:`<p>Can be</p>
<ul>
<li>an element function like a <code>heading</code> or <code>figure</code>,</li>
<li>a <code><span class="typ-label">&lt;label&gt;</span></code>,</li>
<li>a more complex selector like <code>heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span></code>,</li>
<li>or <code><span class="typ-func">selector</span><span class="typ-punct">(</span>heading<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">before</span><span class="typ-punct">(</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code>.</li>
</ul>
<p>Only <a href="/docs/reference/introspection/location/#locatable">locatable</a> element functions are supported.</p>`,example:null,types:["label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"location",details:`<p><em>Compatibility:</em> This argument is deprecated. It only exists for
compatibility with Typst 0.10 and lower and shouldn't be used anymore.</p>`,example:null,types:["none","location"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]}},children:[]},{route:"/docs/reference/introspection/state/",title:"State",description:"Documentation for the State type.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"state-and-markup",name:"State And Markup",children:[]},{id:"state-in-typst",name:"State In Typst",children:[]},{id:"time-travel",name:"Time Travel",children:[]},{id:"caution",name:"Caution",children:[]},{id:"constructor",name:"Constructor",children:[{id:"constructor-key",name:"key",children:[]},{id:"constructor-init",name:"init",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-get",name:"Get",children:[]},{id:"definitions-at",name:"At",children:[{id:"definitions-at-selector",name:"selector",children:[]}]},{id:"definitions-final",name:"Final",children:[{id:"definitions-final-location",name:"location",children:[]}]},{id:"definitions-update",name:"Update",children:[{id:"definitions-update-update",name:"update",children:[]}]},{id:"definitions-display",name:"Display",children:[{id:"definitions-display-func",name:"func",children:[]}]}]}],body:{kind:"type",content:{name:"state",title:"State",keywords:[],oneliner:"Manages stateful parts of your document.",details:`<p>Manages stateful parts of your document.</p>
<p>Let's say you have some computations in your document and want to remember
the result of your last computation to use it in the next one. You might try
something similar to the code below and expect it to output 10, 13, 26, and
21. However this <strong>does not work</strong> in Typst. If you test this code, you will
see that Typst complains with the following error message: <em>Variables from
outside the function are read-only and cannot be modified.</em></p>
<pre><code><span class="typ-comment">// This doesn&#39;t work!</span>
<span class="typ-key">#</span><span class="typ-key">let</span> x <span class="typ-op">=</span> <span class="typ-num">0</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">compute</span><span class="typ-punct">(</span>expr<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  x <span class="typ-op">=</span> <span class="typ-func">eval</span><span class="typ-punct">(</span>
    expr<span class="typ-punct">.</span><span class="typ-func">replace</span><span class="typ-punct">(</span><span class="typ-str">&quot;x&quot;</span><span class="typ-punct">,</span> <span class="typ-func">str</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-punct">)</span>
  <span class="typ-punct">[</span>New value is <span class="typ-pol">#</span><span class="typ-pol">x</span>. <span class="typ-punct">]</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;10&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x + 3&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x * 2&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x - 5&quot;</span><span class="typ-punct">)</span>
</code></pre>
<h2 id="state-and-markup">State and document markup</h2>
<p>Why does it do that? Because, in general, this kind of computation with side
effects is problematic in document markup and Typst is upfront about that.
For the results to make sense, the computation must proceed in the same
order in which the results will be laid out in the document. In our simple
example, that's the case, but in general it might not be.</p>
<p>Let's look at a slightly different, but similar kind of state: The heading
numbering. We want to increase the heading counter at each heading. Easy
enough, right? Just add one. Well, it's not that simple. Consider the
following example:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">template</span><span class="typ-punct">(</span>body<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">[</span>
  <span class="typ-heading">= Outline</span>
  <span class="typ-escape">...</span>
  <span class="typ-pol">#</span><span class="typ-pol">body</span>
<span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> <span class="typ-func">template</span>

<span class="typ-heading">= Introduction</span>
<span class="typ-escape">...</span>
</code></pre><div class="preview"><img src="/docs/assets/117d4f5c62659b570ed6ab9ff82557bb.png" alt="Preview" /></div></div>
<p>Here, Typst first processes the body of the document after the show rule,
sees the <code>Introduction</code> heading, then passes the resulting content to the
<code>template</code> function and only then sees the <code>Outline</code>. Just counting up would
number the <code>Introduction</code> with <code>1</code> and the <code>Outline</code> with <code>2</code>.</p>
<h2 id="state-in-typst">Managing state in Typst</h2>
<p>So what do we do instead? We use Typst's state management system. Calling
the <code>state</code> function with an identifying string key and an optional initial
value gives you a state value which exposes a few functions. The two most
important ones are <code>get</code> and <code>update</code>:</p>
<ul>
<li>
<p>The <a href="/docs/reference/introspection/state/#definitions-get"><code>get</code></a> function retrieves the current value of the state.
Because the value can vary over the course of the document, it is a
<em>contextual</em> function that can only be used when <a href="/docs/reference/context/">context</a> is
available.</p>
</li>
<li>
<p>The <a href="/docs/reference/introspection/state/#definitions-update"><code>update</code></a> function modifies the state. You can give it
any value. If given a non-function value, it sets the state to that value.
If given a function, that function receives the previous state and has to
return the new state.</p>
</li>
</ul>
<p>Our initial example would now look like this:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> s <span class="typ-op">=</span> <span class="typ-func">state</span><span class="typ-punct">(</span><span class="typ-str">&quot;x&quot;</span><span class="typ-punct">,</span> <span class="typ-num">0</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">compute</span><span class="typ-punct">(</span>expr<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">[</span>
  <span class="typ-pol">#</span><span class="typ-pol">s</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>x <span class="typ-op">=&gt;</span>
    <span class="typ-func">eval</span><span class="typ-punct">(</span>expr<span class="typ-punct">.</span><span class="typ-func">replace</span><span class="typ-punct">(</span><span class="typ-str">&quot;x&quot;</span><span class="typ-punct">,</span> <span class="typ-func">str</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-punct">)</span>
  New value is <span class="typ-key">#</span><span class="typ-key">context</span> s<span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>.
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;10&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x + 3&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x * 2&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x - 5&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2a254ad78ebcdb3345c0b48891ca2a9d.png" alt="Preview" /></div></div>
<p>State managed by Typst is always updated in layout order, not in evaluation
order. The <code>update</code> method returns content and its effect occurs at the
position where the returned content is inserted into the document.</p>
<p>As a result, we can now also store some of the computations in variables,
but they still show the correct results:</p>
<div class="previewed-code"><pre><code><span class="typ-escape">...</span>

<span class="typ-key">#</span><span class="typ-key">let</span> more <span class="typ-op">=</span> <span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x * 2&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
  <span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x - 5&quot;</span><span class="typ-punct">)</span>
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;10&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x + 3&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-pol">#</span><span class="typ-pol">more</span>
</code></pre><div class="preview"><img src="/docs/assets/17715cc995c85811a628a3e25656167b.png" alt="Preview" /></div></div>
<p>This example is of course a bit silly, but in practice this is often exactly
what you want! A good example are heading counters, which is why Typst's
<a href="/docs/reference/introspection/counter/">counting system</a> is very similar to its state system.</p>
<h2 id="time-travel">Time Travel</h2>
<p>By using Typst's state management system you also get time travel
capabilities! We can find out what the value of the state will be at any
position in the document from anywhere else. In particular, the <code>at</code> method
gives us the value of the state at any particular location and the <code>final</code>
methods gives us the value of the state at the end of the document.</p>
<div class="previewed-code"><pre><code><span class="typ-escape">...</span>

Value at <span class="typ-raw">\`&lt;here&gt;\`</span> is
<span class="typ-key">#</span><span class="typ-key">context</span> s<span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-label">&lt;here&gt;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;10&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x + 3&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-strong">*Here.*</span> <span class="typ-label">&lt;here&gt;</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x * 2&quot;</span><span class="typ-punct">)</span> <span class="typ-escape">\\</span>
<span class="typ-func">#</span><span class="typ-func">compute</span><span class="typ-punct">(</span><span class="typ-str">&quot;x - 5&quot;</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/543fc95bbac8244444ae417f39e32d84.png" alt="Preview" /></div></div>
<h2 id="caution">A word of caution</h2>
<p>To resolve the values of all states, Typst evaluates parts of your code
multiple times. However, there is no guarantee that your state manipulation
can actually be completely resolved.</p>
<p>For instance, if you generate state updates depending on the final value of
a state, the results might never converge. The example below illustrates
this. We initialize our state with <code>1</code> and then update it to its own final
value plus 1. So it should be <code>2</code>, but then its final value is <code>2</code>, so it
should be <code>3</code>, and so on. This example displays a finite value because Typst
simply gives up after a few attempts.</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// This is bad!</span>
<span class="typ-key">#</span><span class="typ-key">let</span> s <span class="typ-op">=</span> <span class="typ-func">state</span><span class="typ-punct">(</span><span class="typ-str">&quot;x&quot;</span><span class="typ-punct">,</span> <span class="typ-num">1</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> s<span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>s<span class="typ-punct">.</span><span class="typ-func">final</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-num">1</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">context</span> s<span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/849155334f4e392d764200e8669921cd.png" alt="Preview" /></div></div>
<p>In general, you should try not to generate state updates from within context
expressions. If possible, try to express your updates as non-contextual
values or functions that compute the new value from the previous value.
Sometimes, it cannot be helped, but in those cases it is up to you to ensure
that the result converges.</p>`,constructor:{path:[],name:"state",title:"Construct",keywords:[],oneliner:"Create a new state identified by a key.",element:!1,contextual:!1,details:"<p>Create a new state identified by a key.</p>",example:null,self:!1,params:[{name:"key",details:"<p>The key that identifies this state.</p>",example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"init",details:"<p>The initial value of the state.</p>",example:null,types:["any"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["state"],scope:[]},scope:[{path:["state"],name:"get",title:"Get",keywords:[],oneliner:"Retrieves the value of the state at the current location.",element:!1,contextual:!0,details:`<p>Retrieves the value of the state at the current location.</p>
<p>This is equivalent to <code>state<span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code>.</p>`,example:null,self:!0,params:[],returns:["any"],scope:[]},{path:["state"],name:"at",title:"At",keywords:[],oneliner:"Retrieves the value of the state at the given selector's unique match.",element:!1,contextual:!0,details:`<p>Retrieves the value of the state at the given selector's unique match.</p>
<p>The <code>selector</code> must match exactly one element in the document. The most
useful kinds of selectors for this are <a href="/docs/reference/foundations/label/">labels</a> and
<a href="/docs/reference/introspection/location/">locations</a>.</p>
<p><em>Compatibility:</em> For compatibility with Typst 0.10 and lower, this
function also works without a known context if the <code>selector</code> is a
location. This behaviour will be removed in a future release.</p>`,example:null,self:!0,params:[{name:"selector",details:"<p>The place at which the state's value should be retrieved.</p>",example:null,types:["label","selector","location","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["state"],name:"final",title:"Final",keywords:[],oneliner:"Retrieves the value of the state at the end of the document.",element:!1,contextual:!0,details:"<p>Retrieves the value of the state at the end of the document.</p>",example:null,self:!0,params:[{name:"location",details:`<p><em>Compatibility:</em> This argument is deprecated. It only exists for
compatibility with Typst 0.10 and lower and shouldn't be used
anymore.</p>`,example:null,types:["none","location"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["state"],name:"update",title:"Update",keywords:[],oneliner:"Update the value of the state.",element:!1,contextual:!1,details:`<p>Update the value of the state.</p>
<p>The update will be in effect at the position where the returned content
is inserted into the document. If you don't put the output into the
document, nothing happens! This would be the case, for example, if you
write <code><span class="typ-key">let</span> _ <span class="typ-op">=</span> <span class="typ-func">state</span><span class="typ-punct">(</span><span class="typ-str">&quot;key&quot;</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">7</span><span class="typ-punct">)</span></code>. State updates are always
applied in layout order and in that case, Typst wouldn't know when to
update the state.</p>`,example:null,self:!0,params:[{name:"update",details:`<p>If given a non function-value, sets the state to that value. If
given a function, that function receives the previous state and has
to return the new state.</p>`,example:null,types:["any","function"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["content"],scope:[]},{path:["state"],name:"display",title:"Display",keywords:[],oneliner:"Displays the current value of the state.",element:!1,contextual:!1,details:`<p>Displays the current value of the state.</p>
<p><strong>Deprecation planned:</strong> Use <a href="/docs/reference/introspection/state/#definitions-get"><code>get</code></a> instead.</p>`,example:null,self:!0,params:[{name:"func",details:`<p>A function which receives the value of the state and can return
arbitrary content which is then displayed. If this is omitted, the
value is directly displayed.</p>`,example:null,types:["none","function"],strings:[],default:'<code><span class="typ-key">none</span></code>',positional:!0,named:!1,required:!1,variadic:!1,settable:!1}],returns:["content"],scope:[]}]}},children:[]}]},{route:"/docs/reference/data-loading/",title:"Data Loading",description:"Documentation for functions related to Data Loading in Typst.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"definitions",name:"Definitions",children:[]}],body:{kind:"category",content:{name:"data-loading",title:"Data Loading",details:`<p>Data loading from external files.</p>
<p>These functions help you with loading and embedding data, for example from
the results of an experiment.</p>`,items:[{name:"cbor",route:"/docs/reference/data-loading/cbor/",oneliner:"Reads structured data from a CBOR file.",code:!0},{name:"csv",route:"/docs/reference/data-loading/csv/",oneliner:"Reads structured data from a CSV file.",code:!0},{name:"json",route:"/docs/reference/data-loading/json/",oneliner:"Reads structured data from a JSON file.",code:!0},{name:"read",route:"/docs/reference/data-loading/read/",oneliner:"Reads plain text or data from a file.",code:!0},{name:"toml",route:"/docs/reference/data-loading/toml/",oneliner:"Reads structured data from a TOML file.",code:!0},{name:"xml",route:"/docs/reference/data-loading/xml/",oneliner:"Reads structured data from an XML file.",code:!0},{name:"yaml",route:"/docs/reference/data-loading/yaml/",oneliner:"Reads structured data from a YAML file.",code:!0}],shorthands:null}},children:[{route:"/docs/reference/data-loading/cbor/",title:"CBOR",description:"Documentation for the `cbor` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode CBOR",children:[{id:"definitions-decode-data",name:"data",children:[]}]},{id:"definitions-encode",name:"Encode CBOR",children:[{id:"definitions-encode-value",name:"value",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"cbor",title:"CBOR",keywords:[],oneliner:"Reads structured data from a CBOR file.",element:!1,contextual:!1,details:`<p>Reads structured data from a CBOR file.</p>
<p>The file must contain a valid CBOR serialization. Mappings will be
converted into Typst dictionaries, and sequences will be converted into
Typst arrays. Strings and booleans will be converted into the Typst
equivalents, null-values (<code>null</code>, <code>~</code> or empty \`\`) will be converted into
<code><span class="typ-key">none</span></code>, and numbers will be converted to floats or integers depending on
whether they are whole numbers.</p>
<p>Be aware that integers larger than 2<sup>63</sup>-1 will be converted to
floating point numbers, which may result in an approximative value.</p>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to a CBOR file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[{path:["cbor"],name:"decode",title:"Decode CBOR",keywords:[],oneliner:"Reads structured data from CBOR bytes.",element:!1,contextual:!1,details:"<p>Reads structured data from CBOR bytes.</p>",example:null,self:!1,params:[{name:"data",details:"<p>cbor data.</p>",example:null,types:["bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["cbor"],name:"encode",title:"Encode CBOR",keywords:[],oneliner:"Encode structured data into CBOR bytes.",element:!1,contextual:!1,details:"<p>Encode structured data into CBOR bytes.</p>",example:null,self:!1,params:[{name:"value",details:"<p>Value to be encoded.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["bytes"],scope:[]}]}},children:[]},{route:"/docs/reference/data-loading/csv/",title:"CSV",description:"Documentation for the `csv` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]},{id:"parameters-delimiter",name:"delimiter",children:[]},{id:"parameters-row-type",name:"row-type",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode CSV",children:[{id:"definitions-decode-data",name:"data",children:[]},{id:"definitions-decode-delimiter",name:"delimiter",children:[]},{id:"definitions-decode-row-type",name:"row-type",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"csv",title:"CSV",keywords:[],oneliner:"Reads structured data from a CSV file.",element:!1,contextual:!1,details:`<p>Reads structured data from a CSV file.</p>
<p>The CSV file will be read and parsed into a 2-dimensional array of strings:
Each row in the CSV file will be represented as an array of strings, and all
rows will be collected into a single array. Header rows will not be
stripped.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> results <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;example.csv&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Condition*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Result*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-op">..</span>results<span class="typ-punct">.</span><span class="typ-func">flatten</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/2e8101c984678b0d6bcbaa9f9a242da8.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to a CSV file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"delimiter",details:`<p>The delimiter that separates columns in the CSV file.
Must be a single ASCII character.</p>`,example:null,types:["str"],strings:[],default:'<code><span class="typ-str">&quot;,&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"row-type",details:`<p>How to represent the file's rows.</p>
<ul>
<li>If set to <code>array</code>, each row is represented as a plain array of
strings.</li>
<li>If set to <code>dictionary</code>, each row is represented as a dictionary
mapping from header keys to strings. This option only makes sense when
a header row is present in the CSV file.</li>
</ul>`,example:null,types:["type"],strings:[],default:"<code>array</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[{path:["csv"],name:"decode",title:"Decode CSV",keywords:[],oneliner:"Reads structured data from a CSV string/bytes.",element:!1,contextual:!1,details:"<p>Reads structured data from a CSV string/bytes.</p>",example:null,self:!1,params:[{name:"data",details:"<p>CSV data.</p>",example:null,types:["str","bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"delimiter",details:`<p>The delimiter that separates columns in the CSV file.
Must be a single ASCII character.</p>`,example:null,types:["str"],strings:[],default:'<code><span class="typ-str">&quot;,&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1},{name:"row-type",details:`<p>How to represent the file's rows.</p>
<ul>
<li>If set to <code>array</code>, each row is represented as a plain array of
strings.</li>
<li>If set to <code>dictionary</code>, each row is represented as a dictionary
mapping from header keys to strings. This option only makes sense
when a header row is present in the CSV file.</li>
</ul>`,example:null,types:["type"],strings:[],default:"<code>array</code>",positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["array"],scope:[]}]}},children:[]},{route:"/docs/reference/data-loading/json/",title:"JSON",description:"Documentation for the `json` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode JSON",children:[{id:"definitions-decode-data",name:"data",children:[]}]},{id:"definitions-encode",name:"Encode JSON",children:[{id:"definitions-encode-value",name:"value",children:[]},{id:"definitions-encode-pretty",name:"pretty",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"json",title:"JSON",keywords:[],oneliner:"Reads structured data from a JSON file.",element:!1,contextual:!1,details:`<p>Reads structured data from a JSON file.</p>
<p>The file must contain a valid JSON value, such as object or array. JSON
objects will be converted into Typst dictionaries, and JSON arrays will be
converted into Typst arrays. Strings and booleans will be converted into the
Typst equivalents, <code>null</code> will be converted into <code><span class="typ-key">none</span></code>, and numbers will
be converted to floats or integers depending on whether they are whole
numbers.</p>
<p>Be aware that integers larger than 2<sup>63</sup>-1 will be converted to
floating point numbers, which may result in an approximative value.</p>
<p>The function returns a dictionary, an array or, depending on the JSON file,
another JSON data type.</p>
<p>The JSON files in the example contain objects with the keys <code>temperature</code>,
<code>unit</code>, and <code>weather</code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">forecast</span><span class="typ-punct">(</span>day<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">block</span><span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">square</span><span class="typ-punct">(</span>
    width<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span>
    inset<span class="typ-punct">:</span> <span class="typ-num">8pt</span><span class="typ-punct">,</span>
    fill<span class="typ-punct">:</span> <span class="typ-key">if</span> day<span class="typ-punct">.</span>weather <span class="typ-op">==</span> <span class="typ-str">&quot;sunny&quot;</span> <span class="typ-punct">{</span>
      yellow
    <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span>
      aqua
    <span class="typ-punct">}</span><span class="typ-punct">,</span>
    <span class="typ-func">align</span><span class="typ-punct">(</span>
      bottom <span class="typ-op">+</span> right<span class="typ-punct">,</span>
      <span class="typ-func">strong</span><span class="typ-punct">(</span>day<span class="typ-punct">.</span>weather<span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">6pt</span><span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">22pt</span><span class="typ-punct">,</span> baseline<span class="typ-punct">:</span> <span class="typ-op">-</span><span class="typ-num">8pt</span><span class="typ-punct">)</span>
  <span class="typ-pol">#</span><span class="typ-pol">day</span><span class="typ-punct">.</span><span class="typ-pol">temperature</span> °<span class="typ-pol">#</span><span class="typ-pol">day</span><span class="typ-punct">.</span><span class="typ-pol">unit</span>
<span class="typ-punct">]</span>

<span class="typ-func">#</span><span class="typ-func">forecast</span><span class="typ-punct">(</span><span class="typ-func">json</span><span class="typ-punct">(</span><span class="typ-str">&quot;monday.json&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">forecast</span><span class="typ-punct">(</span><span class="typ-func">json</span><span class="typ-punct">(</span><span class="typ-str">&quot;tuesday.json&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/e4594f884d421680c5fa4b820e9f4296.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to a JSON file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[{path:["json"],name:"decode",title:"Decode JSON",keywords:[],oneliner:"Reads structured data from a JSON string/bytes.",element:!1,contextual:!1,details:"<p>Reads structured data from a JSON string/bytes.</p>",example:null,self:!1,params:[{name:"data",details:"<p>JSON data.</p>",example:null,types:["str","bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["json"],name:"encode",title:"Encode JSON",keywords:[],oneliner:"Encodes structured data into a JSON string.",element:!1,contextual:!1,details:"<p>Encodes structured data into a JSON string.</p>",example:null,self:!1,params:[{name:"value",details:"<p>Value to be encoded.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"pretty",details:"<p>Whether to pretty print the JSON with newlines and indentation.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]}]}},children:[]},{route:"/docs/reference/data-loading/read/",title:"Read",description:"Documentation for the `read` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]},{id:"parameters-encoding",name:"encoding",children:[]}]}],body:{kind:"func",content:{path:[],name:"read",title:"Read",keywords:[],oneliner:"Reads plain text or data from a file.",element:!1,contextual:!1,details:`<p>Reads plain text or data from a file.</p>
<p>By default, the file will be read as UTF-8 and returned as a <a href="/docs/reference/foundations/str/">string</a>.</p>
<p>If you specify <code>encoding: <span class="typ-key">none</span></code>, this returns raw <a href="/docs/reference/foundations/bytes/" title="bytes">bytes</a> instead.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code>An example for a HTML file: <span class="typ-escape">\\</span>
<span class="typ-key">#</span><span class="typ-key">let</span> text <span class="typ-op">=</span> <span class="typ-func">read</span><span class="typ-punct">(</span><span class="typ-str">&quot;example.html&quot;</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">raw</span><span class="typ-punct">(</span>text<span class="typ-punct">,</span> lang<span class="typ-punct">:</span> <span class="typ-str">&quot;html&quot;</span><span class="typ-punct">)</span>

Raw bytes:
<span class="typ-func">#</span><span class="typ-func">read</span><span class="typ-punct">(</span><span class="typ-str">&quot;tiger.jpg&quot;</span><span class="typ-punct">,</span> encoding<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/52962fd2f4b02c8d14cf5383a507d5a9.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to a file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"encoding",details:`<p>The encoding to read the file with.</p>
<p>If set to <code><span class="typ-key">none</span></code>, this function returns raw bytes.</p>`,example:null,types:["none","str"],strings:[{string:"utf8",details:"<p>The Unicode UTF-8 encoding.</p>"}],default:'<code><span class="typ-str">&quot;utf8&quot;</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str","bytes"],scope:[]}},children:[]},{route:"/docs/reference/data-loading/toml/",title:"TOML",description:"Documentation for the `toml` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode TOML",children:[{id:"definitions-decode-data",name:"data",children:[]}]},{id:"definitions-encode",name:"Encode TOML",children:[{id:"definitions-encode-value",name:"value",children:[]},{id:"definitions-encode-pretty",name:"pretty",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"toml",title:"TOML",keywords:[],oneliner:"Reads structured data from a TOML file.",element:!1,contextual:!1,details:`<p>Reads structured data from a TOML file.</p>
<p>The file must contain a valid TOML table. TOML tables will be converted into
Typst dictionaries, and TOML arrays will be converted into Typst arrays.
Strings, booleans and datetimes will be converted into the Typst equivalents
and numbers will be converted to floats or integers depending on whether
they are whole numbers.</p>
<p>The TOML file in the example consists of a table with the keys <code>title</code>,
<code>version</code>, and <code>authors</code>.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> details <span class="typ-op">=</span> <span class="typ-func">toml</span><span class="typ-punct">(</span><span class="typ-str">&quot;details.toml&quot;</span><span class="typ-punct">)</span>

Title: <span class="typ-pol">#</span><span class="typ-pol">details</span><span class="typ-punct">.</span><span class="typ-pol">title</span> <span class="typ-escape">\\</span>
Version: <span class="typ-pol">#</span><span class="typ-pol">details</span><span class="typ-punct">.</span><span class="typ-pol">version</span> <span class="typ-escape">\\</span>
Authors: <span class="typ-punct">#</span><span class="typ-punct">(</span>details<span class="typ-punct">.</span>authors
  <span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-str">&quot;, &quot;</span><span class="typ-punct">,</span> last<span class="typ-punct">:</span> <span class="typ-str">&quot; and &quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/7d9ddf1bea64a18f4aa5ab20c0b54f4e.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to a TOML file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[{path:["toml"],name:"decode",title:"Decode TOML",keywords:[],oneliner:"Reads structured data from a TOML string/bytes.",element:!1,contextual:!1,details:"<p>Reads structured data from a TOML string/bytes.</p>",example:null,self:!1,params:[{name:"data",details:"<p>TOML data.</p>",example:null,types:["str","bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["toml"],name:"encode",title:"Encode TOML",keywords:[],oneliner:"Encodes structured data into a TOML string.",element:!1,contextual:!1,details:"<p>Encodes structured data into a TOML string.</p>",example:null,self:!1,params:[{name:"value",details:"<p>Value to be encoded.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1},{name:"pretty",details:"<p>Whether to pretty-print the resulting TOML.</p>",example:null,types:["bool"],strings:[],default:'<code><span class="typ-key">true</span></code>',positional:!1,named:!0,required:!1,variadic:!1,settable:!1}],returns:["str"],scope:[]}]}},children:[]},{route:"/docs/reference/data-loading/xml/",title:"XML",description:"Documentation for the `xml` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode XML",children:[{id:"definitions-decode-data",name:"data",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"xml",title:"XML",keywords:[],oneliner:"Reads structured data from an XML file.",element:!1,contextual:!1,details:`<p>Reads structured data from an XML file.</p>
<p>The XML file is parsed into an array of dictionaries and strings. XML nodes
can be elements or strings. Elements are represented as dictionaries with
the following keys:</p>
<ul>
<li><code>tag</code>: The name of the element as a string.</li>
<li><code>attrs</code>: A dictionary of the element's attributes as strings.</li>
<li><code>children</code>: An array of the element's child nodes.</li>
</ul>
<p>The XML file in the example contains a root <code>news</code> tag with multiple
<code>article</code> tags. Each article has a <code>title</code>, <code>author</code>, and <code>content</code> tag. The
<code>content</code> tag contains one or more paragraphs, which are represented as <code>p</code>
tags.</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">find-child</span><span class="typ-punct">(</span>elem<span class="typ-punct">,</span> tag<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  elem<span class="typ-punct">.</span>children
    <span class="typ-punct">.</span><span class="typ-func">find</span><span class="typ-punct">(</span>e <span class="typ-op">=&gt;</span> <span class="typ-str">&quot;tag&quot;</span> <span class="typ-key">in</span> e <span class="typ-key">and</span> e<span class="typ-punct">.</span>tag <span class="typ-op">==</span> tag<span class="typ-punct">)</span>
<span class="typ-punct">}</span>

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">article</span><span class="typ-punct">(</span>elem<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> title <span class="typ-op">=</span> <span class="typ-func">find-child</span><span class="typ-punct">(</span>elem<span class="typ-punct">,</span> <span class="typ-str">&quot;title&quot;</span><span class="typ-punct">)</span>
  <span class="typ-key">let</span> author <span class="typ-op">=</span> <span class="typ-func">find-child</span><span class="typ-punct">(</span>elem<span class="typ-punct">,</span> <span class="typ-str">&quot;author&quot;</span><span class="typ-punct">)</span>
  <span class="typ-key">let</span> pars <span class="typ-op">=</span> <span class="typ-func">find-child</span><span class="typ-punct">(</span>elem<span class="typ-punct">,</span> <span class="typ-str">&quot;content&quot;</span><span class="typ-punct">)</span>

  <span class="typ-func">heading</span><span class="typ-punct">(</span>title<span class="typ-punct">.</span>children<span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">10pt</span><span class="typ-punct">,</span> weight<span class="typ-punct">:</span> <span class="typ-str">&quot;medium&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    Published by
    <span class="typ-pol">#</span><span class="typ-pol">author</span><span class="typ-punct">.</span><span class="typ-pol">children</span><span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  <span class="typ-punct">]</span>

  <span class="typ-key">for</span> p <span class="typ-key">in</span> pars<span class="typ-punct">.</span>children <span class="typ-punct">{</span>
    <span class="typ-key">if</span> <span class="typ-punct">(</span><span class="typ-func">type</span><span class="typ-punct">(</span>p<span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-str">&quot;dictionary&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
      <span class="typ-func">parbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
      p<span class="typ-punct">.</span>children<span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
    <span class="typ-punct">}</span>
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span>

<span class="typ-key">#</span><span class="typ-key">let</span> data <span class="typ-op">=</span> <span class="typ-func">xml</span><span class="typ-punct">(</span><span class="typ-str">&quot;example.xml&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">for</span> elem <span class="typ-key">in</span> data<span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span>children <span class="typ-punct">{</span>
  <span class="typ-key">if</span> <span class="typ-punct">(</span><span class="typ-func">type</span><span class="typ-punct">(</span>elem<span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-str">&quot;dictionary&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
    <span class="typ-func">article</span><span class="typ-punct">(</span>elem<span class="typ-punct">)</span>
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/fa04fe4d944ff7c528a591f0ffc13253.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to an XML file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[{path:["xml"],name:"decode",title:"Decode XML",keywords:[],oneliner:"Reads structured data from an XML string/bytes.",element:!1,contextual:!1,details:"<p>Reads structured data from an XML string/bytes.</p>",example:null,self:!1,params:[{name:"data",details:"<p>XML data.</p>",example:null,types:["str","bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]}]}},children:[]},{route:"/docs/reference/data-loading/yaml/",title:"YAML",description:"Documentation for the `yaml` function.",part:null,outline:[{id:"summary",name:"Summary",children:[]},{id:"example",name:"Example",children:[]},{id:"parameters",name:"Parameters",children:[{id:"parameters-path",name:"path",children:[]}]},{id:"definitions",name:"Definitions",children:[{id:"definitions-decode",name:"Decode YAML",children:[{id:"definitions-decode-data",name:"data",children:[]}]},{id:"definitions-encode",name:"Encode YAML",children:[{id:"definitions-encode-value",name:"value",children:[]}]}]}],body:{kind:"func",content:{path:[],name:"yaml",title:"YAML",keywords:[],oneliner:"Reads structured data from a YAML file.",element:!1,contextual:!1,details:`<p>Reads structured data from a YAML file.</p>
<p>The file must contain a valid YAML object or array. YAML mappings will be
converted into Typst dictionaries, and YAML sequences will be converted into
Typst arrays. Strings and booleans will be converted into the Typst
equivalents, null-values (<code>null</code>, <code>~</code> or empty \`\`) will be converted into
<code><span class="typ-key">none</span></code>, and numbers will be converted to floats or integers depending on
whether they are whole numbers. Custom YAML tags are ignored, though the
loaded value will still be present.</p>
<p>Be aware that integers larger than 2<sup>63</sup>-1 will be converted to
floating point numbers, which may give an approximative value.</p>
<p>The YAML files in the example contain objects with authors as keys,
each with a sequence of their own submapping with the keys
&quot;title&quot; and &quot;published&quot;</p>
<h2 id="example">Example</h2>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">bookshelf</span><span class="typ-punct">(</span>contents<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">{</span>
  <span class="typ-key">for</span> <span class="typ-punct">(</span>author<span class="typ-punct">,</span> works<span class="typ-punct">)</span> <span class="typ-key">in</span> contents <span class="typ-punct">{</span>
    author
    <span class="typ-key">for</span> work <span class="typ-key">in</span> works <span class="typ-punct">[</span>
      <span class="typ-marker">-</span> <span class="typ-pol">#</span><span class="typ-pol">work</span><span class="typ-punct">.</span><span class="typ-pol">title</span> (<span class="typ-pol">#</span><span class="typ-pol">work</span><span class="typ-punct">.</span><span class="typ-pol">published</span>)
    <span class="typ-punct">]</span>
  <span class="typ-punct">}</span>
<span class="typ-punct">}</span>

<span class="typ-func">#</span><span class="typ-func">bookshelf</span><span class="typ-punct">(</span>
  <span class="typ-func">yaml</span><span class="typ-punct">(</span><span class="typ-str">&quot;scifi-authors.yaml&quot;</span><span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/22e27e5d3dc8476c10508026d50f941e.png" alt="Preview" /></div></div>`,example:null,self:!1,params:[{name:"path",details:`<p>Path to a YAML file.</p>
<p>For more details, see the <a href="/docs/reference/syntax/#paths">Paths section</a>.</p>`,example:null,types:["str"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[{path:["yaml"],name:"decode",title:"Decode YAML",keywords:[],oneliner:"Reads structured data from a YAML string/bytes.",element:!1,contextual:!1,details:"<p>Reads structured data from a YAML string/bytes.</p>",example:null,self:!1,params:[{name:"data",details:"<p>YAML data.</p>",example:null,types:["str","bytes"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["any"],scope:[]},{path:["yaml"],name:"encode",title:"Encode YAML",keywords:[],oneliner:"Encode structured data into a YAML string.",element:!1,contextual:!1,details:"<p>Encode structured data into a YAML string.</p>",example:null,self:!1,params:[{name:"value",details:"<p>Value to be encoded.</p>",example:null,types:["any"],strings:[],default:null,positional:!0,named:!1,required:!0,variadic:!1,settable:!1}],returns:["str"],scope:[]}]}},children:[]}]}]},{route:"/docs/guides/",title:"Guides",description:"Guides for Typst.",part:null,outline:[{id:"list-of-guides",name:"List Of Guides",children:[]}],body:{kind:"html",content:`<h1>Guides</h1>
<p>Welcome to the Guides section! Here, you'll find helpful material for specific
user groups or use cases. Currently, two guides are available: An introduction
to Typst for LaTeX users, and a detailed look at page setup. Feel free to
propose other topics for guides!</p>
<h2 id="list-of-guides">List of Guides</h2>
<ul>
<li><a href="/docs/guides/guide-for-latex-users/">Guide for LaTeX users</a></li>
<li><a href="/docs/guides/page-setup-guide/">Page setup guide</a></li>
<li><a href="/docs/guides/table-guide/">Table guide</a></li>
</ul>`},children:[{route:"/docs/guides/guide-for-latex-users/",title:"Guide for LaTeX users",description:`Are you a LaTeX user? This guide explains the differences and
similarities between Typst and LaTeX so you can get started quickly.
`,part:null,outline:[{id:"installation",name:"Installation",children:[]},{id:"getting-started",name:"Getting Started",children:[]},{id:"elements",name:"Elements",children:[]},{id:"commands",name:"Commands",children:[{id:"arguments",name:"Arguments",children:[]},{id:"data-types",name:"Data Types",children:[]},{id:"rules",name:"Rules",children:[]}]},{id:"templates",name:"Templates",children:[]},{id:"packages",name:"Packages",children:[]},{id:"maths",name:"Maths",children:[]},{id:"latex-look",name:"Latex Look",children:[]},{id:"bibliographies",name:"Bibliographies",children:[]},{id:"limitations",name:"Limitations",children:[]}],body:{kind:"html",content:`<h1>Guide for LaTeX users</h1>
<p>This page is a good starting point if you have used LaTeX before and want to try
out Typst. We will explore the main differences between these two systems from a
user perspective. Although Typst is not built upon LaTeX and has a different
syntax, you will learn how to use your LaTeX skills to get a head start.</p>
<p>Just like LaTeX, Typst is a markup-based typesetting system: You compose your
document in a text file and mark it up with commands and other syntax. Then, you
use a compiler to typeset the source file into a PDF. However, Typst also
differs from LaTeX in several aspects: For one, Typst uses more dedicated syntax
(like you may know from Markdown) for common tasks. Typst's commands are also
more principled: They all work the same, so unlike in LaTeX, you just need to
understand a few general concepts instead of learning different conventions for
each package. Moreover Typst compiles faster than LaTeX: Compilation usually
takes milliseconds, not seconds, so the web app and the compiler can both
provide instant previews.</p>
<p>In the following, we will cover some of the most common questions a user
switching from LaTeX will have when composing a document in Typst. If you prefer
a step-by-step introduction to Typst, check out our <a href="/docs/tutorial/" title="tutorial">tutorial</a>.</p>
<h2 id="installation">Installation</h2>
<p>You have two ways to use Typst: In <a href="https://typst.app/signup/">our web app</a> or
by <a href="https://github.com/typst/typst/releases">installing the compiler</a> on your
computer. When you use the web app, we provide a batteries-included
collaborative editor and run Typst in your browser, no installation required.</p>
<p>If you choose to use Typst on your computer instead, you can download the
compiler as a single, small binary which any user can run, no root privileges
required. Unlike LaTeX, packages are downloaded  when you first use them and
then cached locally, keeping your Typst installation lean. You can use your own
editor and decide where to store your files with the local compiler.</p>
<h2 id="getting-started">How do I create a new, empty document?</h2>
<p>That's easy. You just create a new, empty text file (the file extension is
<code>.typ</code>). No boilerplate is needed to get started. Simply start by writing your
text. It will be set on an empty A4-sized page. If you are using the web app,
click &quot;+ Empty document&quot; to create a new project with a file and enter the
editor. <a href="/docs/reference/model/parbreak/">Paragraph breaks</a> work just as they do in LaTeX, just use a
blank line.</p>
<div class="previewed-code"><pre><code>Hey there!

Here are two paragraphs. The
output is shown to the right.
</code></pre><div class="preview"><img src="/docs/assets/bd07a705daf6546e2b0446cfa77d57e7.png" alt="Preview" /></div></div>
<p>If you want to start from an preexisting LaTeX document instead, you can use
<a href="https://pandoc.org">Pandoc</a> to convert your source code to Typst markup. This
conversion is also built into our web app, so you can upload your <code>.tex</code> file to
start your project in Typst.</p>
<h2 id="elements">How do I create section headings, emphasis, ...?</h2>
<p>LaTeX uses the command <code>\\section</code> to create a section heading. Nested headings
are indicated with <code>\\subsection</code>, <code>\\subsubsection</code>, etc. Depending on your
document class, there is also <code>\\part</code> or <code>\\chapter</code>.</p>
<p>In Typst, <a href="/docs/reference/model/heading/">headings</a> are less verbose: You prefix the line with the
heading on it with an equals sign and a space to get a first-order heading:
<code><span class="typ-heading">= Introduction</span></code>. If you need a second-order heading, you use two equals
signs: <code><span class="typ-heading">== In this paper</span></code>. You can nest headings as deeply as you'd like by
adding more equals signs.</p>
<p>Emphasis (usually rendered as italic text) is expressed by enclosing text in
<code><span class="typ-emph">_underscores_</span></code> and strong emphasis (usually rendered in boldface) by using
<code><span class="typ-strong">*stars*</span></code> instead.</p>
<p>Here is a list of common markup commands used in LaTeX and their Typst
equivalents. You can also check out the <a href="/docs/reference/syntax/">full syntax cheat sheet</a>.</p>
<table><thead><tr><th style="text-align: left">Element</th><th style="text-align: left">LaTeX</th><th style="text-align: left">Typst</th><th style="text-align: left">See</th></tr></thead><tbody>
<tr><td style="text-align: left">Strong emphasis</td><td style="text-align: left"><code>\\textbf{strong}</code></td><td style="text-align: left"><code><span class="typ-strong">*strong*</span></code></td><td style="text-align: left"><a href="/docs/reference/model/strong/" title="\`strong\`"><code>strong</code></a></td></tr>
<tr><td style="text-align: left">Emphasis</td><td style="text-align: left"><code>\\emph{emphasis}</code></td><td style="text-align: left"><code><span class="typ-emph">_emphasis_</span></code></td><td style="text-align: left"><a href="/docs/reference/model/emph/" title="\`emph\`"><code>emph</code></a></td></tr>
<tr><td style="text-align: left">Monospace / code</td><td style="text-align: left"><code>\\texttt{print(1)}</code></td><td style="text-align: left"><code><span class="typ-raw">\`print(1)\`</span></code></td><td style="text-align: left"><a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a></td></tr>
<tr><td style="text-align: left">Link</td><td style="text-align: left"><code>\\url{https://typst.app}</code></td><td style="text-align: left"><code><span class="typ-link">https://typst.app/</span></code></td><td style="text-align: left"><a href="/docs/reference/model/link/" title="\`link\`"><code>link</code></a></td></tr>
<tr><td style="text-align: left">Label</td><td style="text-align: left"><code>\\label{intro}</code></td><td style="text-align: left"><code><span class="typ-label">&lt;intro&gt;</span></code></td><td style="text-align: left"><a href="/docs/reference/foundations/label/" title="\`label\`"><code>label</code></a></td></tr>
<tr><td style="text-align: left">Reference</td><td style="text-align: left"><code>\\ref{intro}</code></td><td style="text-align: left"><code><span class="typ-ref">@intro</span></code></td><td style="text-align: left"><a href="/docs/reference/model/ref/" title="\`ref\`"><code>ref</code></a></td></tr>
<tr><td style="text-align: left">Citation</td><td style="text-align: left"><code>\\cite{humphrey97}</code></td><td style="text-align: left"><code><span class="typ-ref">@humphrey97</span></code></td><td style="text-align: left"><a href="/docs/reference/model/cite/" title="\`cite\`"><code>cite</code></a></td></tr>
<tr><td style="text-align: left">Bullet list</td><td style="text-align: left"><code>itemize</code> environment</td><td style="text-align: left"><code><span class="typ-marker">-</span> List</code></td><td style="text-align: left"><a href="/docs/reference/model/list/" title="\`list\`"><code>list</code></a></td></tr>
<tr><td style="text-align: left">Numbered list</td><td style="text-align: left"><code>enumerate</code> environment</td><td style="text-align: left"><code><span class="typ-marker">+</span> List</code></td><td style="text-align: left"><a href="/docs/reference/model/enum/" title="\`enum\`"><code>enum</code></a></td></tr>
<tr><td style="text-align: left">Term list</td><td style="text-align: left"><code>description</code> environment</td><td style="text-align: left"><code><span class="typ-marker">/</span> <span class="typ-term">Term</span><span class="typ-punct">:</span> List</code></td><td style="text-align: left"><a href="/docs/reference/model/terms/" title="\`terms\`"><code>terms</code></a></td></tr>
<tr><td style="text-align: left">Figure</td><td style="text-align: left"><code>figure</code> environment</td><td style="text-align: left"><code>figure</code> function</td><td style="text-align: left"><a href="/docs/reference/model/figure/" title="\`figure\`"><code>figure</code></a></td></tr>
<tr><td style="text-align: left">Table</td><td style="text-align: left"><code>table</code> environment</td><td style="text-align: left"><code>table</code> function</td><td style="text-align: left"><a href="/docs/reference/model/table/" title="\`table\`"><code>table</code></a></td></tr>
<tr><td style="text-align: left">Equation</td><td style="text-align: left"><code>$x$</code>, <code>align</code> / <code>equation</code> environments</td><td style="text-align: left"><code><span class="typ-math-delim">$</span>x<span class="typ-math-delim">$</span></code>, <code><span class="typ-math-delim">$</span> x = y <span class="typ-math-delim">$</span></code></td><td style="text-align: left"><a href="/docs/reference/math/equation/"><code>equation</code></a></td></tr>
</tbody></table>
<p><a href="/docs/reference/model/list/">Lists</a> do not rely on environments in Typst. Instead, they have
lightweight syntax like headings. To create an unordered list (<code>itemize</code>),
prefix each line of an item with a hyphen:</p>
<div class="previewed-code"><pre><code>To write this list in Typst<span class="typ-escape">...</span>

<span class="typ-raw">\`\`\`latex
\\begin{itemize}
  \\item Fast
  \\item Flexible
  \\item Intuitive
\\end{itemize}
\`\`\`</span>

<span class="typ-escape">...</span>just type this:

<span class="typ-marker">-</span> Fast
<span class="typ-marker">-</span> Flexible
<span class="typ-marker">-</span> Intuitive

</code></pre><div class="preview"><img src="/docs/assets/7e23d1d4f79b27784ea498a94ba60dc4.png" alt="Preview" /></div></div>
<p>Nesting lists works just by using proper indentation. Adding a blank line in
between items results in a more <a href="/docs/reference/model/list/#parameters-tight">widely</a> spaced list.</p>
<p>To get a <a href="/docs/reference/model/enum/">numbered list</a> (<code>enumerate</code>) instead, use a <code>+</code> instead of the
hyphen. For a <a href="/docs/reference/model/terms/">term list</a> (<code>description</code>), write <code><span class="typ-marker">/</span> <span class="typ-term">Term</span><span class="typ-punct">:</span> Description</code>
instead.</p>
<h2 id="commands">How do I use a command?</h2>
<p>LaTeX heavily relies on commands (prefixed by backslashes). It uses these
<em>macros</em> to affect the typesetting process and to insert and manipulate content.
Some commands accept arguments, which are most frequently enclosed in curly
braces: <code>\\cite{rasmus}</code>.</p>
<p>Typst differentiates between <a href="/docs/reference/scripting/#blocks">markup mode and code mode</a>.
The default is markup mode, where you compose text and apply syntactic
constructs such as <code><span class="typ-strong">*stars for bold text*</span></code>. Code mode, on the other hand,
parallels programming languages like Python, providing the option to input and
execute segments of code.</p>
<p>Within Typst's markup, you can switch to code mode for a single command (or
rather, <em>expression</em>) using a hash (<code>#</code>). This is how you call functions to, for
example, split your project into different <a href="/docs/reference/scripting/#modules">files</a> or
render text based on some <a href="/docs/reference/scripting/#conditionals">condition</a>. Within code
mode, it is possible to include normal markup <a href="/docs/reference/foundations/content/"><em>content</em></a> by using
square brackets. Within code mode, this content is treated just as any other
normal value for a variable.</p>
<div class="previewed-code"><pre><code>First, a rectangle:
<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

Let me show how to do
<span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span><span class="typ-punct">[</span><span class="typ-emph">_underlined_</span> text<span class="typ-punct">]</span><span class="typ-punct">)</span>

We can also do some maths:
<span class="typ-pol">#</span><span class="typ-pol">calc</span><span class="typ-punct">.</span><span class="typ-func">max</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">,</span> <span class="typ-num">2</span> <span class="typ-op">*</span> <span class="typ-num">4</span><span class="typ-punct">)</span>

And finally a little loop:
<span class="typ-key">#</span><span class="typ-key">for</span> x <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">3</span><span class="typ-punct">)</span> <span class="typ-punct">[</span>
  Hi <span class="typ-pol">#</span><span class="typ-pol">x</span>.
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/592d8266074ad20a950ff517e0a08af9.png" alt="Preview" /></div></div>
<p>A function call always involves the name of the function (<a href="/docs/reference/visualize/rect/" title="\`rect\`"><code>rect</code></a>,
<a href="/docs/reference/text/underline/" title="\`underline\`"><code>underline</code></a>, <a href="/docs/reference/foundations/calc/#functions-max"><code>calc.max</code></a>, <a href="/docs/reference/foundations/array/#definitions-range"><code>range</code></a>) followed by
parentheses (as opposed to LaTeX where the square brackets and curly braces are
optional if the macro requires no arguments). The expected list of arguments
passed within those parentheses depends on the concrete function and is
specified in the <a href="/docs/reference/" title="reference">reference</a>.</p>
<h3 id="arguments">Arguments</h3>
<p>A function can have multiple arguments. Some arguments are positional, i.e., you
just provide the value: The function <code><span class="typ-func">#</span><span class="typ-func">lower</span><span class="typ-punct">(</span><span class="typ-str">&quot;SCREAM&quot;</span><span class="typ-punct">)</span></code> returns its argument
in all-lowercase. Many functions use named arguments instead of positional
arguments to increase legibility. For example, the dimensions and stroke of a
rectangle are defined with named arguments:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> red<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/10abfca0d6b7c4083767a57ba64f702d.png" alt="Preview" /></div></div>
<p>You specify a named argument by first entering its name (above, it's <code>width</code>,
<code>height</code>, and <code>stroke</code>), then a colon, followed by the value (<code>2cm</code>, <code>1cm</code>,
<code>red</code>). You can find the available named arguments in the <a href="/docs/reference/">reference
page</a> for each function or in the autocomplete panel when typing.
Named arguments are similar to how some LaTeX environments are configured, for
example, you would type <code>\\begin{enumerate}[label={\\alph*)}]</code> to start a list
with the labels <code>a)</code>, <code>b)</code>, and so on.</p>
<p>Often, you want to provide some <a href="/docs/reference/foundations/content/" title="content">content</a> to a function. For example, the LaTeX
command <code>\\underline{Alternative A}</code> would translate to
<code><span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">(</span><span class="typ-punct">[</span>Alternative A<span class="typ-punct">]</span><span class="typ-punct">)</span></code> in Typst. The square brackets indicate that a
value is <a href="/docs/reference/foundations/content/" title="content">content</a>. Within these brackets, you can use normal markup.
However, that's a lot of parentheses for a pretty simple construct. This is why
you can also move trailing content arguments after the parentheses (and omit the
parentheses if they would end up empty).</p>
<div class="previewed-code"><pre><code>Typst is an <span class="typ-func">#</span><span class="typ-func">underline</span><span class="typ-punct">[</span>alternative<span class="typ-punct">]</span>
to LaTeX.

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Get started here!<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/80a7dfba54c215b9e2c4c4e72516960c.png" alt="Preview" /></div></div>
<h3 id="data-types">Data types</h3>
<p>You likely already noticed that the arguments have distinctive data types. Typst
supports many <a href="/docs/reference/foundations/type/">data types</a>. Below, there is a table with some of the most
important ones and how to write them. In order to specify values of any of these
types, you have to be in code mode!</p>
<table><thead><tr><th style="text-align: left">Data type</th><th style="text-align: left">Example</th></tr></thead><tbody>
<tr><td style="text-align: left"><a href="/docs/reference/foundations/content/">Content</a></td><td style="text-align: left"><code><span class="typ-punct">[</span><span class="typ-strong">*fast*</span> typesetting<span class="typ-punct">]</span></code></td></tr>
<tr><td style="text-align: left"><a href="/docs/reference/foundations/str/">String</a></td><td style="text-align: left"><code><span class="typ-str">&quot;Pietro S. Author&quot;</span></code></td></tr>
<tr><td style="text-align: left"><a href="/docs/reference/foundations/int/">Integer</a></td><td style="text-align: left"><code><span class="typ-num">23</span></code></td></tr>
<tr><td style="text-align: left"><a href="/docs/reference/foundations/float/">Floating point number</a></td><td style="text-align: left"><code><span class="typ-num">1.459</span></code></td></tr>
<tr><td style="text-align: left"><a href="/docs/reference/layout/length/">Absolute length</a></td><td style="text-align: left"><code><span class="typ-num">12pt</span></code>, <code><span class="typ-num">5in</span></code>, <code><span class="typ-num">0.3cm</span></code>, ...</td></tr>
<tr><td style="text-align: left"><a href="/docs/reference/layout/ratio/">Relative length</a></td><td style="text-align: left"><code><span class="typ-num">65%</span></code></td></tr>
</tbody></table>
<p>The difference between content and string is that content can contain markup,
including function calls, while a string really is just a plain sequence of
characters.</p>
<p>Typst provides <a href="/docs/reference/scripting/#conditionals">control flow constructs</a> and
<a href="/docs/reference/scripting/#operators">operators</a> such as <code>+</code> for adding things or <code>==</code> for
checking equality between two variables.</p>
<p>You can also store values, including functions, in your own
<a href="/docs/reference/scripting/#bindings">variables</a>. This can be useful to perform computations on
them, create reusable automations, or reference a value multiple times. The
variable binding is accomplished with the let keyword, which works similar to
<code>\\newcommand</code>:</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// Store the integer \`5\`.</span>
<span class="typ-key">#</span><span class="typ-key">let</span> five <span class="typ-op">=</span> <span class="typ-num">5</span>

<span class="typ-comment">// Define a function that</span>
<span class="typ-comment">// increments a value.</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">inc</span><span class="typ-punct">(</span>i<span class="typ-punct">)</span> <span class="typ-op">=</span> i <span class="typ-op">+</span> <span class="typ-num">1</span>

<span class="typ-comment">// Reference the variables.</span>
I have <span class="typ-pol">#</span><span class="typ-pol">five</span> fingers.

If I had one more, I&#39;d have
<span class="typ-func">#</span><span class="typ-func">inc</span><span class="typ-punct">(</span>five<span class="typ-punct">)</span> fingers. Whoa!
</code></pre><div class="preview"><img src="/docs/assets/7ba7d0fd06285d9600d7d39c6dc09190.png" alt="Preview" /></div></div>
<h3 id="rules">Commands to affect the remaining document</h3>
<p>In LaTeX, some commands like <code>\\textbf{bold text}</code> receive an argument in curly
braces and only affect that argument. Other commands such as <code>\\bfseries bold text</code> act as switches (LaTeX calls this a declaration), altering the appearance
of all subsequent content within the document or current scope.</p>
<p>In Typst, the same function can be used both to affect the appearance for the
remainder of the document, a block (or scope), or just its arguments. For
example, <code><span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>bold text<span class="typ-punct">]</span></code> will only embolden its argument,
while <code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span></code> will embolden any text until the end of the
current block, or, if there is none, document. The effects of a function are
immediately obvious based on whether it is used in a call or a
<a href="/docs/reference/styling/#set-rules">set rule.</a></p>
<div class="previewed-code"><pre><code>I am starting out with small text.

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">14pt</span><span class="typ-punct">)</span>

This is a bit <span class="typ-func">#</span><span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">18pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>larger,<span class="typ-punct">]</span>
don&#39;t you think?
</code></pre><div class="preview"><img src="/docs/assets/674423a760cad9a7533fffd4c8e8e547.png" alt="Preview" /></div></div>
<p>Set rules may appear anywhere in the document. They can be thought of as
default argument values of their respective function:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">enum</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;I.&quot;</span><span class="typ-punct">)</span>

Good results can only be obtained by
<span class="typ-marker">+</span> following best practices
<span class="typ-marker">+</span> being aware of current results
  of other researchers
<span class="typ-marker">+</span> checking the data for biases
</code></pre><div class="preview"><img src="/docs/assets/25258dc7ad1ac52ef4b323cd0c533a84.png" alt="Preview" /></div></div>
<p>The <code>+</code> is syntactic sugar (think of it as an abbreviation) for a call to the
<a href="/docs/reference/model/enum/"><code>enum</code></a> function, to which we apply a set rule above.
<a href="/docs/reference/syntax/">Most syntax is linked to a function in this way.</a> If you need to style
an element beyond what its arguments enable, you can completely redefine its
appearance with a <a href="/docs/reference/styling/#show-rules">show rule</a> (somewhat comparable to
<code>\\renewcommand</code>).</p>
<p>You can achieve the effects of LaTeX commands like <code>\\textbf</code>, <code>\\textsf</code>,
<code>\\rmfamily</code>, <code>\\mdseries</code>, and <code>\\itshape</code> with the <a href="/docs/reference/text/text/#parameters-font"><code>font</code></a>,
<a href="/docs/reference/text/text/#parameters-style"><code>style</code></a>, and <a href="/docs/reference/text/text/#parameters-weight"><code>weight</code></a> arguments of the <code>text</code>
function. The text function can be used in a set rule (declaration style) or
with a content argument. To replace <code>\\textsc</code>, you can use the <a href="/docs/reference/text/smallcaps/" title="\`smallcaps\`"><code>smallcaps</code></a>
function, which renders its content argument as smallcaps. Should you want to
use it declaration style (like <code>\\scshape</code>), you can use an
<a href="/docs/reference/styling/#show-rules"><em>everything</em> show rule</a> that applies the function to the
rest of the scope:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> <span class="typ-func">smallcaps</span>

Boisterous Accusations
</code></pre><div class="preview"><img src="/docs/assets/ad22b6c8f3845378e934b24094c1cf86.png" alt="Preview" /></div></div>
<h2 id="templates">How do I load a document class?</h2>
<p>In LaTeX, you start your main <code>.tex</code> file with the <code>\\documentclass{article}</code>
command to define how your document is supposed to look. In that command, you
may have replaced <code>article</code> with another value such as <code>report</code> and <code>amsart</code> to
select a different look.</p>
<p>When using Typst, you style your documents with <a href="/docs/reference/foundations/function/">functions</a>.
Typically, you use a template that provides a function that styles your whole
document. First, you import the function from a template file. Then, you apply
it to your whole document. This is accomplished with a
<a href="/docs/reference/styling/#show-rules">show rule</a> that wraps the following document in a given
function. The following example illustrates how it works:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;conf.typ&quot;</span><span class="typ-punct">:</span> conf
<span class="typ-key">#</span><span class="typ-key">show</span><span class="typ-punct">:</span> conf<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span>
  title<span class="typ-punct">:</span> <span class="typ-punct">[</span>
    Towards Improved Modelling
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
  authors<span class="typ-punct">:</span> <span class="typ-punct">(</span>
    <span class="typ-punct">(</span>
      name<span class="typ-punct">:</span> <span class="typ-str">&quot;Theresa Tungsten&quot;</span><span class="typ-punct">,</span>
      affiliation<span class="typ-punct">:</span> <span class="typ-str">&quot;Artos Institute&quot;</span><span class="typ-punct">,</span>
      email<span class="typ-punct">:</span> <span class="typ-str">&quot;tung@artos.edu&quot;</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">(</span>
      name<span class="typ-punct">:</span> <span class="typ-str">&quot;Eugene Deklan&quot;</span><span class="typ-punct">,</span>
      affiliation<span class="typ-punct">:</span> <span class="typ-str">&quot;Honduras State&quot;</span><span class="typ-punct">,</span>
      email<span class="typ-punct">:</span> <span class="typ-str">&quot;e.deklan@hstate.hn&quot;</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  abstract<span class="typ-punct">:</span> <span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

Let&#39;s get started writing this
article by putting insightful
paragraphs right here!
</code></pre><div class="preview"><img src="/docs/assets/8a0fad3873b24bef5f899b3e85733b17.png" alt="Preview" /></div></div>
<p>The <a href="/docs/reference/scripting/#modules"><code><span class="typ-key">import</span></code></a> statement makes
<a href="/docs/reference/foundations/function/">functions</a> (and other definitions) from another file available.
In this example, it imports the <code>conf</code> function from the <code>conf.typ</code> file. This
function formats a document as a conference article. We use a show rule to apply
it to the document and also configure some metadata of the article. After
applying the show rule, we can start writing our article right away!</p>
<div class="info-box">
<p>Functions are Typst's &quot;commands&quot; and can transform their arguments to an output
value, including document <em>content.</em> Functions are &quot;pure&quot;, which means that they
cannot have any effects beyond creating an output value / output content. This
is in stark contrast to LaTeX macros that can have arbitrary effects on your
document.</p>
<p>To let a function style your whole document, the show rule processes everything
that comes after it and calls the function specified after the colon with the
result as an argument. The <code>.with</code> part is a <em>method</em> that takes the <code>conf</code>
function and pre-configures some if its arguments before passing it on to the
show rule.</p>
</div>
<p>In the web app, you can choose from predefined templates or even
create your own using the template wizard. Locally, you can use the
<code>typst init</code> CLI to create a new project from a template. Check out
<a href="https://typst.app/universe/search/?kind=templates">the list of templates</a> published on Typst
Universe, our official package ecosystem. You can also take a look at the
<a href="https://github.com/qjcg/awesome-typst"><code>awesome-typst</code> repository</a> to find
community templates that aren't yet available as packages.</p>
<p>You can also <a href="/docs/tutorial/making-a-template/">create your own, custom templates.</a>
They are shorter and more readable than the corresponding LaTeX <code>.sty</code> files by
orders of magnitude, so give it a try!</p>
<h2 id="packages">How do I load packages?</h2>
<p>Typst is &quot;batteries included,&quot; so the equivalent of many popular LaTeX packages
is built right-in. Below, we compiled a table with frequently loaded packages
and their corresponding Typst functions.</p>
<table><thead><tr><th style="text-align: left">LaTeX Package</th><th style="text-align: left">Typst Alternative</th></tr></thead><tbody>
<tr><td style="text-align: left">graphicx, svg</td><td style="text-align: left"><a href="/docs/reference/visualize/image/" title="\`image\`"><code>image</code></a> function</td></tr>
<tr><td style="text-align: left">tabularx</td><td style="text-align: left"><a href="/docs/reference/model/table/" title="\`table\`"><code>table</code></a>, <a href="/docs/reference/layout/grid/" title="\`grid\`"><code>grid</code></a> functions</td></tr>
<tr><td style="text-align: left">fontenc, inputenc, unicode-math</td><td style="text-align: left">Just start writing!</td></tr>
<tr><td style="text-align: left">babel, polyglossia</td><td style="text-align: left"><a href="/docs/reference/text/text/#parameters-lang"><code>text</code></a> function: <code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;zh&quot;</span><span class="typ-punct">)</span></code></td></tr>
<tr><td style="text-align: left">amsmath</td><td style="text-align: left"><a href="/docs/reference/math/">Math mode</a></td></tr>
<tr><td style="text-align: left">amsfonts, amssymb</td><td style="text-align: left"><a href="/docs/reference/symbols/"><code>sym</code></a> module and <a href="/docs/reference/syntax/#math">syntax</a></td></tr>
<tr><td style="text-align: left">geometry, fancyhdr</td><td style="text-align: left"><a href="/docs/reference/layout/page/" title="\`page\`"><code>page</code></a> function</td></tr>
<tr><td style="text-align: left">xcolor</td><td style="text-align: left"><a href="/docs/reference/text/text/#parameters-fill"><code>text</code></a> function: <code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;#0178A4&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code></td></tr>
<tr><td style="text-align: left">hyperref</td><td style="text-align: left"><a href="/docs/reference/model/link/" title="\`link\`"><code>link</code></a> function</td></tr>
<tr><td style="text-align: left">bibtex, biblatex, natbib</td><td style="text-align: left"><a href="/docs/reference/model/cite/" title="\`cite\`"><code>cite</code></a>, <a href="/docs/reference/model/bibliography/" title="\`bibliography\`"><code>bibliography</code></a> functions</td></tr>
<tr><td style="text-align: left">lstlisting, minted</td><td style="text-align: left"><a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> function and syntax</td></tr>
<tr><td style="text-align: left">parskip</td><td style="text-align: left"><a href="/docs/reference/layout/block/#parameters-spacing"><code>block</code></a> and <a href="/docs/reference/model/par/#parameters-first-line-indent"><code>par</code></a> functions</td></tr>
<tr><td style="text-align: left">csquotes</td><td style="text-align: left">Set the <a href="/docs/reference/text/text/#parameters-lang"><code>text</code></a> language and type <code>&quot;</code> or <code>&#39;</code></td></tr>
<tr><td style="text-align: left">caption</td><td style="text-align: left"><a href="/docs/reference/model/figure/" title="\`figure\`"><code>figure</code></a> function</td></tr>
<tr><td style="text-align: left">enumitem</td><td style="text-align: left"><a href="/docs/reference/model/list/" title="\`list\`"><code>list</code></a>, <a href="/docs/reference/model/enum/" title="\`enum\`"><code>enum</code></a>, <a href="/docs/reference/model/terms/" title="\`terms\`"><code>terms</code></a> functions</td></tr>
</tbody></table>
<p>Although <em>many</em> things are built-in, not everything can be. That's why Typst has
its own <a href="https://typst.app/universe/">package ecosystem</a> where the community share its creations
and automations. Let's take, for instance, the <em>cetz</em> package: This package
allows you to create complex drawings and plots. To use cetz in your document,
you can just write:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;@preview/cetz:0.2.1&quot;</span>
</code></pre>
<p>(The <code>@preview</code> is a <em>namespace</em> that is used while the package manager is still
in its early and experimental state. It will be replaced in the future.)</p>
<p>Aside from the official package hub, you might also want to check out the
<a href="https://github.com/qjcg/awesome-typst">awesome-typst repository</a>, which
compiles a curated list of resources created for Typst.</p>
<p>If you need to load functions and variables from another file within your
project, for example to use a template, you can use the same
<a href="/docs/reference/scripting/#modules"><code>import</code></a> statement with a file name rather than a
package specification. To instead include the textual content of another file,
you can use an <a href="/docs/reference/scripting/#modules"><code>include</code></a> statement. It will retrieve
the content of the specified file and put it in your document.</p>
<h2 id="maths">How do I input maths?</h2>
<p>To enter math mode in Typst, just enclose your equation in dollar signs. You can
enter display mode by adding spaces or newlines between the equation's contents
and its enclosing dollar signs.</p>
<div class="previewed-code"><pre><code>The sum of the numbers from
<span class="typ-math-delim">$</span>1<span class="typ-math-delim">$</span> to <span class="typ-math-delim">$</span>n<span class="typ-math-delim">$</span> is:

<span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">_</span><span class="typ-punct">(</span>k=1<span class="typ-punct">)</span><span class="typ-math-op">^</span>n k = <span class="typ-punct">(</span>n(n+1)<span class="typ-punct">)</span><span class="typ-math-op">/</span>2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/526b55db497e75dee33c0804f4bde82.png" alt="Preview" /></div></div>
<p><a href="/docs/reference/math/">Math mode</a> works differently than regular markup or code mode.
Numbers and single characters are displayed verbatim, while multiple consecutive
(non-number) characters will be interpreted as Typst variables.</p>
<p>Typst pre-defines a lot of useful variables in math mode. All Greek (<code>alpha</code>,
<code>beta</code>, ...) and some Hebrew letters (<code>alef</code>, <code>bet</code>, ...) are available through
their name. Some symbols are additionally available through shorthands, such as
<code>&lt;=</code>, <code>&gt;=</code>, and <code>-&gt;</code>.</p>
<p>Refer to the <a href="/docs/reference/symbols/">symbol pages</a> for a full list of the symbols.
If a symbol is missing, you can also access it through a
<a href="/docs/reference/syntax/#escapes">Unicode escape sequence</a>.</p>
<p>Alternate and related forms of symbols can often be selected by
<a href="/docs/reference/symbols/symbol/">appending a modifier</a> after a period. For example,
<code>arrow.l.squiggly</code> inserts a squiggly left-pointing arrow. If you want to insert
multiletter text in your expression instead, enclose it in double quotes:</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-pol">delta</span> <span class="typ-str">&quot;if&quot;</span> x <span class="typ-escape">&lt;=</span> 5 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/89c93e63c33371531182cf7e529191f7.png" alt="Preview" /></div></div>
<p>In Typst, delimiters will scale automatically for their expressions, just as if
<code>\\left</code> and <code>\\right</code> commands were implicitly inserted in LaTeX. You can
customize delimiter behaviour using the <a href="/docs/reference/math/lr/#functions-lr"><code>lr</code> function</a>. To
prevent a pair of delimiters from scaling, you can escape them with backslashes.</p>
<p>Typst will automatically set terms around a slash <code>/</code> as a fraction while
honoring operator precedence. All round parentheses not made redundant by the
fraction will appear in the output.</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> f(x) = <span class="typ-punct">(</span>x + 1<span class="typ-punct">)</span> <span class="typ-math-op">/</span> x <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/73ebae912df39e2a87e55081e4e4fd04.png" alt="Preview" /></div></div>
<p><a href="/docs/reference/math/attach/#functions-attach">Sub- and superscripts</a> work similarly in Typst and LaTeX.
<code><span class="typ-math-delim">$</span>x<span class="typ-math-op">^</span>2<span class="typ-math-delim">$</span></code> will produce a superscript, <code><span class="typ-math-delim">$</span>x<span class="typ-math-op">_</span>2<span class="typ-math-delim">$</span></code> yields a subscript. If you want
to include more than one value in a sub- or superscript, enclose their contents
in parentheses: <code><span class="typ-math-delim">$</span>x<span class="typ-math-op">_</span><span class="typ-punct">(</span>a <span class="typ-escape">-&gt;</span> <span class="typ-pol">epsilon</span><span class="typ-punct">)</span><span class="typ-math-delim">$</span></code>.</p>
<p>Since variables in math mode do not need to be prepended with a <code>#</code> or a <code>/</code>,
you can also call functions without these special characters:</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> f(x, y) <span class="typ-escape">:=</span> <span class="typ-func">cases</span><span class="typ-punct">(</span>
  1 <span class="typ-str">&quot;if&quot;</span> <span class="typ-punct">(</span>x <span class="typ-pol">dot</span> y<span class="typ-punct">)</span><span class="typ-math-op">/</span>2 <span class="typ-escape">&lt;=</span> 0<span class="typ-punct">,</span>
  2 <span class="typ-str">&quot;if&quot;</span> x <span class="typ-str">&quot;is even&quot;</span><span class="typ-punct">,</span>
  3 <span class="typ-str">&quot;if&quot;</span> x <span class="typ-pol">in</span> <span class="typ-pol">NN</span><span class="typ-punct">,</span>
  4 <span class="typ-str">&quot;else&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/52239d4e898a0de4f437de1cde1bb780.png" alt="Preview" /></div></div>
<p>The above example uses the <a href="/docs/reference/math/cases/"><code>cases</code> function</a> to describe f. Within
the cases function, arguments are delimited using commas and the arguments are
also interpreted as math. If you need to interpret arguments as Typst
values instead, prefix them with a <code>#</code>:</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> (a + b)<span class="typ-math-op">^</span>2
  = a<span class="typ-math-op">^</span>2
  + <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> <span class="typ-pol">#</span><span class="typ-pol">maroon</span><span class="typ-punct">,</span> 2 a b<span class="typ-punct">)</span>
  + b<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/20504bf06341b94d40c9f0626a1e4430.png" alt="Preview" /></div></div>
<p>You can use all Typst functions within math mode and insert any content. If you
want them to work normally, with code mode in the argument list, you can prefix
their call with a <code>#</code>. Nobody can stop you from using rectangles or emoji as
your variables anymore:</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-pol">sum</span><span class="typ-math-op">^</span>10<span class="typ-math-op">_</span><span class="typ-punct">(</span>🥸=1<span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">4mm</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">2mm</span><span class="typ-punct">)</span><span class="typ-math-op">/</span>🥸
  = 🧠 <span class="typ-pol">maltese</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/173f9be872ea1683c7c63a281447a366.png" alt="Preview" /></div></div>
<p>If you'd like to enter your mathematical symbols directly as Unicode, that is
possible, too!</p>
<p>Math calls can have two-dimensional argument lists using <code>;</code> as a delimiter. The
most common use for this is the <a href="/docs/reference/math/mat/"><code>mat</code> function</a> that creates
matrices:</p>
<div class="previewed-code"><pre><code><span class="typ-math-delim">$</span> <span class="typ-func">mat</span><span class="typ-punct">(</span>
  1<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
  2<span class="typ-punct">,</span> 2<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
  <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">down</span><span class="typ-punct">,</span> <span class="typ-pol">dots</span><span class="typ-punct">.</span><span class="typ-pol">v</span><span class="typ-punct">;</span>
  10<span class="typ-punct">,</span> 10<span class="typ-punct">,</span> <span class="typ-escape">...</span><span class="typ-punct">,</span> 10<span class="typ-punct">;</span>
<span class="typ-punct">)</span> <span class="typ-math-delim">$</span>
</code></pre><div class="preview"><img src="/docs/assets/e74d575aa2545eeb15ec59ff988d0e05.png" alt="Preview" /></div></div>
<h2 id="latex-look">How do I get the &quot;LaTeX look?&quot;</h2>
<p>Papers set in LaTeX have an unmistakeable look. This is mostly due to their
font, Computer Modern, justification, narrow line spacing, and wide margins.</p>
<p>The example below</p>
<ul>
<li>sets wide <a href="/docs/reference/layout/page/#parameters-margin">margins</a></li>
<li>enables <a href="/docs/reference/model/par/#parameters-justify">justification</a>, <a href="/docs/reference/model/par/#parameters-leading">tighter lines</a> and
<a href="/docs/reference/model/par/#parameters-first-line-indent">first-line-indent</a></li>
<li><a href="/docs/reference/text/text/#parameters-font">sets the font</a> to &quot;New Computer Modern&quot;, an OpenType derivative of
Computer Modern for both text and <a href="/docs/reference/text/raw/">code blocks</a></li>
<li>disables paragraph <a href="/docs/reference/layout/block/#parameters-spacing">spacing</a></li>
<li>increases <a href="/docs/reference/layout/block/#parameters-spacing">spacing</a> around <a href="/docs/reference/model/heading/">headings</a></li>
</ul>
<pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>margin<span class="typ-punct">:</span> <span class="typ-num">1.75in</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>leading<span class="typ-punct">:</span> <span class="typ-num">0.55em</span><span class="typ-punct">,</span> spacing<span class="typ-punct">:</span> <span class="typ-num">0.55em</span><span class="typ-punct">,</span> first-line-indent<span class="typ-punct">:</span> <span class="typ-num">1.8em</span><span class="typ-punct">,</span> justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;New Computer Modern&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">raw</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;New Computer Modern Mono&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>above<span class="typ-punct">:</span> <span class="typ-num">1.4em</span><span class="typ-punct">,</span> below<span class="typ-punct">:</span> <span class="typ-num">1em</span><span class="typ-punct">)</span>
</code></pre>
<p>This should be a good starting point! If you want to go further, why not create
a reusable template?</p>
<h2 id="bibliographies">Bibliographies</h2>
<p>Typst includes a fully-featured bibliography system that is compatible with
BibTeX files. You can continue to use your <code>.bib</code> literature libraries by
loading them with the <a href="/docs/reference/model/bibliography/" title="\`bibliography\`"><code>bibliography</code></a> function. Another possibility is to use
<a href="https://github.com/typst/hayagriva/blob/main/docs/file-format.md">Typst's YAML-based native format</a>.</p>
<p>Typst uses the Citation Style Language to define and process citation and
bibliography styles. You can compare CSL files to BibLaTeX's <code>.bbx</code> files.
The compiler already includes <a href="/docs/reference/model/bibliography/#parameters-style">over 80 citation styles</a>,
but you can use any CSL-compliant style from the
<a href="https://github.com/citation-style-language/styles">CSL repository</a> or write
your own.</p>
<p>You can cite an entry in your bibliography or reference a label in your document
with the same syntax: <code><span class="typ-ref">@key</span></code> (this would reference an entry called <code>key</code>).
Alternatively, you can use the <a href="/docs/reference/model/cite/" title="\`cite\`"><code>cite</code></a> function.</p>
<p>Alternative forms for your citation, such as year only and citations for natural
use in prose (cf. <code>\\citet</code> and <code>\\textcite</code>) are available with
<a href="/docs/reference/model/cite/#parameters-form"><code><span class="typ-func">#</span><span class="typ-func">cite</span><span class="typ-punct">(</span><span class="typ-label">&lt;key&gt;</span><span class="typ-punct">,</span> form<span class="typ-punct">:</span> <span class="typ-str">&quot;prose&quot;</span><span class="typ-punct">)</span></code></a>.</p>
<p>You can find more information on the documentation page of the <a href="/docs/reference/model/bibliography/" title="\`bibliography\`"><code>bibliography</code></a>
function.</p>
<h2 id="limitations">What limitations does Typst currently have compared to LaTeX?</h2>
<p>Although Typst can be a LaTeX replacement for many today, there are still
features that Typst does not (yet) support. Here is a list of them which, where
applicable, contains possible workarounds.</p>
<ul>
<li>
<p><strong>Well-established plotting ecosystem.</strong> LaTeX users often create elaborate
charts along with their documents in PGF/TikZ. The Typst ecosystem does not
yet offer the same breadth of available options, but the ecosystem around the
<a href="https://github.com/cetz-package/cetz"><code>cetz</code></a> package is catching up quickly.</p>
</li>
<li>
<p><strong>Change page margins without a pagebreak.</strong> In LaTeX, margins can always be
adjusted, even without a pagebreak. To change margins in Typst, you use the
<a href="/docs/reference/layout/page/"><code>page</code> function</a> which will force a page break. If you just want a few
paragraphs to stretch into the margins, then reverting to the old margins, you
can use the <a href="/docs/reference/layout/pad/"><code>pad</code> function</a> with negative padding.</p>
</li>
<li>
<p><strong>Include PDFs as images.</strong> In LaTeX, it has become customary to insert vector
graphics as PDF or EPS files. Typst supports neither format as an image
format, but you can easily convert both into SVG files with <a href="https://cloudconvert.com/pdf-to-svg">online
tools</a> or
<a href="https://inkscape.org/">Inkscape</a>. The web app will automatically convert PDF
files to SVG files upon uploading them.</p>
</li>
</ul>`},children:[]},{route:"/docs/guides/page-setup-guide/",title:"Page setup guide",description:`An in-depth guide to setting page dimensions, margins, and page numbers in
Typst. Learn how to create appealing and clear layouts and get there quickly.
`,part:null,outline:[{id:"customize-margins",name:"Customize Margins",children:[{id:"change-margins",name:"Change Margins",children:[]},{id:"alternating-margins",name:"Alternating Margins",children:[]}]},{id:"headers-and-footers",name:"Headers And Footers",children:[{id:"specific-pages",name:"Specific Pages",children:[]},{id:"specific-elements",name:"Specific Elements",children:[]}]},{id:"page-numbers",name:"Page Numbers",children:[{id:"custom-footer-with-page-numbers",name:"Custom Footer With Page Numbers",children:[]},{id:"skip-pages",name:"Skip Pages",children:[]}]},{id:"columns",name:"Columns",children:[{id:"columns-anywhere",name:"Columns Anywhere",children:[]},{id:"balanced-columns",name:"Balanced Columns",children:[]}]},{id:"one-off-modifications",name:"One Off Modifications",children:[]}],body:{kind:"html",content:`<h1>Page setup guide</h1>
<p>Your page setup is a big part of the first impression your document gives. Line
lengths, margins, and columns influence
<a href="https://practicaltypography.com/page-margins.html">appearance</a> and
<a href="https://designregression.com/article/line-length-revisited-following-the-research">legibility</a>
while the right headers and footers will help your reader easily navigate your
document. This guide will help you to customize pages, margins, headers,
footers, and page numbers so that they are the right fit for your content and
you can get started with writing.</p>
<p>In Typst, each page has a width, a height, and margins on all four sides. The
top and bottom margins may contain a header and footer. The set rule of the
<a href="/docs/reference/layout/page/"><code>page</code></a> element is where you control all of the page setup. If you
make changes with this set rule, Typst will ensure that there is a new and
conforming empty page afterward, so it may insert a page break. Therefore, it is
best to specify your <a href="/docs/reference/layout/page/"><code>page</code></a> set rule at the start of your document or
in your template.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">100%</span><span class="typ-punct">,</span>
  inset<span class="typ-punct">:</span> <span class="typ-num">4pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>
  paper<span class="typ-punct">:</span> <span class="typ-str">&quot;iso-b7&quot;</span><span class="typ-punct">,</span>
  header<span class="typ-punct">:</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Header<span class="typ-punct">]</span><span class="typ-punct">,</span>
  footer<span class="typ-punct">:</span> <span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">)</span><span class="typ-punct">[</span>Footer<span class="typ-punct">]</span><span class="typ-punct">,</span>
  number-align<span class="typ-punct">:</span> center<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> aqua<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">40%</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ab9659d1ec5ac84e16e03e6aa82d1ba4.png" alt="Preview" /></div></div>
<p>This example visualizes the dimensions for page content, headers, and footers.
The page content is the page size (ISO B7) minus each side's default margin. In
the top and the bottom margin, there are stroked rectangles visualizing the
header and footer. They do not touch the main content, instead, they are offset
by 30% of the respective margin. You can control this offset by specifying the
<a href="/docs/reference/layout/page/#parameters-header-ascent"><code>header-ascent</code></a> and
<a href="/docs/reference/layout/page/#parameters-footer-descent"><code>footer-descent</code></a> arguments.</p>
<p>Below, the guide will go more into detail on how to accomplish common page setup
requirements with examples.</p>
<h2 id="customize-margins">Customize page size and margins</h2>
<p>Typst's default page size is A4 paper. Depending on your region and your use
case, you will want to change this. You can do this by using the
<a href="/docs/reference/layout/page/"><code>page</code></a> set rule and passing it a string argument to use a common page
size. Options include the complete ISO 216 series (e.g. <code>&quot;iso-a4&quot;</code>, <code>&quot;iso-c2&quot;</code>),
customary US formats like <code>&quot;us-legal&quot;</code> or <code>&quot;us-letter&quot;</code>, and more. Check out the
reference for the <a href="/docs/reference/layout/page/#parameters-paper">page's paper argument</a> to learn about all
available options.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-str">&quot;us-letter&quot;</span><span class="typ-punct">)</span>

This page likes freedom.
</code></pre><div class="preview"><img src="/docs/assets/828f42bbb481b4210a8708ec41f65b53.png" alt="Preview" /></div></div>
<p>If you need to customize your page size to some dimensions, you can specify the
named arguments <a href="/docs/reference/layout/page/#parameters-width"><code>width</code></a> and <a href="/docs/reference/layout/page/#parameters-height"><code>height</code></a> instead.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">12cm</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">12cm</span><span class="typ-punct">)</span>

This page is a square.
</code></pre><div class="preview"><img src="/docs/assets/fc4fb28dc56c5411e3b036148cfa1704.png" alt="Preview" /></div></div>
<h3 id="change-margins">Change the page's margins</h3>
<p>Margins are a vital ingredient for good typography:
<a href="http://webtypography.net/2.1.2">Typographers consider lines that fit between 45 and 75 characters best length
for legibility</a> and your margins and
<a href="#columns">columns</a> help define line widths. By default, Typst will create
margins proportional to the page size of your document. To set custom margins,
you will use the <a href="/docs/reference/layout/page/#parameters-margin"><code>margin</code></a> argument in the <a href="/docs/reference/layout/page/"><code>page</code></a> set
rule.</p>
<p>The <code>margin</code> argument will accept a length if you want to set all margins to the
same width. However, you often want to set different margins on each side. To do
this, you can pass a dictionary:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>
  top<span class="typ-punct">:</span> <span class="typ-num">3cm</span><span class="typ-punct">,</span>
  bottom<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span>
  x<span class="typ-punct">:</span> <span class="typ-num">1.5cm</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">100</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/fb96b3463dad35c2666ee3427f9eec78.png" alt="Preview" /></div></div>
<p>The page margin dictionary can have keys for each side (<code>top</code>, <code>bottom</code>, <code>left</code>,
<code>right</code>), but you can also control left and right together by setting the <code>x</code>
key of the margin dictionary, like in the example. Likewise, the top and bottom
margins can be adjusted together by setting the <code>y</code> key.</p>
<p>If you do not specify margins for all sides in the margin dictionary, the old
margins will remain in effect for the unset sides. To prevent this and set all
remaining margins to a common size, you can use the <code>rest</code> key. For example,
<code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>left<span class="typ-punct">:</span> <span class="typ-num">1.5in</span><span class="typ-punct">,</span> rest<span class="typ-punct">:</span> <span class="typ-num">1in</span><span class="typ-punct">)</span><span class="typ-punct">)</span></code> will set the left margin to 1.5
inches and the remaining margins to one inch.</p>
<h3 id="alternating-margins">Different margins on alternating pages</h3>
<p>Sometimes, you'll need to alternate horizontal margins for even and odd pages,
for example, to have more room towards the spine of a book than on the outsides
of its pages. Typst keeps track of whether a page is to the left or right of the
binding. You can use this information and set the <code>inside</code> or <code>outside</code> keys of
the margin dictionary. The <code>inside</code> margin points towards the spine, and the
<code>outside</code> margin points towards the edge of the bound book.</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>margin<span class="typ-punct">:</span> <span class="typ-punct">(</span>inside<span class="typ-punct">:</span> <span class="typ-num">2.5cm</span><span class="typ-punct">,</span> outside<span class="typ-punct">:</span> <span class="typ-num">2cm</span><span class="typ-punct">,</span> y<span class="typ-punct">:</span> <span class="typ-num">1.75cm</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
</code></pre>
<p>Typst will assume that documents written in Left-to-Right scripts are bound on
the left while books written in Right-to-Left scripts are bound on the right.
However, you will need to change this in some cases: If your first page is
output by a different app, the binding is reversed from Typst's perspective.
Also, some books, like English-language Mangas are customarily bound on the
right, despite English using Left-to-Right script. To change the binding side
and explicitly set where the <code>inside</code> and <code>outside</code> are, set the
<a href="/docs/reference/layout/page/#parameters-binding"><code>binding</code></a> argument in the <a href="/docs/reference/layout/page/"><code>page</code></a> set rule.</p>
<pre><code><span class="typ-comment">// Produce a book bound on the right,</span>
<span class="typ-comment">// even though it is set in Spanish.</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;es&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>binding<span class="typ-punct">:</span> right<span class="typ-punct">)</span>
</code></pre>
<p>If <code>binding</code> is <code>left</code>, <code>inside</code> margins will be on the left on odd pages, and
vice versa.</p>
<h2 id="headers-and-footers">Add headers and footers</h2>
<p>Headers and footers are inserted in the top and bottom margins of every page.
You can add custom headers and footers or just insert a page number.</p>
<p>In case you need more than just a page number, the best way to insert a header
and a footer are the <a href="/docs/reference/layout/page/#parameters-header"><code>header</code></a> and <a href="/docs/reference/layout/page/#parameters-footer"><code>footer</code></a>
arguments of the <a href="/docs/reference/layout/page/"><code>page</code></a> set rule. You can pass any content as their
values:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>header<span class="typ-punct">:</span> <span class="typ-punct">[</span>
  <span class="typ-emph">_Lisa Strassner&#39;s Thesis_</span>
  <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span>
  National Academy of Sciences
<span class="typ-punct">]</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">150</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/770c238b60422faa2a42c6d95f7ad680.png" alt="Preview" /></div></div>
<p>Headers are bottom-aligned by default so that they do not collide with the top
edge of the page. You can change this by wrapping your header in the
<a href="/docs/reference/layout/align/"><code>align</code></a> function.</p>
<h3 id="specific-pages">Different header and footer on specific pages</h3>
<p>You'll need different headers and footers on some pages. For example, you may
not want a header and footer on the title page. The example below shows how to
conditionally remove the header on the first page:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>header<span class="typ-punct">:</span> <span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-key">if</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span> <span class="typ-op">&gt;</span> <span class="typ-num">1</span> <span class="typ-punct">[</span>
    <span class="typ-emph">_Lisa Strassner&#39;s Thesis_</span>
    <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span>
    National Academy of Sciences
  <span class="typ-punct">]</span>
<span class="typ-punct">}</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">150</span><span class="typ-punct">)</span>
</code></pre>
<p>This example may look intimidating, but let's break it down: By using the
<code><span class="typ-key">context</span></code> keyword, we are telling Typst that the header depends on where we
are in the document. We then ask Typst if the page <a href="/docs/reference/introspection/counter/" title="counter">counter</a> is larger than one
at our (context-dependent) current position. The page counter starts at one, so
we are skipping the header on a single page. Counters may have multiple levels.
This feature is used for items like headings, but the page counter will always
have a single level, so we can just look at the first one.</p>
<p>You can, of course, add an <code>else</code> to this example to add a different header to
the first page instead.</p>
<h3 id="specific-elements">Adapt headers and footers on pages with specific elements</h3>
<p>The technique described in the previous section can be adapted to perform more
advanced tasks using Typst's labels. For example, pages with big tables could
omit their headers to help keep clutter down. We will mark our tables with a
<code>&lt;big-table&gt;</code> <a href="/docs/reference/foundations/label/" title="label">label</a> and use the <a href="/docs/reference/introspection/query/">query system</a> to find out if such a
label exists on the current page:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>header<span class="typ-punct">:</span> <span class="typ-key">context</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> page-counter <span class="typ-op">=</span>
  <span class="typ-key">let</span> matches <span class="typ-op">=</span> <span class="typ-func">query</span><span class="typ-punct">(</span><span class="typ-label">&lt;big-table&gt;</span><span class="typ-punct">)</span>
  <span class="typ-key">let</span> current <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  <span class="typ-key">let</span> has-table <span class="typ-op">=</span> matches<span class="typ-punct">.</span><span class="typ-func">any</span><span class="typ-punct">(</span>m <span class="typ-op">=&gt;</span>
    <span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>m<span class="typ-punct">.</span><span class="typ-func">location</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">)</span> <span class="typ-op">==</span> current
  <span class="typ-punct">)</span>

  <span class="typ-key">if</span> <span class="typ-key">not</span> has-table <span class="typ-punct">[</span>
    <span class="typ-emph">_Lisa Strassner&#39;s Thesis_</span>
    <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span>
    National Academy of Sciences
  <span class="typ-punct">]</span>
<span class="typ-punct">}</span><span class="typ-punct">)</span>)

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">100</span><span class="typ-punct">)</span>
<span class="typ-func">#</span><span class="typ-func">pagebreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span> <span class="typ-op">*</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>C<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>D<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-label">&lt;big-table&gt;</span>
</code></pre>
<p>Here, we query for all instances of the <code>&lt;big-table&gt;</code> label. We then check that
none of the tables are on the page at our current position. If so, we print the
header. This example also uses variables to be more concise. Just as above, you
could add an <code>else</code> to add another header instead of deleting it.</p>
<h2 id="page-numbers">Add and customize page numbers</h2>
<p>Page numbers help readers keep track of and reference your document more easily.
The simplest way to insert page numbers is the <a href="/docs/reference/layout/page/#parameters-numbering"><code>numbering</code></a>
argument of the <a href="/docs/reference/layout/page/"><code>page</code></a> set rule. You can pass a
<a href="/docs/reference/model/numbering/#parameters-numbering"><em>numbering pattern</em></a> string that shows how you want your
pages to be numbered.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1&quot;</span><span class="typ-punct">)</span>

This is a numbered page.
</code></pre><div class="preview"><img src="/docs/assets/5a1f47e9947fc20c87d14ada54b34c08.png" alt="Preview" /></div></div>
<p>Above, you can check out the simplest conceivable example. It adds a single
Arabic page number at the center of the footer. You can specify other characters
than <code>&quot;1&quot;</code> to get other numerals. For example, <code>&quot;i&quot;</code> will yield lowercase Roman
numerals. Any character that is not interpreted as a number will be output
as-is. For example, put dashes around your page number by typing this:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;— 1 —&quot;</span><span class="typ-punct">)</span>

This is a — numbered — page.
</code></pre><div class="preview"><img src="/docs/assets/8d6de3086bd6ee7bdeb0f3859393a6d7.png" alt="Preview" /></div></div>
<p>You can add the total number of pages by entering a second number character in
the string.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1 of 1&quot;</span><span class="typ-punct">)</span>

This is one of many numbered pages.
</code></pre><div class="preview"><img src="/docs/assets/10d20307bfd105cd4fc8771600071e48.png" alt="Preview" /></div></div>
<p>Go to the <a href="/docs/reference/model/numbering/#parameters-numbering"><code>numbering</code> function reference</a> to learn more
about the arguments you can pass here.</p>
<p>In case you need to right- or left-align the page number, use the
<a href="/docs/reference/layout/page/#parameters-number-align"><code>number-align</code></a> argument of the <a href="/docs/reference/layout/page/"><code>page</code></a> set rule.
Alternating alignment between even and odd pages is not currently supported
using this property. To do this, you'll need to specify a custom footer with
your footnote and query the page counter as described in the section on
conditionally omitting headers and footers.</p>
<h3 id="custom-footer-with-page-numbers">Custom footer with page numbers</h3>
<p>Sometimes, you need to add other content than a page number to your footer.
However, once a footer is specified, the <a href="/docs/reference/layout/page/#parameters-numbering"><code>numbering</code></a> argument
of the <a href="/docs/reference/layout/page/"><code>page</code></a> set rule is ignored. This section shows you how to add
a custom footer with page numbers and more.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>footer<span class="typ-punct">:</span> <span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-strong">*American Society of Proceedings*</span>
  <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">display</span><span class="typ-punct">(</span>
    <span class="typ-str">&quot;1/1&quot;</span><span class="typ-punct">,</span>
    both<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">]</span><span class="typ-punct">)</span>

This page has a custom footer.
</code></pre><div class="preview"><img src="/docs/assets/fc00c5ba421fe4a74c1fae1e1c631d78.png" alt="Preview" /></div></div>
<p>First, we add some strongly emphasized text on the left and add free space to
fill the line. Then, we call <code>counter(page)</code> to retrieve the page counter and
use its <code>display</code> function to show its current value. We also set <code>both</code> to
<code><span class="typ-key">true</span></code> so that our numbering pattern applies to the current <em>and</em> final page
number.</p>
<p>We can also get more creative with the page number. For example, let's insert a
circle for each page.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>footer<span class="typ-punct">:</span> <span class="typ-key">context</span> <span class="typ-punct">[</span>
  <span class="typ-strong">*Fun Typography Club*</span>
  <span class="typ-func">#</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-punct">(</span>num<span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">get</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
  <span class="typ-key">#</span><span class="typ-key">let</span> circles <span class="typ-op">=</span> num <span class="typ-op">*</span> <span class="typ-punct">(</span>
    <span class="typ-func">box</span><span class="typ-punct">(</span><span class="typ-func">circle</span><span class="typ-punct">(</span>
      radius<span class="typ-punct">:</span> <span class="typ-num">2pt</span><span class="typ-punct">,</span>
      fill<span class="typ-punct">:</span> navy<span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
  <span class="typ-func">#</span><span class="typ-func">box</span><span class="typ-punct">(</span>
    inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>bottom<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    circles<span class="typ-punct">.</span><span class="typ-func">join</span><span class="typ-punct">(</span><span class="typ-func">h</span><span class="typ-punct">(</span><span class="typ-num">1pt</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">]</span><span class="typ-punct">)</span>

This page has a custom footer.
</code></pre><div class="preview"><img src="/docs/assets/39b4d5f21b1adfb2c7d942eb4c743527.png" alt="Preview" /></div></div>
<p>In this example, we use the number of pages to create an array of
<a href="/docs/reference/visualize/circle/">circles</a>. The circles are wrapped in a <a href="/docs/reference/layout/box/" title="box">box</a> so they can all appear on
the same line because they are blocks and would otherwise create paragraph
breaks. The length of this <a href="/docs/reference/foundations/array/" title="array">array</a> depends on the current page number.</p>
<p>We then insert the circles at the right side of the footer, with 1pt of space
between them. The join method of an array will attempt to
<a href="/docs/reference/scripting/#blocks"><em>join</em></a> the different values of an array into a single
value, interspersed with its argument. In our case, we get a single content
value with circles and spaces between them that we can use with the align
function. Finally, we use another box to ensure that the text and the circles
can share a line and use the <a href="/docs/reference/layout/box/#parameters-inset"><code>inset</code> argument</a> to raise the circles
a bit so they line up nicely with the text.</p>
<h3 id="skip-pages">Reset the page number and skip pages</h3>
<p>Do you, at some point in your document, need to reset the page number? Maybe you
want to start with the first page only after the title page. Or maybe you need
to skip a few page numbers because you will insert pages into the final printed
product.</p>
<p>The right way to modify the page number is to manipulate the page <a href="/docs/reference/introspection/counter/" title="counter">counter</a>. The
simplest manipulation is to set the counter back to 1.</p>
<pre><code><span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span>
</code></pre>
<p>This line will reset the page counter back to one. It should be placed at the
start of a page because it will otherwise create a page break. You can also
update the counter given its previous value by passing a function:</p>
<pre><code><span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>n <span class="typ-op">=&gt;</span> n <span class="typ-op">+</span> <span class="typ-num">5</span><span class="typ-punct">)</span>
</code></pre>
<p>In this example, we skip five pages. <code>n</code> is the current value of the page
counter and <code>n + 5</code> is the return value of our function.</p>
<p>In case you need to retrieve the actual page number instead of the value of the
page counter, you can use the <a href="/docs/reference/introspection/location/#definitions-page"><code>page</code></a> method on the return
value of the <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> function:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span>page<span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span>n <span class="typ-op">=&gt;</span> n <span class="typ-op">+</span> <span class="typ-num">5</span><span class="typ-punct">)</span>

<span class="typ-comment">// This returns one even though the</span>
<span class="typ-comment">// page counter was incremented by 5.</span>
<span class="typ-key">#</span><span class="typ-key">context</span> <span class="typ-func">here</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/77a9fe8cd4156cb567da134e3a99b670.png" alt="Preview" /></div></div>
<p>You can also obtain the page numbering pattern from the location returned by
<code>here</code> with the <a href="/docs/reference/introspection/location/#definitions-page-numbering"><code>page-numbering</code></a> method.</p>
<h2 id="columns">Add columns</h2>
<p>Add columns to your document to fit more on a page while maintaining legible
line lengths. Columns are vertical blocks of text which are separated by some
whitespace. This space is called the gutter.</p>
<p>To lay out your content in columns, just specify the desired number of columns
in a <a href="/docs/reference/layout/page/#parameters-columns"><code>page</code></a> set rule. To adjust the amount of space between
the columns, add a set rule on the <a href="/docs/reference/layout/columns/"><code>columns</code> function</a>, specifying
the <code>gutter</code> parameter.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">columns</span><span class="typ-punct">(</span>gutter<span class="typ-punct">:</span> <span class="typ-num">12pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">30</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/cef782262805e4217f34f92849da183e.png" alt="Preview" /></div></div>
<p>Very commonly, scientific papers have a single-column title and abstract, while
the main body is set in two-columns. To achieve this effect, Typst's <a href="/docs/reference/layout/place/"><code>place</code>
function</a> can temporarily escape the two-column layout by specifying
<code>float: <span class="typ-key">true</span></code> and <code>scope: <span class="typ-str">&quot;parent&quot;</span></code>:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">par</span><span class="typ-punct">(</span>justify<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">place</span><span class="typ-punct">(</span>
  top <span class="typ-op">+</span> center<span class="typ-punct">,</span>
  float<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>
  scope<span class="typ-punct">:</span> <span class="typ-str">&quot;parent&quot;</span><span class="typ-punct">,</span>
  <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-num">1.4em</span><span class="typ-punct">,</span> weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    Impacts of Odobenidae
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-heading">== About seals in the wild</span>
<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/d272e0a2e242425a5547aa14a4be3360.png" alt="Preview" /></div></div>
<p><em>Floating placement</em> refers to elements being pushed to the top or bottom of the
column or page, with the remaining content flowing in between. It is also
frequently used for <a href="/docs/reference/model/figure/#parameters-placement">figures</a>.</p>
<h3 id="columns-anywhere">Use columns anywhere in your document</h3>
<p>To create columns within a nested layout, e.g. within a rectangle, you can use
the <a href="/docs/reference/layout/columns/"><code>columns</code> function</a> directly. However, it should really only be
used within nested layouts. At the page-level, the page set rule is preferrable
because it has better interactions with things like page-level floats,
footnotes, and line numbers.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">rect</span><span class="typ-punct">(</span>
  width<span class="typ-punct">:</span> <span class="typ-num">6cm</span><span class="typ-punct">,</span>
  height<span class="typ-punct">:</span> <span class="typ-num">3.5cm</span><span class="typ-punct">,</span>
  <span class="typ-func">columns</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">,</span> gutter<span class="typ-punct">:</span> <span class="typ-num">12pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    In the dimly lit gas station,
    a solitary taxi stood silently,
    its yellow paint fading with
    time. Its windows were dark,
    its engine idle, and its tires
    rested on the cold concrete.
  <span class="typ-punct">]</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/463c003cd7069c6308e081b096200542.png" alt="Preview" /></div></div>
<h3 id="balanced-columns">Balanced columns</h3>
<p>If the columns on the last page of a document differ greatly in length, they may
create a lopsided and unappealing layout. That's why typographers will often
equalize the length of columns on the last page. This effect is called balancing
columns. Typst cannot yet balance columns automatically. However, you can
balance columns manually by placing <a href="/docs/reference/layout/colbreak/"><code><span class="typ-func">#</span><span class="typ-func">colbreak</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code></a> at an
appropriate spot in your markup, creating the desired column break manually.</p>
<h2 id="one-off-modifications">One-off modifications</h2>
<p>You do not need to override your page settings if you need to insert a single
page with a different setup. For example, you may want to insert a page that's
flipped to landscape to insert a big table or change the margin and columns for
your title page. In this case, you can call <a href="/docs/reference/layout/page/"><code>page</code></a> as a function with
your content as an argument and the overrides as the other arguments. This will
insert enough new pages with your overridden settings to place your content on
them. Typst will revert to the page settings from the set rule after the call.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">page</span><span class="typ-punct">(</span>flipped<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-heading">= Multiplication table</span>

  <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-num">5</span> <span class="typ-op">*</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-op">..</span><span class="typ-key">for</span> x <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">10</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
      <span class="typ-key">for</span> y <span class="typ-key">in</span> <span class="typ-func">range</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">,</span> <span class="typ-num">6</span><span class="typ-punct">)</span> <span class="typ-punct">{</span>
        <span class="typ-punct">(</span><span class="typ-func">str</span><span class="typ-punct">(</span>x<span class="typ-op">*</span>y<span class="typ-punct">)</span><span class="typ-punct">,</span><span class="typ-punct">)</span>
      <span class="typ-punct">}</span>
    <span class="typ-punct">}</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/e8570350a5a7ca27450386f4506ceb1.png" alt="Preview" /></div></div>`},children:[]},{route:"/docs/guides/table-guide/",title:"Table guide",description:`Not sure how to change table strokes? Need to rotate a table? This guide
explains all you need to know about tables in Typst.
`,part:null,outline:[{id:"basic-tables",name:"Basic Tables",children:[]},{id:"column-sizes",name:"Column Sizes",children:[]},{id:"captions-and-references",name:"Captions And References",children:[]},{id:"fills",name:"Fills",children:[{id:"fill-override",name:"Fill Override",children:[]}]},{id:"strokes",name:"Strokes",children:[{id:"individual-lines",name:"Individual Lines",children:[]},{id:"stroke-override",name:"Stroke Override",children:[]},{id:"stroke-functions",name:"Stroke Functions",children:[]},{id:"double-stroke",name:"Double Stroke",children:[]}]},{id:"alignment",name:"Alignment",children:[]},{id:"merge-cells",name:"Merge Cells",children:[]},{id:"rotate-table",name:"Rotate Table",children:[]},{id:"table-across-pages",name:"Table Across Pages",children:[]},{id:"importing-data",name:"Importing Data",children:[]},{id:"table-and-grid",name:"Table And Grid",children:[]}],body:{kind:"html",content:`<h1>Table guide</h1>
<p>Tables are a great way to present data to your readers in an easily readable,
compact, and organized manner. They are not only used for numerical values, but
also survey responses, task planning, schedules, and more. Because of this wide
set of possible applications, there is no single best way to lay out a table.
Instead, think about the data you want to highlight, your document's overarching
design, and ultimately how your table can best serve your readers.</p>
<p>Typst can help you with your tables by automating styling, importing data from
other applications, and more! This guide takes you through a few of the most
common questions you may have when adding a table to your document with Typst.
Feel free to skip to the section most relevant to you – we designed this guide
to be read out of order.</p>
<p>If you want to look up a detail of how tables work, you should also <a href="/docs/reference/model/table/">check out
their reference page</a>. And if you are looking for a table of contents
rather than a normal table, the reference page of the <a href="/docs/reference/model/outline/"><code>outline</code>
function</a> is the right place to learn more.</p>
<h2 id="basic-tables">How to create a basic table?</h2>
<p>In order to create a table in Typst, use the <a href="/docs/reference/model/table/"><code>table</code> function</a>. For a
basic table, you need to tell the table function two things:</p>
<ul>
<li>The number of columns</li>
<li>The content for each of the table cells</li>
</ul>
<p>So, let's say you want to create a table with two columns describing the
ingredients for a cookie recipe:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Amount*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Ingredient*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>360g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Baking flour<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>250g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Butter (room temp.)<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>150g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Brown sugar<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>100g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Cane sugar<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>100g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>70% cocoa chocolate<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>100g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>35-40% cocoa chocolate<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Eggs<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Pinch<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Salt<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Drizzle<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Vanilla extract<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/ed4b4fee51591368326743f9855e90b7.png" alt="Preview" /></div></div>
<p>This example shows how to call, configure, and populate a table. Both the column
count and cell contents are passed to the table as arguments. The <a href="/docs/reference/foundations/function/">argument
list</a> is surrounded by round parentheses. In it, we first pass the
column count as a named argument. Then, we pass multiple <a href="/docs/reference/foundations/content/">content
blocks</a> as positional arguments. Each content block contains the
contents for a single cell.</p>
<p>To make the example more legible, we have placed two content block arguments on
each line, mimicking how they would appear in the table. You could also write
each cell on its own line. Typst does not care on which line you place the
arguments. Instead, Typst will place the content cells from left to right (or
right to left, if that is the writing direction of your language) and then from
top to bottom. It will automatically add enough rows to your table so that it
fits all of your content.</p>
<p>It is best to wrap the header row of your table in the <a href="/docs/reference/model/table/#definitions-header"><code>table.header</code>
function</a>. This clarifies your intent and will also allow future
versions of Typst to make the output more accessible to users with a screen
reader:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span><span class="typ-strong">*Amount*</span><span class="typ-punct">]</span><span class="typ-punct">[</span><span class="typ-strong">*Ingredient*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>360g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Baking flour<span class="typ-punct">]</span><span class="typ-punct">,</span>
 <span class="typ-comment">// ... the remaining cells</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/203df069be4731c2403787a1be85d8bd.png" alt="Preview" /></div></div>
<p>You could also write a show rule that automatically <a href="/docs/reference/model/strong/">strongly
emphasizes</a> the contents of the first cells for all tables. This
quickly becomes useful if your document contains multiple tables!</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Amount<span class="typ-punct">]</span><span class="typ-punct">[</span>Ingredient<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>360g<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Baking flour<span class="typ-punct">]</span><span class="typ-punct">,</span>
 <span class="typ-comment">// ... the remaining cells</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6372ae1024814e3d675ab55258cdfa0b.png" alt="Preview" /></div></div>
<p>We are using a show rule with a selector for cell coordinates here instead of
applying our styles directly to <code>table.header</code>. This is due to a current
limitation of Typst that will be fixed in a future release.</p>
<p>Congratulations, you have created your first table! Now you can proceed to
<a href="#column-sizes">change column sizes</a>, <a href="#strokes">adjust the strokes</a>, <a href="#fills">add
striped rows</a>, and more!</p>
<h2 id="column-sizes">How to change the column sizes?</h2>
<p>If you create a table and specify the number of columns, Typst will make each
column large enough to fit its largest cell. Often, you want something
different, for example, to make a table span the whole width of the page. You
can provide a list, specifying how wide you want each column to be, through the
<code>columns</code> argument. There are a few different ways to specify column widths:</p>
<ul>
<li>First, there is <code><span class="typ-key">auto</span></code>. This is the default behavior and tells Typst to grow
the column to fit its contents. If there is not enough space, Typst will try
its best to distribute the space among the <code><span class="typ-key">auto</span></code>-sized columns.</li>
<li><a href="/docs/reference/layout/length/">Lengths</a> like <code><span class="typ-num">6cm</span></code>, <code><span class="typ-num">0.7in</span></code>, or <code><span class="typ-num">120pt</span></code>. As usual, you can
also use the font-dependent <code>em</code> unit. This is a multiple of your current font
size. It's useful if you want to size your table so that it always fits
about the same amount of text, independent of font size.</li>
<li>A <a href="/docs/reference/layout/ratio/">ratio in percent</a> such as <code><span class="typ-num">40%</span></code>. This will make the column take
up 40% of the total horizontal space available to the table, so either the
inner width of the page or the table's container. You can also mix ratios and
lengths into <a href="/docs/reference/layout/relative/">relative lengths</a>. Be mindful that even if you
specify a list of column widths that sum up to 100%, your table could still
become larger than its container. This is because there can be
<a href="/docs/reference/model/table/#parameters-gutter">gutter</a> between columns that is not included in the column
widths. If you want to make a table fill the page, the next option is often
very useful.</li>
<li>A <a href="/docs/reference/layout/fraction/">fractional part of the free space</a> using the <code>fr</code> unit, such as
<code>1fr</code>. This unit allows you to distribute the available space to columns. It
works as follows: First, Typst sums up the lengths of all columns that do not
use <code>fr</code>s. Then, it determines how much horizontal space is left. This
horizontal space then gets distributed to all columns denominated in <code>fr</code>s.
During this process, a <code>2fr</code> column will become twice as wide as a <code>1fr</code>
column. This is where the name comes from: The width of the column is its
fraction of the total fractionally sized columns.</li>
</ul>
<p>Let's put this to use with a table that contains the dates, numbers, and
descriptions of some routine checks. The first two columns are <code>auto</code>-sized and
the last column is <code>1fr</code> wide as to fill the whole page.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Date<span class="typ-punct">]</span><span class="typ-punct">[</span>°No<span class="typ-punct">]</span><span class="typ-punct">[</span>Description<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>24/01/03<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>813<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Filtered participant pool<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>24/01/03<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>477<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Transitioned to sec. regimen<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>24/01/11<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>051<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Cycled treatment substrate<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/887d2493de088306864a7195b677c4e2.png" alt="Preview" /></div></div>
<p>Here, we have passed our list of column lengths as an <a href="/docs/reference/foundations/array/" title="array">array</a>, enclosed in round
parentheses, with its elements separated by commas. The first two columns are
automatically sized, so that they take on the size of their content and the
third column is sized as <code><span class="typ-num">1fr</span></code> so that it fills up the remainder of the space
on the page. If you wanted to instead change the second column to be a bit more
spacious, you could replace its entry in the <code>columns</code> array with a value like
<code><span class="typ-num">6em</span></code>.</p>
<h2 id="captions-and-references">How to caption and reference my table?</h2>
<p>A table is just as valuable as the information your readers draw from it. You
can enhance the effectiveness of both your prose and your table by making a
clear connection between the two with a cross-reference. Typst can help you with
automatic <a href="/docs/reference/model/ref/">references</a> and the <a href="/docs/reference/model/figure/"><code>figure</code> function</a>.</p>
<p>Just like with images, wrapping a table in the <code>figure</code> function allows you to
add a caption and a label, so you can reference the figure elsewhere. Wrapping
your table in a figure also lets you use the figure's <code>placement</code> parameter to
float it to the top or bottom of a page.</p>
<p>Let's take a look at a captioned table and how to reference it in prose:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
    stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>

    table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Test Item<span class="typ-punct">]</span><span class="typ-punct">[</span>Specification<span class="typ-punct">]</span><span class="typ-punct">[</span>Test Result<span class="typ-punct">]</span><span class="typ-punct">[</span>Compliance<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Voltage<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>220V ± 5%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>218V<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Pass<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Current<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5A ± 0.5A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4.2A<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Fail<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Probe results for design A<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span> <span class="typ-label">&lt;probe-a&gt;</span>

The results from <span class="typ-ref">@probe-a</span> show that the design is not yet optimal.
We will show how its performance can be improved in this section.
</code></pre><div class="preview"><img src="/docs/assets/79957c8899c72bc5839532c9648f4085.png" alt="Preview" /></div></div>
<p>The example shows how to wrap a table in a figure, set a caption and a label,
and how to reference that label. We start by using the <code>figure</code> function. It
expects the contents of the figure as a positional argument. We just put the
table function call in its argument list, omitting the <code>#</code> character because it
is only needed when calling a function in markup mode. We also add the caption
as a named argument (above or below) the table.</p>
<p>After the figure call, we put a label in angle brackets (<code><span class="typ-label">&lt;probe-a&gt;</span></code>). This
tells Typst to remember this element and make it referenceable under this name
throughout your document. We can then reference it in prose by using the at sign
and the label name <code><span class="typ-ref">@probe-a</span></code>. Typst will print a nicely formatted reference
and automatically update the label if the table's number changes.</p>
<h2 id="fills">How to get a striped table?</h2>
<p>Many tables use striped rows or columns instead of strokes to differentiate
between rows and columns. This effect is often called <em>zebra stripes.</em> Tables
with zebra stripes are popular in Business and commercial Data Analytics
applications, while academic applications tend to use strokes instead.</p>
<p>To add zebra stripes to a table, we use the <code>table</code> function's <code>fill</code> argument.
It can take three kinds of arguments:</p>
<ul>
<li>A single color (this can also be a gradient or a pattern) to fill all cells
with. Because we want some cells to have another color, this is not useful if
we want to build zebra tables.</li>
<li>An array with colors which Typst cycles through for each column. We can use an
array with two elements to get striped columns.</li>
<li>A function that takes the horizontal coordinate <code>x</code> and the vertical
coordinate <code>y</code> of a cell and returns its fill. We can use this to create
horizontal stripes or <a href="/docs/reference/layout/grid/#definitions-cell">checkerboard patterns</a>.</li>
</ul>
<p>Let's start with an example of a horizontally striped table:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">)</span>

<span class="typ-comment">// Medium bold table header.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;medium&quot;</span><span class="typ-punct">)</span>

<span class="typ-comment">// Bold titles.</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>

<span class="typ-comment">// See the strokes section for details on this!</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">frame</span><span class="typ-punct">(</span>stroke<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
  left<span class="typ-punct">:</span> <span class="typ-key">if</span> x <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> stroke <span class="typ-punct">}</span><span class="typ-punct">,</span>
  right<span class="typ-punct">:</span> stroke<span class="typ-punct">,</span>
  top<span class="typ-punct">:</span> <span class="typ-key">if</span> y <span class="typ-op">&lt;</span> <span class="typ-num">2</span> <span class="typ-punct">{</span> stroke <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  bottom<span class="typ-punct">:</span> stroke<span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;EAF2F5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-key">none</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-func">frame</span><span class="typ-punct">(</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;21222C&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">0.4fr</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>

  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Month<span class="typ-punct">]</span><span class="typ-punct">[</span>Title<span class="typ-punct">]</span><span class="typ-punct">[</span>Author<span class="typ-punct">]</span><span class="typ-punct">[</span>Genre<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>January<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>The Great Gatsby<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>F. Scott Fitzgerald<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Classic<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>February<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>To Kill a Mockingbird<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Harper Lee<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Drama<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>March<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>1984<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>George Orwell<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Dystopian<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>April<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>The Catcher in the Rye<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>J.D. Salinger<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Coming-of-Age<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/93388ee2c7f7c8082fda06458e6e99ef.png" alt="Preview" /></div></div>
<p>This example shows a book club reading list. The line <code>fill: <span class="typ-punct">(</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;EAF2F5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-key">none</span><span class="typ-punct">)</span></code> in <code>table</code>'s set rule is all that is needed to add striped columns. It
tells Typst to alternate between coloring columns with a light blue (in the
<a href="/docs/reference/visualize/color/#definitions-rgb"><code>rgb</code></a> function call) and nothing (<code><span class="typ-key">none</span></code>). Note that we
extracted all of our styling from the <code>table</code> function call itself into set and
show rules, so that we can automatically reuse it for multiple tables.</p>
<p>Because setting the stripes itself is easy we also added some other styles to
make it look nice. The other code in the example provides a dark blue
<a href="#stroke-functions">stroke</a> around the table and below the first line and
emboldens the first row and the column with the book title. See the
<a href="#strokes">strokes</a> section for details on how we achieved this stroke
configuration.</p>
<p>Let's next take a look at how we can change only the set rule to achieve
horizontal stripes instead:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>y<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;EAF2F5&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-func">frame</span><span class="typ-punct">(</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;21222C&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/8f0158fb034ce2d46240e50f575a7de5.png" alt="Preview" /></div></div>
<p>We just need to replace the set rule from the previous example with this one and
get horizontal stripes instead. Here, we are passing a function to <code>fill</code>. It
discards the horizontal coordinate with an underscore and then checks if the
vertical coordinate <code>y</code> of the cell is odd. If so, the cell gets a light blue
fill, otherwise, no fill is returned.</p>
<p>Of course, you can make this function arbitrarily complex. For example, if you
want to stripe the rows with a light and darker shade of blue, you could do
something like this:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span><span class="typ-key">none</span><span class="typ-punct">,</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;EAF2F5&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;DDEAEF&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">rem</span><span class="typ-punct">(</span>y<span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-func">frame</span><span class="typ-punct">(</span><span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;21222C&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/54242e657e634a0f0afe6b9587479afd.png" alt="Preview" /></div></div>
<p>This example shows an alternative approach to write our fill function. The
function uses an array with three colors and then cycles between its values for
each row by indexing the array with the remainder of <code>y</code> divided by 3.</p>
<p>Finally, here is a bonus example that uses the <em>stroke</em> to achieve striped rows:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
    y<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
    left<span class="typ-punct">:</span> <span class="typ-key">if</span> x <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">even</span><span class="typ-punct">(</span>y<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-num">1pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
    right<span class="typ-punct">:</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">even</span><span class="typ-punct">(</span>y<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-num">1pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4f66bbd79f918dcad1cf77f768f1511b.png" alt="Preview" /></div></div>
<h3 id="fill-override">Manually overriding a cell's fill color</h3>
<p>Sometimes, the fill of a cell needs not to vary based on its position in the
table, but rather based on its contents. We can use the <a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code>
element</a> in the <code>table</code>'s parameter list to wrap a cell's content
and override its fill.</p>
<p>For example, here is a list of all German presidents, with the cell borders
colored in the color of their party.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;Roboto&quot;</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">cdu</span><span class="typ-punct">(</span>name<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">[</span>CDU<span class="typ-punct">]</span><span class="typ-punct">,</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> black<span class="typ-punct">,</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> white<span class="typ-punct">,</span> name<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">spd</span><span class="typ-punct">(</span>name<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">[</span>SPD<span class="typ-punct">]</span><span class="typ-punct">,</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> red<span class="typ-punct">,</span> <span class="typ-func">text</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> white<span class="typ-punct">,</span> name<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> <span class="typ-func">fdp</span><span class="typ-punct">(</span>name<span class="typ-punct">)</span> <span class="typ-op">=</span> <span class="typ-punct">(</span><span class="typ-punct">[</span>FDP<span class="typ-punct">]</span><span class="typ-punct">,</span> table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">,</span> name<span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span><span class="typ-punct">,</span>

  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Tenure<span class="typ-punct">]</span><span class="typ-punct">[</span>Party<span class="typ-punct">]</span><span class="typ-punct">[</span>President<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1949-1959<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">fdp</span><span class="typ-punct">[</span>Theodor Heuss<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1959-1969<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">cdu</span><span class="typ-punct">[</span>Heinrich Lübke<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1969-1974<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">spd</span><span class="typ-punct">[</span>Gustav Heinemann<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1974-1979<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">fdp</span><span class="typ-punct">[</span>Walter Scheel<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1979-1984<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">cdu</span><span class="typ-punct">[</span>Karl Carstens<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1984-1994<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">cdu</span><span class="typ-punct">[</span>Richard von Weizsäcker<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1994-1999<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">cdu</span><span class="typ-punct">[</span>Roman Herzog<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1999-2004<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">spd</span><span class="typ-punct">[</span>Johannes Rau<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2004-2010<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">cdu</span><span class="typ-punct">[</span>Horst Köhler<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2010-2012<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-func">cdu</span><span class="typ-punct">[</span>Christian Wulff<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2012-2017<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>n/a<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Joachim Gauck<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2017-<span class="typ-punct">]</span><span class="typ-punct">,</span>     <span class="typ-op">..</span><span class="typ-func">spd</span><span class="typ-punct">[</span>Frank-Walter-Steinmeier<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/4897f73b9edf59b25a18b5a4c4b01505.png" alt="Preview" /></div></div>
<p>In this example, we make use of variables because there only have been a total
of three parties whose members have become president (and one unaffiliated
president). Their colors will repeat multiple times, so we store a function that
produces an array with their party's name and a table cell with that party's
color and the president's name (<code>cdu</code>, <code>spd</code>, and <code>fdp</code>). We then use these
functions in the <code>table</code> argument list instead of directly adding the name. We
use the <a href="/docs/reference/foundations/arguments/#spreading">spread operator</a> <code>..</code> to turn the items of the
arrays into single cells. We could also write something like
<code><span class="typ-punct">[</span>FDP<span class="typ-punct">]</span>, table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>fill<span class="typ-punct">:</span> yellow<span class="typ-punct">)</span><span class="typ-punct">[</span>Theodor Heuss<span class="typ-punct">]</span></code> for each cell directly in the
<code>table</code>'s argument list, but that becomes unreadable, especially for the parties
whose colors are dark so that they require white text. We also delete vertical
strokes and set the font to Roboto.</p>
<p>The party column and the cell color in this example communicate redundant
information on purpose: Communicating important data using color only is a bad
accessibility practice. It disadvantages users with vision impairment and is in
violation of universal access standards, such as the
<a href="https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html">WCAG 2.1 Success Criterion 1.4.1</a>.
To improve this table, we added a column printing the party name. Alternatively,
you could have made sure to choose a color-blindness friendly palette and mark
up your cells with an additional label that screen readers can read out loud.
The latter feature is not currently supported by Typst, but will be added in a
future release. You can check how colors look for color-blind readers with
<a href="https://chromewebstore.google.com/detail/colorblindly/floniaahmccleoclneebhhmnjgdfijgg">this Chrome extension</a>,
<a href="https://helpx.adobe.com/photoshop/using/proofing-colors.html">Photoshop</a>, or
<a href="https://docs.gimp.org/2.10/en/gimp-display-filter-dialog.html">GIMP</a>.</p>
<h2 id="strokes">How to adjust the lines in a table?</h2>
<p>By default, Typst adds strokes between each row and column of a table. You can
adjust these strokes in a variety of ways. Which one is the most practical,
depends on the modification you want to make and your intent:</p>
<ul>
<li>Do you want to style all tables in your document, irrespective of their size
and content? Use the <code>table</code> function's <a href="/docs/reference/model/table/#parameters-stroke">stroke</a> argument in a
set rule.</li>
<li>Do you want to customize all lines in a single table? Use the <code>table</code>
function's <a href="/docs/reference/model/table/#parameters-stroke">stroke</a> argument when calling the table function.</li>
<li>Do you want to change, add, or remove the stroke around a single cell? Use the
<code>table.cell</code> element in the argument list of your table call.</li>
<li>Do you want to change, add, or remove a single horizontal or vertical stroke
in a single table? Use the <a href="/docs/reference/model/table/#definitions-hline" title="\`table.hline\`"><code>table.hline</code></a> and <a href="/docs/reference/model/table/#definitions-vline" title="\`table.vline\`"><code>table.vline</code></a> elements in the
argument list of your table call.</li>
</ul>
<p>We will go over all of these options with examples next! First, we will tackle
the <code>table</code> function's <a href="/docs/reference/model/table/#parameters-stroke">stroke</a> argument. Here, you can adjust
both how the table's lines get drawn and configure which lines are drawn at all.</p>
<p>Let's start by modifying the color and thickness of the stroke:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-num">0.5pt</span> <span class="typ-op">+</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;666675&quot;</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Monday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>11.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>13.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Tuesday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>8.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>14.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Wednesday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>9.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>18.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>13.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b6432f96bd33c85c228349ec47ffd608.png" alt="Preview" /></div></div>
<p>This makes the table lines a bit less wide and uses a bluish gray. You can see
that we added a width in point to a color to achieve our customized stroke. This
addition yields a value of the <a href="/docs/reference/visualize/stroke/">stroke type</a>. Alternatively, you can
use the dictionary representation for strokes which allows you to access
advanced features such as dashed lines.</p>
<p>The previous example showed how to use the stroke argument in the table
function's invocation. Alternatively, you can specify the stroke argument in the
<code>table</code>'s set rule. This will have exactly the same effect on all subsequent
<code>table</code> calls as if the stroke argument was specified in the argument list. This
is useful if you are writing a template or want to style your whole document.</p>
<pre><code><span class="typ-comment">// Renders the exact same as the last example</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">0.5pt</span> <span class="typ-op">+</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;666675&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Monday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>11.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>13.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Tuesday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>8.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>14.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Wednesday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>9.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>18.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>13.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre>
<p>For small tables, you sometimes want to suppress all strokes because they add
too much visual noise. To do this, just set the stroke argument to <code><span class="typ-key">none</span></code>:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Monday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>11.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>13.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>4.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Tuesday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>8.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>14.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-strong">*Wednesday*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>9.0<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>18.5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>13.0<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/174e94b789f158c71133a0d3c85e74a3.png" alt="Preview" /></div></div>
<p>If you want more fine-grained control of where lines get placed in your table,
you can also pass a dictionary with the keys <code>top</code>, <code>left</code>, <code>right</code>, <code>bottom</code>
(controlling the respective cell sides), <code>x</code>, <code>y</code> (controlling vertical and
horizontal strokes), and <code>rest</code> (covers all strokes not styled by other
dictionary entries). All keys are optional; omitted keys will be treated as if
their value was the default value. For example, to get a table with only
horizontal lines, you can do this:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> horizon<span class="typ-punct">,</span>
  <span class="typ-punct">[</span>☒<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Close cabin door<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>☐<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Start engines<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>☐<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Radio tower<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>☐<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Push back<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/b1e225011b8ae5c80cbc6ab9925fa619.png" alt="Preview" /></div></div>
<p>This turns off all vertical strokes and leaves the horizontal strokes in place.
To achieve the reverse effect (only horizontal strokes), set the stroke argument
to <code><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span></code> instead.</p>
<p><a href="#stroke-functions">Further down in the guide</a>, we cover how to use a function
in the stroke argument to customize all strokes individually. This is how you
achieve more complex stroking patterns.</p>
<h3 id="individual-lines">Adding individual lines in the table</h3>
<p>If you want to add a single horizontal or vertical line in your table, for
example to separate a group of rows, you can use the <a href="/docs/reference/model/table/#definitions-hline" title="\`table.hline\`"><code>table.hline</code></a> and
<a href="/docs/reference/model/table/#definitions-vline" title="\`table.vline\`"><code>table.vline</code></a> elements for horizontal and vertical lines, respectively. Add
them to the argument list of the <code>table</code> function just like you would add
individual cells and a header.</p>
<p>Let's take a look at the following example from the reference:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">0.6pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-comment">// Morning schedule abridged.</span>
  <span class="typ-punct">[</span>14:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Tracked Layout<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>15:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Automations<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>16:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Workshop: Tables<span class="typ-punct">]</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>19:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Day 1 Attendee Mixer<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/fadab5ceeac44c07807dc4bb29b27096.png" alt="Preview" /></div></div>
<p>In this example, you can see that we have placed a call to <code>table.hline</code> between
the cells, producing a horizontal line at that spot. We also used a set rule on
the element to reduce its stroke width to make it fit better with the weight of
the font.</p>
<p>By default, Typst places horizontal and vertical lines after the current row or
column, depending on their position in the argument list. You can also manually
move them to a different position by adding the <code>y</code> (for <code>hline</code>) or <code>x</code> (for
<code>vline</code>) argument. For example, the code below would produce the same result:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">set</span> table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-num">0.6pt</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>
  columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-comment">// Morning schedule abridged.</span>
  table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>14:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Tracked Layout<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>15:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Talk: Automations<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>16:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Workshop: Tables<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>19:00<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Day 1 Attendee Mixer<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre>
<p>Let's imagine you are working with a template that shows none of the table
strokes except for one between the first and second row. Now, since you have one
table that also has labels in the first column, you want to add an extra
vertical line to it. However, you do not want this vertical line to cross into
the top row. You can achieve this with the <code>start</code> argument:</p>
<div class="previewed-code"><pre><code><span class="typ-comment">// Base template already configured tables, but we need some</span>
<span class="typ-comment">// extra configuration for this table.</span>
<span class="typ-punct">#</span><span class="typ-punct">{</span>
  <span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> right <span class="typ-punct">}</span><span class="typ-punct">)</span>
  <span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">smallcaps</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">,</span> <span class="typ-num">1fr</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">vline</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">,</span> start<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Trainset<span class="typ-punct">]</span><span class="typ-punct">[</span>Top Speed<span class="typ-punct">]</span><span class="typ-punct">[</span>Length<span class="typ-punct">]</span><span class="typ-punct">[</span>Weight<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>TGV Réseau<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>320 km/h<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>200m<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>383t<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>ICE 403<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>330 km/h<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>201m<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>409t<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Shinkansen N700<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>300 km/h<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>405m<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>700t<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">}</span>
</code></pre><div class="preview"><img src="/docs/assets/5f704a8a2ea00528734fece76f2c698c.png" alt="Preview" /></div></div>
<p>In this example, we have added <code>table.vline</code> at the start of our positional
argument list. But because the line is not supposed to go to the left of the
first column, we specified the <code>x</code> argument as <code><span class="typ-num">1</span></code>. We also set the <code>start</code>
argument to <code><span class="typ-num">1</span></code> so that the line does only start after the first row.</p>
<p>The example also contains two more things: We use the align argument with a
function to right-align the data in all but the first column and use a show rule
to make the first column of table cells appear in small capitals. Because these
styles are specific to this one table, we put everything into a <a href="/docs/reference/scripting/#blocks">code
block</a>, so that the styling does not affect any further
tables.</p>
<h3 id="stroke-override">Overriding the strokes of a single cell</h3>
<p>Imagine you want to change the stroke around a single cell. Maybe your cell is
very important and needs highlighting! For this scenario, there is the
<a href="/docs/reference/model/table/#definitions-cell"><code>table.cell</code> function</a>. Instead of adding your content directly in
the argument list of the table, you wrap it in a <code>table.cell</code> call. Now, you can
use <code>table.cell</code>'s argument list to override the table properties, such as the
stroke, for this cell only.</p>
<p>Here's an example with a matrix of two of the Big Five personality factors, with
one intersection highlighted.</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span><span class="typ-punct">,</span>

  <span class="typ-punct">[</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*High Neuroticism*</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-strong">*Low Neuroticism*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>

  <span class="typ-punct">[</span><span class="typ-strong">*High Agreeableness*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> orange <span class="typ-op">+</span> <span class="typ-num">2pt</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    <span class="typ-emph">_Sensitive_</span> <span class="typ-escape">\\</span> Prone to emotional distress but very empathetic.
  <span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-emph">_Compassionate_</span> <span class="typ-escape">\\</span> Caring and stable, often seen as a supportive figure.<span class="typ-punct">]</span><span class="typ-punct">,</span>

  <span class="typ-punct">[</span><span class="typ-strong">*Low Agreeableness*</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-emph">_Contentious_</span> <span class="typ-escape">\\</span> Competitive and easily agitated.<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span><span class="typ-emph">_Detached_</span> <span class="typ-escape">\\</span> Independent and calm, may appear aloof.<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/fe7115bc1ac1669e27f6bf0f68ef76fd.png" alt="Preview" /></div></div>
<p>Above, you can see that we used the <code>table.cell</code> element in the table's argument
list and passed the cell content to it. We have used its <code>stroke</code> argument to
set a wider orange stroke. Despite the fact that we disabled vertical strokes on
the table, the orange stroke appeared on all sides of the modified cell, showing
that the table's stroke configuration is overwritten.</p>
<h3 id="stroke-functions">Complex document-wide stroke customization</h3>
<p>This section explains how to customize all lines at once in one or multiple
tables. This allows you to draw only the first horizontal line or omit the outer
lines, without knowing how many cells the table has. This is achieved by
providing a function to the table's <code>stroke</code> parameter. The function should
return a stroke given the zero-indexed x and y position of the current cell. You
should only need these functions if you are a template author, do not use a
template, or need to heavily customize your tables. Otherwise, your template
should set appropriate default table strokes.</p>
<p>For example, this is a set rule that draws all horizontal lines except for the
very first and last line.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>style<span class="typ-punct">:</span> <span class="typ-str">&quot;italic&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>style<span class="typ-punct">:</span> <span class="typ-str">&quot;normal&quot;</span><span class="typ-punct">,</span> weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> y <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-punct">(</span>top<span class="typ-punct">:</span> <span class="typ-num">0.8pt</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> center <span class="typ-op">+</span> horizon<span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Technique<span class="typ-punct">]</span><span class="typ-punct">[</span>Advantage<span class="typ-punct">]</span><span class="typ-punct">[</span>Drawback<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Diegetic<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Immersive<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>May be contrived<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Extradiegetic<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Breaks immersion<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Obtrusive<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Omitted<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Fosters engagement<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>May fracture audience<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/c2073b7a3c9d30801f53a40683cd256b.png" alt="Preview" /></div></div>
<p>In the set rule, we pass a function that receives two arguments, assigning the
vertical coordinate to <code>y</code> and discarding the horizontal coordinate. It then
returns a stroke dictionary with a <code><span class="typ-num">0.8pt</span></code> top stroke for all but the first
line. The cells in the first line instead implicitly receive <code><span class="typ-key">none</span></code> as the
return value. You can easily modify this function to just draw the inner
vertical lines instead as <code><span class="typ-punct">(</span>x<span class="typ-punct">,</span> _<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> x <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-punct">(</span>left<span class="typ-punct">:</span> <span class="typ-num">0.8pt</span><span class="typ-punct">)</span> <span class="typ-punct">}</span></code>.</p>
<p>Let's try a few more stroking functions. The next function will only draw a line
below the first row:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-punct">(</span>bottom<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">)</span>

<span class="typ-comment">// Table as seen above</span>
</code></pre><div class="preview"><img src="/docs/assets/3764ecf3d7bc44e6824e3f0f95dd9e61.png" alt="Preview" /></div></div>
<p>If you understood the first example, it becomes obvious what happens here. We
check if we are in the first row. If so, we return a bottom stroke. Otherwise,
we'll return <code><span class="typ-key">none</span></code> implicitly.</p>
<p>The next example shows how to draw all but the outer lines:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
  left<span class="typ-punct">:</span> <span class="typ-key">if</span> x <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-num">0.8pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  top<span class="typ-punct">:</span> <span class="typ-key">if</span> y <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-num">0.8pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-comment">// Table as seen above</span>
</code></pre><div class="preview"><img src="/docs/assets/6ca211288b15e062dd45ae316cbdc4fe.png" alt="Preview" /></div></div>
<p>This example uses both the <code>x</code> and <code>y</code> coordinates. It omits the left stroke in
the first column and the top stroke in the first row. The right and bottom lines
are not drawn.</p>
<p>Finally, here is a table that draws all lines except for the vertical lines in
the first row and horizontal lines in the table body. It looks a bit like a
calendar.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">table</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
  left<span class="typ-punct">:</span> <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> y <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> <span class="typ-num">1pt</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  right<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
  top<span class="typ-punct">:</span> <span class="typ-key">if</span> y <span class="typ-op">&lt;=</span> <span class="typ-num">1</span> <span class="typ-punct">{</span> <span class="typ-num">1pt</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  bottom<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span><span class="typ-punct">)</span>

<span class="typ-comment">// Table as seen above</span>
</code></pre><div class="preview"><img src="/docs/assets/b0424b6a107a3f92ed23aef48e8b3c4b.png" alt="Preview" /></div></div>
<p>This example is a bit more complex. We start by drawing all the strokes on the
right of the cells. But this means that we have drawn strokes in the top row,
too, and we don't need those! We use the fact that <code>left</code> will override <code>right</code>
and only draw the left line if we are not in the first row or if we are in the
first column. In all other cases, we explicitly remove the left line. Finally,
we draw the horizontal lines by first setting the bottom line and then for the
first two rows with the <code>top</code> key, suppressing all other top lines. The last
line appears because there is no <code>top</code> line that could suppress it.</p>
<h3 id="double-stroke">How to achieve a double line?</h3>
<p>Typst does not yet have a native way to draw double strokes, but there are
multiple ways to emulate them, for example with <a href="/docs/reference/visualize/pattern/">patterns</a>. We will
show a different workaround in this section: Table gutters.</p>
<p>Tables can space their cells apart using the <code>gutter</code> argument. When a gutter is
applied, a stroke is drawn on each of the now separated cells. We can
selectively add gutter between the rows or columns for which we want to draw a
double line. The <code>row-gutter</code> and <code>column-gutter</code> arguments allow us to do this.
They accept arrays of gutter values. Let's take a look at an example:</p>
<div class="previewed-code"><pre><code><span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  row-gutter<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">2.2pt</span><span class="typ-punct">,</span> <span class="typ-key">auto</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Date<span class="typ-punct">]</span><span class="typ-punct">[</span>Exercise Type<span class="typ-punct">]</span><span class="typ-punct">[</span>Calories Burned<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2023-03-15<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Swimming<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>400<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2023-03-17<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Weightlifting<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>250<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2023-03-18<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Yoga<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>200<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/92cf15a30af2bfbd17c707f10bec1c7c.png" alt="Preview" /></div></div>
<p>We can see that we used an array for <code>row-gutter</code> that specifies a <code><span class="typ-num">2.2pt</span></code> gap
between the first and second row. It then continues with <code>auto</code> (which is the
default, in this case <code><span class="typ-num">0pt</span></code> gutter) which will be the gutter between all other
rows, since it is the last entry in the array.</p>
<h2 id="alignment">How to align the contents of the cells in my table?</h2>
<p>You can use multiple mechanisms to align the content in your table. You can
either use the <code>table</code> function's <code>align</code> argument to set the alignment for your
whole table (or use it in a set rule to set the alignment for tables throughout
your document) or the <a href="/docs/reference/layout/align/" title="\`align\`"><code>align</code></a> function (or <code>table.cell</code>'s <code>align</code> argument) to
override the alignment of a single cell.</p>
<p>When using the <code>table</code> function's align argument, you can choose between three
methods to specify an <a href="/docs/reference/layout/alignment/" title="alignment">alignment</a>:</p>
<ul>
<li>Just specify a single alignment like <code>right</code> (aligns in the top-right corner)
or <code>center + horizon</code> (centers all cell content). This changes the alignment
of all cells.</li>
<li>Provide an array. Typst will cycle through this array for each column.</li>
<li>Provide a function that is passed the horizontal <code>x</code> and vertical <code>y</code>
coordinate of a cell and returns an alignment.</li>
</ul>
<p>For example, this travel itinerary right-aligns the day column and left-aligns
everything else by providing an array in the <code>align</code> argument:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> <span class="typ-punct">(</span>right<span class="typ-punct">,</span> left<span class="typ-punct">,</span> left<span class="typ-punct">,</span> left<span class="typ-punct">)</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>y<span class="typ-punct">)</span> <span class="typ-punct">{</span> green<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">90%</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>

  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Day<span class="typ-punct">]</span><span class="typ-punct">[</span>Location<span class="typ-punct">]</span><span class="typ-punct">[</span>Hotel or Apartment<span class="typ-punct">]</span><span class="typ-punct">[</span>Activities<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Paris, France<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hotel de L&#39;Europe<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Arrival, Evening River Cruise<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Paris, France<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hotel de L&#39;Europe<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Louvre Museum, Eiffel Tower<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>3<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Lyon, France<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Lyon City Hotel<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>City Tour, Local Cuisine Tasting<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>4<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Geneva, Switzerland<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Lakeview Inn<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Lake Geneva, Red Cross Museum<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Zermatt, Switzerland<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Alpine Lodge<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Visit Matterhorn, Skiing<span class="typ-punct">]</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/a712b274eae18df5cca4ed10376fdc0b.png" alt="Preview" /></div></div>
<p>However, this example does not yet look perfect — the header cells should be
bottom-aligned. Let's use a function instead to do so:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;IBM Plex Sans&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">4</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span>
    <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> right <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span> <span class="typ-op">+</span>
    <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> bottom <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> top <span class="typ-punct">}</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>y<span class="typ-punct">)</span> <span class="typ-punct">{</span> green<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">90%</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>

  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Day<span class="typ-punct">]</span><span class="typ-punct">[</span>Location<span class="typ-punct">]</span><span class="typ-punct">[</span>Hotel or Apartment<span class="typ-punct">]</span><span class="typ-punct">[</span>Activities<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Paris, France<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hotel de L&#39;Europe<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Arrival, Evening River Cruise<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Paris, France<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Hotel de L&#39;Europe<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Louvre Museum, Eiffel Tower<span class="typ-punct">]</span><span class="typ-punct">,</span>
 <span class="typ-comment">// ... remaining days omitted</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/990915a515f737f6f0966d11923bf35.png" alt="Preview" /></div></div>
<p>In the function, we calculate a horizontal and vertical alignment based on
whether we are in the first column (<code>x <span class="typ-op">==</span> <span class="typ-num">0</span></code>) or the first row (<code>y <span class="typ-op">==</span> <span class="typ-num">0</span></code>).
We then make use of the fact that we can add horizontal and vertical alignments
with <code>+</code> to receive a single, two-dimensional alignment.</p>
<p>You can find an example of using <code>table.cell</code> to change a single cell's
alignment on <a href="/docs/reference/model/table/#definitions-cell">its reference page</a>.</p>
<h2 id="merge-cells">How to merge cells?</h2>
<p>When a table contains logical groupings or the same data in multiple adjacent
cells, merging multiple cells into a single, larger cell can be advantageous.
Another use case for cell groups are table headers with multiple rows: That way,
you can group for example a sales data table by quarter in the first row and by
months in the second row.</p>
<p>A merged cell spans multiple rows and/or columns. You can achieve it with the
<a href="/docs/reference/model/table/#definitions-cell" title="\`table.cell\`"><code>table.cell</code></a> function's <code>rowspan</code> and <code>colspan</code> arguments: Just specify how
many rows or columns you want your cell to span.</p>
<p>The example below contains an attendance calendar for an office with in-person
and remote days for each team member. To make the table more glanceable, we
merge adjacent cells with the same value:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> ofi <span class="typ-op">=</span> <span class="typ-punct">[</span>Office<span class="typ-punct">]</span>
<span class="typ-key">#</span><span class="typ-key">let</span> rem <span class="typ-op">=</span> <span class="typ-punct">[</span><span class="typ-emph">_Remote_</span><span class="typ-punct">]</span>
<span class="typ-key">#</span><span class="typ-key">let</span> lea <span class="typ-op">=</span> <span class="typ-punct">[</span><span class="typ-strong">*On leave*</span><span class="typ-punct">]</span>

<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>
  fill<span class="typ-punct">:</span> white<span class="typ-punct">,</span>
  weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">6</span> <span class="typ-op">*</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
  align<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> x <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">or</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> left <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> center <span class="typ-punct">}</span><span class="typ-punct">,</span>
  stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
    <span class="typ-comment">// Separate black cells with white strokes.</span>
    left<span class="typ-punct">:</span> <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-key">and</span> x <span class="typ-op">&gt;</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> white <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> black <span class="typ-punct">}</span><span class="typ-punct">,</span>
    rest<span class="typ-punct">:</span> black<span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> black <span class="typ-punct">}</span><span class="typ-punct">,</span>

  table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
    <span class="typ-punct">[</span>Team member<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Monday<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Tuesday<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Wednesday<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Thursday<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Friday<span class="typ-punct">]</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Evelyn Archer<span class="typ-punct">]</span><span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> ofi<span class="typ-punct">)</span><span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> rem<span class="typ-punct">)</span><span class="typ-punct">,</span>
    ofi<span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Lila Montgomery<span class="typ-punct">]</span><span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">5</span><span class="typ-punct">,</span> lea<span class="typ-punct">)</span><span class="typ-punct">,</span>
  <span class="typ-punct">[</span>Nolan Pearce<span class="typ-punct">]</span><span class="typ-punct">,</span>
    rem<span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">cell</span><span class="typ-punct">(</span>colspan<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> ofi<span class="typ-punct">)</span><span class="typ-punct">,</span>
    rem<span class="typ-punct">,</span>
    ofi<span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/53b53e6658a1a556c8fd1bf4d38908f0.png" alt="Preview" /></div></div>
<p>In the example, we first define variables with &quot;Office&quot;, &quot;Remote&quot;, and &quot;On
leave&quot; so we don't have to write these labels out every time. We can then use
these variables in the table body either directly or in a <code>table.cell</code> call if
the team member spends multiple consecutive days in office, remote, or on leave.</p>
<p>The example also contains a black header (created with <code>table</code>'s <code>fill</code>
argument) with white strokes (<code>table</code>'s <code>stroke</code> argument) and white text (set
by the <code>table.cell</code> set rule). Finally, we align all the content of all table
cells in the body in the center. If you want to know more about the functions
passed to <code>align</code>, <code>stroke</code>, and <code>fill</code>, you can check out the sections on
<a href="/docs/reference/layout/alignment/" title="alignment">alignment</a>, <a href="#stroke-functions">strokes</a>, and <a href="#fills">striped
tables</a>.</p>
<p>This table would be a great candidate for fully automated generation from an
external data source! Check out the <a href="#importing-data">section about importing
data</a> to learn more about that.</p>
<h2 id="rotate-table">How to rotate a table?</h2>
<p>When tables have many columns, a portrait paper orientation can quickly get
cramped. Hence, you'll sometimes want to switch your tables to landscape
orientation. There are two ways to accomplish this in Typst:</p>
<ul>
<li>If you want to rotate only the table but not the other content of the page and
the page itself, use the <a href="/docs/reference/layout/rotate/"><code>rotate</code> function</a> with the <code>reflow</code>
argument set to <code><span class="typ-key">true</span></code>.</li>
<li>If you want to rotate the whole page the table is on, you can use the <a href="/docs/reference/layout/page/"><code>page</code>
function</a> with its <code>flipped</code> argument set to <code><span class="typ-key">true</span></code>. The header,
footer, and page number will now also appear on the long edge of the page.
This has the advantage that the table will appear right side up when read on a
computer, but it also means that a page in your document has different
dimensions than all the others, which can be jarring to your readers.</li>
</ul>
<p>Below, we will demonstrate both techniques with a student grade book table.</p>
<p>First, we will rotate the table on the page. The example also places some text
on the right of the table.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-str">&quot;a5&quot;</span><span class="typ-punct">,</span> columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span> numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;— 1 —&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">rotate</span><span class="typ-punct">(</span>
  <span class="typ-op">-</span><span class="typ-num">90deg</span><span class="typ-punct">,</span>
  reflow<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">,</span>

  <span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-num">5</span> <span class="typ-op">*</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0.6em</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
      x<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
      top<span class="typ-punct">:</span> <span class="typ-key">if</span> y <span class="typ-op">&lt;=</span> <span class="typ-num">1</span> <span class="typ-punct">{</span> <span class="typ-num">1pt</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
      bottom<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    align<span class="typ-punct">:</span> <span class="typ-punct">(</span>left<span class="typ-punct">,</span> right<span class="typ-punct">,</span> right<span class="typ-punct">,</span> right<span class="typ-punct">,</span> right<span class="typ-punct">,</span> left<span class="typ-punct">)</span><span class="typ-punct">,</span>

    table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
      <span class="typ-punct">[</span>Student Name<span class="typ-punct">]</span><span class="typ-punct">,</span>
      <span class="typ-punct">[</span>Assignment 1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Assignment 2<span class="typ-punct">]</span><span class="typ-punct">,</span>
      <span class="typ-punct">[</span>Mid-term<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Final Exam<span class="typ-punct">]</span><span class="typ-punct">,</span>
      <span class="typ-punct">[</span>Total Grade<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Jane Smith<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>78%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>82%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>75%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>80%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Alex Johnson<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>90%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>95%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>94%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>96%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>A+<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>John Doe<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>85%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>90%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>88%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>92%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Maria Garcia<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>88%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>84%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>89%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>85%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B+<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Zhang Wei<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>93%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>89%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>90%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>91%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>A-<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Marina Musterfrau<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>96%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>91%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>74%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>69%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B-<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/8d61ee022b040e24a6c167b8a2d7c16b.png" alt="Preview" /></div></div>
<p>What we have here is a two-column document on ISO A5 paper with page numbers on
the bottom. The table has six columns and contains a few customizations to
<a href="#strokes">stroke</a>, alignment and spacing. But the most important part is that
the table is wrapped in a call to the <code>rotate</code> function with the <code>reflow</code>
argument being <code><span class="typ-key">true</span></code>. This will make the table rotate 90 degrees
counterclockwise. The reflow argument is needed so that the table's rotation
affects the layout. If it was omitted, Typst would lay out the page as if the
table was not rotated (<code><span class="typ-key">true</span></code> might become the default in the future).</p>
<p>The example also shows how to produce many columns of the same size: To the
initial <code><span class="typ-num">1fr</span></code> column, we add an array with five <code><span class="typ-key">auto</span></code> items that we
create by multiplying an array with one <code><span class="typ-key">auto</span></code> item by five. Note that arrays
with just one item need a trailing comma to distinguish them from merely
parenthesized expressions.</p>
<p>The second example shows how to rotate the whole page, so that the table stays
upright:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-str">&quot;a5&quot;</span><span class="typ-punct">,</span> numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;— 1 —&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">page</span><span class="typ-punct">(</span>flipped<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
  <span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">,</span><span class="typ-punct">)</span> <span class="typ-op">+</span> <span class="typ-num">5</span> <span class="typ-op">*</span> <span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    inset<span class="typ-punct">:</span> <span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0.6em</span><span class="typ-punct">,</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
    stroke<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-punct">(</span>
      x<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
      top<span class="typ-punct">:</span> <span class="typ-key">if</span> y <span class="typ-op">&lt;=</span> <span class="typ-num">1</span> <span class="typ-punct">{</span> <span class="typ-num">1pt</span> <span class="typ-punct">}</span> <span class="typ-key">else</span> <span class="typ-punct">{</span> <span class="typ-num">0pt</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
      bottom<span class="typ-punct">:</span> <span class="typ-num">1pt</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    align<span class="typ-punct">:</span> <span class="typ-punct">(</span>left<span class="typ-punct">,</span> right<span class="typ-punct">,</span> right<span class="typ-punct">,</span> right<span class="typ-punct">,</span> right<span class="typ-punct">,</span> left<span class="typ-punct">)</span><span class="typ-punct">,</span>

    table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">(</span>
      <span class="typ-punct">[</span>Student Name<span class="typ-punct">]</span><span class="typ-punct">,</span>
      <span class="typ-punct">[</span>Assignment 1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Assignment 2<span class="typ-punct">]</span><span class="typ-punct">,</span>
      <span class="typ-punct">[</span>Mid-term<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>Final Exam<span class="typ-punct">]</span><span class="typ-punct">,</span>
      <span class="typ-punct">[</span>Total Grade<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">)</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Jane Smith<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>78%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>82%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>75%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>80%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Alex Johnson<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>90%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>95%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>94%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>96%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>A+<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>John Doe<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>85%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>90%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>88%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>92%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>A<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Maria Garcia<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>88%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>84%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>89%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>85%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B+<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Zhang Wei<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>93%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>89%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>90%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>91%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>A-<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>Marina Musterfrau<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>96%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>91%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>74%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>69%<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>B-<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>

  <span class="typ-func">#</span><span class="typ-func">pad</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">15%</span><span class="typ-punct">,</span> top<span class="typ-punct">:</span> <span class="typ-num">1.5em</span><span class="typ-punct">)</span><span class="typ-punct">[</span>
    <span class="typ-heading">= Winter 2023/24 results</span>
    <span class="typ-func">#</span><span class="typ-func">lorem</span><span class="typ-punct">(</span><span class="typ-num">80</span><span class="typ-punct">)</span>
  <span class="typ-punct">]</span>
<span class="typ-punct">]</span>
</code></pre><div class="preview"><img src="/docs/assets/7a17de6a34ee16a00fc81a4846dd51ac.png" alt="Preview" /></div></div>
<p>Here, we take the same table and the other content we want to set with it and
put it into a call to the <a href="/docs/reference/layout/page/" title="\`page\`"><code>page</code></a> function while supplying <code><span class="typ-key">true</span></code> to the
<code>flipped</code> argument. This will instruct Typst to create new pages with width and
height swapped and place the contents of the function call onto a new page.
Notice how the page number is also on the long edge of the paper now. At the
bottom of the page, we use the <a href="/docs/reference/layout/pad/" title="\`pad\`"><code>pad</code></a> function to constrain the width of the
paragraph to achieve a nice and legible line length.</p>
<h2 id="table-across-pages">How to break a table across pages?</h2>
<p>It is best to contain a table on a single page. However, some tables just have
many rows, so breaking them across pages becomes unavoidable. Fortunately, Typst
supports breaking tables across pages out of the box. If you are using the
<a href="/docs/reference/model/table/#definitions-header" title="\`table.header\`"><code>table.header</code></a> and <a href="/docs/reference/model/table/#definitions-footer" title="\`table.footer\`"><code>table.footer</code></a> functions, their contents will be repeated
on each page as the first and last rows, respectively. If you want to disable
this behavior, you can set <code>repeat</code> to <code><span class="typ-key">false</span></code> on either of them.</p>
<p>If you have placed your table inside of a <a href="/docs/reference/model/figure/" title="figure">figure</a>, it becomes unable to break
across pages by default. However, you can change this behavior. Let's take a
look:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>width<span class="typ-punct">:</span> <span class="typ-num">9cm</span><span class="typ-punct">,</span> height<span class="typ-punct">:</span> <span class="typ-num">6cm</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>y<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>weight<span class="typ-punct">:</span> <span class="typ-str">&quot;bold&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">show</span> <span class="typ-func">figure</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>breakable<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">figure</span><span class="typ-punct">(</span>
  caption<span class="typ-punct">:</span> <span class="typ-punct">[</span>Training regimen for Marathon<span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-func">table</span><span class="typ-punct">(</span>
    columns<span class="typ-punct">:</span> <span class="typ-num">3</span><span class="typ-punct">,</span>
    fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> y <span class="typ-op">==</span> <span class="typ-num">0</span> <span class="typ-punct">{</span> gray<span class="typ-punct">.</span><span class="typ-func">lighten</span><span class="typ-punct">(</span><span class="typ-num">75%</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>

    table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Week<span class="typ-punct">]</span><span class="typ-punct">[</span>Distance (km)<span class="typ-punct">]</span><span class="typ-punct">[</span>Time (hh:mm:ss)<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>1<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>5<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>00:30:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>2<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>7<span class="typ-punct">]</span><span class="typ-punct">,</span>  <span class="typ-punct">[</span>00:45:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>3<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>10<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>01:00:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>4<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>12<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>01:10:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>5<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>15<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>01:25:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>6<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>18<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>01:40:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>7<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>20<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>01:50:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span>8<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>22<span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span>02:00:00<span class="typ-punct">]</span><span class="typ-punct">,</span>
    <span class="typ-punct">[</span><span class="typ-escape">...</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-escape">...</span><span class="typ-punct">]</span><span class="typ-punct">,</span> <span class="typ-punct">[</span><span class="typ-escape">...</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
    table<span class="typ-punct">.</span><span class="typ-func">footer</span><span class="typ-punct">[</span><span class="typ-emph">_Goal_</span><span class="typ-punct">]</span><span class="typ-punct">[</span><span class="typ-emph">_42.195_</span><span class="typ-punct">]</span><span class="typ-punct">[</span><span class="typ-emph">_02:45:00_</span><span class="typ-punct">]</span><span class="typ-punct">,</span>
  <span class="typ-punct">)</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6fb24aa8a46263d8c09cdfe4bc39a9c1.png" alt="Preview" /></div></div>
<p>A figure automatically produces a <a href="/docs/reference/layout/block/" title="block">block</a> which cannot break by default.
However, we can reconfigure the block of the figure using a show rule to make it
<code>breakable</code>. Now, the figure spans multiple pages with the headers and footers
repeating.</p>
<h2 id="importing-data">How to import data into a table?</h2>
<p>Often, you need to put data that you obtained elsewhere into a table. Sometimes,
this is from Microsoft Excel or Google Sheets, sometimes it is from a dataset
on the web or from your experiment. Fortunately, Typst can load many <a href="/docs/reference/data-loading/">common
file formats</a>, so you can use scripting to include their
data in a table.</p>
<p>The most common file format for tabular data is CSV. You can obtain a CSV file
from Excel by choosing &quot;Save as&quot; in the <em>File</em> menu and choosing the file format
&quot;CSV UTF-8 (Comma-delimited) (.csv)&quot;. Save the file and, if you are using the
web app, upload it to your project.</p>
<p>In our case, we will be building a table about Moore's Law. For this purpose, we
are using a statistic with <a href="https://ourworldindata.org/grapher/transistors-per-microprocessor">how many transistors the average microprocessor
consists of per year from Our World in
Data</a>. Let's
start by pressing the &quot;Download&quot; button to get a CSV file with the raw data.</p>
<p>Be sure to move the file to your project or somewhere Typst can see it, if you
are using the CLI. Once you did that, we can open the file to see how it is
structured:</p>
<pre style="background-color:#ffffff;">
<span style="color:#4b69c6;">Entity</span><span style="color:#000000;">,</span><span style="color:#4b69c6;">Code</span><span style="color:#000000;">,</span><span style="color:#b60157;">Year</span><span style="color:#000000;">,</span><span style="color:#d73a49;">Transistors per microprocessor
</span><span style="color:#4b69c6;">World</span><span style="color:#000000;">,</span><span style="color:#4b69c6;">OWID_WRL</span><span style="color:#000000;">,</span><span style="color:#b60157;">1971</span><span style="color:#000000;">,</span><span style="color:#d73a49;">2308.2417
</span><span style="color:#4b69c6;">World</span><span style="color:#000000;">,</span><span style="color:#4b69c6;">OWID_WRL</span><span style="color:#000000;">,</span><span style="color:#b60157;">1972</span><span style="color:#000000;">,</span><span style="color:#d73a49;">3554.5222
</span><span style="color:#4b69c6;">World</span><span style="color:#000000;">,</span><span style="color:#4b69c6;">OWID_WRL</span><span style="color:#000000;">,</span><span style="color:#b60157;">1974</span><span style="color:#000000;">,</span><span style="color:#d73a49;">6097.5625
</span></pre>
<p>The file starts with a header and contains four columns: Entity (which is to
whom the metric applies), Code, the year, and the number of transistors per
microprocessor. Only the last two columns change between each row, so we can
disregard &quot;Entity&quot; and &quot;Code&quot;.</p>
<p>First, let's start by loading this file with the <a href="/docs/reference/data-loading/csv/" title="\`csv\`"><code>csv</code></a> function. It accepts
the file name of the file we want to load as a string argument:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">let</span> moore <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;moore.csv&quot;</span><span class="typ-punct">)</span>
</code></pre>
<p>We have loaded our file (assuming we named it <code>moore.csv</code>) and <a href="/docs/reference/scripting/#bindings">bound
it</a> to the new variable <code>moore</code>. This will not produce any
output, so there's nothing to see yet. If we want to examine what Typst loaded,
we can either hover the name of the variable in the web app or print some items
from the array:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> moore <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;moore.csv&quot;</span><span class="typ-punct">)</span>

<span class="typ-pol">#</span><span class="typ-pol">moore</span><span class="typ-punct">.</span><span class="typ-func">slice</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/6a3c37ac25714ce5bd5d0546357d3b48.png" alt="Preview" /></div></div>
<p>With the arguments <code><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">,</span> <span class="typ-num">3</span><span class="typ-punct">)</span></code>, the <a href="/docs/reference/foundations/array/#definitions-slice"><code>slice</code></a> method returns the
first three items in the array (with the indices 0, 1, and 2). We can see that
each row is its own array with one item per cell.</p>
<p>Now, let's write a loop that will transform this data into an array of cells
that we can use with the table function.</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> moore <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;moore.csv&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
  columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">,</span>
  <span class="typ-op">..</span><span class="typ-key">for</span> <span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">,</span> year<span class="typ-punct">,</span> count<span class="typ-punct">)</span> <span class="typ-key">in</span> moore <span class="typ-punct">{</span>
    <span class="typ-punct">(</span>year<span class="typ-punct">,</span> count<span class="typ-punct">)</span>
  <span class="typ-punct">}</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/aef1e6a94487e1ea616d1efb948d016d.png" alt="Preview" /></div></div>
<p>The example above uses a for loop that iterates over the rows in our CSV file
and returns an array for each iteration. We use the for loop's
<a href="/docs/reference/scripting/#bindings">destructuring</a> capability to discard all but the last two
items of each row. We then create a new array with just these two. Because Typst
will concatenate the array results of all the loop iterations, we get a
one-dimensional array in which the year column and the number of transistors
alternate. We can then insert the array as cells. For this we use the <a href="/docs/reference/foundations/arguments/#spreading">spread
operator</a> (<code>..</code>). By prefixing an array, or, in our case
an expression that yields an array, with two dots, we tell Typst that the
array's items should be used as positional arguments.</p>
<p>Alternatively, we can also use the <a href="/docs/reference/foundations/array/#definitions-map"><code>map</code></a>, <a href="/docs/reference/foundations/array/#definitions-slice"><code>slice</code></a>,
and <a href="/docs/reference/foundations/array/#definitions-flatten"><code>flatten</code></a> array methods to write this in a more functional
style:</p>
<pre><code><span class="typ-key">#</span><span class="typ-key">let</span> moore <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;moore.csv&quot;</span><span class="typ-punct">)</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
   columns<span class="typ-punct">:</span> moore<span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
   <span class="typ-op">..</span>moore<span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>m <span class="typ-op">=&gt;</span> m<span class="typ-punct">.</span><span class="typ-func">slice</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">flatten</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre>
<p>This example renders the same as the previous one, but first uses the <code>map</code>
function to change each row of the data. We pass a function to map that gets run
on each row of the CSV and returns a new value to replace that row with. We use
it to discard the first two columns with <code>slice</code>. Then, we spread the data into
the <code>table</code> function. However, we need to pass a one-dimensional array and
<code>moore</code>'s value is two-dimensional (that means that each of its row values
contains an array with the cell data). That's why we call <code>flatten</code> which
converts it to a one-dimensional array. We also extract the number of columns
from the data itself.</p>
<p>Now that we have nice code for our table, we should try to also make the table
itself nice! The transistor counts go from millions in 1995 to trillions in 2021
and changes are difficult to see with so many digits. We could try to present
our data logarithmically to make it more digestible:</p>
<div class="previewed-code"><pre><code><span class="typ-key">#</span><span class="typ-key">let</span> moore <span class="typ-op">=</span> <span class="typ-func">csv</span><span class="typ-punct">(</span><span class="typ-str">&quot;moore.csv&quot;</span><span class="typ-punct">)</span>
<span class="typ-key">#</span><span class="typ-key">let</span> moore-log <span class="typ-op">=</span> moore<span class="typ-punct">.</span><span class="typ-func">slice</span><span class="typ-punct">(</span><span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">map</span><span class="typ-punct">(</span>m <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span>
  <span class="typ-key">let</span> <span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">,</span> year<span class="typ-punct">,</span> count<span class="typ-punct">)</span> <span class="typ-op">=</span> m
  <span class="typ-key">let</span> log <span class="typ-op">=</span> calc<span class="typ-punct">.</span><span class="typ-func">log</span><span class="typ-punct">(</span><span class="typ-func">float</span><span class="typ-punct">(</span>count<span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-key">let</span> rounded <span class="typ-op">=</span> <span class="typ-func">str</span><span class="typ-punct">(</span>calc<span class="typ-punct">.</span><span class="typ-func">round</span><span class="typ-punct">(</span>log<span class="typ-punct">,</span> digits<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span><span class="typ-punct">)</span>
  <span class="typ-punct">(</span>year<span class="typ-punct">,</span> rounded<span class="typ-punct">)</span>
<span class="typ-punct">}</span><span class="typ-punct">)</span>

<span class="typ-key">#</span><span class="typ-key">show</span> table<span class="typ-punct">.</span>cell<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>x<span class="typ-punct">:</span> <span class="typ-num">0</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-func">strong</span>

<span class="typ-func">#</span><span class="typ-func">table</span><span class="typ-punct">(</span>
   columns<span class="typ-punct">:</span> moore-log<span class="typ-punct">.</span><span class="typ-func">first</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
   align<span class="typ-punct">:</span> right<span class="typ-punct">,</span>
   fill<span class="typ-punct">:</span> <span class="typ-punct">(</span>_<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> <span class="typ-key">if</span> calc<span class="typ-punct">.</span><span class="typ-func">odd</span><span class="typ-punct">(</span>y<span class="typ-punct">)</span> <span class="typ-punct">{</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;D7D9E0&quot;</span><span class="typ-punct">)</span> <span class="typ-punct">}</span><span class="typ-punct">,</span>
   stroke<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">,</span>

   table<span class="typ-punct">.</span><span class="typ-func">header</span><span class="typ-punct">[</span>Year<span class="typ-punct">]</span><span class="typ-punct">[</span>Transistor count (<span class="typ-math-delim">$</span><span class="typ-pol">log</span><span class="typ-math-op">_</span>10<span class="typ-math-delim">$</span>)<span class="typ-punct">]</span><span class="typ-punct">,</span>
   table<span class="typ-punct">.</span><span class="typ-func">hline</span><span class="typ-punct">(</span>stroke<span class="typ-punct">:</span> <span class="typ-func">rgb</span><span class="typ-punct">(</span><span class="typ-str">&quot;4D4C5B&quot;</span><span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
   <span class="typ-op">..</span>moore-log<span class="typ-punct">.</span><span class="typ-func">flatten</span><span class="typ-punct">(</span><span class="typ-punct">)</span><span class="typ-punct">,</span>
<span class="typ-punct">)</span>
</code></pre><div class="preview"><img src="/docs/assets/aedf2bf4a860e2c957c35033209c96d6.png" alt="Preview" /></div></div>
<p>In this example, we first drop the header row from the data since we are adding
our own. Then, we discard all but the last two columns as above. We do this by
<a href="/docs/reference/scripting/#bindings">destructuring</a> the array <code>m</code>, discarding all but the two
last items. We then convert the string in <code>count</code> to a floating point number,
calculate its logarithm and store it in the variable <code>log</code>. Finally, we round it
to two digits, convert it to a string, and store it in the variable <code>rounded</code>.
Then, we return an array with <code>year</code> and <code>rounded</code> that replaces the original
row. In our table, we have added our custom header that tells the reader that
we've applied a logarithm to the values. Then, we spread the flattened data as
above.</p>
<p>We also styled the table with <a href="#fills">stripes</a>, a
<a href="#individual-lines">horizontal line</a> below the first row, <a href="#alignment">aligned</a>
everything to the right, and emboldened the first column. Click on the links to
go to the relevant guide sections and see how it's done!</p>
<h2 id="table-and-grid">What if I need the table function for something that isn't a table?</h2>
<p>Tabular layouts of content can be useful not only for matrices of closely
related data, like shown in the examples throughout this guide, but also for
presentational purposes. Typst differentiates between grids that are for layout
and presentational purposes only and tables, in which the arrangement of the
cells itself conveys information.</p>
<p>To make this difference clear to other software and allow templates to heavily
style tables, Typst has two functions for grid and table layout:</p>
<ul>
<li>The <a href="/docs/reference/model/table/" title="\`table\`"><code>table</code></a> function explained throughout this guide which is intended for
tabular data.</li>
<li>The <a href="/docs/reference/layout/grid/" title="\`grid\`"><code>grid</code></a> function which is intended for presentational purposes and page
layout.</li>
</ul>
<p>Both elements work the same way and have the same arguments. You can apply
everything you have learned about tables in this guide to grids. There are only
three differences:</p>
<ul>
<li>You'll need to use the <a href="/docs/reference/layout/grid/#definitions-cell" title="\`grid.cell\`"><code>grid.cell</code></a>, <a href="/docs/reference/layout/grid/#definitions-vline" title="\`grid.vline\`"><code>grid.vline</code></a>, and <a href="/docs/reference/layout/grid/#definitions-hline" title="\`grid.hline\`"><code>grid.hline</code></a>
elements instead of <a href="/docs/reference/model/table/#definitions-cell" title="\`table.cell\`"><code>table.cell</code></a>, <a href="/docs/reference/model/table/#definitions-vline" title="\`table.vline\`"><code>table.vline</code></a>, and <a href="/docs/reference/model/table/#definitions-hline" title="\`table.hline\`"><code>table.hline</code></a>.</li>
<li>The grid has different defaults: It draws no strokes by default and has no
spacing (<code>inset</code>) inside of its cells.</li>
<li>Elements like <code>figure</code> do not react to grids since they are supposed to have
no semantical bearing on the document structure.</li>
</ul>`},children:[]}]},{route:"/docs/packages/",title:"Packages",description:"Packages for Typst.",part:null,outline:[],body:{kind:"packages",content:`<p>Typst <a href="/docs/reference/scripting/#packages">packages</a> encapsulate reusable building blocks
and make them reusable across projects. Below is a list of Typst packages
created by the community. Due to the early and experimental nature of Typst's
package management, they all live in a <code>preview</code> namespace. Click on a package's
name to view its documentation and use the copy button on the right to get a
full import statement for it.</p>`},children:[]},{route:"/docs/changelog/",title:"Changelog",description:`Learn what has changed in the latest Typst releases and move your documents
forward.
`,part:null,outline:[{id:"unreleased",name:"Unreleased",children:[{id:"_",name:"",children:[]},{id:"_",name:"",children:[]}]},{id:"v0.11.1",name:"v0.11.1",children:[]},{id:"v0.11.0",name:"v0.11.0",children:[]},{id:"v0.10.0",name:"v0.10.0",children:[]},{id:"v0.9.0",name:"v0.9.0",children:[]},{id:"v0.8.0",name:"v0.8.0",children:[]},{id:"v0.7.0",name:"v0.7.0",children:[]},{id:"v0.6.0",name:"v0.6.0",children:[]},{id:"v0.5.0",name:"v0.5.0",children:[]},{id:"v0.4.0",name:"v0.4.0",children:[]},{id:"v0.3.0",name:"v0.3.0",children:[]},{id:"v0.2.0",name:"v0.2.0",children:[]},{id:"v0.1.0",name:"v0.1.0",children:[]},{id:"_",name:"",children:[]},{id:"_",name:"",children:[]},{id:"_",name:"",children:[]},{id:"_",name:"",children:[]},{id:"_",name:"",children:[]},{id:"_",name:"",children:[]},{id:"_",name:"",children:[]}],body:{kind:"html",content:`<h1>Changelog</h1>
<h2 id="unreleased">Unreleased</h2>
<h3 id="_">Highlights</h3>
<ul>
<li>Added support for multi-column floating <a href="/docs/reference/layout/place/#parameters-scope">placement</a> and
<a href="/docs/reference/model/figure/#parameters-scope">figures</a></li>
<li>Added support for automatic <a href="/docs/reference/model/par/#definitions-line">line numbering</a> (often used in
academic papers)</li>
<li>Typst's layout engine is now multithreaded. Typical speedups are 2-3x for
larger documents. The multithreading operates on page break boundaries, so
explicit page breaks are necessary for it to kick in.</li>
<li>Paragraph justification was optimized with a new two-pass algorithm. Speedups
are larger for shorter paragraphs and go up to 6x.</li>
<li>Highly reduced PDF file sizes due to better font subsetting (thanks to
<a href="https://github.com/LaurenzV">@LaurenzV</a>)</li>
<li>Emoji are now exported properly in PDF</li>
<li>Added initial support for PDF/A. For now, only the PDF/A-2b profile is
supported, but more is planned for the future.</li>
<li>Added various options for configuring the CLI's environment (fonts, package
paths, etc.)</li>
<li>Text show rules now match across multiple text elements</li>
<li>Block-level equations can now optionally break over multiple pages</li>
<li>Fixed a bug where some fonts would not print correctly on professional
printers</li>
<li>Fixed a long-standing bug which could cause headings to be orphaned at the
bottom of the page</li>
</ul>
<h3 id="_">All changes</h3>
<ul>
<li>
<p>Layout</p>
<ul>
<li>Added support for multi-column floating placement and figures via
<a href="/docs/reference/layout/place/#parameters-scope" title="\`place.scope\`"><code>place.scope</code></a> and <a href="/docs/reference/model/figure/#parameters-scope" title="\`figure.scope\`"><code>figure.scope</code></a>.  Two-column documents should now
prefer <code><span class="typ-key">set</span> <span class="typ-func">page</span><span class="typ-punct">(</span>columns<span class="typ-punct">:</span> <span class="typ-num">2</span><span class="typ-punct">)</span></code> over <code><span class="typ-key">show</span><span class="typ-punct">:</span> column<span class="typ-punct">.</span><span class="typ-func">with</span><span class="typ-punct">(</span><span class="typ-num">2</span><span class="typ-punct">)</span></code> (see the <a href="/docs/guides/page-setup-guide/#columns">page
setup guide</a>).</li>
<li>Added support for automatic <a href="/docs/reference/model/par/#definitions-line">line numbering</a> (often used in
academic papers)</li>
<li>Added <a href="/docs/reference/model/par/#parameters-spacing" title="\`par.spacing\`"><code>par.spacing</code></a> property for configuring paragraph spacing. This
should now be used instead of <code><span class="typ-key">show</span> <span class="typ-func">par</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> <span class="typ-op">..</span><span class="typ-punct">)</span></code>
(<strong>Breaking change</strong>)</li>
<li>Block-level elements like lists, grids, and stacks now show themselves as
blocks and are thus affected by all block properties (e.g. <code>stroke</code>) rather
than just <code>spacing</code> (<strong>Breaking change</strong>)</li>
<li>Added <a href="/docs/reference/layout/block/#parameters-sticky" title="\`block.sticky\`"><code>block.sticky</code></a> property which prevents a page break after a block</li>
<li>Added <a href="/docs/reference/layout/place/#definitions-flush" title="\`place.flush\`"><code>place.flush</code></a> function which forces all floating figures to be
placed before any further content</li>
<li>Added <a href="/docs/reference/layout/skew/" title="\`skew\`"><code>skew</code></a> function</li>
<li>Added <code><span class="typ-key">auto</span></code> option for <a href="/docs/reference/layout/page/#parameters-header" title="\`page.header\`"><code>page.header</code></a> and <a href="/docs/reference/layout/page/#parameters-footer" title="\`page.footer\`"><code>page.footer</code></a> which results
in an automatic header/footer based on the numbering (which was previously
inaccessible after a change)</li>
<li>Added <code>gap</code> and <code>justify</code> parameters to <a href="/docs/reference/layout/repeat/" title="\`repeat\`"><code>repeat</code></a> function</li>
<li>Added <code>width</code> and <code>height</code> parameters to the <a href="/docs/reference/layout/measure/" title="\`measure\`"><code>measure</code></a> function to define
the space in which the content should be measured. Especially useful in
combination with <a href="/docs/reference/layout/layout/" title="\`layout\`"><code>layout</code></a>.</li>
<li>The height of a <code>block</code>, <code>image</code>, <code>rect</code>, <code>square</code>, <code>ellipse</code>, or <code>circle</code>
can now be specified in <a href="/docs/reference/layout/fraction/">fractional units</a></li>
<li>The <a href="/docs/reference/layout/scale/" title="\`scale\`"><code>scale</code></a> function now supports absolute lengths for <code>x</code>, <code>y</code>, <code>factor</code>.
This way an element of unknown size can be scaled to a fixed size.</li>
<li>The values of <code>block.above</code> and <code>block.below</code> can now be retrieved in
context expressions.</li>
<li>Increased accuracy of conversions between absolute units (pt, mm, cm, in)</li>
<li>Fixed a bug which could cause headings to be orphaned at the bottom of the
page</li>
<li>Fixed footnotes within breakable blocks appearing on the page where the
breakable block ends instead of at the page where the footnote marker is</li>
<li>Fixed numbering of nested footnotes and footnotes in floats</li>
<li>Fixed empty pages appearing when a <a href="/docs/reference/context/" title="context">context</a> expression wraps whole pages</li>
<li>Fixed <code><span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>spacing<span class="typ-punct">:</span> x<span class="typ-punct">)</span></code> behaving differently from
<code><span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>above<span class="typ-punct">:</span> x<span class="typ-punct">,</span> below<span class="typ-punct">:</span> x<span class="typ-punct">)</span></code></li>
<li>Fixed behavior of <a href="/docs/reference/layout/rotate/" title="\`rotate\`"><code>rotate</code></a> and <a href="/docs/reference/layout/scale/" title="\`scale\`"><code>scale</code></a> with <code>reflow: <span class="typ-key">true</span></code></li>
<li>Fixed interaction of <code><span class="typ-func">align</span><span class="typ-punct">(</span>horizon<span class="typ-punct">)</span></code> and <code><span class="typ-func">v</span><span class="typ-punct">(</span><span class="typ-num">1fr</span><span class="typ-punct">)</span></code></li>
<li>Fixed various bugs where floating placement would yield overlapping results</li>
<li>Fixed a bug where widow/orphan prevention would unnecessarily move text into
the next column</li>
<li>Fixed <a href="/docs/reference/layout/h/#parameters-weak">weak spacing</a> not being trimmed at the start and end of
lines in a paragraph (only at the start and end of paragraphs)</li>
<li>Fixed interaction of weak page break and <a href="/docs/reference/layout/pagebreak/#parameters-to" title="\`pagebreak.to\`"><code>pagebreak.to</code></a></li>
<li>Fixed compilation output of a single weak page break</li>
<li>Fixed crash when <a href="/docs/reference/layout/pad/">padding</a> by <code><span class="typ-num">100%</span></code></li>
</ul>
</li>
<li>
<p>Text</p>
<ul>
<li>Tuned hyphenation: It is less eager by default and hyphenations close to the
edges of words are now discouraged more strongly
(<strong>May lead to larger layout reflows</strong>)</li>
<li>New default font: Libertinus Serif. This is the maintained successor to the
old default font Linux Libertine. (<strong>May lead to smaller reflows</strong>)</li>
<li>Setting the font to an unavailable family will now result in a warning</li>
<li>Implemented a new smart quote algorithm, fixing various bugs where smart
quotes weren't all that smart</li>
<li>Added <a href="/docs/reference/text/text/#parameters-costs" title="\`text.costs\`"><code>text.costs</code></a> parameter for tweaking various parameters that affect
the choices of the layout engine during text layout</li>
<li>Added <code>typm</code> highlighting mode for math in <a href="/docs/reference/text/raw/#parameters-lang">raw blocks</a></li>
<li>Added basic i18n for Galician, Catalan, Latin, Icelandic, Hebrew</li>
<li>Implemented hyphenation duplication for Czech, Croatian, Lower Sorbian,
Polish, Portuguese, Slovak, and Spanish.</li>
<li>The <a href="/docs/reference/text/smallcaps/" title="\`smallcaps\`"><code>smallcaps</code></a> function is now an element function and can thereby be
used in show(-set) rules.</li>
<li>The <a href="/docs/reference/text/raw/#parameters-theme" title="\`raw.theme\`"><code>raw.theme</code></a> parameter can now be set to <code><span class="typ-key">none</span></code> to disable
highlighting even in the presence of a language tag, and to <code><span class="typ-key">auto</span></code> to
reset to the default</li>
<li>Multiple <a href="/docs/reference/text/text/#parameters-stylistic-set">stylistic sets</a> can now be enabled at once</li>
<li>Fixed the Chinese translation for &quot;Equation&quot;</li>
<li>Fixed that hyphenation could occur outside of words</li>
<li>Fixed incorrect layout of bidirectional text in edge cases</li>
<li>Fixed layout of paragraphs with explicit trailing whitespace</li>
<li>Fixed bugs related to empty paragraphs created via <code>#&quot;&quot;</code></li>
<li>Fixed accidental trailing spaces for line breaks immediately preceding an
inline equation</li>
<li>Fixed <a href="/docs/reference/text/text/#parameters-historical-ligatures" title="\`text.historical-ligatures\`"><code>text.historical-ligatures</code></a> not working correctly</li>
<li>Fixed accidental repetition of Thai characters around line breaks in some
circumstances</li>
<li>Fixed <a href="/docs/reference/text/smartquote/">smart quotes</a> for Swiss French</li>
<li>New font metadata exceptions for Archivo, Kaiti SC, and Kaiti TC</li>
<li>Updated bundled New Computer Modern fonts to version 6.0</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Block-level equations can now break over multiple pages if enabled via
<code><span class="typ-key">show</span> math<span class="typ-punct">.</span><span class="typ-func">equation</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">block</span><span class="typ-punct">(</span>breakable<span class="typ-punct">:</span> <span class="typ-key">true</span><span class="typ-punct">)</span></code>.</li>
<li>Matrix and vector sizing is now more consistent across different cell
contents</li>
<li>Added <a href="/docs/reference/math/stretch/"><code>stretch</code></a> function for manually or automatically
stretching characters like arrows or parentheses horizontally or vertically</li>
<li>Improved layout of attachments on parenthesized as well as under- or
overlined expressions</li>
<li>Improved layout of nested attachments resulting from code like
<code><span class="typ-key">#</span><span class="typ-key">let</span> a0 <span class="typ-op">=</span> <span class="typ-math-delim">$</span>a<span class="typ-math-op">_</span>0<span class="typ-math-delim">$</span><span class="typ-punct">;</span> <span class="typ-math-delim">$</span><span class="typ-pol">a0</span><span class="typ-math-op">^</span>1<span class="typ-math-delim">$</span></code></li>
<li>Improved layout of primes close to superscripts</li>
<li>Improved layout of fractions</li>
<li>Typst now makes use of math-specific height-dependent kerning information in
some fonts for better attachment layout</li>
<li>The <code>floor</code> and <code>ceil</code> functions in math are now callable symbols, such that
<code><span class="typ-math-delim">$</span> <span class="typ-func">floor</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span> = <span class="typ-func">lr</span><span class="typ-punct">(</span><span class="typ-pol">floor</span><span class="typ-punct">.</span><span class="typ-pol">l</span> x <span class="typ-pol">floor</span><span class="typ-punct">.</span><span class="typ-pol">r</span><span class="typ-punct">)</span> <span class="typ-math-delim">$</span></code></li>
<li>The <a href="/docs/reference/math/mat/#parameters-delim"><code>mat.delim</code></a>, <a href="/docs/reference/math/vec/#parameters-delim"><code>vec.delim</code></a>, and
<a href="/docs/reference/math/cases/#parameters-delim"><code>cases.delim</code></a> parameters now allow any character that
is considered a delimiter or &quot;fence&quot; (e.g. |) by Unicode. The
<code>delim: <span class="typ-str">&quot;||&quot;</span></code> notation is <em>not</em> supported anymore and should be replaced
by <code>delim: bar<span class="typ-punct">.</span>double</code> (<strong>Minor breaking change</strong>)</li>
<li>Added <a href="/docs/reference/math/vec/#parameters-align"><code>vec.align</code></a> and <a href="/docs/reference/math/mat/#parameters-align"><code>mat.align</code></a>
parameters</li>
<li>Added <a href="/docs/reference/math/underover/#functions-underparen"><code>underparen</code></a>, <a href="/docs/reference/math/underover/#functions-overparen"><code>overparen</code></a>,
<a href="/docs/reference/math/underover/#functions-undershell"><code>undershell</code></a>, and <a href="/docs/reference/math/underover/#functions-overshell"><code>overshell</code></a></li>
<li>Added <code>~</code> shorthand for <code>tilde.op</code> in math mode (<strong>Minor breaking change</strong>)</li>
<li>Fixed baseline alignment of equation numbers</li>
<li>Fixed positioning of corner brackets (⌜, ⌝, ⌞, ⌟)</li>
<li>Fixed baseline of large roots</li>
<li>Fixed multiple minor layout bugs with attachments</li>
<li>Fixed that alignment points could affect line height in math</li>
<li>Fixed that spaces could show up between text and invisible elements like
<a href="/docs/reference/introspection/metadata/" title="\`metadata\`"><code>metadata</code></a> in math</li>
<li>Fixed a crash with recursive show rules in math</li>
<li>Fixed <a href="/docs/reference/math/lr/#functions-lr-size"><code>lr.size</code></a> not affecting characters enclosed in
<a href="/docs/reference/math/lr/#functions-mid"><code>mid</code></a> in some cases</li>
<li>Fixed resolving of em units in sub- and superscripts</li>
<li>Fixed bounding box of inline equations when a <a href="/docs/reference/text/text/#parameters-top-edge">text edge</a> is
set to <code><span class="typ-str">&quot;bounds&quot;</span></code></li>
</ul>
</li>
<li>
<p>Introspection</p>
<ul>
<li>Implemented a new system by which Typst tracks where elements end up on the
pages. This may lead to subtly different behavior in introspections.
(<strong>Breaking change</strong>)</li>
<li>Fixed various bugs with wrong counter behavior in complex layout
situations, through a new, more principled implementation</li>
<li>Counter updates can now be before the first, in between, and after the last
page when isolated by weak page breaks. This allows, for instance, updating
a counter before the first page header and background.</li>
<li>Fixed logical ordering of introspections within footnotes and figures</li>
<li>Fixed incorrect <a href="/docs/reference/introspection/here/"><code>here().position()</code></a> when <a href="/docs/reference/layout/place/" title="\`place\`"><code>place</code></a> was used in a
context expression</li>
<li>Fixed resolved positions of elements (in particular, headings) whose show
rule emits an invisible element (like a state update) before a page break</li>
<li>Fixed behavior of stepping a counter at a deeper level than its current
state has</li>
<li>Fixed citation formatting not working in table headers and a few other
places</li>
<li>Displaying the footnote counter will now respect the footnote numbering
style</li>
</ul>
</li>
<li>
<p>Model</p>
<ul>
<li>Document set rules do not need to be at the very start of the document
anymore. The only restriction is that they must not occur inside of layout
containers.</li>
<li>The <code>spacing</code> property of <a href="/docs/reference/model/list/#parameters-spacing">lists</a>,
<a href="/docs/reference/model/enum/#parameters-spacing">enumerations</a>, and <a href="/docs/reference/model/terms/#parameters-spacing">term lists</a> is now also
respected for tight lists</li>
<li>Tight lists now only attach (with tighter spacing) to preceding paragraphs,
not arbitrary blocks</li>
<li>The <a href="/docs/reference/model/quote/" title="\`quote\`"><code>quote</code></a> element is now locatable (can be used in queries)</li>
<li>The bibliography heading now uses <code>depth</code> instead of <code>level</code> so that its
level can still be configured via a show-set rule</li>
<li>Added support for more <a href="/docs/reference/model/numbering/" title="numbering">numbering</a> formats: Devanagari, Eastern Arabic,
Bengali, and circled numbers</li>
<li>Added <a href="/docs/reference/model/heading/#parameters-hanging-indent"><code>hanging-indent</code></a> parameter to heading
function to tweak the appearance of multi-line headings and improved default
appearance of multi-line headings</li>
<li>Improved handling of bidirectional text in outline entry</li>
<li>Fixed document set rules being ignored in an otherwise empty document</li>
<li>Fixed document set rules not being usable in context expressions</li>
<li>Fixed bad interaction between <code><span class="typ-key">set</span> document</code> and <code><span class="typ-key">set</span> page</code></li>
<li>Fixed <code><span class="typ-key">show</span> <span class="typ-func">figure</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span></code>. Since the default figure alignment is
now a show-set rule, it is not revoked by <code><span class="typ-key">show</span> <span class="typ-func">figure</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> it<span class="typ-punct">.</span>body</code>
anymore. (<strong>Minor breaking change</strong>)</li>
<li>Fixed numbering of footnote references</li>
<li>Fixed spacing after bibliography heading</li>
</ul>
</li>
<li>
<p>Bibliography</p>
<ul>
<li>The Hayagriva YAML <code>publisher</code> field can now accept a dictionary with a
<code>location</code> key. The top-level <code>location</code> key is now primarily intended for
event and item locations.</li>
<li>Multiple page ranges with prefixes and suffixes are now allowed</li>
<li>Added <code>director</code> and catch-all editor types to BibLaTeX parsing</li>
<li>Added support for disambiguation to alphanumeric citation style</li>
<li>The year 0 will now render as 1BC</li>
<li>Fixes for sorting of bibliography entries</li>
<li>Fixed pluralization of page range labels</li>
<li>Fixed sorting of citations by their number</li>
<li>Fixed how citation number ranges collapse</li>
<li>Fixed when the short form of a title is used</li>
<li>Fixed parsing of unbalanced dollars in BibLaTeX <code>url</code> field</li>
<li>Updated built-in citation styles</li>
</ul>
</li>
<li>
<p>Visualization</p>
<ul>
<li>Added <code>fill-rule</code> parameter to <a href="/docs/reference/visualize/path/#parameters-fill-rule"><code>path</code></a> and
<a href="/docs/reference/visualize/polygon/#parameters-fill-rule"><code>polygon</code></a> functions</li>
<li>Fixed color mixing and gradients for <a href="/docs/reference/visualize/color/#definitions-luma">Luma colors</a></li>
<li>Fixed conversion from Luma to CMYK colors</li>
<li>Fixed offset gradient strokes in PNG export</li>
<li>Fixed unintended cropping of some SVGs</li>
<li>SVGs with foreign objects now produce a warning as they will likely not
render correctly in Typst</li>
</ul>
</li>
<li>
<p>Syntax</p>
<ul>
<li>Added support for nested imports like <code><span class="typ-key">import</span> <span class="typ-str">&quot;file.typ&quot;</span><span class="typ-punct">:</span> module<span class="typ-punct">.</span>item</code></li>
<li>Added support for parenthesized imports like
<code><span class="typ-key">import</span> <span class="typ-str">&quot;file.typ&quot;</span><span class="typ-punct">:</span> <span class="typ-punct">(</span>a<span class="typ-punct">,</span> b<span class="typ-punct">,</span> c<span class="typ-punct">)</span></code>. With those, the import list can break over
multiple lines.</li>
<li>Fixed edge case in parsing of reference syntax</li>
<li>Fixed edge case in parsing of heading, list, enum, and term markers
immediately followed by comments</li>
<li>Fixed rare crash in parsing of parenthesized expressions</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Added new fixed-point <a href="/docs/reference/foundations/decimal/" title="\`decimal\`"><code>decimal</code></a> number type for highly precise arithmetic
on numbers in base 10, as needed for finance</li>
<li>Added <code>std</code> module for accessing standard library definitions even when a
variable with the same name shadows/overwrites it</li>
<li>Added <a href="/docs/reference/foundations/array/#definitions-to-dict" title="\`array.to-dict\`"><code>array.to-dict</code></a>, <a href="/docs/reference/foundations/array/#definitions-reduce" title="\`array.reduce\`"><code>array.reduce</code></a>, <a href="/docs/reference/foundations/array/#definitions-windows" title="\`array.windows\`"><code>array.windows</code></a> methods</li>
<li>Added <code>exact</code> argument to <a href="/docs/reference/foundations/array/#definitions-zip" title="\`array.zip\`"><code>array.zip</code></a></li>
<li>Added <a href="/docs/reference/foundations/arguments/#definitions-at" title="\`arguments.at\`"><code>arguments.at</code></a> method</li>
<li>Added <a href="/docs/reference/foundations/int/#definitions-from-bytes" title="\`int.from-bytes\`"><code>int.from-bytes</code></a>, <a href="/docs/reference/foundations/int/#definitions-to-bytes" title="\`int.to-bytes\`"><code>int.to-bytes</code></a>, <a href="/docs/reference/foundations/float/#definitions-from-bytes" title="\`float.from-bytes\`"><code>float.from-bytes</code></a>, and
<a href="/docs/reference/foundations/float/#definitions-to-bytes" title="\`float.to-bytes\`"><code>float.to-bytes</code></a></li>
<li>Added proper support for negative values of the <code>digits</code> parameter of
<a href="/docs/reference/foundations/calc/#functions-round" title="\`calc.round\`"><code>calc.round</code></a> (the behaviour existed before but was subtly broken)</li>
<li>Conversions from <a href="/docs/reference/foundations/int/" title="\`int\`"><code>int</code></a> to <a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a> will now error instead of saturating
if the float is too large (<strong>Minor breaking change</strong>)</li>
<li>Added <code>float.nan</code> and <code>float.inf</code>, removed <code>calc.nan</code>
(<strong>Minor breaking change</strong>)</li>
<li>Certain symbols are now generally callable like functions and not only
specifically in math. Examples are accents or <a href="/docs/reference/math/lr/#functions-floor"><code>floor</code></a> and
<a href="/docs/reference/math/lr/#functions-ceil"><code>ceil</code></a>.</li>
<li>Improved <a href="/docs/reference/foundations/repr/" title="\`repr\`"><code>repr</code></a> of relative values, sequences, infinities, NaN,
<code><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-key">none</span><span class="typ-punct">)</span></code> and <code><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-key">auto</span><span class="typ-punct">)</span></code></li>
<li>Fixed crash on whole packages (rather than just files) cyclically importing
each other</li>
<li>Fixed return type of <a href="/docs/reference/foundations/calc/#functions-round" title="\`calc.round\`"><code>calc.round</code></a> on integers when a non-zero value is
provided for <code>digits</code></li>
</ul>
</li>
<li>
<p>Styling</p>
<ul>
<li>Text show rules now match across multiple text elements</li>
<li>The string <code>&quot;</code> in a text show rule now matches smart quotes</li>
<li>Fixed a long-standing styling bug where the header and footer would
incorrectly inherit styles from a lone element on the page (e.g. a heading)</li>
<li>Fixed <code><span class="typ-key">set</span> page</code> not working directly after a counter/state update</li>
<li>Page fields configured via an explicit <code><span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">[</span>..<span class="typ-punct">]</span></code> call can now be
properly retrieved in context expressions</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>Highly reduced PDF file sizes due to better font subsetting</li>
<li>Emoji are now exported properly in PDF</li>
<li>Added initial support for PDF/A. For now, only the standard PDF/A-2b is
supported, but more is planned for the future. Enabled via <code>--pdf-standard a-2b</code> in the CLI and via the UI in File &gt; Export as &gt; PDF in the web app.</li>
<li>Setting <a href="/docs/reference/layout/page/#parameters-fill" title="\`page.fill\`"><code>page.fill</code></a> to <code><span class="typ-key">none</span></code> will now lead to transparent pages instead
of white ones in PNG and SVG. The new default of <code><span class="typ-key">auto</span></code> means transparent
for PDF and white for PNG and SVG.</li>
<li>Improved text copy-paste from PDF in complex scenarios</li>
<li>Exported SVGs now contain the <code>data-typst-label</code> attribute on groups
resulting from labelled <a href="/docs/reference/layout/box/">boxes</a> and <a href="/docs/reference/layout/block/">blocks</a></li>
<li>Fixed a bug where some fonts would not print correctly on professional
printers</li>
<li>Fixed a bug where transparency could leak from one PDF object to another</li>
<li>Fixed a bug with CMYK gradients in PDF</li>
<li>Fixed various bugs with export of Oklab gradients in PDF</li>
<li>Fixed crashes related to rendering of non-outline glyphs</li>
<li>Two small fixes for PDF standard conformance</li>
</ul>
</li>
<li>
<p>Performance</p>
<ul>
<li>Typst's layout engine is now multithreaded. Typical speedups are 2-3x for
larger documents. The multithreading operates on page break boundaries, so
explicit page breaks are necessary for it to kick in.</li>
<li>Paragraph justification was optimized with a new two-pass algorithm.
Speedups are larger for shorter paragraphs and range from 1-6x.</li>
</ul>
</li>
<li>
<p>Command Line Interface</p>
<ul>
<li>Added <code>--pages</code> option to select specific page ranges to export</li>
<li>Added <code>--package-path</code> and <code>--package-cache-path</code> as well as
<code>TYPST_PACKAGE_PATH</code> and <code>TYPST_PACKAGE_CACHE_PATH</code> environment variables
for configuring where packages are loaded from and cached in, respectively</li>
<li>Added <code>--ignore-system-fonts</code> flag to disable system fonts fully for better
reproducibility</li>
<li>Added <code>--make-deps</code> argument for outputting the dependencies of the current
compilation as a Makefile</li>
<li>Added <code>--pretty</code> option to <code>typst query</code>, with the default now being to
minify (only applies to JSON format)</li>
<li>Added <code>--backup-path</code> to <code>typst update</code> to configure where the previous
version is backed up</li>
<li>Added useful links to help output</li>
<li>The CLI will now greet users who invoke just <code>typst</code> for the first time</li>
<li>The document can now be written to stdout by passing <code>-</code> as the output
filename (for PDF or single-page image export)</li>
<li>Typst will now emit a proper error message instead of failing silently when
the certificate specified by <code>--cert</code> or <code>TYPST_CERT</code> could not be loaded</li>
<li>The CLI now respects the <code>SOURCE_DATE_EPOCH</code> environment variable for better
reproducibility</li>
<li>When exporting multiple images, you can now use <code>t</code> (total pages), <code>p</code>
(current page), and <code>0p</code> (zero-padded current page, same as current <code>n</code>)
in the output path</li>
<li>The input and output paths now allow non-UTF-8 values</li>
<li>Times are now formatted more consistently across the CLI</li>
<li>Fixed a bug related to the <code>--open</code> flag</li>
<li>Fixed path completions for <code>typst</code> not working in zsh</li>
</ul>
</li>
<li>
<p>Tooling &amp; Diagnostics</p>
<ul>
<li>The &quot;compiler&quot; field for specifying the minimum Typst version required by a
package now supports imprecise bounds like 0.11 instead of 0.11.0</li>
<li>Added warning when a label is ignored by Typst because no preceding
labellable element exists</li>
<li>Added hint when trying to apply labels in code mode</li>
<li>Added hint when trying to call a standard library function that has been
shadowed/overwritten by a local definition</li>
<li>Added hint when trying to set both the language and the region in the <code>lang</code>
parameter</li>
<li>Added hints when trying to compile non-Typst files (e.g. after having typed
<code>typst c file.pdf</code> by accident)</li>
<li>Added hint when a string is used where a label is expected</li>
<li>Added hint when a stray end of a block comment (<code>*/</code>) is encountered</li>
<li>Added hints when destructuring arrays with the wrong number of elements</li>
<li>Improved error message when trying to use a keyword as an identifier in a
let binding</li>
<li>Improved error messages when accessing nonexistent fields</li>
<li>Improved error message when a package exists, but not the specified version</li>
<li>Improved hints for unknown variables</li>
<li>Improved hint when trying to convert a length with non-zero em component to
an absolute unit</li>
<li>Fixed a crash that could be triggered by certain hover tooltips</li>
<li>Fixed an off-by-one error in to-source jumps when first-line-indent is
enabled</li>
<li>Fixed suggestions for <code>.</code> after the end of an inline code expressions</li>
<li>Fixed autocompletions being duplicated in a specific case</li>
</ul>
</li>
<li>
<p>Symbols</p>
<ul>
<li>New: <code>parallelogram</code>, <code>original</code>, <code>image</code>, <code>crossmark</code>, <code>rest</code>, <code>natural</code>,
<code>flat</code>, <code>sharp</code>, <code>tiny</code>, <code>miny</code>, <code>copyleft</code>, <code>trademark</code>, <code>emoji.beet</code>,
<code>emoji.fingerprint</code>, <code>emoji.harp</code>, <code>emoji.shovel</code>, <code>emoji.splatter</code>,
<code>emoji.tree.leafless</code>,</li>
<li>New variants: <code>club.stroked</code>, <code>diamond.stroked</code>, <code>heart.stroked</code>,
<code>spade.stroked</code>, <code>gt.neq</code>, <code>lt.neq</code>, <code>checkmark.heavy</code>, <code>paren.double</code>,
<code>brace.double</code>, <code>shell.double</code>, <code>arrow.turn</code>, <code>plus.double</code>, <code>plus.triple</code>,
<code>infinity.bar</code>, <code>infinity.incomplete</code>, <code>infinity.tie</code>, <code>multimap.double</code>,
<code>ballot.check</code>, <code>ballot.check.heavy</code>, <code>emptyset.bar</code>, <code>emptyset.circle</code>,
<code>emptyset.arrow.l</code>, <code>emptyset.arrow.r</code>, <code>parallel.struck</code>, <code>parallel.eq</code>,
<code>parallel.equiv</code>, <code>parallel.slanted</code>, <code>parallel.tilde</code>, <code>angle.l.curly</code>,
<code>angle.l.dot</code>, <code>angle.r.curly</code>, <code>angle.r.dot</code>, <code>angle.oblique</code>, <code>angle.s</code>,
<code>em.two</code>, <code>em.three</code></li>
<li>Renamed: <code>turtle</code> to <code>shell</code>, <code>notes</code> to <code>note</code>, <code>ballot.x</code> to
<code>ballot.cross</code>, <code>succ.eq</code> to <code>succ.curly.eq</code>, <code>prec.eq</code> to <code>prec.curly.eq</code>,
<code>servicemark</code> to <code>trademark.service</code>, <code>emoji.face.tired</code> to
<code>emoji.face.distress</code> (<strong>Breaking change</strong>)</li>
<li>Changed codepoint: <code>prec.eq</code>, <code>prec.neq</code>, <code>succ.eq</code>, <code>succ.neq</code>, <code>triangle</code>
from ▷ to △, <code>emoji.face.tired</code> (<strong>Breaking change</strong>)</li>
<li>Removed: <code>lt.curly</code> in favor of <code>prec</code>, <code>gt.curly</code> in favor of <code>succ</code>
(<strong>Breaking change</strong>)</li>
</ul>
</li>
<li>
<p>Deprecations</p>
<ul>
<li><a href="/docs/reference/introspection/counter/#definitions-display" title="\`counter.display\`"><code>counter.display</code></a> without an established context</li>
<li><a href="/docs/reference/introspection/counter/#definitions-final" title="\`counter.final\`"><code>counter.final</code></a> with a location</li>
<li><a href="/docs/reference/introspection/state/#definitions-final" title="\`state.final\`"><code>state.final</code></a> with a location</li>
<li><a href="/docs/reference/introspection/state/#definitions-display" title="\`state.display\`"><code>state.display</code></a></li>
<li><a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a> with a location as the second argument</li>
<li><a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a> with a callback function</li>
<li><a href="/docs/reference/layout/measure/" title="\`measure\`"><code>measure</code></a> with styles</li>
<li><a href="/docs/reference/foundations/style/" title="\`style\`"><code>style</code></a></li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Added <code>typst-kit</code> crate which provides useful APIs for <code>World</code> implementors</li>
<li>Added go-to-definition API in <code>typst-ide</code></li>
<li>Added package manifest parsing APIs to <code>typst-syntax</code></li>
<li>As the compiler is now capable of multithreading, <code>World</code> implementations
must satisfy <code>Send</code> and <code>Sync</code></li>
<li>Changed signature of <code>World::main</code> to allow for the scenario where the main
file could not be loaded</li>
<li>Removed <code>Tracer</code> in favor of <code>Warned&lt;T&gt;</code> and <code>typst::trace</code> function</li>
<li>The <code>xz2</code> dependency used by the self-updater is now statically linked</li>
<li>The Dockerfile now has an <code>ENTRYPOINT</code> directive</li>
</ul>
</li>
</ul>
<h2 id="v0.11.1">Version 0.11.1 (May 17, 2024)</h2>
<ul>
<li>
<p>Security</p>
<ul>
<li>Fixed a vulnerability where image files at known paths could be embedded
into the PDF even if they were outside of the project directory</li>
</ul>
</li>
<li>
<p>Bibliography</p>
<ul>
<li>Fixed et-al handling in subsequent citations</li>
<li>Fixed suppression of title for citations and bibliography references with no
author</li>
<li>Fixed handling of initials in citation styles without a delimiter</li>
<li>Fixed bug with citations in footnotes</li>
</ul>
</li>
<li>
<p>Text and Layout</p>
<ul>
<li>Fixed interaction of <a href="/docs/reference/model/par/#parameters-first-line-indent"><code>first-line-indent</code></a> and
<a href="/docs/reference/model/outline/" title="\`outline\`"><code>outline</code></a></li>
<li>Fixed compression of CJK punctuation marks at line start and end</li>
<li>Fixed handling of <a href="/docs/reference/visualize/rect/">rectangles</a> with negative dimensions</li>
<li>Fixed layout of <a href="/docs/reference/visualize/path/" title="\`path\`"><code>path</code></a> in explicitly sized container</li>
<li>Fixed broken <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> text in right-to-left paragraphs</li>
<li>Fixed tab rendering in <code>raw</code> text with language <code>typ</code> or <code>typc</code></li>
<li>Fixed highlighting of multi-line <code>raw</code> text enclosed by single backticks</li>
<li>Fixed indentation of overflowing lines in <code>raw</code> blocks</li>
<li>Fixed extra space when <code>raw</code> text ends with a backtick</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Fixed broken <a href="/docs/reference/math/equation/">equations</a> in right-to-left paragraphs</li>
<li>Fixed missing <a href="/docs/reference/math/variants/#functions-bb">blackboard bold</a> letters</li>
<li>Fixed error on empty arguments in 2D math argument list</li>
<li>Fixed stretching via <a href="/docs/reference/math/lr/#functions-mid"><code>mid</code></a> for various characters</li>
<li>Fixed that alignment points in equations were affected by <code><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span></code></li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>Fixed <a href="/docs/reference/text/smartquote/">smart quotes</a> in PDF outline</li>
<li>Fixed <a href="/docs/reference/visualize/pattern/">patterns</a> with spacing in PDF</li>
<li>Fixed wrong PDF page labels when <a href="/docs/reference/layout/page/#parameters-numbering">page numbering</a> was
disabled after being previously enabled</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Fixed overflow for large numbers in external data files (by converting to
floats instead)</li>
<li>Fixed <a href="/docs/reference/foundations/str/#definitions-trim"><code>str<span class="typ-punct">.</span><span class="typ-func">trim</span><span class="typ-punct">(</span>regex<span class="typ-punct">,</span> at<span class="typ-punct">:</span> end<span class="typ-punct">)</span></code></a> when the whole string is
matched</li>
</ul>
</li>
<li>
<p>Miscellaneous</p>
<ul>
<li>Fixed deformed strokes for specific shapes and thicknesses</li>
<li>Fixed newline handling in code mode: There can now be comments within
chained method calls and between an <code>if</code> branch and the <code>else</code> keyword</li>
<li>Fixed inefficiency with incremental reparsing</li>
<li>Fixed autocompletions for relative file imports</li>
<li>Fixed crash in autocompletion handler</li>
<li>Fixed a bug where the path and entrypoint printed by <code>typst init</code> were not
properly escaped</li>
<li>Fixed various documentation errors</li>
</ul>
</li>
</ul>
<h2 id="v0.11.0">Version 0.11.0 (March 15, 2024)</h2>
<ul>
<li>
<p>Tables (thanks to <a href="https://github.com/PgBiel">@PgBiel</a>)</p>
<ul>
<li>Tables are now <em>much</em> more flexible, read the new
<a href="/docs/guides/table-guide/">table guide</a> to get started</li>
<li>Added <a href="/docs/reference/model/table/#definitions-cell" title="\`table.cell\`"><code>table.cell</code></a> element for per-cell configuration</li>
<li>Cells can now span multiple <a href="/docs/reference/model/table/#definitions-cell-colspan">columns</a> or
<a href="/docs/reference/model/table/#definitions-cell-rowspan">rows</a></li>
<li>The <a href="/docs/reference/model/table/#definitions-cell-stroke">stroke</a> of individual cells can now be customized</li>
<li>The <a href="/docs/reference/model/table/#parameters-align"><code>align</code></a> and <a href="/docs/reference/model/table/#parameters-inset"><code>inset</code></a> arguments of the
table function now also take <code><span class="typ-punct">(</span>x<span class="typ-punct">,</span> y<span class="typ-punct">)</span> <span class="typ-op">=&gt;</span> ..</code> functions</li>
<li>Added <a href="/docs/reference/model/table/#definitions-hline" title="\`table.hline\`"><code>table.hline</code></a> and <a href="/docs/reference/model/table/#definitions-vline" title="\`table.vline\`"><code>table.vline</code></a> for convenient line customization</li>
<li>Added <a href="/docs/reference/model/table/#definitions-header" title="\`table.header\`"><code>table.header</code></a> element for table headers that repeat on every page</li>
<li>Added <a href="/docs/reference/model/table/#definitions-footer" title="\`table.footer\`"><code>table.footer</code></a> element for table footers that repeat on every page</li>
<li>All the new table functionality is also available for <a href="/docs/reference/layout/grid/">grids</a></li>
<li>Fixed gutter-related bugs</li>
</ul>
</li>
<li>
<p>Templates</p>
<ul>
<li>You can now use template packages to get started with new projects. Click
<em>Start from template</em> on the web app's dashboard and choose your preferred
template or run the <code>typst init &lt;template&gt;</code> command in the CLI. You can
<a href="https://typst.app/universe/search/?kind=templates">browse the available templates here</a>.</li>
<li>Switching templates after the fact has become easier. You can just import a
styling function from a different template package.</li>
<li>Package authors can now submit their own templates to the
<a href="https://github.com/typst/packages">package repository</a>. Share a template
for a paper, your institution, or an original work to help the community get
a head start on their projects.</li>
<li>Templates and packages are now organized by category and discipline. Filter
packages by either taxonomy in the <em>Start from template</em> wizard. If you are
a package author, take a look at the new documentation for
<a href="https://github.com/typst/packages/blob/main/CATEGORIES.md">categories</a> and
<a href="https://github.com/typst/packages/blob/main/DISCIPLINES.md">disciplines</a>.</li>
</ul>
</li>
<li>
<p>Context</p>
<ul>
<li>Added <em>context expressions:</em> Read the chapter on <a href="/docs/reference/context/" title="context">context</a> to get started</li>
<li>With context, you can access settable properties, e.g. <code><span class="typ-key">context</span> text<span class="typ-punct">.</span>lang</code>
to access the language set via <code><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>lang<span class="typ-punct">:</span> <span class="typ-str">&quot;..&quot;</span><span class="typ-punct">)</span></code></li>
<li>The following existing functions have been made contextual: <a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a>,
<a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a>, <a href="/docs/reference/layout/measure/" title="\`measure\`"><code>measure</code></a>, <a href="/docs/reference/introspection/counter/#definitions-display" title="\`counter.display\`"><code>counter.display</code></a>, <a href="/docs/reference/introspection/counter/#definitions-at" title="\`counter.at\`"><code>counter.at</code></a>,
<a href="/docs/reference/introspection/counter/#definitions-final" title="\`counter.final\`"><code>counter.final</code></a>, <a href="/docs/reference/introspection/state/#definitions-at" title="\`state.at\`"><code>state.at</code></a>, and <a href="/docs/reference/introspection/state/#definitions-final" title="\`state.final\`"><code>state.final</code></a></li>
<li>Added contextual methods <a href="/docs/reference/introspection/counter/#definitions-get" title="\`counter.get\`"><code>counter.get</code></a> and <a href="/docs/reference/introspection/state/#definitions-get" title="\`state.get\`"><code>state.get</code></a> to retrieve the
value of a counter or state in the current context</li>
<li>Added contextual function <a href="/docs/reference/introspection/here/" title="\`here\`"><code>here</code></a> to retrieve the <a href="/docs/reference/introspection/location/" title="location">location</a> of the current
context</li>
<li>The <a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a> function now returns the location of a selector's unique
match. Its old behavior has been replaced by context expressions and only
remains temporarily available for compatibility.</li>
<li>The <a href="/docs/reference/introspection/counter/#definitions-at" title="\`counter.at\`"><code>counter.at</code></a> and <a href="/docs/reference/introspection/state/#definitions-at" title="\`state.at\`"><code>state.at</code></a> methods are now more flexible: They
directly accept any kind of <a href="/docs/reference/introspection/location/#locatable">locatable</a> selector with
a unique match (e.g. a label) instead of just locations</li>
<li>When context is available, <a href="/docs/reference/introspection/counter/#definitions-display" title="\`counter.display\`"><code>counter.display</code></a> now directly returns the
result of applying the numbering instead of yielding opaque content. It
should not be used anymore without context. (Deprecation planned)</li>
<li>The <a href="/docs/reference/introspection/state/#definitions-display" title="\`state.display\`"><code>state.display</code></a> function should not be used anymore, use <a href="/docs/reference/introspection/state/#definitions-get" title="\`state.get\`"><code>state.get</code></a>
instead (Deprecation planned)</li>
<li>The <code>location</code> argument of <a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a>, <a href="/docs/reference/introspection/counter/#definitions-final" title="\`counter.final\`"><code>counter.final</code></a>, and
<a href="/docs/reference/introspection/state/#definitions-final" title="\`state.final\`"><code>state.final</code></a> should not be used anymore (Deprecation planned)</li>
<li>The <a href="/docs/reference/layout/measure/#parameters-styles"><code>styles</code></a> argument of the <code>measure</code> function should
not be used anymore (Deprecation planned)</li>
<li>The <a href="/docs/reference/foundations/style/" title="\`style\`"><code>style</code></a> function should not be used anymore, use context instead
(Deprecation planned)</li>
<li>The correct context is now also provided in various other places where it is
available, e.g. in show rules, layout callbacks, and numbering functions
in the outline</li>
</ul>
</li>
<li>
<p>Styling</p>
<ul>
<li>Fixed priority of multiple <a href="/docs/reference/styling/#show-rules">show-set rules</a>: They now
apply in the same order as normal set rules would</li>
<li>Show-set rules on the same element
(e.g. <code><span class="typ-key">show</span> heading<span class="typ-punct">.</span><span class="typ-func">where</span><span class="typ-punct">(</span>level<span class="typ-punct">:</span> <span class="typ-num">1</span><span class="typ-punct">)</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span>numbering<span class="typ-punct">:</span> <span class="typ-str">&quot;1.&quot;</span><span class="typ-punct">)</span></code>) now
work properly</li>
<li>Setting properties on an element within a transformational show rule (e.g.
<code><span class="typ-key">show</span> <span class="typ-func">heading</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> <span class="typ-punct">{</span> <span class="typ-key">set</span> <span class="typ-func">heading</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">;</span> it <span class="typ-punct">}</span></code>) is <strong>not</strong> supported
anymore (previously it also only worked sometimes); use show-set rules
instead (<strong>Breaking change</strong>)</li>
<li>Text show rules that match their own output now work properly
(e.g. <code><span class="typ-key">show</span> <span class="typ-str">&quot;cmd&quot;</span><span class="typ-punct">:</span> <span class="typ-raw">\`cmd\`</span></code>)</li>
<li>The elements passed to show rules and returned by queries now contain all
fields of their respective element functions rather than just specific ones</li>
<li>All settable properties can now be used in <a href="/docs/reference/foundations/function/#definitions-where">where</a>
selectors</li>
<li><a href="/docs/reference/foundations/selector/#definitions-and">And</a> and <a href="/docs/reference/foundations/selector/#definitions-or">or</a> selectors can now be used with
show rules</li>
<li>Errors within show rules and context expressions are now ignored in all but
the last introspection iteration, in line with the behavior of the old
<a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a></li>
<li>Fixed a bug where document set rules were allowed after content</li>
</ul>
</li>
<li>
<p>Layout</p>
<ul>
<li>Added <code>reflow</code> argument to <a href="/docs/reference/layout/rotate/"><code>rotate</code></a> and <a href="/docs/reference/layout/scale/"><code>scale</code></a> which
lets them affect the layout</li>
<li>Fixed a bug where <a href="/docs/reference/layout/place/#parameters-float">floating placement</a> or
<a href="/docs/reference/model/figure/#parameters-placement">floating figures</a> could end up out of order</li>
<li>Fixed overlap of text and figure for full-page floating figures</li>
<li>Fixed various cases where the <a href="/docs/reference/layout/hide/" title="\`hide\`"><code>hide</code></a> function didn't hide its contents
properly</li>
<li>Fixed usage of <a href="/docs/reference/layout/h/" title="\`h\`"><code>h</code></a> and <a href="/docs/reference/layout/v/" title="\`v\`"><code>v</code></a> in <a href="/docs/reference/layout/stack/">stacks</a></li>
<li>Invisible content like a counter update will no longer force a visible
block for just itself</li>
<li>Fixed a bug with horizontal spacing followed by invisible content (like a
counter update) directly at the start of a paragraph</li>
</ul>
</li>
<li>
<p>Text</p>
<ul>
<li>Added <a href="/docs/reference/text/text/#parameters-stroke"><code>stroke</code></a> property for text</li>
<li>Added basic i18n for Serbian and Catalan</li>
<li>Added support for contemporary Japanese <a href="/docs/reference/model/numbering/" title="numbering">numbering</a> method</li>
<li>Added patches for various wrong metadata in specific fonts</li>
<li>The <a href="/docs/reference/text/text/#parameters-dir">text direction</a> can now be overridden within a paragraph</li>
<li>Fixed Danish <a href="/docs/reference/text/smartquote/">smart quotes</a></li>
<li>Fixed font fallback next to a line break</li>
<li>Fixed width adjustment of JIS-style Japanese punctuation</li>
<li>Fixed Finnish translation of &quot;Listing&quot;</li>
<li>Fixed Z-ordering of multiple text decorations (underlines, etc.)</li>
<li>Fixed a bug due to which text <a href="/docs/reference/text/text/#parameters-features">features</a> could not be
overridden in consecutive set rules</li>
</ul>
</li>
<li>
<p>Model</p>
<ul>
<li>Added <a href="/docs/reference/model/heading/#parameters-depth"><code>depth</code></a> and <a href="/docs/reference/model/heading/#parameters-offset"><code>offset</code></a> arguments to
heading to increase or decrease the heading level for a bunch of content;
the heading syntax now sets <code>depth</code> rather than <code>level</code>
(<strong>Breaking change</strong>)</li>
<li>List <a href="/docs/reference/model/list/#parameters-marker">markers</a> now cycle by default</li>
<li>The <a href="/docs/reference/model/quote/" title="\`quote\`"><code>quote</code></a> function now more robustly selects the correct quotes based on
language and nesting</li>
<li>Fixed indent bugs related to the default show rule of <a href="/docs/reference/model/terms/" title="terms">terms</a></li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Inline equations now automatically linebreak at appropriate places</li>
<li>Added <a href="/docs/reference/math/equation/#parameters-number-align"><code>number-align</code></a> argument to equations</li>
<li>Added support for adjusting the <a href="/docs/reference/math/accent/#parameters-size"><code>size</code></a> of accents
relative to their base</li>
<li>Improved positioning of accents</li>
<li><a href="/docs/reference/math/primes/">Primes</a> are now always attached as <a href="/docs/reference/math/attach/#functions-scripts">scripts</a>
by default</li>
<li>Exposed <a href="/docs/reference/math/primes/" title="\`math.primes\`"><code>math.primes</code></a> element which backs the <code><span class="typ-math-delim">$</span>f<span class="typ-math-op">&#39;</span><span class="typ-math-delim">$</span></code> syntax in math</li>
<li>Math mode is not affected by <a href="/docs/reference/model/strong/" title="\`strong\`"><code>strong</code></a> and <a href="/docs/reference/model/emph/" title="\`emph\`"><code>emph</code></a> anymore</li>
<li>Fixed <a href="/docs/reference/math/attach/#functions-attach"><code>attach</code></a> under <a href="/docs/reference/math/frac/">fractions</a></li>
<li>Fixed that <a href="/docs/reference/math/class/" title="\`math.class\`"><code>math.class</code></a> did not affect smart limit placement</li>
<li>Fixed weak spacing in <a href="/docs/reference/math/lr/#functions-lr"><code>lr</code></a> groups</li>
<li>Fixed layout of large operators for Cambria Math font</li>
<li>Fixed math styling of Hebrew symbol codepoints</li>
</ul>
</li>
<li>
<p>Symbols</p>
<ul>
<li>Added <code>gradient</code> as an alias for <code>nabla</code></li>
<li>Added <code>partial</code> as an alias for <code>diff</code>, <code>diff</code> will be deprecated in the
future</li>
<li>Added <code>colon.double</code>, <code>gt.approx</code>, <code>gt.napprox</code>, <code>lt.approx</code>, and
<code>lt.napprox</code></li>
<li>Added <code>arrow.r.tilde</code> and <code>arrow.l.tilde</code></li>
<li>Added <code>tilde.dot</code></li>
<li>Added <code>forces</code> and <code>forces.not</code></li>
<li>Added <code>space.nobreak.narrow</code></li>
<li>Added <code>lrm</code> (Left-to-Right Mark) and <code>rlm</code> (Right-to-Left Mark)</li>
<li>Fixed <code>star.stroked</code> symbol (which previously had the wrong codepoint)</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Arrays can now be compared lexicographically</li>
<li>Added contextual method <a href="/docs/reference/layout/length/#definitions-to-absolute"><code>to-absolute</code></a> to lengths</li>
<li>Added <a href="/docs/reference/foundations/calc/#functions-root"><code>calc.root</code></a></li>
<li>Added <a href="/docs/reference/foundations/int/#definitions-signum" title="\`int.signum\`"><code>int.signum</code></a> and <a href="/docs/reference/foundations/float/#definitions-signum" title="\`float.signum\`"><code>float.signum</code></a> methods</li>
<li>Added <a href="/docs/reference/foundations/float/#definitions-is-nan" title="\`float.is-nan\`"><code>float.is-nan</code></a> and <a href="/docs/reference/foundations/float/#definitions-is-infinite" title="\`float.is-infinite\`"><code>float.is-infinite</code></a> methods</li>
<li>Added <a href="/docs/reference/foundations/int/#definitions-bit-not" title="\`int.bit-not\`"><code>int.bit-not</code></a>, <a href="/docs/reference/foundations/int/#definitions-bit-and" title="\`int.bit-and\`"><code>int.bit-and</code></a>, <a href="/docs/reference/foundations/int/#definitions-bit-or" title="\`int.bit-or\`"><code>int.bit-or</code></a>, <a href="/docs/reference/foundations/int/#definitions-bit-xor" title="\`int.bit-xor\`"><code>int.bit-xor</code></a>,
<a href="/docs/reference/foundations/int/#definitions-bit-lshift" title="\`int.bit-lshift\`"><code>int.bit-lshift</code></a>, and <a href="/docs/reference/foundations/int/#definitions-bit-rshift" title="\`int.bit-rshift\`"><code>int.bit-rshift</code></a> methods</li>
<li>Added <a href="/docs/reference/foundations/array/#definitions-chunks" title="\`array.chunks\`"><code>array.chunks</code></a> method</li>
<li>A module can now be converted to a dictionary with the
<a href="/docs/reference/foundations/dictionary/#constructor">dictionary constructor</a> to access its contents
dynamically</li>
<li>Added <a href="/docs/reference/data-loading/csv/#parameters-row-type"><code>row-type</code></a> argument to <code>csv</code> function to configure
how rows will be represented</li>
<li><a href="/docs/reference/data-loading/xml/">XML parsing</a> now allows DTDs (document type definitions)</li>
<li>Improved formatting of negative numbers with <a href="/docs/reference/foundations/str/"><code>str</code></a> and
<a href="/docs/reference/foundations/repr/"><code>repr</code></a></li>
<li>For loops can now iterate over <a href="/docs/reference/foundations/bytes/" title="bytes">bytes</a></li>
<li>Fixed a bug with pattern matching in for loops</li>
<li>Fixed a bug with labels not being part of <a href="/docs/reference/foundations/content/#definitions-fields"><code>.<span class="typ-func">fields</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code></a>
dictionaries</li>
<li>Fixed a bug where unnamed argument sinks wouldn't capture excess arguments</li>
<li>Fixed typo in <code>repr</code> output of strokes</li>
</ul>
</li>
<li>
<p>Syntax</p>
<ul>
<li>Added support for nested <a href="/docs/reference/scripting/#bindings">destructuring patterns</a></li>
<li>Special spaces (like thin or non-breaking spaces) are now parsed literally
instead of being collapsed into normal spaces (<strong>Breaking change</strong>)</li>
<li>Korean text can now use emphasis syntax without adding spaces
(<strong>Breaking change</strong>)</li>
<li>The token <a href="/docs/reference/context/" title="\`context\`"><code>context</code></a> is now a keyword and cannot be used as an identifier
anymore (<strong>Breaking change</strong>)</li>
<li>Nested line comments aren't allowed anymore in block comments
(<strong>Breaking change</strong>)</li>
<li>Fixed a bug where <code>x.)</code> would be treated as a field access</li>
<li>Text elements can now span across curly braces in markup</li>
<li>Fixed silently wrong parsing when function name is parenthesized</li>
<li>Fixed various bugs with parsing of destructuring patterns, arrays, and
dictionaries</li>
</ul>
</li>
<li>
<p>Tooling &amp; Diagnostics</p>
<ul>
<li>Click-to-jump now works properly within <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> text</li>
<li>Added suggestion for accessing a field if a method doesn't exist</li>
<li>Improved hint for calling a function stored in a dictionary</li>
<li>Improved errors for mutable accessor functions on arrays and dictionaries</li>
<li>Fixed error message when calling constructor of type that doesn't have one</li>
<li>Fixed confusing error message with nested dictionaries for strokes on
different sides</li>
<li>Fixed autocompletion for multiple packages with the same name from different
namespaces</li>
</ul>
</li>
<li>
<p>Visualization</p>
<ul>
<li>The <a href="/docs/reference/visualize/image/" title="\`image\`"><code>image</code></a> function doesn't upscale images beyond their natural size
anymore</li>
<li>The <a href="/docs/reference/visualize/image/" title="\`image\`"><code>image</code></a> function now respects rotation stored in EXIF metadata</li>
<li>Added support for SVG filters</li>
<li>Added alpha component to <a href="/docs/reference/visualize/color/#definitions-luma"><code>luma</code></a> colors</li>
<li>Added <a href="/docs/reference/visualize/color/#definitions-transparentize" title="\`color.transparentize\`"><code>color.transparentize</code></a> and <a href="/docs/reference/visualize/color/#definitions-opacify" title="\`color.opacify\`"><code>color.opacify</code></a> methods</li>
<li>Improved <a href="/docs/reference/visualize/color/#definitions-negate" title="\`color.negate\`"><code>color.negate</code></a> function</li>
<li>Added <a href="/docs/reference/text/highlight/#parameters-stroke"><code>stroke</code></a> and <a href="/docs/reference/text/highlight/#parameters-radius"><code>radius</code></a>
arguments to <code>highlight</code> function</li>
<li>Changed default <a href="/docs/reference/text/highlight/" title="\`highlight\`"><code>highlight</code></a> color to be transparent</li>
<li>CMYK to RGB conversion is now color-managed</li>
<li>Fixed crash with gradients in Oklch color space</li>
<li>Fixed color-mixing for hue-based spaces</li>
<li>Fixed bugs with color conversion</li>
<li>SVG sizes are not rounded anymore, preventing slightly wrong aspect ratios</li>
<li>Fixed a few other SVG-related bugs</li>
<li><a href="/docs/reference/visualize/color/#definitions-components" title="\`color.components\`"><code>color.components</code></a> doesn't round anything anymore</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>PDFs now contain named destinations for headings derived from their labels</li>
<li>The internal PDF structure was changed to make it easier for external tools
to extract or modify individual pages, avoiding a bug with Typst PDFs in
Apple Preview</li>
<li>PDFs produced by Typst should now be byte-by-byte reproducible when
<code><span class="typ-key">set</span> <span class="typ-func">document</span><span class="typ-punct">(</span>date<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span></code> is set</li>
<li>Added missing flag to PDF annotation</li>
<li>Fixed multiple bugs with gradients in PDF export</li>
<li>Fixed a bug with patterns in PDF export</li>
<li>Fixed a bug with embedding of grayscale images in PDF export</li>
<li>Fixed a bug with To-Unicode mapping of CFF fonts in PDF export</li>
<li>Fixed a bug with the generation of the PDF outline</li>
<li>Fixed a sorting bug in PDF export leading to non-reproducible output</li>
<li>Fixed a bug with transparent text in PNG export</li>
<li>Exported SVG files now include units in their top-level <code>width</code> and <code>height</code></li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Added support for passing <a href="/docs/reference/foundations/sys/">inputs</a> via a CLI flag</li>
<li>When passing the filename <code>-</code>, Typst will now read input from stdin</li>
<li>Now uses the system-native TLS implementation for network fetching which
should be generally more robust</li>
<li>Watch mode will now properly detect when a previously missing file is
created</li>
<li>Added <code>--color</code> flag to configure whether to print colored output</li>
<li>Fixed user agent with which packages are downloaded</li>
<li>Updated bundled fonts to the newest versions</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Added <code>--vendor-openssl</code> to CLI to configure whether to link OpenSSL
statically instead of dynamically (not applicable to Windows and Apple
platforms)</li>
<li>Removed old tracing (and its verbosity) flag from the CLI</li>
<li>Added new <code>--timings</code> flag which supersedes the old flamegraph profiling in
the CLI</li>
<li>Added minimal CLI to <code>typst-docs</code> crate for extracting the language and
standard library documentation as JSON</li>
<li>The <code>typst_pdf::export</code> function's <code>ident</code> argument switched from <code>Option</code>
to <code>Smart</code>. It should only be set to <code>Smart::Custom</code> if you can provide
a stable identifier (like the web app can). The CLI sets <code>Smart::Auto</code>.</li>
</ul>
</li>
</ul>
<h2 id="v0.10.0">Version 0.10.0 (December 4, 2023)</h2>
<ul>
<li>
<p>Bibliography management</p>
<ul>
<li>Added support for citation collapsing (e.g. <code>[1]-[3]</code> instead of
<code>[1], [2], [3]</code>) if requested by a CSL style</li>
<li>Fixed bug where an additional space would appear after a group of citations</li>
<li>Fixed link show rules for links in the bibliography</li>
<li>Fixed show-set rules on citations</li>
<li>Fixed bibliography-related crashes that happened on some systems</li>
<li>Corrected name of the GB/T 7714 family of styles from 7114 to 7714</li>
<li>Fixed missing title in some bibliography styles</li>
<li>Fixed printing of volumes in some styles</li>
<li>Fixed delimiter order for contributors in some styles (e.g. APA)</li>
<li>Fixed behavior of alphanumeric style</li>
<li>Fixed multiple bugs with GB/T 7714 style</li>
<li>Fixed escaping in Hayagriva values</li>
<li>Fixed crashes with empty dates in Hayagriva files</li>
<li>Fixed bug with spacing around math blocks</li>
<li>Fixed title case formatting after verbatim text and apostrophes</li>
<li>Page ranges in <code>.bib</code> files can now be arbitrary strings</li>
<li>Multi-line values in <code>.bib</code> files are now parsed correctly</li>
<li>Entry keys in <code>.bib</code> files now allow more characters</li>
<li>Fixed error message for empty dates in <code>.bib</code> files</li>
<li>Added support for years of lengths other than 4 without leading zeros in
<code>.bib</code> files</li>
<li>More LaTeX commands (e.g. for quotes) are now respected in <code>.bib</code> files</li>
</ul>
</li>
<li>
<p>Visualization</p>
<ul>
<li>Added support for <a href="/docs/reference/visualize/pattern/">patterns</a> as fills and strokes</li>
<li>The <code>alpha</code> parameter of the <a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> function on
colors is now a named parameter (<strong>Breaking change</strong>)</li>
<li>Added support for the <a href="/docs/reference/visualize/color/#definitions-oklch">Oklch</a> color space</li>
<li>Improved conversions between colors in different color spaces</li>
<li>Removed restrictions on <a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a> chroma component</li>
<li>Fixed <a href="/docs/reference/layout/block/#parameters-clip">clipping</a> on blocks and boxes without a stroke</li>
<li>Fixed bug with <a href="/docs/reference/visualize/gradient/">gradients</a> on math</li>
<li>Fixed bug with gradient rotation on text</li>
<li>Fixed bug with gradient colors in PDF</li>
<li>Fixed relative base of Oklab chroma ratios</li>
<li>Fixed Oklab color negation</li>
</ul>
</li>
<li>
<p>Text and Layout</p>
<ul>
<li>CJK text can now be emphasized with the <code>*</code> and <code>_</code> syntax even when there
are no spaces</li>
<li>Added basic i18n for Greek and Estonian</li>
<li>Improved default <a href="/docs/reference/model/figure/#definitions-caption-separator">figure caption separator</a> for
Chinese, French, and Russian</li>
<li>Changed default <a href="/docs/reference/model/figure/#parameters-supplement">figure supplement</a> for Russian to
short form</li>
<li>Fixed <a href="/docs/reference/text/text/#parameters-cjk-latin-spacing">CJK-Latin-spacing</a> before line breaks and in
<a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a> calls</li>
<li>Fixed line breaking at the end of links</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Added <a href="/docs/reference/math/lr/#functions-mid"><code>mid</code></a> function for scaling a delimiter up to the height
of the surrounding <a href="/docs/reference/math/lr/#functions-lr"><code>lr</code></a> group</li>
<li>The <a href="/docs/reference/math/op/"><code>op</code></a> function can now take any content, not just strings</li>
<li>Improved documentation for <a href="/docs/reference/math/#alignment">math alignment</a></li>
<li>Fixed swallowing of trailing comma when a symbol is used in a function-like
way (e.g. <code>pi(a,b,)</code>)</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Any non-identifier dictionary key is now interpreted as an expression: For
instance, <code><span class="typ-punct">(</span><span class="typ-punct">(</span>key<span class="typ-punct">)</span><span class="typ-punct">:</span> value<span class="typ-punct">)</span></code> will create a dictionary with a dynamic key</li>
<li>The <a href="/docs/reference/visualize/stroke/" title="\`stroke\`"><code>stroke</code></a> type now has a constructor that converts a value to a stroke
or creates one from its parts</li>
<li>Added constructor for <a href="/docs/reference/foundations/arguments/" title="\`arguments\`"><code>arguments</code></a> type</li>
<li>Added <a href="/docs/reference/foundations/calc/#functions-div-euclid"><code>calc.div-euclid</code></a> and
<a href="/docs/reference/foundations/calc/#functions-rem-euclid"><code>calc.rem-euclid</code></a> functions</li>
<li>Fixed equality of <a href="/docs/reference/foundations/arguments/" title="\`arguments\`"><code>arguments</code></a></li>
<li>Fixed <a href="/docs/reference/foundations/repr/" title="\`repr\`"><code>repr</code></a>of <a href="/docs/reference/visualize/color/#definitions-cmyk"><code>cmyk</code></a> colors</li>
<li>Fixed crashes with provided elements like figure captions, outline entries,
and footnote entries</li>
</ul>
</li>
<li>
<p>Tooling and Diagnostics</p>
<ul>
<li>Show rules that match on their own output now produce an appropriate error
message instead of a crash (this is a first step, in the future they will
just work)</li>
<li>Too highly or infinitely nested layouts now produce error messages instead
of crashes</li>
<li>Added hints for invalid identifiers</li>
<li>Added hint when trying to use a manually constructed footnote or outline
entry</li>
<li>Added missing details to autocompletions for types</li>
<li>Improved error message when passing a named argument where a positional one
is expected</li>
<li>Jump from click now works on raw blocks</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>PDF compilation output is now again fully byte-by-byte reproducible if the
document's <a href="/docs/reference/model/document/#parameters-date"><code>date</code></a> is set manually</li>
<li>Fixed color export in SVG</li>
<li>Fixed PDF metadata encoding of multiple <a href="/docs/reference/model/document/#parameters-author">authors</a></li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Fixed a major bug where <code>typst watch</code> would confuse files and fail to pick
up updates</li>
<li>Fetching of the release metadata in <code>typst update</code> now respects proxies</li>
<li>Fixed bug with <code>--open</code> flag on Windows when the path contains a space</li>
<li>The <code>TYPST_FONT_PATHS</code> environment variable can now contain multiple paths
(separated by <code>;</code> on Windows and <code>:</code> elsewhere)</li>
<li>Updated embedded New Computer Modern fonts to version 4.7</li>
<li>The watching process doesn't stop anymore when the main file contains
invalid UTF-8</li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Parallelized image encoding in PDF export</li>
<li>Improved the internal representation of content for improved performance</li>
<li>Optimized introspection (query, counter, etc.) performance</li>
<li>The <a href="/docs/reference/model/document/#parameters-title">document title</a> can now be arbitrary content instead
of just a string</li>
<li>The <a href="/docs/reference/model/enum/#parameters-number-align"><code>number-align</code></a> parameter on numbered lists now
also accepts vertical alignments</li>
<li>Fixed selectors on <a href="/docs/reference/model/quote/" title="quote">quote</a> elements</li>
<li>Fixed parsing of <code><span class="typ-key">#</span><span class="typ-key">return</span></code> expression in markup</li>
<li>Fixed bug where inline equations were displayed in equation outlines</li>
<li>Fixed potential CRLF issue in <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> blocks</li>
<li>Fixed a bug where Chinese numbering couldn't exceed the number 255</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Merged <code>typst</code> and <code>typst-library</code> and extracted <code>typst-pdf</code>, <code>typst-svg</code>,
and <code>typst-render</code> into separate crates</li>
<li>The Nix flake now includes the git revision when running <code>typst --version</code></li>
</ul>
</li>
</ul>
<h2 id="v0.9.0">Version 0.9.0 (October 31, 2023)</h2>
<ul>
<li>
<p>Bibliography management</p>
<ul>
<li>New bibliography engine based on <a href="https://citationstyles.org/">CSL</a>
(Citation Style Language). Ships with about 100 commonly used citation
styles and can load custom <code>.csl</code> files.</li>
<li>Added new <a href="/docs/reference/model/cite/#parameters-form"><code>form</code></a> argument to the <code>cite</code> function to produce
different forms of citations (e.g. for producing a citation suitable for
inclusion in prose)</li>
<li>The <a href="/docs/reference/model/cite/" title="\`cite\`"><code>cite</code></a> function now takes only a single label/key instead of allowing
multiple. Adjacent citations are merged and formatted according to the
citation style's rules automatically. This works both with the reference
syntax and explicit calls to the <code>cite</code> function. (<strong>Breaking change</strong>)</li>
<li>The <code>cite</code> function now takes a <a href="/docs/reference/foundations/label/" title="label">label</a> instead of a string
(<strong>Breaking change</strong>)</li>
<li>Added <a href="/docs/reference/model/bibliography/#parameters-full"><code>full</code></a> argument to bibliography function to
print the full bibliography even if not all works were cited</li>
<li>Bibliography entries can now contain Typst equations (wrapped in <code><span class="typ-math-delim">$</span>..<span class="typ-math-delim">$</span></code>
just like in markup), this works both for <code>.yml</code> and <code>.bib</code> bibliographies</li>
<li>The hayagriva YAML format was improved. See its
<a href="https://github.com/typst/hayagriva/blob/main/CHANGELOG.md">changelog</a> for
more details. (<strong>Breaking change</strong>)</li>
<li>A few bugs with <code>.bib</code> file parsing were fixed</li>
<li>Removed <code>brackets</code> argument of <code>cite</code> function in favor of <code>form</code></li>
</ul>
</li>
<li>
<p>Visualization</p>
<ul>
<li>Gradients and colors (thanks to <a href="https://github.com/Dherse">@Dherse</a>)
<ul>
<li>Added support for <a href="/docs/reference/visualize/gradient/">gradients</a> on shapes and text</li>
<li>Supports linear, radial, and conic gradients</li>
<li>Added support for defining colors in more color spaces, including
<a href="/docs/reference/visualize/color/#definitions-oklab">Oklab</a>, <a href="/docs/reference/visualize/color/#definitions-linear-rgb">Linear RGB(A)</a>,
<a href="/docs/reference/visualize/color/#definitions-hsl">HSL</a>, and <a href="/docs/reference/visualize/color/#definitions-hsv">HSV</a></li>
<li>Added <a href="/docs/reference/visualize/color/#definitions-saturate"><code>saturate</code></a>, <a href="/docs/reference/visualize/color/#definitions-desaturate"><code>desaturate</code></a>,
and <a href="/docs/reference/visualize/color/#definitions-rotate"><code>rotate</code></a> functions on colors</li>
<li>Added <a href="/docs/reference/visualize/color/#predefined-color-maps"><code>color.map</code></a> module with predefined
color maps that can be used with gradients</li>
<li>Rename <code>kind</code> function on colors to <a href="/docs/reference/visualize/color/#definitions-space"><code>space</code></a></li>
<li>Removed <code>to-rgba</code>, <code>to-cmyk</code>, and <code>to-luma</code> functions in favor of a new
<a href="/docs/reference/visualize/color/#definitions-components"><code>components</code></a> function</li>
</ul>
</li>
<li>Improved rendering of <a href="/docs/reference/visualize/rect/">rectangles</a> with corner radius and varying
stroke widths</li>
<li>Added support for properly clipping <a href="/docs/reference/layout/box/#parameters-clip">boxes</a> and
<a href="/docs/reference/layout/block/#parameters-clip">blocks</a> with a border radius</li>
<li>Added <code>background</code> parameter to <a href="/docs/reference/text/overline/" title="\`overline\`"><code>overline</code></a>, <a href="/docs/reference/text/underline/" title="\`underline\`"><code>underline</code></a>, and <a href="/docs/reference/text/strike/" title="\`strike\`"><code>strike</code></a>
functions</li>
<li>Fixed inaccurate color embedding in PDFs</li>
<li>Fixed ICC profile handling for images embedded in PDFs</li>
</ul>
</li>
<li>
<p>Text and Layout</p>
<ul>
<li>Added support for automatically adding proper
<a href="/docs/reference/text/text/#parameters-cjk-latin-spacing">spacing</a> between CJK and Latin text (enabled by
default)</li>
<li>Added support for automatic adjustment of more CJK punctuation</li>
<li>Added <a href="/docs/reference/model/quote/" title="\`quote\`"><code>quote</code></a> element for inserting inline and block quotes with optional
attributions</li>
<li>Added <a href="/docs/reference/text/raw/#definitions-line"><code>raw.line</code></a> element for customizing the display of
individual lines of raw text, e.g. to add line numbers while keeping proper
syntax highlighting</li>
<li>Added support for per-side <a href="/docs/reference/model/table/#parameters-inset">inset</a> customization to table
function</li>
<li>Added Hungarian and Romanian translations</li>
<li>Added support for Czech hyphenation</li>
<li>Added support for setting custom <a href="/docs/reference/text/smartquote/">smart quotes</a></li>
<li>The default <a href="/docs/reference/model/figure/#definitions-caption-separator">figure separator</a> now reacts to the
currently set language and region</li>
<li>Improved line breaking of links / URLs (especially helpful for
bibliographies with many URLs)</li>
<li>Improved handling of consecutive hyphens in justification algorithm</li>
<li>Fixed interaction of justification and hanging indent</li>
<li>Fixed a bug with line breaking of short lines without spaces when
justification is enabled</li>
<li>Fixed font fallback for hyphen generated by hyphenation</li>
<li>Fixed handling of word joiner and other no-break characters during
hyphenation</li>
<li>Fixed crash when hyphenating after an empty line</li>
<li>Fixed line breaking of composite emoji like 🏳️‍🌈</li>
<li>Fixed missing text in some SVGs</li>
<li>Fixed font fallback in SVGs</li>
<li>Fixed behavior of <a href="/docs/reference/layout/pagebreak/#parameters-to"><code>to</code></a> argument on <code>pagebreak</code> function</li>
<li>Fixed <code><span class="typ-key">set</span> <span class="typ-func">align</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span></code> for equations</li>
<li>Fixed spacing around <a href="/docs/reference/layout/place/">placed</a> elements</li>
<li>Fixed coalescing of <a href="/docs/reference/layout/block/#parameters-above"><code>above</code></a> and <a href="/docs/reference/layout/block/#parameters-below"><code>below</code></a>
spacing if given in em units and the font sizes differ</li>
<li>Fixed handling of <code>extent</code> parameter of <a href="/docs/reference/text/underline/" title="\`underline\`"><code>underline</code></a>, <a href="/docs/reference/text/overline/" title="\`overline\`"><code>overline</code></a>, and
<a href="/docs/reference/text/strike/" title="\`strike\`"><code>strike</code></a> functions</li>
<li>Fixed crash for <a href="/docs/reference/layout/place/#parameters-float">floating placed elements</a> with no specified
vertical alignment</li>
<li>Partially fixed a bug with citations in footnotes</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Added <code>gap</code> argument for <a href="/docs/reference/math/vec/#parameters-gap"><code>vec</code></a>, <a href="/docs/reference/math/mat/#parameters-gap"><code>mat</code></a>, and
<a href="/docs/reference/math/cases/#parameters-gap"><code>cases</code></a> function</li>
<li>Added <code>size</code> argument for <a href="/docs/reference/math/lr/#functions-abs"><code>abs</code></a>, <a href="/docs/reference/math/lr/#functions-norm"><code>norm</code></a>,
<a href="/docs/reference/math/lr/#functions-floor"><code>floor</code></a>, <a href="/docs/reference/math/lr/#functions-ceil"><code>ceil</code></a>, and <a href="/docs/reference/math/lr/#functions-round"><code>round</code></a>
functions</li>
<li>Added <a href="/docs/reference/math/cases/#parameters-reverse"><code>reverse</code></a> parameter to cases function</li>
<li>Added support for multinomial coefficients to <a href="/docs/reference/math/binom/"><code>binom</code></a>
function</li>
<li>Removed <code>rotation</code> argument on <a href="/docs/reference/math/cancel/"><code>cancel</code></a> function in favor of
a new and more flexible <code>angle</code> argument (<strong>Breaking change</strong>)</li>
<li>Added <code>wide</code> constant, which inserts twice the spacing of <code>quad</code></li>
<li>Added <code>csch</code> and <code>sech</code> <a href="/docs/reference/math/op/">operators</a></li>
<li><code>↼</code>, <code>⇀</code>, <code>↔</code>, and <code>⟷</code> can now be used as <a href="/docs/reference/math/accent/">accents</a></li>
<li>Added <code>integral.dash</code>, <code>integral.dash.double</code>, and <code>integral.slash</code>
<a href="/docs/reference/symbols/sym/">symbols</a></li>
<li>Added support for specifying negative indices for
<a href="/docs/reference/math/mat/#parameters-augment">augmentation</a> lines to position the line from the back</li>
<li>Fixed default color of matrix <a href="/docs/reference/math/mat/#parameters-augment">augmentation</a> lines</li>
<li>Fixed attachment of primes to inline expressions</li>
<li>Math content now respects the text <a href="/docs/reference/text/text/#parameters-baseline">baseline</a> setting</li>
</ul>
</li>
<li>
<p>Performance</p>
<ul>
<li>Fixed a bug related to show rules in templates which would effectively
disable incremental compilation in affected documents</li>
<li>Micro-optimized code in several hot paths, which brings substantial
performance gains, in particular in incremental compilations</li>
<li>Improved incremental parsing, which affects the whole incremental
compilation pipeline</li>
<li>Added support for incremental parsing in the CLI</li>
<li>Added support for incremental SVG encoding during PDF export, which greatly
improves export performance for documents with many SVG</li>
</ul>
</li>
<li>
<p>Tooling and Diagnostics</p>
<ul>
<li>Improved autocompletion for variables that are in-scope</li>
<li>Added autocompletion for package imports</li>
<li>Added autocompletion for <a href="/docs/reference/foundations/label/">labels</a></li>
<li>Added tooltip that shows which variables a function captures (when hovering
over the equals sign or arrow of the function)</li>
<li>Diagnostics are now deduplicated</li>
<li>Improved diagnostics when trying to apply unary <code>+</code> or <code>-</code> to types that
only support binary <code>+</code> and <code>-</code></li>
<li>Error messages now state which label or citation key isn't present in the
document or its bibliography</li>
<li>Fixed a bug where function argument parsing errors were shadowed by
function execution errors (e.g. when trying to call
<a href="/docs/reference/foundations/array/#definitions-sorted"><code>array.sorted</code></a> and passing the key function as a positional
argument instead of a named one).</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>Added support for configuring the document's creation
<a href="/docs/reference/model/document/#parameters-date"><code>date</code></a>. If the <code>date</code> is set to <code><span class="typ-key">auto</span></code> (the default),
the PDF's creation date will be set to the current date and time.</li>
<li>Added support for configuring document <a href="/docs/reference/model/document/#parameters-keywords"><code>keywords</code></a></li>
<li>Generated PDFs now contain PDF document IDs</li>
<li>The PDF creator tool metadata now includes the Typst version</li>
</ul>
</li>
<li>
<p>Web app</p>
<ul>
<li>Added version picker to pin a project to an older compiler version
(with support for Typst 0.6.0+)</li>
<li>Fixed desyncs between editor and compiler and improved overall stability</li>
<li>The app now continues to highlight the document when typing while the
document is being compiled</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Added support for discovering fonts through fontconfig</li>
<li>Now clears the screen instead of resetting the terminal</li>
<li>Now automatically picks correct file extension for selected output format</li>
<li>Now only regenerates images for changed pages when using <code>typst watch</code> with
PNG or SVG export</li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Added <a href="/docs/reference/foundations/version/" title="\`version\`"><code>version</code></a> type and <code>sys.version</code> constant specifying the current
compiler version. Can be used to gracefully support multiple versions.</li>
<li>The U+2212 MINUS SIGN is now used when displaying a numeric value, in the
<a href="/docs/reference/foundations/repr/" title="\`repr\`"><code>repr</code></a> of any numeric value and to replace a normal hyphen in text mode
when before a digit. This improves, in particular, how negative integer
values are displayed in math mode.</li>
<li>Added support for specifying a default value instead of failing for
<code>remove</code> function in <a href="/docs/reference/foundations/array/#definitions-remove">array</a> and
<a href="/docs/reference/foundations/dictionary/#definitions-remove">dictionary</a></li>
<li>Simplified page setup guide examples</li>
<li>Switched the documentation from using the word &quot;hashtag&quot; to the word &quot;hash&quot;
where appropriate</li>
<li>Added support for <a href="/docs/reference/foundations/array/#definitions-zip"><code>array.zip</code></a> without any further arguments</li>
<li>Fixed crash when a plugin tried to read out of bounds memory</li>
<li>Fixed crashes when handling infinite <a href="/docs/reference/layout/length/">lengths</a></li>
<li>Fixed introspection (mostly bibliography) bugs due to weak page break close
to the end of the document</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Extracted <code>typst::ide</code> into separate <code>typst_ide</code> crate</li>
<li>Removed a few remaining <code>'static</code> bounds on <code>&amp;dyn World</code></li>
<li>Removed unnecessary dependency, which reduces the binary size</li>
<li>Fixed compilation of <code>typst</code> by itself (without <code>typst-library</code>)</li>
<li>Fixed warnings with Nix flake when using <code>lib.getExe</code></li>
</ul>
</li>
</ul>
<h2 id="v0.8.0">Version 0.8.0 (September 13, 2023)</h2>
<ul>
<li>
<p>Scripting</p>
<ul>
<li>Plugins (thanks to <a href="https://github.com/astrale-sharp">@astrale-sharp</a> and
<a href="https://github.com/arnaudgolfouse">@arnaudgolfouse</a>)
<ul>
<li>Typst can now load <a href="/docs/reference/foundations/plugin/">plugins</a> that are compiled to WebAssembly</li>
<li>Anything that can be compiled to WebAssembly can thus be loaded as a
plugin</li>
<li>These plugins are fully encapsulated (no access to file system or network)</li>
<li>Plugins can be shipped as part of <a href="/docs/reference/scripting/#packages">packages</a></li>
<li>Plugins work just the same in the web app</li>
</ul>
</li>
<li>Types are now first-class values (<strong>Breaking change</strong>)
<ul>
<li>A <a href="/docs/reference/foundations/type/" title="type">type</a> is now itself a value</li>
<li>Some types can be called like functions (those that have a constructor),
e.g. <a href="/docs/reference/foundations/int/" title="\`int\`"><code>int</code></a> and <a href="/docs/reference/foundations/str/" title="\`str\`"><code>str</code></a></li>
<li>Type checks are now of the form <code><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span> <span class="typ-op">==</span> int</code> instead of the old
<code><span class="typ-func">type</span><span class="typ-punct">(</span><span class="typ-num">10</span><span class="typ-punct">)</span> <span class="typ-op">==</span> <span class="typ-str">&quot;integer&quot;</span></code>. <a href="/docs/reference/foundations/type/#compatibility">Compatibility</a> with the
old way will remain for a while to give package authors time to upgrade,
but it will be removed at some point.</li>
<li>Methods are now syntax sugar for calling a function scoped to a type,
meaning that <code><span class="typ-str">&quot;hello&quot;</span><span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> is equivalent to <code>str<span class="typ-punct">.</span><span class="typ-func">len</span><span class="typ-punct">(</span><span class="typ-str">&quot;hello&quot;</span><span class="typ-punct">)</span></code></li>
</ul>
</li>
<li>Added support for <a href="/docs/reference/scripting/#modules"><code>import</code></a> renaming with <code>as</code></li>
<li>Added a <a href="/docs/reference/foundations/duration/" title="\`duration\`"><code>duration</code></a> type</li>
<li>Added support for <a href="/docs/reference/data-loading/cbor/">CBOR</a> encoding and decoding</li>
<li>Added encoding and decoding functions from and to bytes for data formats:
<a href="/docs/reference/data-loading/json/#definitions-decode"><code>json.decode</code></a>, <a href="/docs/reference/data-loading/json/#definitions-encode"><code>json.encode</code></a>, and similar
functions for other formats</li>
<li>Added <a href="/docs/reference/foundations/array/#definitions-intersperse"><code>array.intersperse</code></a> function</li>
<li>Added <a href="/docs/reference/foundations/str/#definitions-rev"><code>str.rev</code></a> function</li>
<li>Added <code>calc.tau</code> constant</li>
<li>Made <a href="/docs/reference/foundations/bytes/" title="bytes">bytes</a> joinable and addable</li>
<li>Made <a href="/docs/reference/foundations/array/#definitions-zip"><code>array.zip</code></a> function variadic</li>
<li>Fixed bug with <a href="/docs/reference/foundations/eval/" title="\`eval\`"><code>eval</code></a> when the <code>mode</code> was set to <code><span class="typ-str">&quot;math&quot;</span></code></li>
<li>Fixed bug with <a href="/docs/reference/foundations/str/#definitions-ends-with"><code>ends-with</code></a> function on strings</li>
<li>Fixed bug with destructuring in combination with break, continue, and return</li>
<li>Fixed argument types of <a href="/docs/reference/foundations/calc/#functions-cosh">hyperbolic functions</a>, they don't allow
angles anymore (<strong>Breaking change</strong>)</li>
<li>Renamed some color methods: <code>rgba</code> becomes <code>to-rgba</code>, <code>cmyk</code> becomes
<code>to-cmyk</code>, and <code>luma</code> becomes <code>to-luma</code> (<strong>Breaking change</strong>)</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>Added SVG export
(thanks to <a href="https://github.com/Enter-tainer">@Enter-tainer</a>)</li>
<li>Fixed bugs with PDF font embedding</li>
<li>Added support for page labels that reflect the
<a href="/docs/reference/layout/page/#parameters-numbering">page numbering</a> style in the PDF</li>
</ul>
</li>
<li>
<p>Text and Layout</p>
<ul>
<li>Added <a href="/docs/reference/text/highlight/" title="\`highlight\`"><code>highlight</code></a> function for highlighting text with a
background color</li>
<li>Added <a href="/docs/reference/visualize/polygon/#definitions-regular"><code>polygon.regular</code></a> function for drawing a regular
polygon</li>
<li>Added support for tabs in <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> elements alongside
<a href="/docs/reference/text/raw/#parameters-tab-size"><code>tab-width</code></a> parameter</li>
<li>The layout engine now tries to prevent &quot;runts&quot; (final lines consisting of
just a single word)</li>
<li>Added Finnish translations</li>
<li>Added hyphenation support for Polish</li>
<li>Improved handling of consecutive smart quotes of different kinds</li>
<li>Fixed vertical alignments for <a href="/docs/reference/layout/page/#parameters-number-align"><code>number-align</code></a> argument
on page function (<strong>Breaking change</strong>)</li>
<li>Fixed weak pagebreaks after counter updates</li>
<li>Fixed missing text in SVG when the text font is set to &quot;New Computer Modern&quot;</li>
<li>Fixed translations for Chinese</li>
<li>Fixed crash for empty text in show rule</li>
<li>Fixed leading spaces when there's a linebreak after a number and a comma</li>
<li>Fixed placement of floating elements in columns and other containers</li>
<li>Fixed sizing of block containing just a single box</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Added support for <a href="/docs/reference/math/mat/#parameters-augment">augmented matrices</a></li>
<li>Removed support for automatic matching of fences like <code>|</code> and <code>||</code> as
there were too many false positives. You can use functions like
<a href="/docs/reference/math/lr/#functions-abs"><code>abs</code></a> or <a href="/docs/reference/math/lr/#functions-norm"><code>norm</code></a> or an explicit <a href="/docs/reference/math/lr/#functions-lr"><code>lr</code></a>
call instead. (<strong>Breaking change</strong>)</li>
<li>Fixed spacing after number with decimal point in math</li>
<li>Fixed bug with primes in subscript</li>
<li>Fixed weak spacing</li>
<li>Fixed crash when text within math contains a newline</li>
</ul>
</li>
<li>
<p>Tooling and Diagnostics</p>
<ul>
<li>Added hints when trying to call a function stored in a dictionary without
extra parentheses</li>
<li>Fixed hint when referencing an equation without numbering</li>
<li>Added more details to some diagnostics (e.g. when SVG decoding fails)</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Added <code>typst update</code> command for self-updating the CLI
(thanks to <a href="https://github.com/jimvdl">@jimvdl</a>)</li>
<li>Added download progress indicator for packages and updates</li>
<li>Added <code>--format</code> argument to explicitly specify the output format</li>
<li>The CLI now respects proxy configuration through environment variables and
has a new <code>--cert</code> option for setting a custom CA certificate</li>
<li>Fixed crash when field wasn't present and <code>--one</code> is passed to <code>typst query</code></li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Added <a href="/docs/guides/page-setup-guide/">page setup guide</a></li>
<li>Added <a href="/docs/reference/model/figure/#definitions-caption"><code>figure.caption</code></a> function that can be used for
simpler figure customization (<strong>Breaking change</strong> because <code>it.caption</code> now
renders the full caption with supplement in figure show rules and manual
outlines)</li>
<li>Moved <code>caption-pos</code> argument to <code>figure.caption</code> function and renamed it to
<code>position</code> (<strong>Breaking change</strong>)</li>
<li>Added <a href="/docs/reference/model/figure/#definitions-caption-separator"><code>separator</code></a> argument to <code>figure.caption</code>
function</li>
<li>Added support for combination of and/or and before/after
<a href="/docs/reference/foundations/selector/">selectors</a></li>
<li>Packages can now specify a
<a href="https://github.com/typst/packages#package-format">minimum compiler version</a>
they require to work</li>
<li>Fixed parser bug where method calls could be moved onto their own line for
<code><span class="typ-key">#</span><span class="typ-key">let</span></code> expressions in markup (<strong>Breaking change</strong>)</li>
<li>Fixed bugs in sentence and title case conversion for bibliographies</li>
<li>Fixed supplements for alphanumeric and author-title bibliography styles</li>
<li>Fixed off-by-one error in APA bibliography style</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Made <code>Span</code> and <code>FileId</code> more type-safe so that all error conditions must be
handled by <code>World</code> implementors</li>
</ul>
</li>
</ul>
<h2 id="v0.7.0">Version 0.7.0 (August 7, 2023)</h2>
<ul>
<li>
<p>Text and Layout</p>
<ul>
<li>Added support for floating figures through the
<a href="/docs/reference/model/figure/#parameters-placement"><code>placement</code></a> argument on the figure function</li>
<li>Added support for arbitrary floating content through the
<a href="/docs/reference/layout/place/#parameters-float"><code>float</code></a> argument on the place function</li>
<li>Added support for loading <code>.sublime-syntax</code> files as highlighting
<a href="/docs/reference/text/raw/#parameters-syntaxes">syntaxes</a> for raw blocks</li>
<li>Added support for loading <code>.tmTheme</code> files as highlighting
<a href="/docs/reference/text/raw/#parameters-theme">themes</a> for raw blocks</li>
<li>Added <em>bounds</em> option to <a href="/docs/reference/text/text/#parameters-top-edge"><code>top-edge</code></a> and
<a href="/docs/reference/text/text/#parameters-bottom-edge"><code>bottom-edge</code></a> arguments of text function for tight
bounding boxes</li>
<li>Removed nonsensical top- and bottom-edge options, e.g. <em>ascender</em> for the
bottom edge (<strong>Breaking change</strong>)</li>
<li>Added <a href="/docs/reference/text/text/#parameters-script"><code>script</code></a> argument to text function</li>
<li>Added <a href="/docs/reference/text/smartquote/#parameters-alternative"><code>alternative</code></a> argument to smart quote
function</li>
<li>Added basic i18n for Japanese</li>
<li>Added hyphenation support for <code>nb</code> and <code>nn</code> language codes in addition to
<code>no</code></li>
<li>Fixed positioning of <a href="/docs/reference/layout/place/">placed elements</a> in containers</li>
<li>Fixed overflowing containers due to optimized line breaks</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>Greatly improved export of SVG images to PDF. Many thanks to
<a href="https://github.com/LaurenzV">@LaurenzV</a> for their work on this.</li>
<li>Added support for the alpha channel of RGBA colors in PDF export</li>
<li>Fixed a bug with PPI (pixels per inch) for PNG export</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Improved layout of primes (e.g. in <code><span class="typ-math-delim">$</span>a<span class="typ-math-op">&#39;</span><span class="typ-math-op">_</span>1<span class="typ-math-delim">$</span></code>)</li>
<li>Improved display of multi-primes (e.g. in <code><span class="typ-math-delim">$</span>a<span class="typ-math-op">&#39;</span><span class="typ-math-op">&#39;</span><span class="typ-math-delim">$</span></code>)</li>
<li>Improved layout of <a href="/docs/reference/math/roots/#functions-root">roots</a></li>
<li>Changed relations to show attachments as <a href="/docs/reference/math/attach/#functions-limits">limits</a> by default
(e.g. in <code><span class="typ-math-delim">$</span>a <span class="typ-escape">-&gt;</span><span class="typ-math-op">^</span>x b<span class="typ-math-delim">$</span></code>)</li>
<li>Large operators and delimiters are now always vertically centered</li>
<li><a href="/docs/reference/layout/box/">Boxes</a> in equations now sit on the baseline instead of being
vertically centered by default. Notably, this does not affect
<a href="/docs/reference/layout/block/">blocks</a> because they are not inline elements.</li>
<li>Added support for <a href="/docs/reference/layout/h/#parameters-weak">weak spacing</a></li>
<li>Added support for OpenType character variants</li>
<li>Added support for customizing the <a href="/docs/reference/math/class/">math class</a> of content</li>
<li>Fixed spacing around <code>.</code>, <code>\\/</code>, and <code>...</code></li>
<li>Fixed spacing between closing delimiters and large operators</li>
<li>Fixed a bug with math font weight selection</li>
<li>Symbols and Operators (<strong>Breaking changes</strong>)
<ul>
<li>Added <code>id</code>, <code>im</code>, and <code>tr</code> text <a href="/docs/reference/math/op/">operators</a></li>
<li>Renamed <code>ident</code> to <code>equiv</code> with alias <code>eq.triple</code> and removed
<code>ident.strict</code> in favor of <code>eq.quad</code></li>
<li>Renamed <code>ast.sq</code> to <code>ast.square</code> and <code>integral.sq</code> to <code>integral.square</code></li>
<li>Renamed <code>.eqq</code> modifier to <code>.equiv</code> (and <code>.neqq</code> to <code>.nequiv</code>) for
<code>tilde</code>, <code>gt</code>, <code>lt</code>, <code>prec</code>, and <code>succ</code></li>
<li>Added <code>emptyset</code> as alias for <code>nothing</code></li>
<li>Added <code>lt.curly</code> and <code>gt.curly</code> as aliases for <code>prec</code> and <code>succ</code></li>
<li>Added <code>aleph</code>, <code>beth</code>, and <code>gimmel</code> as alias for <code>alef</code>, <code>bet</code>, and
<code>gimel</code></li>
</ul>
</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Fields
<ul>
<li>Added <code>abs</code> and <code>em</code> field to <a href="/docs/reference/layout/length/">lengths</a></li>
<li>Added <code>ratio</code> and <code>length</code> field to <a href="/docs/reference/layout/relative/">relative lengths</a></li>
<li>Added <code>x</code> and <code>y</code> field to <a href="/docs/reference/layout/align/#parameters-alignment">2d alignments</a></li>
<li>Added <code>paint</code>, <code>thickness</code>, <code>cap</code>, <code>join</code>, <code>dash</code>, and <code>miter-limit</code> field
to <a href="/docs/reference/visualize/stroke/">strokes</a></li>
</ul>
</li>
<li>Accessor and utility methods
<ul>
<li>Added <a href="/docs/reference/foundations/array/#definitions-dedup"><code>dedup</code></a> method to arrays</li>
<li>Added <code>pt</code>, <code>mm</code>, <code>cm</code>, and <code>inches</code> method to <a href="/docs/reference/layout/length/">lengths</a></li>
<li>Added <code>deg</code> and <code>rad</code> method to <a href="/docs/reference/layout/angle/">angles</a></li>
<li>Added <code>kind</code>, <code>hex</code>, <code>rgba</code>, <code>cmyk</code>, and <code>luma</code> method to <a href="/docs/reference/visualize/color/">colors</a></li>
<li>Added <code>axis</code>, <code>start</code>, <code>end</code>, and <code>inv</code> method to <a href="/docs/reference/layout/stack/#parameters-dir">directions</a></li>
<li>Added <code>axis</code> and <code>inv</code> method to <a href="/docs/reference/layout/align/#parameters-alignment">alignments</a></li>
<li>Added <code>inv</code> method to <a href="/docs/reference/layout/align/#parameters-alignment">2d alignments</a></li>
<li>Added <code>start</code> argument to <a href="/docs/reference/foundations/array/#definitions-enumerate"><code>enumerate</code></a> method on arrays</li>
</ul>
</li>
<li>Added <a href="/docs/reference/visualize/color/#definitions-mix"><code>color.mix</code></a> function</li>
<li>Added <code>mode</code> and <code>scope</code> arguments to <a href="/docs/reference/foundations/eval/" title="\`eval\`"><code>eval</code></a> function</li>
<li>Added <a href="/docs/reference/foundations/bytes/" title="\`bytes\`"><code>bytes</code></a> type for holding large byte buffers
<ul>
<li>Added <a href="/docs/reference/data-loading/read/#parameters-encoding"><code>encoding</code></a> argument to read function to read a
file as bytes instead of a string</li>
<li>Added <a href="/docs/reference/visualize/image/#definitions-decode"><code>image.decode</code></a> function for decoding an image
directly from a string or bytes</li>
<li>Added <a href="/docs/reference/foundations/bytes/" title="\`bytes\`"><code>bytes</code></a> function for converting a string or an array of integers
to bytes</li>
<li>Added <a href="/docs/reference/foundations/array/" title="\`array\`"><code>array</code></a> function for converting bytes to an array of integers</li>
<li>Added support for converting bytes to a string with the <a href="/docs/reference/foundations/str/" title="\`str\`"><code>str</code></a> function</li>
</ul>
</li>
</ul>
</li>
<li>
<p>Tooling and Diagnostics</p>
<ul>
<li>Added support for compiler warnings</li>
<li>Added warning when compilation does not converge within five attempts due to
intense use of introspection features</li>
<li>Added warnings for empty emphasis (<code>__</code> and <code>**</code>)</li>
<li>Improved error message for invalid field assignments</li>
<li>Improved error message after single <code>#</code></li>
<li>Improved error message when a keyword is used where an identifier is
expected</li>
<li>Fixed parameter autocompletion for functions that are in modules</li>
<li>Import autocompletion now only shows the latest package version until a
colon is typed</li>
<li>Fixed autocompletion for dictionary key containing a space</li>
<li>Fixed autocompletion for <code>for</code> loops</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Added <code>typst query</code> subcommand to execute a
<a href="/docs/reference/introspection/query/#command-line-queries">query</a> on the command
line</li>
<li>The <code>--root</code> and <code>--font-paths</code> arguments cannot appear in front of the
command anymore (<strong>Breaking change</strong>)</li>
<li>Local and cached packages are now stored in directories of the form
<code>{namespace}/{name}/{version}</code> instead of <code>{namespace}/{name}-{version}</code>
(<strong>Breaking change</strong>)</li>
<li>Now prioritizes explicitly given fonts (via <code>--font-paths</code>) over system and
embedded fonts when both exist</li>
<li>Fixed <code>typst watch</code> not working with some text editors</li>
<li>Fixed displayed compilation time (now includes export)</li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Added <a href="/docs/reference/model/heading/#parameters-bookmarked"><code>bookmarked</code></a> argument to heading to control
whether a heading becomes part of the PDF outline</li>
<li>Added <a href="/docs/reference/model/figure/#definitions-caption-position"><code>caption-pos</code></a> argument to control the
position of a figure's caption</li>
<li>Added <a href="/docs/reference/introspection/metadata/" title="\`metadata\`"><code>metadata</code></a> function for exposing an arbitrary value to the
introspection system</li>
<li>Fixed that a <a href="/docs/reference/introspection/state/" title="\`state\`"><code>state</code></a> was identified by the pair <code>(key, init)</code> instead of
just its <code>key</code></li>
<li>Improved indent logic of <a href="/docs/reference/model/enum/">enumerations</a>. Instead of requiring at
least as much indent as the end of the marker, they now require only one
more space indent than the start of the marker. As a result, even long
markers like <code>12.</code> work with just 2 spaces of indent.</li>
<li>Fixed bug with indent logic of <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> blocks</li>
<li>Fixed a parsing bug with dictionaries</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Extracted parser and syntax tree into <code>typst-syntax</code> crate</li>
<li>The <code>World::today</code> implementation of Typst dependents may need fixing if
they have the same <a href="https://github.com/typst/typst/issues/1842">bug</a> that
the CLI world had</li>
</ul>
</li>
</ul>
<h2 id="v0.6.0">Version 0.6.0 (June 30, 2023)</h2>
<ul>
<li>
<p>Package Management</p>
<ul>
<li>Typst now has built-in <a href="/docs/reference/scripting/#packages">package management</a></li>
<li>You can import <a href="https://typst.app/universe/">published</a> community packages or create and use
<a href="https://github.com/typst/packages#local-packages">system-local</a> ones</li>
<li>Published packages are also supported in the web app</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li>Added support for optical size variants of glyphs in math mode</li>
<li>Added argument to enable <a href="/docs/reference/math/attach/#functions-limits"><code>limits</code></a> conditionally depending on
whether the equation is set in <a href="/docs/reference/math/sizes/#functions-display"><code>display</code></a> or
<a href="/docs/reference/math/sizes/#functions-inline"><code>inline</code></a> style</li>
<li>Added <code>gt.eq.slant</code> and <code>lt.eq.slant</code> symbols</li>
<li>Increased precedence of factorials in math mode (<code><span class="typ-math-delim">$</span>1<span class="typ-math-op">/</span>n!<span class="typ-math-delim">$</span></code> works correctly
now)</li>
<li>Improved <a href="/docs/reference/math/underover/#functions-underline">underlines</a> and <a href="/docs/reference/math/underover/#functions-overline">overlines</a> in
math mode</li>
<li>Fixed usage of <a href="/docs/reference/math/attach/#functions-limits"><code>limits</code></a> function in show rules</li>
<li>Fixed bugs with line breaks in equations</li>
</ul>
</li>
<li>
<p>Text and Layout</p>
<ul>
<li>Added support for alternating page <a href="/docs/reference/layout/page/#parameters-margin">margins</a> with the <code>inside</code>
and <code>outside</code> keys</li>
<li>Added support for specifying the page <a href="/docs/reference/layout/page/#parameters-binding"><code>binding</code></a></li>
<li>Added <a href="/docs/reference/layout/pagebreak/#parameters-to"><code>to</code></a> argument to pagebreak function to skip to the
next even or odd page</li>
<li>Added basic i18n for a few more languages (TR, SQ, TL)</li>
<li>Fixed bug with missing table row at page break</li>
<li>Fixed bug with <a href="/docs/reference/text/underline/">underlines</a></li>
<li>Fixed bug superfluous table lines</li>
<li>Fixed smart quotes after line breaks</li>
<li>Fixed a crash related to text layout</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li><strong>Breaking change:</strong> Added requirement for <code>--root</code>/<code>TYPST_ROOT</code> directory
to contain the input file because it designates the <em>project</em> root. Existing
setups that use <code>TYPST_ROOT</code> to emulate package management should switch to
<a href="https://github.com/typst/packages#local-packages">local packages</a></li>
<li><strong>Breaking change:</strong> Now denies file access outside of the project root</li>
<li>Added support for local packages and on-demand package download</li>
<li>Now watches all relevant files, within the root and all packages</li>
<li>Now displays compilation time</li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Added <a href="/docs/reference/model/outline/#definitions-entry"><code>outline.entry</code></a> to customize outline entries with
show rules</li>
<li>Added some hints for error messages</li>
<li>Added some missing syntaxes for <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> highlighting</li>
<li>Improved rendering of rotated images in PNG export and web app</li>
<li>Made <a href="/docs/reference/model/footnote/">footnotes</a> reusable and referenceable</li>
<li>Fixed bug with citations and bibliographies in <a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a></li>
<li>Fixed inconsistent tense in documentation</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Added <a href="https://github.com/typst/typst/blob/main/CONTRIBUTING.md">contribution guide</a></li>
<li>Reworked <code>World</code> interface to accommodate for package management and make
it a bit simpler to implement <em>(Breaking change for implementors)</em></li>
</ul>
</li>
</ul>
<h2 id="v0.5.0">Version 0.5.0 (June 9, 2023)</h2>
<ul>
<li>
<p>Text and Layout</p>
<ul>
<li>Added <a href="/docs/reference/text/raw/" title="\`raw\`"><code>raw</code></a> syntax highlighting for many more languages</li>
<li>Added support for Korean <a href="/docs/reference/model/numbering/" title="numbering">numbering</a></li>
<li>Added basic i18n for a few more languages (NL, SV, DA)</li>
<li>Improved line breaking for East Asian languages</li>
<li>Expanded functionality of outline <a href="/docs/reference/model/outline/#parameters-indent"><code>indent</code></a> property</li>
<li>Fixed footnotes in columns</li>
<li>Fixed page breaking bugs with <a href="/docs/reference/model/footnote/">footnotes</a></li>
<li>Fixed bug with handling of footnotes in lists, tables, and figures</li>
<li>Fixed a bug with CJK punctuation adjustment</li>
<li>Fixed a crash with rounded rectangles</li>
<li>Fixed alignment of <a href="/docs/reference/visualize/line/" title="\`line\`"><code>line</code></a> elements</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li><strong>Breaking change:</strong> The syntax rules for mathematical
<a href="/docs/reference/math/attach/#functions-attach">attachments</a> were improved: <code><span class="typ-math-delim">$</span>f<span class="typ-math-op">^</span><span class="typ-func">abs</span><span class="typ-punct">(</span>3<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code> now parses as
<code><span class="typ-math-delim">$</span>f<span class="typ-math-op">^</span><span class="typ-punct">(</span><span class="typ-func">abs</span><span class="typ-punct">(</span>3<span class="typ-punct">)</span><span class="typ-punct">)</span><span class="typ-math-delim">$</span></code> instead of <code><span class="typ-math-delim">$</span>(f<span class="typ-math-op">^</span><span class="typ-pol">abs</span>)(3)<span class="typ-math-delim">$</span></code>. To disambiguate, add a space:
<code><span class="typ-math-delim">$</span>f<span class="typ-math-op">^</span><span class="typ-pol">zeta</span> (3)<span class="typ-math-delim">$</span></code>.</li>
<li>Added <a href="/docs/reference/math/sizes/">forced size</a> commands for math (e.g.,
<a href="/docs/reference/math/sizes/#functions-display"><code>display</code></a>)</li>
<li>Added <a href="/docs/reference/math/equation/#parameters-supplement"><code>supplement</code></a> parameter to
<a href="/docs/reference/math/equation/"><code>equation</code></a>, used by <a href="/docs/reference/model/ref/">references</a></li>
<li>New <a href="/docs/reference/symbols/sym/">symbols</a>: <code>bullet</code>, <code>xor</code>, <code>slash.big</code>,
<code>sigma.alt</code>, <code>tack.r.not</code>, <code>tack.r.short</code>, <code>tack.r.double.not</code></li>
<li>Fixed a bug with symbols in matrices</li>
<li>Fixed a crash in the <a href="/docs/reference/math/attach/#functions-attach"><code>attach</code></a> function</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Added new <a href="/docs/reference/foundations/datetime/" title="\`datetime\`"><code>datetime</code></a> type and <a href="/docs/reference/foundations/datetime/#definitions-today"><code>datetime.today</code></a> to
retrieve the current date</li>
<li>Added <a href="/docs/reference/foundations/str/#definitions-from-unicode"><code>str.from-unicode</code></a> and
<a href="/docs/reference/foundations/str/#definitions-to-unicode"><code>str.to-unicode</code></a> functions</li>
<li>Added <a href="/docs/reference/foundations/content/#definitions-fields"><code>fields</code></a> method on content</li>
<li>Added <code>base</code> parameter to <a href="/docs/reference/foundations/str/" title="\`str\`"><code>str</code></a> function</li>
<li>Added <a href="/docs/reference/foundations/calc/#functions-exp"><code>calc.exp</code></a> and <a href="/docs/reference/foundations/calc/#functions-ln"><code>calc.ln</code></a></li>
<li>Improved accuracy of <a href="/docs/reference/foundations/calc/#functions-pow"><code>calc.pow</code></a> and <a href="/docs/reference/foundations/calc/#functions-log"><code>calc.log</code></a> for
specific bases</li>
<li>Fixed <a href="/docs/reference/foundations/dictionary/#definitions-remove">removal</a> order for dictionary</li>
<li>Fixed <code>.at(default: ..)</code> for <a href="/docs/reference/foundations/str/#definitions-at">strings</a> and <a href="/docs/reference/foundations/content/#definitions-at">content</a></li>
<li>Fixed field access on styled elements</li>
<li>Removed deprecated <code>calc.mod</code> function</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Added PNG export via <code>typst compile source.typ output-{n}.png</code>. The output
path must contain <code>{n}</code> if the document has multiple pages.</li>
<li>Added <code>--diagnostic-format=short</code> for Unix-style short diagnostics</li>
<li>Doesn't emit color codes anymore if stderr isn't a TTY</li>
<li>Now sets the correct exit when invoked with a nonexistent file</li>
<li>Now ignores UTF-8 BOM in Typst files</li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Improved errors for mismatched delimiters</li>
<li>Improved error message for failed length comparisons</li>
<li>Fixed a bug with images not showing up in Apple Preview</li>
<li>Fixed multiple bugs with the PDF outline</li>
<li>Fixed citations and other searchable elements in <a href="/docs/reference/layout/hide/" title="\`hide\`"><code>hide</code></a></li>
<li>Fixed bugs with <a href="/docs/reference/model/ref/#parameters-supplement">reference supplements</a></li>
<li>Fixed Nix flake</li>
</ul>
</li>
</ul>
<h2 id="v0.4.0">Version 0.4.0 (May 20, 2023)</h2>
<ul>
<li>
<p>Footnotes</p>
<ul>
<li>Implemented support for footnotes</li>
<li>The <a href="/docs/reference/model/footnote/" title="\`footnote\`"><code>footnote</code></a> function inserts a footnote</li>
<li>The <a href="/docs/reference/model/footnote/#definitions-entry"><code>footnote.entry</code></a> function can be used to customize
the footnote listing</li>
<li>The <code><span class="typ-str">&quot;chicago-notes&quot;</span></code> <a href="/docs/reference/model/cite/#parameters-style">citation style</a> is now available</li>
</ul>
</li>
<li>
<p>Documentation</p>
<ul>
<li>Added a <a href="/docs/guides/guide-for-latex-users/">Guide for LaTeX users</a></li>
<li>Now shows default values for optional arguments</li>
<li>Added richer outlines in &quot;On this Page&quot;</li>
<li>Added initial support for search keywords: &quot;Table of Contents&quot; will now find
the <a href="/docs/reference/model/outline/" title="outline">outline</a> function. Suggestions for more keywords are welcome!</li>
<li>Fixed issue with search result ranking</li>
<li>Fixed many more small issues</li>
</ul>
</li>
<li>
<p>Math</p>
<ul>
<li><strong>Breaking change</strong>: Alignment points (<code>&amp;</code>) in equations now alternate
between left and right alignment</li>
<li>Added support for writing roots with Unicode: For example, <code><span class="typ-math-delim">$</span><span class="typ-func">root</span><span class="typ-punct">(</span>x+y<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code>
can now also be written as <code><span class="typ-math-delim">$</span><span class="typ-math-op">√</span><span class="typ-punct">(</span>x+y<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></li>
<li>Fixed uneven vertical <a href="/docs/reference/math/attach/#functions-attach"><code>attachment</code></a> alignment</li>
<li>Fixed spacing on decorated elements (e.g., spacing around a
<a href="/docs/reference/math/cancel/">canceled</a> operator)</li>
<li>Fixed styling for stretchable symbols</li>
<li>Added <code>tack.r.double</code>, <code>tack.l.double</code>, <code>dotless.i</code> and <code>dotless.j</code>
<a href="/docs/reference/symbols/sym/">symbols</a></li>
<li>Fixed show rules on symbols (e.g. <code><span class="typ-key">show</span> sym<span class="typ-punct">.</span><span class="typ-func">tack</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>blue<span class="typ-punct">)</span></code>)</li>
<li>Fixed missing rename from <code>ast.op</code> to <code>ast</code> that should have been in the
previous release</li>
</ul>
</li>
<li>
<p>Scripting</p>
<ul>
<li>Added function scopes: A function can now hold related definitions in its
own scope, similar to a module. The new <a href="/docs/reference/foundations/assert/#definitions-eq"><code>assert.eq</code></a> function,
for instance, is part of the <a href="/docs/reference/foundations/assert/" title="\`assert\`"><code>assert</code></a> function's scope. Note that function
scopes are currently only available for built-in functions.</li>
<li>Added <a href="/docs/reference/foundations/assert/#definitions-eq"><code>assert.eq</code></a> and <a href="/docs/reference/foundations/assert/#definitions-ne"><code>assert.ne</code></a> functions for
simpler equality and inequality assertions with more helpful error messages</li>
<li>Exposed <a href="/docs/reference/model/list/#definitions-item">list</a>, <a href="/docs/reference/model/enum/#definitions-item">enum</a>, and <a href="/docs/reference/model/terms/#definitions-item">term list</a>
items in their respective functions' scope</li>
<li>The <code>at</code> methods on <a href="/docs/reference/foundations/str/#definitions-at">strings</a>, <a href="/docs/reference/foundations/array/#definitions-at">arrays</a>,
<a href="/docs/reference/foundations/dictionary/#definitions-at">dictionaries</a>, and <a href="/docs/reference/foundations/content/#definitions-at">content</a> now support
specifying a default value</li>
<li>Added support for passing a function to <a href="/docs/reference/foundations/str/#definitions-replace"><code>replace</code></a> that is
called with each match.</li>
<li>Fixed <a href="/docs/reference/foundations/str/#definitions-replace">replacement</a> strings: They are now inserted completely
verbatim instead of supporting the previous (unintended) magic dollar syntax
for capture groups</li>
<li>Fixed bug with trailing placeholders in destructuring patterns</li>
<li>Fixed bug with underscore in parameter destructuring</li>
<li>Fixed crash with nested patterns and when hovering over an invalid pattern</li>
<li>Better error messages when casting to an <a href="/docs/reference/foundations/int/">integer</a> or <a href="/docs/reference/foundations/float/">float</a>
fails</li>
</ul>
</li>
<li>
<p>Text and Layout</p>
<ul>
<li>Implemented sophisticated CJK punctuation adjustment</li>
<li>Disabled <a href="/docs/reference/text/text/#parameters-overhang">overhang</a> for CJK punctuation</li>
<li>Added basic translations for Traditional Chinese</li>
<li>Fixed <a href="/docs/reference/text/raw/#parameters-align">alignment</a> of text inside raw blocks (centering a raw
block, e.g. through a figure, will now keep the text itself left-aligned)</li>
<li>Added support for passing a array instead of a function to configure table
cell <a href="/docs/reference/model/table/#parameters-align">alignment</a> and <a href="/docs/reference/model/table/#parameters-fill">fill</a> per column</li>
<li>Fixed automatic figure <a href="/docs/reference/model/figure/#parameters-kind"><code>kind</code></a> detection</li>
<li>Made alignment of <a href="/docs/reference/model/enum/#parameters-number-align">enum numbers</a> configurable,
defaulting to <code>end</code></li>
<li>Figures can now be made breakable with a show-set rule for blocks in figure</li>
<li>Initial fix for smart quotes in RTL languages</li>
</ul>
</li>
<li>
<p>Export</p>
<ul>
<li>Fixed ligatures in PDF export: They are now copyable and searchable</li>
<li>Exported PDFs now embed ICC profiles for images that have them</li>
<li>Fixed export of strokes with zero thickness</li>
</ul>
</li>
<li>
<p>Web app</p>
<ul>
<li>Projects can now contain folders</li>
<li>Added upload by drag-and-drop into the file panel</li>
<li>Files from the file panel can now be dragged into the editor to insert them
into a Typst file</li>
<li>You can now copy-paste images and other files from your computer directly
into the editor</li>
<li>Added a button to resend confirmation email</li>
<li>Added an option to invert preview colors in dark mode</li>
<li>Added tips to the loading screen and the Help menu. Feel free to propose
more!</li>
<li>Added syntax highlighting for YAML files</li>
<li>Allowed middle mouse button click on many buttons to navigate into a new tab</li>
<li>Allowed more project names</li>
<li>Fixed overridden Vim mode keybindings</li>
<li>Fixed many bugs regarding file upload and more</li>
</ul>
</li>
<li>
<p>Miscellaneous Improvements</p>
<ul>
<li>Improved performance of counters, state, and queries</li>
<li>Improved incremental parsing for more efficient recompilations</li>
<li>Added support for <code>.yaml</code> extension in addition to <code>.yml</code> for bibliographies</li>
<li>The CLI now emits escape codes only if the output is a TTY</li>
<li>For users of the <code>typst</code> crate: The <code>Document</code> is now <code>Sync</code> again and the
<code>World</code> doesn't have to be <code>'static</code> anymore</li>
</ul>
</li>
</ul>
<h2 id="v0.3.0">Version 0.3.0 (April 26, 2023)</h2>
<ul>
<li>
<p><strong>Breaking changes:</strong></p>
<ul>
<li>Renamed a few symbols: What was previous <code>dot.op</code> is now just <code>dot</code> and the
basic dot is <code>dot.basic</code>. The same applies to <code>ast</code> and <code>tilde</code>.</li>
<li>Renamed <code>mod</code> to <a href="/docs/reference/foundations/calc/#functions-rem"><code>rem</code></a> to more accurately reflect the
behavior. It will remain available as <code>mod</code> until the next update as a
grace period.</li>
<li>A lone underscore is not a valid identifier anymore, it can now only be used
in patterns</li>
<li>Removed <code>before</code> and <code>after</code> arguments from <a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a>. This is now handled
through flexible <a href="/docs/reference/foundations/selector/">selectors</a> combinator methods</li>
<li>Added support for <a href="/docs/reference/math/attach/#functions-attach">attachments</a> (sub-, superscripts) that
precede the base symbol. The <code>top</code> and <code>bottom</code> arguments have been renamed
to <code>t</code> and <code>b</code>.</li>
</ul>
</li>
<li>
<p>New features</p>
<ul>
<li>Added support for more complex <a href="/docs/reference/visualize/stroke/">strokes</a> (configurable caps, joins,
and dash patterns)</li>
<li>Added <a href="/docs/reference/math/cancel/"><code>cancel</code></a> function for equations</li>
<li>Added support for <a href="/docs/reference/scripting/#bindings">destructuring</a> in argument lists
and assignments</li>
<li>Added <a href="/docs/reference/visualize/image/#parameters-alt"><code>alt</code></a> text argument to image function</li>
<li>Added <a href="/docs/reference/data-loading/toml/" title="\`toml\`"><code>toml</code></a> function for loading data from a TOML file</li>
<li>Added <a href="/docs/reference/foundations/array/#definitions-zip"><code>zip</code></a>, <a href="/docs/reference/foundations/array/#definitions-sum"><code>sum</code></a>, and
<a href="/docs/reference/foundations/array/#definitions-product"><code>product</code></a> methods for arrays</li>
<li>Added <code>fact</code>, <code>perm</code>, <code>binom</code>, <code>gcd</code>, <code>lcm</code>, <code>atan2</code>, <code>quo</code>, <code>trunc</code>, and
<code>fract</code> <a href="/docs/reference/foundations/calc/">calculation</a> functions</li>
</ul>
</li>
<li>
<p>Improvements</p>
<ul>
<li>Text in SVGs now displays properly</li>
<li>Typst now generates a PDF heading outline</li>
<li><a href="/docs/reference/model/ref/">References</a> now provides the referenced element as a field in show
rules</li>
<li>Refined linebreak algorithm for better Chinese justification</li>
<li>Locations are now a valid kind of selector</li>
<li>Added a few symbols for algebra</li>
<li>Added Spanish smart quote support</li>
<li>Added <a href="/docs/reference/foundations/selector/" title="\`selector\`"><code>selector</code></a> function to turn a selector-like value into a selector on
which combinator methods can be called</li>
<li>Improved some error messages</li>
<li>The outline and bibliography headings can now be styled with show-set rules</li>
<li>Operations on numbers now produce an error instead of overflowing</li>
</ul>
</li>
<li>
<p>Bug fixes</p>
<ul>
<li>Fixed wrong linebreak before punctuation that follows inline equations,
citations, and other elements</li>
<li>Fixed a bug with <a href="/docs/reference/foundations/arguments/">argument sinks</a></li>
<li>Fixed strokes with thickness zero</li>
<li>Fixed hiding and show rules in math</li>
<li>Fixed alignment in matrices</li>
<li>Fixed some alignment bugs in equations</li>
<li>Fixed grid cell alignment</li>
<li>Fixed alignment of list marker and enum markers in presence of global
alignment settings</li>
<li>Fixed <a href="/docs/reference/visualize/path/">path</a> closing</li>
<li>Fixed compiler crash with figure references</li>
<li>A single trailing line breaks is now ignored in math, just like in text</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Font path and compilation root can now be set with the environment variables
<code>TYPST_FONT_PATHS</code> and <code>TYPST_ROOT</code></li>
<li>The output of <code>typst fonts</code> now includes the embedded fonts</li>
</ul>
</li>
<li>
<p>Development</p>
<ul>
<li>Added instrumentation for debugging and optimization</li>
<li>Added <code>--update</code> flag and <code>UPDATE_EXPECT</code> environment variable to update
reference images for tests</li>
<li>You can now run a specific subtest with <code>--subtest</code></li>
<li>Tests now run on multiple threads</li>
</ul>
</li>
</ul>
<h2 id="v0.2.0">Version 0.2.0 (April 11, 2023)</h2>
<ul>
<li>
<p><strong>Breaking changes:</strong></p>
<ul>
<li>Removed support for iterating over index and value in
<a href="/docs/reference/scripting/#loops">for loops</a>. This is now handled via unpacking and
enumerating. Same goes for the <a href="/docs/reference/foundations/array/#definitions-map"><code>map</code></a> method.</li>
<li><a href="/docs/reference/foundations/dictionary/">Dictionaries</a> now iterate in insertion order instead of
alphabetical order.</li>
</ul>
</li>
<li>
<p>New features</p>
<ul>
<li>Added <a href="/docs/reference/scripting/#bindings">unpacking syntax</a> for let bindings, which
allows things like <code><span class="typ-key">let</span> <span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">)</span> <span class="typ-op">=</span> array</code></li>
<li>Added <a href="/docs/reference/foundations/array/#definitions-enumerate"><code>enumerate</code></a> method</li>
<li>Added <a href="/docs/reference/visualize/path/" title="\`path\`"><code>path</code></a> function for drawing Bézier paths</li>
<li>Added <a href="/docs/reference/layout/layout/" title="\`layout\`"><code>layout</code></a> function to access the size of the surrounding page or
container</li>
<li>Added <code>key</code> parameter to <a href="/docs/reference/foundations/array/#definitions-sorted"><code>sorted</code></a> method</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Fixed <code>--open</code> flag blocking the program</li>
<li>New Computer Modern font is now embedded into the binary</li>
<li>Shell completions and man pages can now be generated by setting the
<code>GEN_ARTIFACTS</code> environment variable to a target directory and then building
Typst</li>
</ul>
</li>
<li>
<p>Miscellaneous improvements</p>
<ul>
<li>Fixed page numbering in outline</li>
<li>Added basic i18n for a few more languages
(AR, NB, CS, NN, PL, SL, ES, UA, VI)</li>
<li>Added a few numbering patterns (Ihora, Chinese)</li>
<li>Added <code>sinc</code> <a href="/docs/reference/math/op/">operator</a></li>
<li>Fixed bug where math could not be hidden with <a href="/docs/reference/layout/hide/" title="\`hide\`"><code>hide</code></a></li>
<li>Fixed sizing issues with box, block, and shapes</li>
<li>Fixed some translations</li>
<li>Fixed inversion of &quot;R&quot; in <a href="/docs/reference/math/variants/#functions-cal"><code>cal</code></a> and <a href="/docs/reference/math/variants/#functions-frak"><code>frak</code></a> styles</li>
<li>Fixed some styling issues in math</li>
<li>Fixed supplements of references to headings</li>
<li>Fixed syntax highlighting of identifiers in certain scenarios</li>
<li><a href="/docs/reference/layout/ratio/">Ratios</a> can now be multiplied with more types and be converted to
<a href="/docs/reference/foundations/float/">floats</a> with the <a href="/docs/reference/foundations/float/" title="\`float\`"><code>float</code></a> function</li>
</ul>
</li>
</ul>
<h2 id="v0.1.0">Version 0.1.0 (April 04, 2023)</h2>
<ul>
<li>
<p><strong>Breaking changes:</strong></p>
<ul>
<li>When using the CLI, you now have to use subcommands:
<ul>
<li><code>typst compile file.typ</code> or <code>typst c file.typ</code> to create a PDF</li>
<li><code>typst watch file.typ</code> or <code>typst w file.typ</code> to compile and watch</li>
<li><code>typst fonts</code> to list all fonts</li>
</ul>
</li>
<li>Manual counters now start at zero. Read the &quot;How to step&quot; section
<a href="/docs/reference/introspection/counter/">here</a> for more details</li>
<li>The <a href="/docs/reference/model/bibliography/#parameters-style">bibliography styles</a> <code><span class="typ-str">&quot;author-date&quot;</span></code> and
<code><span class="typ-str">&quot;author-title&quot;</span></code> were renamed to <code><span class="typ-str">&quot;chicago-author-date&quot;</span></code> and
<code><span class="typ-str">&quot;chicago-author-title&quot;</span></code></li>
</ul>
</li>
<li>
<p>Figure improvements</p>
<ul>
<li>Figures now automatically detect their content and adapt their behavior.
Figures containing tables, for instance, are automatically prefixed with
&quot;Table X&quot; and have a separate counter</li>
<li>The figure's supplement (e.g. &quot;Figure&quot; or &quot;Table&quot;) can now be customized</li>
<li>In addition, figures can now be completely customized because the show rule
gives access to the automatically resolved kind, supplement, and counter</li>
</ul>
</li>
<li>
<p>Bibliography improvements</p>
<ul>
<li>The <a href="/docs/reference/model/bibliography/" title="\`bibliography\`"><code>bibliography</code></a> now also accepts multiple bibliography paths (as an
array)</li>
<li>Parsing of BibLaTeX files is now more permissive (accepts non-numeric
edition, pages, volumes, dates, and Jabref-style comments; fixed
abbreviation parsing)</li>
<li>Labels and references can now include <code>:</code> and <code>.</code> except at the end</li>
<li>Fixed APA bibliography ordering</li>
</ul>
</li>
<li>
<p>Drawing additions</p>
<ul>
<li>Added <a href="/docs/reference/visualize/polygon/" title="\`polygon\`"><code>polygon</code></a> function for drawing polygons</li>
<li>Added support for clipping in <a href="/docs/reference/layout/box/#parameters-clip">boxes</a> and <a href="/docs/reference/layout/block/#parameters-clip">blocks</a></li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Now returns with non-zero status code if there is an error</li>
<li>Now watches the root directory instead of the current one</li>
<li>Now puts the PDF file next to input file by default</li>
<li>Now accepts more kinds of input files (e.g. <code>/dev/stdin</code>)</li>
<li>Added <code>--open</code> flag to directly open the PDF</li>
</ul>
</li>
<li>
<p>Miscellaneous improvements</p>
<ul>
<li>Added <a href="/docs/reference/data-loading/yaml/" title="\`yaml\`"><code>yaml</code></a> function to load data from YAML files</li>
<li>Added basic i18n for a few more languages (IT, RU, ZH, FR, PT)</li>
<li>Added numbering support for Hebrew</li>
<li>Added support for <a href="/docs/reference/foundations/int/">integers</a> with base 2, 8, and 16</li>
<li>Added symbols for double bracket and laplace operator</li>
<li>The <a href="/docs/reference/model/link/" title="\`link\`"><code>link</code></a> function now accepts <a href="/docs/reference/foundations/label/">labels</a></li>
<li>The link syntax now allows more characters</li>
<li>Improved justification of Japanese and Chinese text</li>
<li>Calculation functions behave more consistently w.r.t to non-real results</li>
<li>Replaced deprecated angle brackets</li>
<li>Reduced maximum function call depth from 256 to 64</li>
<li>Fixed <a href="/docs/reference/model/par/#parameters-first-line-indent"><code>first-line-indent</code></a> being not applied when a
paragraph starts with styled text</li>
<li>Fixed extraneous spacing in unary operators in equations</li>
<li>Fixed block spacing, e.g. in <code><span class="typ-func">block</span><span class="typ-punct">(</span>above<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">,</span> below<span class="typ-punct">:</span> <span class="typ-num">1cm</span><span class="typ-punct">,</span> <span class="typ-op">..</span><span class="typ-punct">)</span></code></li>
<li>Fixed styling of text operators in math</li>
<li>Fixed invalid parsing of language tag in raw block with a single backtick</li>
<li>Fixed bugs with displaying counters and state</li>
<li>Fixed crash related to page counter</li>
<li>Fixed crash when <a href="/docs/reference/symbols/symbol/" title="\`symbol\`"><code>symbol</code></a> function was called without arguments</li>
<li>Fixed crash in bibliography generation</li>
<li>Fixed access to label of certain content elements</li>
<li>Fixed line number in error message for CSV parsing</li>
<li>Fixed invalid autocompletion after certain markup elements</li>
</ul>
</li>
</ul>
<h2 id="_">March 28, 2023</h2>
<ul>
<li>
<p><strong>Breaking changes:</strong></p>
<ul>
<li>Enumerations now require a space after their marker, that is, <code>1.ok</code> must
now be written as <code><span class="typ-marker">1.</span> ok</code></li>
<li>Changed default style for <a href="/docs/reference/model/terms/">term lists</a>: Does not include a colon
anymore and has a bit more indent</li>
</ul>
</li>
<li>
<p>Command line interface</p>
<ul>
<li>Added <code>--font-path</code> argument for CLI</li>
<li>Embedded default fonts in CLI binary</li>
<li>Fixed build of CLI if <code>git</code> is not installed</li>
</ul>
</li>
<li>
<p>Miscellaneous improvements</p>
<ul>
<li>Added support for disabling <a href="/docs/reference/math/mat/">matrix</a> and <a href="/docs/reference/math/vec/">vector</a>
delimiters. Generally with <code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">mat</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-key">none</span><span class="typ-punct">)</span></code> or one-off with
<code><span class="typ-math-delim">$</span><span class="typ-func">mat</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-key">#</span><span class="typ-key">none</span><span class="typ-punct">,</span> 1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code>.</li>
<li>Added <a href="/docs/reference/model/terms/#parameters-separator"><code>separator</code></a> argument to term lists</li>
<li>Added <a href="/docs/reference/math/lr/#functions-round"><code>round</code></a> function for equations</li>
<li>Numberings now allow zeros. To reset a counter, you can write
<code><span class="typ-func">#</span><span class="typ-func">counter</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span><span class="typ-punct">.</span><span class="typ-func">update</span><span class="typ-punct">(</span><span class="typ-num">0</span><span class="typ-punct">)</span></code></li>
<li>Added documentation for <code><span class="typ-func">page</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> and <code><span class="typ-func">position</span><span class="typ-punct">(</span><span class="typ-punct">)</span></code> methods on
<a href="/docs/reference/introspection/location/" title="\`location\`"><code>location</code></a> type</li>
<li>Added symbols for double, triple, and quadruple dot accent</li>
<li>Added smart quotes for Norwegian Bokmål</li>
<li>Added Nix flake</li>
<li>Fixed bibliography ordering in IEEE style</li>
<li>Fixed parsing of decimals in math: <code><span class="typ-math-delim">$</span>1.2<span class="typ-math-op">/</span>3.4<span class="typ-math-delim">$</span></code></li>
<li>Fixed parsing of unbalanced delimiters in fractions: <code><span class="typ-math-delim">$</span>1<span class="typ-math-op">/</span>(2 (x)<span class="typ-math-delim">$</span></code></li>
<li>Fixed unexpected parsing of numbers as enumerations, e.g. in <code>1.2</code></li>
<li>Fixed combination of page fill and header</li>
<li>Fixed compiler crash if <a href="/docs/reference/layout/repeat/" title="\`repeat\`"><code>repeat</code></a> is used in page with automatic width</li>
<li>Fixed <a href="/docs/reference/math/mat/">matrices</a> with explicit delimiter</li>
<li>Fixed <a href="/docs/reference/model/terms/#parameters-indent"><code>indent</code></a> property of term lists</li>
<li>Numerous documentation fixes</li>
<li>Links in bibliographies are now affected by link styling</li>
<li>Fixed hovering over comments in web app</li>
</ul>
</li>
</ul>
<h2 id="_">March 21, 2023</h2>
<ul>
<li>
<p>Reference and bibliography management</p>
<ul>
<li><a href="/docs/reference/model/bibliography/">Bibliographies</a> and <a href="/docs/reference/model/cite/">citations</a> (currently supported
styles are APA, Chicago Author Date, IEEE, and MLA)</li>
<li>You can now <a href="/docs/reference/model/ref/">reference</a> sections, figures, formulas, and works from
the bibliography with <code><span class="typ-ref">@label</span></code></li>
<li>You can make an element referenceable with a label:
<ul>
<li><code><span class="typ-heading">= Introduction</span> <span class="typ-label">&lt;intro&gt;</span></code></li>
<li><code><span class="typ-math-delim">$</span> A = <span class="typ-pol">pi</span> r<span class="typ-math-op">^</span>2 <span class="typ-math-delim">$</span> <span class="typ-label">&lt;area&gt;</span></code></li>
</ul>
</li>
</ul>
</li>
<li>
<p>Introspection system for interactions between different parts of the document</p>
<ul>
<li><a href="/docs/reference/introspection/counter/" title="\`counter\`"><code>counter</code></a> function
<ul>
<li>Access and modify counters for pages, headings, figures, and equations</li>
<li>Define and use your own custom counters</li>
<li>Time travel: Find out what the counter value was or will be at some other
point in the document (e.g. when you're building a list of figures, you
can determine the value of the figure counter at any given figure).</li>
<li>Counters count in layout order and not in code order</li>
</ul>
</li>
<li><a href="/docs/reference/introspection/state/" title="\`state\`"><code>state</code></a> function
<ul>
<li>Manage arbitrary state across your document</li>
<li>Time travel: Find out the value of your state at any position in the
document</li>
<li>State is modified in layout order and not in code order</li>
</ul>
</li>
<li><a href="/docs/reference/introspection/query/" title="\`query\`"><code>query</code></a> function
<ul>
<li>Find all occurrences of an element or a label, either in the whole
document or before/after some location</li>
<li>Link to elements, find out their position on the pages and access their
fields</li>
<li>Example use cases: Custom list of figures or page header with current
chapter title</li>
</ul>
</li>
<li><a href="/docs/reference/introspection/locate/" title="\`locate\`"><code>locate</code></a> function
<ul>
<li>Determines the location of itself in the final layout</li>
<li>Can be accessed to get the <code>page</code> and <code>x</code>, <code>y</code> coordinates</li>
<li>Can be used with counters and state to find out their values at that
location</li>
<li>Can be used with queries to find elements before or after its location</li>
</ul>
</li>
</ul>
</li>
<li>
<p>New <a href="/docs/reference/layout/measure/" title="\`measure\`"><code>measure</code></a> function</p>
<ul>
<li>Measure the layouted size of elements</li>
<li>To be used in combination with the new <a href="/docs/reference/foundations/style/" title="\`style\`"><code>style</code></a> function that lets you
generate different content based on the style context something is inserted
into (because that affects the measured size of content)</li>
</ul>
</li>
<li>
<p>Exposed content representation</p>
<ul>
<li>Content is not opaque anymore</li>
<li>Content can be compared for equality</li>
<li>The tree of content elements can be traversed with code</li>
<li>Can be observed in hover tooltips or with <a href="/docs/reference/foundations/repr/" title="\`repr\`"><code>repr</code></a></li>
<li>New <a href="/docs/reference/foundations/content/">methods</a> on content: <code>func</code>, <code>has</code>, <code>at</code>, and <code>location</code></li>
<li>All optional fields on elements are now settable</li>
<li>More uniform field names (<code>heading.title</code> becomes <code>heading.body</code>,
<code>list.items</code> becomes <code>list.children</code>, and a few more changes)</li>
</ul>
</li>
<li>
<p>Further improvements</p>
<ul>
<li>Added <a href="/docs/reference/model/figure/" title="\`figure\`"><code>figure</code></a> function</li>
<li>Added <a href="/docs/reference/math/equation/#parameters-numbering"><code>numbering</code></a> parameter on equation function</li>
<li>Added <a href="/docs/reference/layout/page/#parameters-numbering"><code>numbering</code></a> and
<a href="/docs/reference/layout/page/#parameters-number-align"><code>number-align</code></a> parameters on page function</li>
<li>The page function's <a href="/docs/reference/layout/page/#parameters-header"><code>header</code></a> and <a href="/docs/reference/layout/page/#parameters-footer"><code>footer</code></a>
parameters do not take functions anymore. If you want to customize them
based on the page number, use the new <a href="/docs/reference/layout/page/#parameters-numbering"><code>numbering</code></a>
parameter or <a href="/docs/reference/introspection/counter/" title="\`counter\`"><code>counter</code></a> function instead.</li>
<li>Added <a href="/docs/reference/layout/page/#parameters-footer-descent"><code>footer-descent</code></a> and
<a href="/docs/reference/layout/page/#parameters-header-ascent"><code>header-ascent</code></a> parameters</li>
<li>Better default alignment in header and footer</li>
<li>Fixed Arabic vowel placement</li>
<li>Fixed PDF font embedding issues</li>
<li>Renamed <code>math.formula</code> to <a href="/docs/reference/math/equation/"><code>math.equation</code></a></li>
<li>Font family must be a named argument now: <code><span class="typ-key">#</span><span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span>font<span class="typ-punct">:</span> <span class="typ-str">&quot;..&quot;</span><span class="typ-punct">)</span></code></li>
<li>Added support for <a href="/docs/reference/model/par/#parameters-hanging-indent">hanging indent</a></li>
<li>Renamed paragraph <code>indent</code> to <a href="/docs/reference/model/par/#parameters-first-line-indent"><code>first-line-indent</code></a></li>
<li>More accurate <a href="/docs/reference/foundations/calc/#functions-log">logarithm</a> when base is <code>2</code> or <code>10</code></li>
<li>Improved some error messages</li>
<li>Fixed layout of <a href="/docs/reference/model/terms/" title="\`terms\`"><code>terms</code></a> list</li>
</ul>
</li>
<li>
<p>Web app improvements</p>
<ul>
<li>Added template gallery</li>
<li>Added buttons to insert headings, equations, raw blocks, and references</li>
<li>Jump to the source of something by clicking on it in the preview panel
(works for text, equations, images, and more)</li>
<li>You can now upload your own fonts and use them in your project</li>
<li>Hover debugging and autocompletion now takes multiple files into account and
works in show rules</li>
<li>Hover tooltips now automatically collapse multiple consecutive equal values</li>
<li>The preview now automatically scrolls to the right place when you type</li>
<li>Links are now clickable in the preview area</li>
<li>Toolbar, preview, and editor can now all be hidden</li>
<li>Added autocompletion for raw block language tags</li>
<li>Added autocompletion in SVG files</li>
<li>New back button instead of four-dots button</li>
<li>Lots of bug fixes</li>
</ul>
</li>
</ul>
<h2 id="_">February 25, 2023</h2>
<ul>
<li>Font changes
<ul>
<li>New default font: Linux Libertine</li>
<li>New default font for raw blocks: DejaVu Sans Mono</li>
<li>New default font for math: Book weight of New Computer Modern Math</li>
<li>Lots of new math fonts available</li>
<li>Removed Latin Modern fonts in favor of New Computer Modern family</li>
<li>Removed unnecessary smallcaps fonts which are already accessible through the
corresponding main font and the <a href="/docs/reference/text/smallcaps/" title="\`smallcaps\`"><code>smallcaps</code></a> function</li>
</ul>
</li>
<li>Improved default spacing for headings</li>
<li>Added <a href="/docs/reference/foundations/panic/" title="\`panic\`"><code>panic</code></a> function</li>
<li>Added <a href="/docs/reference/foundations/str/#definitions-clusters"><code>clusters</code></a> and <a href="/docs/reference/foundations/str/#definitions-codepoints"><code>codepoints</code></a> methods
for strings</li>
<li>Support for multiple authors in <a href="/docs/reference/model/document/#parameters-author"><code>set document</code></a></li>
<li>Fixed crash when string is accessed at a position that is not a char boundary</li>
<li>Fixed semicolon parsing in <code><span class="typ-pol">#</span><span class="typ-pol">var</span> ;</code></li>
<li>Fixed incremental parsing when inserting backslash at end of <code><span class="typ-str">#</span><span class="typ-str">&quot;abc&quot;</span></code></li>
<li>Fixed names of a few font families (including Noto Sans Symbols and New
Computer Modern families)</li>
<li>Fixed autocompletion for font families</li>
<li>Improved incremental compilation for user-defined functions</li>
</ul>
<h2 id="_">February 15, 2023</h2>
<ul>
<li><a href="/docs/reference/layout/box/">Box</a> and <a href="/docs/reference/layout/block/" title="block">block</a> have gained <code>fill</code>, <code>stroke</code>, <code>radius</code>, and <code>inset</code>
properties</li>
<li>Blocks may now be explicitly sized, fixed-height blocks can still break across
pages</li>
<li>Blocks can now be configured to be <a href="/docs/reference/layout/block/#parameters-breakable"><code>breakable</code></a> or not</li>
<li><a href="/docs/reference/model/enum/#parameters-numbering">Numbering style</a> can now be configured for nested enums</li>
<li><a href="/docs/reference/model/list/#parameters-marker">Markers</a> can now be configured for nested lists</li>
<li>The <a href="/docs/reference/foundations/eval/" title="\`eval\`"><code>eval</code></a> function now expects code instead of markup and returns an
arbitrary value. Markup can still be evaluated by surrounding the string with
brackets.</li>
<li>PDFs generated by Typst now contain XMP metadata</li>
<li>Link boxes are now disabled in PDF output</li>
<li>Tables don't produce small empty cells before a pagebreak anymore</li>
<li>Fixed raw block highlighting bug</li>
</ul>
<h2 id="_">February 12, 2023</h2>
<ul>
<li>Shapes, images, and transformations (move/rotate/scale/repeat) are now
block-level. To integrate them into a paragraph, use a <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a> as with other
elements.</li>
<li>A colon is now required in an &quot;everything&quot; show rule: Write <code><span class="typ-key">show</span><span class="typ-punct">:</span> it <span class="typ-op">=&gt;</span> ..</code>
instead of <code><span class="typ-key">show</span> it <span class="typ-op">=&gt;</span> ..</code>. This prevents intermediate states that ruin your
whole document.</li>
<li>Non-math content like a shape or table in a math formula is now centered
vertically</li>
<li>Support for widow and orphan prevention within containers</li>
<li>Support for <a href="/docs/reference/text/text/#parameters-dir">RTL</a> in lists, grids, and tables</li>
<li>Support for explicit <code><span class="typ-key">auto</span></code> sizing for boxes and shapes</li>
<li>Support for fractional (i.e. <code><span class="typ-num">1fr</span></code>) widths for boxes</li>
<li>Fixed bug where columns jump to next page</li>
<li>Fixed bug where list items have no leading</li>
<li>Fixed relative sizing in lists, squares and grid auto columns</li>
<li>Fixed relative displacement in <a href="/docs/reference/layout/place/" title="\`place\`"><code>place</code></a> function</li>
<li>Fixed that lines don't have a size</li>
<li>Fixed bug where <code><span class="typ-key">set</span> <span class="typ-func">document</span><span class="typ-punct">(</span><span class="typ-op">..</span><span class="typ-punct">)</span></code> complains about being after content</li>
<li>Fixed parsing of <code><span class="typ-key">not</span> <span class="typ-key">in</span></code> operation</li>
<li>Fixed hover tooltips in math</li>
<li>Fixed bug where a heading show rule may not contain a pagebreak when an
outline is present</li>
<li>Added <a href="/docs/reference/layout/box/#parameters-baseline"><code>baseline</code></a> property on <a href="/docs/reference/layout/box/" title="\`box\`"><code>box</code></a></li>
<li>Added <a href="/docs/reference/math/op/"><code>tg</code></a> and <a href="/docs/reference/math/op/"><code>ctg</code></a> operators in math</li>
<li>Added delimiter setting for <a href="/docs/reference/math/cases/"><code>cases</code></a> function</li>
<li>Parentheses are now included when accepting a function autocompletion</li>
</ul>
<h2 id="_">February 2, 2023</h2>
<ul>
<li>Merged text and math symbols, renamed a few symbols (including <code>infty</code> to
<code>infinity</code> with the alias <code>oo</code>)</li>
<li>Fixed missing italic mappings</li>
<li>Math italics correction is now applied properly</li>
<li>Parentheses now scale in <code><span class="typ-math-delim">$</span><span class="typ-func">zeta</span><span class="typ-punct">(</span>x<span class="typ-math-op">/</span>2<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></li>
<li>Fixed placement of large root index</li>
<li>Fixed spacing in <code><span class="typ-math-delim">$</span><span class="typ-func">abs</span><span class="typ-punct">(</span><span class="typ-escape">-</span>x<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></li>
<li>Fixed inconsistency between text and identifiers in math</li>
<li>Accents are now ignored when positioning superscripts</li>
<li>Fixed vertical alignment in matrices</li>
<li>Fixed <code>text</code> set rule in <code>raw</code> show rule</li>
<li>Heading and list markers now parse consistently</li>
<li>Allow arbitrary math directly in content</li>
</ul>
<h2 id="_">January 30, 2023</h2>
<p><a href="https://typst.app/blog/2023/january-update">Go to the announcement blog post.</a></p>
<ul>
<li>New expression syntax in markup/math
<ul>
<li>Blocks cannot be directly embedded in markup anymore</li>
<li>Like other expressions, they now require a leading hash</li>
<li>More expressions available with hash, including literals (<code><span class="typ-str">#</span><span class="typ-str">&quot;string&quot;</span></code>)
as well as field access and method call without space: <code><span class="typ-pol">#</span><span class="typ-pol">emoji</span><span class="typ-punct">.</span><span class="typ-pol">face</span></code></li>
</ul>
</li>
<li>New import syntax
<ul>
<li><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;module.typ&quot;</span></code> creates binding named <code>module</code></li>
<li><code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;module.typ&quot;</span><span class="typ-punct">:</span> a<span class="typ-punct">,</span> b</code> or <code><span class="typ-key">#</span><span class="typ-key">import</span> <span class="typ-str">&quot;module.typ&quot;</span><span class="typ-punct">:</span> <span class="typ-op">*</span></code> to import
items</li>
<li><code><span class="typ-key">#</span><span class="typ-key">import</span> emoji<span class="typ-punct">:</span> face<span class="typ-punct">,</span> turtle</code> to import from already bound module</li>
</ul>
</li>
<li>New symbol handling
<ul>
<li>Removed symbol notation</li>
<li>Symbols are now in modules: <code>sym</code>, <code>emoji</code>, and <code>math</code></li>
<li>Math module also reexports all of <code>sym</code></li>
<li>Modified through field access, still order-independent</li>
<li>Unknown modifiers are not allowed anymore</li>
<li>Support for custom symbol definitions with <code>symbol</code> function</li>
<li>Symbols now listed in documentation</li>
</ul>
</li>
<li>New <code>math</code> module
<ul>
<li>Contains all math-related functions</li>
<li>Variables and function calls directly in math (without hash) access this
module instead of the global scope, but can also access local variables</li>
<li>Can be explicitly used in code, e.g. <code><span class="typ-key">#</span><span class="typ-key">set</span> math<span class="typ-punct">.</span><span class="typ-func">vec</span><span class="typ-punct">(</span>delim<span class="typ-punct">:</span> <span class="typ-str">&quot;[&quot;</span><span class="typ-punct">)</span></code></li>
</ul>
</li>
<li>Delimiter matching in math
<ul>
<li>Any opening delimiters matches any closing one</li>
<li>When matched, they automatically scale</li>
<li>To prevent scaling, escape them</li>
<li>To forcibly match two delimiters, use <code>lr</code> function</li>
<li>Line breaks may occur between matched delimiters</li>
<li>Delimiters may also be unbalanced</li>
<li>You can also use the <code>lr</code> function to scale the brackets (or just one
bracket) to a specific size manually</li>
</ul>
</li>
<li>Multi-line math with alignment
<ul>
<li>The <code>\\</code> character inserts a line break</li>
<li>The <code>&amp;</code> character defines an alignment point</li>
<li>Alignment points also work for underbraces, vectors, cases, and matrices</li>
<li>Multiple alignment points are supported</li>
</ul>
</li>
<li>More capable math function calls
<ul>
<li>Function calls directly in math can now take code expressions with hash</li>
<li>They can now also take named arguments</li>
<li>Within math function calls, semicolons turn preceding arguments to arrays to
support matrices: <code><span class="typ-math-delim">$</span><span class="typ-func">mat</span><span class="typ-punct">(</span>1<span class="typ-punct">,</span> 2<span class="typ-punct">;</span> 3<span class="typ-punct">,</span> 4<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></li>
</ul>
</li>
<li>Arbitrary content in math
<ul>
<li>Text, images, and other arbitrary content can now be embedded in math</li>
<li>Math now also supports font fallback to support e.g. CJK and emoji</li>
</ul>
</li>
<li>More math features
<ul>
<li>New text operators: <code>op</code> function, <code>lim</code>, <code>max</code>, etc.</li>
<li>New matrix function: <code>mat</code></li>
<li>New n-ary roots with <code>root</code> function: <code><span class="typ-math-delim">$</span><span class="typ-func">root</span><span class="typ-punct">(</span>3<span class="typ-punct">,</span> x<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></li>
<li>New under- and overbraces, -brackets, and -lines</li>
<li>New <code>abs</code> and <code>norm</code> functions</li>
<li>New shorthands: <code>[|</code>, <code>|]</code>, and <code>||</code></li>
<li>New <code>attach</code> function, overridable attachments with <code>script</code> and <code>limit</code></li>
<li>Manual spacing in math, with <code>h</code>, <code>thin</code>, <code>med</code>, <code>thick</code> and <code>quad</code></li>
<li>Symbols and other content may now be used like a function, e.g.
<code><span class="typ-math-delim">$</span><span class="typ-func">zeta</span><span class="typ-punct">(</span>x<span class="typ-punct">)</span><span class="typ-math-delim">$</span></code></li>
<li>Added Fira Math font, removed Noto Sans Math font</li>
<li>Support for alternative math fonts through <code><span class="typ-key">#</span><span class="typ-key">show</span> math<span class="typ-punct">.</span><span class="typ-func">formula</span><span class="typ-punct">:</span> <span class="typ-key">set</span> <span class="typ-func">text</span><span class="typ-punct">(</span><span class="typ-str">&quot;Fira Math&quot;</span><span class="typ-punct">)</span></code></li>
</ul>
</li>
<li>More library improvements
<ul>
<li>New <code>calc</code> module, <code>abs</code>, <code>min</code>, <code>max</code>, <code>even</code>, <code>odd</code> and <code>mod</code> moved there</li>
<li>New <code>message</code> argument on <code>assert</code> function</li>
<li>The <code>pairs</code> method on dictionaries now returns an array of length-2 arrays
instead of taking a closure</li>
<li>The method call <code>dict<span class="typ-punct">.</span><span class="typ-func">at</span><span class="typ-punct">(</span><span class="typ-str">&quot;key&quot;</span><span class="typ-punct">)</span></code> now always fails if <code>&quot;key&quot;</code> doesn't exist
Previously, it was allowed in assignments. Alternatives are <code>dict<span class="typ-punct">.</span>key <span class="typ-op">=</span> x</code>
and <code>dict<span class="typ-punct">.</span><span class="typ-func">insert</span><span class="typ-punct">(</span><span class="typ-str">&quot;key&quot;</span><span class="typ-punct">,</span> x<span class="typ-punct">)</span></code>.</li>
</ul>
</li>
<li>Smarter editor functionality
<ul>
<li>Autocompletion for local variables</li>
<li>Autocompletion for methods available on a value</li>
<li>Autocompletion for symbols and modules</li>
<li>Autocompletion for imports</li>
<li>Hover over an identifier to see its value(s)</li>
</ul>
</li>
<li>Further editor improvements
<ul>
<li>New Font menu with previews</li>
<li>Single projects may now be shared with share links</li>
<li>New dashboard experience if projects are shared with you</li>
<li>Keyboard Shortcuts are now listed in the menus and there are more of them</li>
<li>New Offline indicator</li>
<li>Tooltips for all buttons</li>
<li>Improved account protection</li>
<li>Moved Status indicator into the error list button</li>
</ul>
</li>
<li>Further fixes
<ul>
<li>Multiple bug fixes for incremental parser</li>
<li>Fixed closure parameter capturing</li>
<li>Fixed tons of math bugs</li>
<li>Bugfixes for performance, file management, editing reliability</li>
<li>Added redirection to the page originally navigated to after signin</li>
</ul>
</li>
</ul>`},children:[]}];function Ia(n){const p=E(Fa,n);return p===null?null:p}const Ca=["innerHTML"],ja={key:1,class:"page-category"},Da={key:2,class:"page-type"},La={key:3,class:"page-func"},Ea={key:4,class:"page-group"},Ra={key:5,class:"page-symbols"},Ma={key:6,class:"page-notfound"},_a=z({__name:"docs",setup(n){const p=`/docs${j(L().params.docPath)}`,s=T(b.Unknown),m=T(""),l=T(""),u=_(),d=T(null),f=T(""),o=T(null);function i(){const c=Ia(p);if(!c){s.value=b.NotFound;return}switch(s.value=c.body.kind,m.value=c.title,u.value=c.outline,l.value=c.description,c.body.kind){case b.HTML:{f.value=c.body.content;break}default:{o.value=c.body.content;break}}}function q(){document&&(console.log(document.querySelectorAll("p + original, .previewed-code + original, .info-box + original")),document.querySelectorAll("p + original, .previewed-code + original, .info-box + original, ol + original, ul + original").forEach(c=>{var P;const w=c.previousElementSibling;if(!w)return;const S=document.createElement("div");S.classList.add("with-original"),S.appendChild(w.cloneNode(!0));const x=c.cloneNode(!0);x.innerText=x.innerText.trim(),x.innerHTML=`<span>原文</span><div class="content">${x.innerHTML}</div>`,S.appendChild(x),(P=c.parentNode)==null||P.insertBefore(S,c),c.remove(),w.remove()}))}return i(),B(d,()=>q()),(c,w)=>{const S=J,x=ya,P=I,R=ga,M=Sa;return e(),t("article",{ref_key:"arti",ref:d},[a(s)===a(b).HTML?(e(),t("div",{key:0,class:"page-html",innerHTML:a(f)},null,8,Ca)):a(s)===a(b).Category?(e(),t("div",ja,[v(S,{value:a(o)},null,8,["value"])])):a(s)===a(b).Type?(e(),t("div",Da,[v(x,{value:a(o)},null,8,["value"])])):a(s)===a(b).Func?(e(),t("div",La,[v(P,{value:a(o)},null,8,["value"])])):a(s)===a(b).Group?(e(),t("div",Ea,[v(R,{value:a(o)},null,8,["value"])])):a(s)===a(b).Symbols?(e(),t("div",Ra,[v(M,{value:a(o)},null,8,["value"])])):a(s)===a(b).NotFound?(e(),t("div",Ma,[v(Pa)])):g("",!0)],512)}}});export{_a as default};
